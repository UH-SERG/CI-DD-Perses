
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/MariaDB__mariadb-connector-j/src/test/java/org/mariadb/jdbc/failover/TcpProxySocket_run.java
method_name = run
method_body = @Override public void run() { logger.trace("host proxy port " + this.localport + " for " + host + " started"); stop = false; try { try { if (ss.isClosed()) { ss = new ServerSocket(localport); } } catch (BindException b) { try { Thread.sleep(100); } catch (InterruptedException i) { } if (ss.isClosed()) { ss = new ServerSocket(localport); } } final byte[] request = new byte[1024]; byte[] reply = new byte[4096]; while (!stop) { try { client = ss.accept(); final InputStream fromClient = client.getInputStream(); final OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter out = new PrintWriter(new OutputStreamWriter(toClient)); out.println("Proxy server cannot connect to " + host + ":" + remoteport + ":\n" + e); out.flush(); client.close(); continue; } final InputStream fromServer = server.getInputStream(); final OutputStream toServer = server.getOutputStream(); new Thread(() -> { int bytesRead; try { while ((bytesRead = fromClient.read(request)) != -1) { if (delay > 0) { try { Thread.sleep(delay); } catch (InterruptedException e) { e.printStackTrace(); } } toServer.write(request, 0, bytesRead); toServer.flush(); } } catch (IOException e) { } try { toServer.close(); } catch (IOException e) { } }).start(); int bytesRead; try { while ((bytesRead = fromServer.read(reply)) != -1) { try { Thread.sleep(1); } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(reply, 0, bytesRead); toClient.flush(); } } catch (IOException e) { } toClient.close(); } catch (IOException e) { } finally { try { if (server != null) { server.close(); } if (client != null) { client.close(); } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }
predict, score, loss = run, 0.9861456, 0.022014355

Trace of simplified code(s):
{"time": "2021-01-20 12:32:44.105019", "n_pass": [1, 1, 1], "score": "0.9903", "loss": "0.0164", "code": "@Override public void run() { logger.trace(\"host proxy port \" + this.localport + \" for \" + host + \" started\"); stop = false; try { try { if (ss.isClosed()) { ss = new ServerSocket(localport); } } catch (BindException b) { try { Thread.sleep(100); } catch (InterruptedException i) { } if (ss.isClosed()) { ss = new ServerSocket(localport); } } final byte[] request = new byte[1024]; byte[] reply = new byte[4096]; while (!stop) { try { client = ss.accept(); final InputStream fromClient = client.getInputStream(); final OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter out = new PrintWriter(new OutputStreamWriter(toClient)); out.println(\"Proxy server cannot connect to \" + host + \":\" + remoteport + \":\\n\" + e); out.flush(); client.close(); continue; } final InputStream fromServer = server.getInputStream(); final OutputStream toServer = server.getOutputStream(); new Thread(() -> { int bytesRead; try { while ((bytesRead = fromClient.read(request)) != -1) { if (delay > 0) { try { Thread.sleep(delay); } catch (InterruptedException e) { e.printStackTrace(); } } toServer.write(request, 0, bytesRead); toServer.flush(); } } catch (IOException e) { } try { toServer.close(); } catch (IOException e) { } }).start(); int bytesRead; try { while ((bytesRead = fromServer.read(reply)) != -1) { try { Thread.sleep(1); } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(reply, 0, bytesRead); toClient.flush(); } } catch (IOException e) { } toClient.close(); } catch (IOException e) { } finally { try { if (server != null) { server.close(); } if (client != null) { client.close(); } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 12:32:45.802298", "n_pass": [93, 2, 2], "score": "0.8778", "loss": "0.2229", "code": "@Override public void run() { logger.trace(\"host proxy port started\"); stop = false; try { try { if (ss.isClosed()) { ss = new ServerSocket(localport); } } catch (BindException b) { try { Thread.sleep(100); } catch (InterruptedException i) { } if (ss.isClosed()) { ss = new ServerSocket(localport); } } final byte[] request = new byte[1024]; byte[] reply = new byte[4096]; while (!stop) { try { client = ss.accept(); final InputStream fromClient = client.getInputStream(); final OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter out = new PrintWriter(new OutputStreamWriter(toClient)); out.println(\"Proxy server cannot connect to \" + host + \":\" + remoteport + \":\\n\" + e); out.flush(); client.close(); continue; } final InputStream fromServer = server.getInputStream(); final OutputStream toServer = server.getOutputStream(); new Thread(() -> { int bytesRead; try { while ((bytesRead = fromClient.read(request)) != -1) { if (delay > 0) { try { Thread.sleep(delay); } catch (InterruptedException e) { e.printStackTrace(); } } toServer.write(request, 0, bytesRead); toServer.flush(); } } catch (IOException e) { } try { toServer.close(); } catch (IOException e) { } }).start(); int bytesRead; try { while ((bytesRead = fromServer.read(reply)) != -1) { try { Thread.sleep(1); } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(reply, 0, bytesRead); toClient.flush(); } } catch (IOException e) { } toClient.close(); } catch (IOException e) { } finally { try { if (server != null) { server.close(); } if (client != null) { client.close(); } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 12:32:47.402390", "n_pass": [114, 3, 3], "score": "0.9712", "loss": "0.0478", "code": "@Override public void run() { logger.trace(\"host proxy port started\"); stop = false; try { try { if (ss.isClosed()) { ss = new ServerSocket(localport); } } catch (BindException b) { try { Thread.sleep(100); } catch (InterruptedException i) { } if (ss.isClosed()) { ss = new ServerSocket(localport); } } final byte[] request = new byte[1024]; byte[] reply = new byte[4096]; while (!stop) { try { client = ss.accept(); final InputStream fromClient = client.getInputStream(); final OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter out = new PrintWriter(new OutputStreamWriter(toClient)); out.println(\"Proxy server cannot connect to \" + host + \":\" + remoteport + \":\\n\" + e); out.flush(); client.close(); continue; } final InputStream fromServer = server.getInputStream(); final OutputStream toServer = server.getOutputStream(); new Thread(() -> { int bytesRead; try { while ((bytesRead = fromClient.read(request)) != -1) { if (delay > 0) { try { Thread.sleep(delay); } catch (InterruptedException e) { e.printStackTrace(); } } toServer.write(request, 0, bytesRead); toServer.flush(); } } catch (IOException e) { } }).start(); int bytesRead; try { while ((bytesRead = fromServer.read(reply)) != -1) { try { Thread.sleep(1); } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(reply, 0, bytesRead); toClient.flush(); } } catch (IOException e) { } toClient.close(); } catch (IOException e) { } finally { try { if (server != null) { server.close(); } if (client != null) { client.close(); } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 12:32:50.010522", "n_pass": [239, 4, 4], "score": "0.9726", "loss": "0.0438", "code": "@Override public void run() { logger.trace(\"host proxy port started\"); stop = false; try { try { if (ss.isClosed()) { ss = new ServerSocket(localport); } } catch (BindException b) { try { Thread.sleep(100); } catch (InterruptedException i) { } if (ss.isClosed()) { ss = new ServerSocket(localport); } } final byte[] request = new byte[1024]; byte[] reply = new byte[4096]; while (!stop) { try { clientInputStream fromClient = client.getInputStream(); final OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter out = new PrintWriter(new OutputStreamWriter(toClient)); out.println(\"Proxy server cannot connect to \" + host + \":\" + remoteport + \":\\n\" + e); out.flush(); client.close(); continue; } final InputStream fromServer = server.getInputStream(); final OutputStream toServer = server.getOutputStream(); new Thread(() -> { int bytesRead; try { while ((bytesRead = fromClient.read(request)) != -1) { if (delay > 0) { try { Thread.sleep(delay); } catch (InterruptedException e) { e.printStackTrace(); } } toServer.write(request, 0, bytesRead); toServer.flush(); } } catch (IOException e) { } }).start(); int bytesRead; try { while ((bytesRead = fromServer.read(reply)) != -1) { try { Thread.sleep(1); } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(reply, 0, bytesRead); toClient.flush(); } } catch (IOException e) { } toClient.close(); } catch (IOException e) { } finally { try { if (server != null) { server.close(); } if (client != null) { client.close(); } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 12:32:51.528831", "n_pass": [247, 5, 5], "score": "0.9854", "loss": "0.0208", "code": "@Override public void run() { logger.trace(\"host proxy port started\"); stop = false; try { try { if (ss.isClosed()) { ss = new ServerSocket(localport); } } catch (BindException b) { try { Thread.sleep(100); } catch (InterruptedException i) { } if (ss.isClosed()) { ss = new ServerSocket(localport); } } final byte[] request = new byte[1024]; byte[] reply = new byte[4096]; while (!stop) { try { clientInputStream fromClient = client.getInputStream(); final OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter out = new PrintWriter(new OutputStreamWriter(toClient)); out.println(\"Proxy server cannot connect to \" + + \":\\n\" + e); out.flush(); client.close(); continue; } final InputStream fromServer = server.getInputStream(); final OutputStream toServer = server.getOutputStream(); new Thread(() -> { int bytesRead; try { while ((bytesRead = fromClient.read(request)) != -1) { if (delay > 0) { try { Thread.sleep(delay); } catch (InterruptedException e) { e.printStackTrace(); } } toServer.write(request, 0, bytesRead); toServer.flush(); } } catch (IOException e) { } }).start(); int bytesRead; try { while ((bytesRead = fromServer.read(reply)) != -1) { try { Thread.sleep(1); } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(reply, 0, bytesRead); toClient.flush(); } } catch (IOException e) { } toClient.close(); } catch (IOException e) { } finally { try { if (server != null) { server.close(); } if (client != null) { client.close(); } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 12:32:54.311222", "n_pass": [425, 7, 6], "score": "0.9455", "loss": "0.0883", "code": "@Override public void run() { logger.trace(\"host proxy port started\"); stop = false; try { try { if (ss.isClosed()) { ss = new ServerSocket(localport); } } catch (BindException b) { try { Thread.sleep(100); } catch (InterruptedException i) { } if (ss.isClosed()) { ss = new ServerSocket(localport); } } final byte[] request = new byte[1024]; byte[] reply = new byte[4096]; while (!stop) { try { clientInputStream fromClient = client.getInputStream(); final OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter out = new PrintWriter(new OutputStreamWriter(toClient)); out.println(\"Proxy server cannot connect to \" + + \":\\n\" + e); out.flushclose(); continue; } final InputStream fromServer = server.getInputStream(); final OutputStream toServer = server.getOutputStream(); new Thread(() -> { int bytesRead; try { while ((bytesRead = fromClient.read(request)) != -1) { if (delay > 0) { try { Thread.sleep(delay); } catch (InterruptedException e) { e.printStackTrace(); } } toServer.write(request, 0, bytesRead); toServer.flush(); } } catch (IOException e) { } }).start(); int bytesRead; try { while ((bytesRead = fromServer.read(reply)) != -1) { try { Thread.sleep(1); } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(reply, 0, bytesRead); toClient.flush(); } } catch (IOException e) { } toClient.close(); } catch (IOException e) { } finally { try { if (server != null) { server.close(); } if (client != null) { client.close(); } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 12:32:55.839179", "n_pass": [426, 8, 7], "score": "0.9764", "loss": "0.0351", "code": "@Override public void run() { logger.trace(\"host proxy port started\"); stop = false; try { try { if (ss.isClosed()) { ss = new ServerSocket(localport); } } catch (BindException b) { try { Thread.sleep(100); } catch (InterruptedException i) { } if (ss.isClosed()) { ss = new ServerSocket(localport); } } final byte[] request = new byte[1024]; byte[] reply = new byte[4096]; while (!stop) { try { clientInputStream fromClient = client.getInputStream(); final OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter out = new PrintWriter(new OutputStreamWriter(toClient)); out.println(\"Proxy server cannot connect to \" + + \":\\n\" + e); out.flush; } final InputStream fromServer = server.getInputStream(); final OutputStream toServer = server.getOutputStream(); new Thread(() -> { int bytesRead; try { while ((bytesRead = fromClient.read(request)) != -1) { if (delay > 0) { try { Thread.sleep(delay); } catch (InterruptedException e) { e.printStackTrace(); } } toServer.write(request, 0, bytesRead); toServer.flush(); } } catch (IOException e) { } }).start(); int bytesRead; try { while ((bytesRead = fromServer.read(reply)) != -1) { try { Thread.sleep(1); } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(reply, 0, bytesRead); toClient.flush(); } } catch (IOException e) { } toClient.close(); } catch (IOException e) { } finally { try { if (server != null) { server.close(); } if (client != null) { client.close(); } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 12:32:57.370030", "n_pass": [432, 9, 8], "score": "0.9876", "loss": "0.019", "code": "@Override public void run() { logger.trace(\"host proxy port started\"); stop = false; try { try { if (ss.isClosed()) { ss = new ServerSocket(localport); } } catch (BindException b) { try { Thread.sleep(100); } catch (InterruptedException i) { } if (ss.isClosed()) { ss = new ServerSocket(localport); } } final byte[] request = new byte[1024]; byte[] reply = new byte[4096]; while (!stop) { try { clientInputStream fromClient = client.getInputStream(); final OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter out = new PrintWriter(new OutputStreamWriter(toClient)); out.println(\"Proxy server cannot connect to \" + + \":\\n\" + e); out.flush; } final InputStream fromServer = server.getInputStream(); final OutputStream toServer = server.getOutputStreamThread(() -> { int bytesRead; try { while ((bytesRead = fromClient.read(request)) != -1) { if (delay > 0) { try { Thread.sleep(delay); } catch (InterruptedException e) { e.printStackTrace(); } } toServer.write(request, 0, bytesRead); toServer.flush(); } } catch (IOException e) { } }).start(); int bytesRead; try { while ((bytesRead = fromServer.read(reply)) != -1) { try { Thread.sleep(1); } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(reply, 0, bytesRead); toClient.flush(); } } catch (IOException e) { } toClient.close(); } catch (IOException e) { } finally { try { if (server != null) { server.close(); } if (client != null) { client.close(); } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 12:32:58.929852", "n_pass": [437, 10, 9], "score": "0.9745", "loss": "0.0368", "code": "@Override public void run() { logger.trace(\"host proxy port started\"); stop = false; try { try { if (ss.isClosed()) { ss = new ServerSocket(localport); } } catch (BindException b) { try { Thread.sleep(100); } catch (InterruptedException i) { } if (ss.isClosed()) { ss = new ServerSocket(localport); } } final byte[] request = new byte[1024]; byte[] reply = new byte[4096]; while (!stop) { try { clientInputStream fromClient = client.getInputStream(); final OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter out = new PrintWriter(new OutputStreamWriter(toClient)); out.println(\"Proxy server cannot connect to \" + + \":\\n\" + e); out.flush; } final InputStream fromServer = server.getInputStream(); final OutputStream toServer = server.getOutputStreamThread(() -> { int bytesRead; try { while ((bytesRead(request)) != -1) { if (delay > 0) { try { Thread.sleep(delay); } catch (InterruptedException e) { e.printStackTrace(); } } toServer.write(request, 0, bytesRead); toServer.flush(); } } catch (IOException e) { } }).start(); int bytesRead; try { while ((bytesRead = fromServer.read(reply)) != -1) { try { Thread.sleep(1); } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(reply, 0, bytesRead); toClient.flush(); } } catch (IOException e) { } toClient.close(); } catch (IOException e) { } finally { try { if (server != null) { server.close(); } if (client != null) { client.close(); } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 12:33:00.465884", "n_pass": [443, 11, 10], "score": "0.9906", "loss": "0.0153", "code": "@Override public void run() { logger.trace(\"host proxy port started\"); stop = false; try { try { if (ss.isClosed()) { ss = new ServerSocket(localport); } } catch (BindException b) { try { Thread.sleep(100); } catch (InterruptedException i) { } if (ss.isClosed()) { ss = new ServerSocket(localport); } } final byte[] request = new byte[1024]; byte[] reply = new byte[4096]; while (!stop) { try { clientInputStream fromClient = client.getInputStream(); final OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter out = new PrintWriter(new OutputStreamWriter(toClient)); out.println(\"Proxy server cannot connect to \" + + \":\\n\" + e); out.flush; } final InputStream fromServer = server.getInputStream(); final OutputStream toServer = server.getOutputStreamThread(() -> { int bytesRead; try { while ((bytesRead(request)) != -1) { if (delay > 0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } } toServer.write(request, 0, bytesRead); toServer.flush(); } } catch (IOException e) { } }).start(); int bytesRead; try { while ((bytesRead = fromServer.read(reply)) != -1) { try { Thread.sleep(1); } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(reply, 0, bytesRead); toClient.flush(); } } catch (IOException e) { } toClient.close(); } catch (IOException e) { } finally { try { if (server != null) { server.close(); } if (client != null) { client.close(); } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 12:33:02.128798", "n_pass": [449, 12, 11], "score": "0.9871", "loss": "0.0205", "code": "@Override public void run() { logger.trace(\"host proxy port started\"); stop = false; try { try { if (ss.isClosed()) { ss = new ServerSocket(localport); } } catch (BindException b) { try { Thread.sleep(100); } catch (InterruptedException i) { } if (ss.isClosed()) { ss = new ServerSocket(localport); } } final byte[] request = new byte[1024]; byte[] reply = new byte[4096]; while (!stop) { try { clientInputStream fromClient = client.getInputStream(); final OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter out = new PrintWriter(new OutputStreamWriter(toClient)); out.println(\"Proxy server cannot connect to \" + + \":\\n\" + e); out.flush; } final InputStream fromServer = server.getInputStream(); final OutputStream toServer = server.getOutputStreamThread(() -> { int bytesRead; try { while ((bytesRead(request)) != -1) { if (delay > 0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } } toServer.write(request); toServer.flush(); } } catch (IOException e) { } }).start(); int bytesRead; try { while ((bytesRead = fromServer.read(reply)) != -1) { try { Thread.sleep(1); } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(reply, 0, bytesRead); toClient.flush(); } } catch (IOException e) { } toClient.close(); } catch (IOException e) { } finally { try { if (server != null) { server.close(); } if (client != null) { client.close(); } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 12:33:03.680676", "n_pass": [455, 13, 12], "score": "0.993", "loss": "0.0102", "code": "@Override public void run() { logger.trace(\"host proxy port started\"); stop = false; try { try { if (ss.isClosed()) { ss = new ServerSocket(localport); } } catch (BindException b) { try { Thread.sleep(100); } catch (InterruptedException i) { } if (ss.isClosed()) { ss = new ServerSocket(localport); } } final byte[] request = new byte[1024]; byte[] reply = new byte[4096]; while (!stop) { try { clientInputStream fromClient = client.getInputStream(); final OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter out = new PrintWriter(new OutputStreamWriter(toClient)); out.println(\"Proxy server cannot connect to \" + + \":\\n\" + e); out.flush; } final InputStream fromServer = server.getInputStream(); final OutputStream toServer = server.getOutputStreamThread(() -> { int bytesRead; try { while ((bytesRead(request)) != -1) { if (delay > 0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } } toServer.write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead = fromServer.read(reply)) != -1) { try { Thread.sleep(1); } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(reply, 0, bytesRead); toClient.flush(); } } catch (IOException e) { } toClient.close(); } catch (IOException e) { } finally { try { if (server != null) { server.close(); } if (client != null) { client.close(); } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 12:33:05.222272", "n_pass": [458, 14, 13], "score": "0.8919", "loss": "0.1655", "code": "@Override public void run() { logger.trace(\"host proxy port started\"); stop = false; try { try { if (ss.isClosed()) { ss = new ServerSocket(localport); } } catch (BindException b) { try { Thread.sleep(100); } catch (InterruptedException i) { } if (ss.isClosed()) { ss = new ServerSocket(localport); } } final byte[] request = new byte[1024]; byte[] reply = new byte[4096]; while (!stop) { try { clientInputStream fromClient = client.getInputStream(); final OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter out = new PrintWriter(new OutputStreamWriter(toClient)); out.println(\"Proxy server cannot connect to \" + + \":\\n\" + e); out.flush; } final InputStream fromServer = server.getInputStream(); final OutputStream toServer = server.getOutputStreamThread(() -> { int bytesRead; try { while ((bytesRead(request)) != -1) { if (delay > 0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } } toServer.write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead(reply)) != -1) { try { Thread.sleep(1); } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(reply, 0, bytesRead); toClient.flush(); } } catch (IOException e) { } toClient.close(); } catch (IOException e) { } finally { try { if (server != null) { server.close(); } if (client != null) { client.close(); } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 12:33:06.752632", "n_pass": [462, 15, 14], "score": "0.9845", "loss": "0.0257", "code": "@Override public void run() { logger.trace(\"host proxy port started\"); stop = false; try { try { if (ss.isClosed()) { ss = new ServerSocket(localport); } } catch (BindException b) { try { Thread.sleep(100); } catch (InterruptedException i) { } if (ss.isClosed()) { ss = new ServerSocket(localport); } } final byte[] request = new byte[1024]; byte[] reply = new byte[4096]; while (!stop) { try { clientInputStream fromClient = client.getInputStream(); final OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter out = new PrintWriter(new OutputStreamWriter(toClient)); out.println(\"Proxy server cannot connect to \" + + \":\\n\" + e); out.flush; } final InputStream fromServer = server.getInputStream(); final OutputStream toServer = server.getOutputStreamThread(() -> { int bytesRead; try { while ((bytesRead(request)) != -1) { if (delay > 0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } } toServer.write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead(reply)) != -1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(reply, 0, bytesRead); toClient.flush(); } } catch (IOException e) { } toClient.close(); } catch (IOException e) { } finally { try { if (server != null) { server.close(); } if (client != null) { client.close(); } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 12:33:08.279944", "n_pass": [469, 16, 15], "score": "0.9851", "loss": "0.0222", "code": "@Override public void run() { logger.trace(\"host proxy port started\"); stop = false; try { try { if (ss.isClosed()) { ss = new ServerSocket(localport); } } catch (BindException b) { try { Thread.sleep(100); } catch (InterruptedException i) { } if (ss.isClosed()) { ss = new ServerSocket(localport); } } final byte[] request = new byte[1024]; byte[] reply = new byte[4096]; while (!stop) { try { clientInputStream fromClient = client.getInputStream(); final OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter out = new PrintWriter(new OutputStreamWriter(toClient)); out.println(\"Proxy server cannot connect to \" + + \":\\n\" + e); out.flush; } final InputStream fromServer = server.getInputStream(); final OutputStream toServer = server.getOutputStreamThread(() -> { int bytesRead; try { while ((bytesRead(request)) != -1) { if (delay > 0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } } toServer.write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead(reply)) != -1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(reply, 0, bytesRead);; } } catch (IOException e) { } toClient.close(); } catch (IOException e) { } finally { try { if (server != null) { server.close(); } if (client != null) { client.close(); } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 12:33:09.790769", "n_pass": [473, 17, 16], "score": "0.9811", "loss": "0.0306", "code": "@Override public void run() { logger.trace(\"host proxy port started\"); stop = false; try { try { if (ss.isClosed()) { ss = new ServerSocket(localport); } } catch (BindException b) { try { Thread.sleep(100); } catch (InterruptedException i) { } if (ss.isClosed()) { ss = new ServerSocket(localport); } } final byte[] request = new byte[1024]; byte[] reply = new byte[4096]; while (!stop) { try { clientInputStream fromClient = client.getInputStream(); final OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter out = new PrintWriter(new OutputStreamWriter(toClient)); out.println(\"Proxy server cannot connect to \" + + \":\\n\" + e); out.flush; } final InputStream fromServer = server.getInputStream(); final OutputStream toServer = server.getOutputStreamThread(() -> { int bytesRead; try { while ((bytesRead(request)) != -1) { if (delay > 0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } } toServer.write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead(reply)) != -1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(reply, 0, bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { } finally { try { if (server != null) { server.close(); } if (client != null) { client.close(); } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 12:33:11.310066", "n_pass": [476, 18, 17], "score": "0.9237", "loss": "0.0963", "code": "@Override public void run() { logger.trace(\"host proxy port started\"); stop = false; try { try { if (ss.isClosed()) { ss = new ServerSocket(localport); } } catch (BindException b) { try { Thread.sleep(100); } catch (InterruptedException i) { } if (ss.isClosed()) { ss = new ServerSocket(localport); } } final byte[] request = new byte[1024]; byte[] reply = new byte[4096]; while (!stop) { try { clientInputStream fromClient = client.getInputStream(); final OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter out = new PrintWriter(new OutputStreamWriter(toClient)); out.println(\"Proxy server cannot connect to \" + + \":\\n\" + e); out.flush; } final InputStream fromServer = server.getInputStream(); final OutputStream toServer = server.getOutputStreamThread(() -> { int bytesRead; try { while ((bytesRead(request)) != -1) { if (delay > 0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } } toServer.write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead(reply)) != -1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(reply, 0, bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { client.close(); } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 12:33:12.833970", "n_pass": [483, 19, 18], "score": "0.9945", "loss": "0.0098", "code": "@Override public void run() { logger.trace(\"host proxy port started\"); stop = false; try { try { if (ss.isClosed()) { ss = new ServerSocket(localport); } } catch (BindException b) { try { Thread.sleep(100); } catch (InterruptedException i) { } if (ss.isClosed()) { ss = new ServerSocket(localport); } } final byte[] request = new byte[1024]; byte[] reply = new byte[4096]; while (!stop) { try { clientInputStream fromClient = client.getInputStream(); final OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter out = new PrintWriter(new OutputStreamWriter(toClient)); out.println(\"Proxy server cannot connect to \" + + \":\\n\" + e); out.flush; } final InputStream fromServer = server.getInputStream(); final OutputStream toServer = server.getOutputStreamThread(() -> { int bytesRead; try { while ((bytesRead(request)) != -1) { if (delay > 0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } } toServer.write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead(reply)) != -1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(reply, 0, bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 12:33:14.770161", "n_pass": [493, 20, 19], "score": "0.9696", "loss": "0.0437", "code": "@Override public void run() { logger.trace(\"started\"); stop = false; try { try { if (ss.isClosed()) { ss = new ServerSocket(localport); } } catch (BindException b) { try { Thread.sleep(100); } catch (InterruptedException i) { } if (ss.isClosed()) { ss = new ServerSocket(localport); } } final byte[] request = new byte[1024]; byte[] reply = new byte[4096]; while (!stop) { try { clientInputStream fromClient = client.getInputStream(); final OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter out = new PrintWriter(new OutputStreamWriter(toClient)); out.println(\"Proxy server cannot connect to \" + + \":\\n\" + e); out.flush; } final InputStream fromServer = server.getInputStream(); final OutputStream toServer = server.getOutputStreamThread(() -> { int bytesRead; try { while ((bytesRead(request)) != -1) { if (delay > 0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } } toServer.write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead(reply)) != -1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(reply, 0, bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 12:33:16.338837", "n_pass": [513, 21, 20], "score": "0.9867", "loss": "0.0211", "code": "@Override public void run() { logger.trace(\"started\"); stop = false; try { try { if (ss.isClosed()) { ss = new ServerSocket(localport); } } catch (BindException b) { try { Thread.sleep(100); } catch (InterruptedException i) { } if (ss.isClosed()) { ss = new ServerSocket(localport); } } request = new byte[1024]; byte[] reply = new byte[4096]; while (!stop) { try { clientInputStream fromClient = client.getInputStream(); final OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter out = new PrintWriter(new OutputStreamWriter(toClient)); out.println(\"Proxy server cannot connect to \" + + \":\\n\" + e); out.flush; } final InputStream fromServer = server.getInputStream(); final OutputStream toServer = server.getOutputStreamThread(() -> { int bytesRead; try { while ((bytesRead(request)) != -1) { if (delay > 0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } } toServer.write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead(reply)) != -1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(reply, 0, bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 12:33:17.857985", "n_pass": [522, 22, 21], "score": "0.9128", "loss": "0.1113", "code": "@Override public void run() { logger.trace(\"started\"); stop = false; try { try { if (ss.isClosed()) { ss = new ServerSocket(localport); } } catch (BindException b) { try { Thread.sleep(100); } catch (InterruptedException i) { } if (ss.isClosed()) { ss = new ServerSocket(localport); } } request = new byte[1024]; byte[] reply = new byte[4096]; while (!stop) { try { clientclient.getInputStream(); final OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter out = new PrintWriter(new OutputStreamWriter(toClient)); out.println(\"Proxy server cannot connect to \" + + \":\\n\" + e); out.flush; } final InputStream fromServer = server.getInputStream(); final OutputStream toServer = server.getOutputStreamThread(() -> { int bytesRead; try { while ((bytesRead(request)) != -1) { if (delay > 0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } } toServer.write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead(reply)) != -1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(reply, 0, bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 12:33:19.399144", "n_pass": [536, 23, 22], "score": "0.948", "loss": "0.076", "code": "@Override public void run() { logger.trace(\"started\"); stop = false; try { try { if (ss.isClosed()) { ss = new ServerSocket(localport); } } catch (BindException b) { try { Thread.sleep(100); } catch (InterruptedException i) { } if (ss.isClosed()) { ss = new ServerSocket(localport); } } request = new byte[1024]; byte[] reply = new byte[4096]; while (!stop) { try { clientclient.getInputStream(); final OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter out = new PrintWriter(new OutputStreamWriter(toClient)); out.println(\"Proxy to \" + + \":\\n\" + e); out.flush; } final InputStream fromServer = server.getInputStream(); final OutputStream toServer = server.getOutputStreamThread(() -> { int bytesRead; try { while ((bytesRead(request)) != -1) { if (delay > 0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } } toServer.write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead(reply)) != -1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(reply, 0, bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 12:33:21.909892", "n_pass": [834, 24, 23], "score": "0.9468", "loss": "0.0801", "code": "@Override public void run() { logger.trace(\"started\"); stop = false; try { try { if (ss.isClosed()) { ss = new ServerSocket(localport); } } catch (BindException b) { try { Thread.sleep(100); } catch (InterruptedException i) { } if (ss.isClosed()) { ss = new ServerSocket(localport); } } request = new byte[1024]; byte[] reply = new byte[4096]; while (!stop) { try { clientclient.getInputStream(); final OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter out = new PrintWriter(new OutputStreamWriter(toClient)); out.println(\"Proxy\" + + \":\\n\" + e); out.flush; } final InputStream fromServer = server.getInputStream(); final OutputStream toServer = server.getOutputStreamThread(() -> { int bytesRead; try { while ((bytesRead(request)) != -1) { if (delay > 0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } } toServer.write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead(reply)) != -1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(reply, 0, bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 12:33:23.403450", "n_pass": [835, 25, 24], "score": "0.8873", "loss": "0.1736", "code": "@Override public void run() { logger.trace(\"started\"); stop = false; try { try { if (ss.isClosed()) { ss = new ServerSocket(localport); } } catch (BindException b) { try { Thread.sleep(100); } catch (InterruptedException i) { } if (ss.isClosed()) { ss = new ServerSocket(localport); } } request = new byte[1024]; byte[] reply = new byte[4096]; while (!stop) { try { clientclient.getInputStream(); final OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter out = new PrintWriter(new OutputStreamWriter(toClient)); out.println(\"Proxy\" +\":\\n\" + e); out.flush; } final InputStream fromServer = server.getInputStream(); final OutputStream toServer = server.getOutputStreamThread(() -> { int bytesRead; try { while ((bytesRead(request)) != -1) { if (delay > 0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } } toServer.write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead(reply)) != -1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(reply, 0, bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 12:33:24.924767", "n_pass": [838, 26, 25], "score": "0.9672", "loss": "0.0553", "code": "@Override public void run() { logger.trace(\"started\"); stop = false; try { try { if (ss.isClosed()) { ss = new ServerSocket(localport); } } catch (BindException b) { try { Thread.sleep(100); } catch (InterruptedException i) { } if (ss.isClosed()) { ss = new ServerSocket(localport); } } request = new byte[1024]; byte[] reply = new byte[4096]; while (!stop) { try { clientclient.getInputStream(); final OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter out = new PrintWriter(new OutputStreamWriter(toClient)); out.println(\"Proxy\" +\":\\n\" ); out.flush; } final InputStream fromServer = server.getInputStream(); final OutputStream toServer = server.getOutputStreamThread(() -> { int bytesRead; try { while ((bytesRead(request)) != -1) { if (delay > 0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } } toServer.write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead(reply)) != -1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(reply, 0, bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 12:33:26.433756", "n_pass": [840, 27, 26], "score": "0.9368", "loss": "0.0828", "code": "@Override public void run() { logger.trace(\"started\"); stop = false; try { try { if (ss.isClosed()) { ss = new ServerSocket(localport); } } catch (BindException b) { try { Thread.sleep(100); } catch (InterruptedException i) { } if (ss.isClosed()) { ss = new ServerSocket(localport); } } request = new byte[1024]; byte[] reply = new byte[4096]; while (!stop) { try { clientclient.getInputStream(); final OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter out = new PrintWriter(new OutputStreamWriter(toClient)); out.println(\"Proxy\" +\":\\n\" ); ; } final InputStream fromServer = server.getInputStream(); final OutputStream toServer = server.getOutputStreamThread(() -> { int bytesRead; try { while ((bytesRead(request)) != -1) { if (delay > 0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } } toServer.write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead(reply)) != -1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(reply, 0, bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 12:33:27.937276", "n_pass": [842, 28, 27], "score": "0.9809", "loss": "0.0337", "code": "@Override public void run() { logger.trace(\"started\"); stop = false; try { try { if (ss.isClosed()) { ss = new ServerSocket(localport); } } catch (BindException b) { try { Thread.sleep(100); } catch (InterruptedException i) { } if (ss.isClosed()) { ss = new ServerSocket(localport); } } request = new byte[1024]; byte[] reply = new byte[4096]; while (!stop) { try { clientclient.getInputStream(); final OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter out = new PrintWriter(new OutputStreamWriter(toClient)); out.println(\"Proxy\" +\":\\n\" ); ; }InputStream fromServer = server.getInputStream(); final OutputStream toServer = server.getOutputStreamThread(() -> { int bytesRead; try { while ((bytesRead(request)) != -1) { if (delay > 0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } } toServer.write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead(reply)) != -1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(reply, 0, bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 12:33:29.442102", "n_pass": [847, 29, 28], "score": "0.9824", "loss": "0.0277", "code": "@Override public void run() { logger.trace(\"started\"); stop = false; try { try { if (ss.isClosed()) { ss = new ServerSocket(localport); } } catch (BindException b) { try { Thread.sleep(100); } catch (InterruptedException i) { } if (ss.isClosed()) { ss = new ServerSocket(localport); } } request = new byte[1024]; byte[] reply = new byte[4096]; while (!stop) { try { clientclient.getInputStream(); final OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter out = new PrintWriter(new OutputStreamWriter(toClient)); out.println(\"Proxy\" +\":\\n\" ); ; }InputStream fromServer = server.getInputStream();OutputStream toServer = server.getOutputStreamThread(() -> { int bytesRead; try { while ((bytesRead(request)) != -1) { if (delay > 0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } } toServer.write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead(reply)) != -1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(reply, 0, bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 12:33:30.952717", "n_pass": [850, 30, 29], "score": "0.9245", "loss": "0.0984", "code": "@Override public void run() { logger.trace(\"started\"); stop = false; try { try { if (ss.isClosed()) { ss = new ServerSocket(localport); } } catch (BindException b) { try { Thread.sleep(100); } catch (InterruptedException i) { } if (ss.isClosed()) { ss = new ServerSocket(localport); } } request = new byte[1024]; byte[] reply = new byte[4096]; while (!stop) { try { clientclient.getInputStream(); final OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter out = new PrintWriter(new OutputStreamWriter(toClient)); out.println(\"Proxy\" +\":\\n\" ); ; }InputStream fromServer = server.getInputStream();OutputStream toServer = Thread(() -> { int bytesRead; try { while ((bytesRead(request)) != -1) { if (delay > 0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } } toServer.write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead(reply)) != -1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(reply, 0, bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 12:33:32.483432", "n_pass": [854, 31, 30], "score": "0.9887", "loss": "0.0202", "code": "@Override public void run() { logger.trace(\"started\"); stop = false; try { try { if (ss.isClosed()) { ss = new ServerSocket(localport); } } catch (BindException b) { try { Thread.sleep(100); } catch (InterruptedException i) { } if (ss.isClosed()) { ss = new ServerSocket(localport); } } request = new byte[1024]; byte[] reply = new byte[4096]; while (!stop) { try { clientclient.getInputStream(); final OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter out = new PrintWriter(new OutputStreamWriter(toClient)); out.println(\"Proxy\" +\":\\n\" ); ; }InputStream fromServer = server.getInputStream();OutputStream toServer = Thread(() -> {bytesRead; try { while ((bytesRead(request)) != -1) { if (delay > 0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } } toServer.write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead(reply)) != -1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(reply, 0, bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 12:33:33.987248", "n_pass": [855, 32, 31], "score": "0.9769", "loss": "0.0326", "code": "@Override public void run() { logger.trace(\"started\"); stop = false; try { try { if (ss.isClosed()) { ss = new ServerSocket(localport); } } catch (BindException b) { try { Thread.sleep(100); } catch (InterruptedException i) { } if (ss.isClosed()) { ss = new ServerSocket(localport); } } request = new byte[1024]; byte[] reply = new byte[4096]; while (!stop) { try { clientclient.getInputStream(); final OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter out = new PrintWriter(new OutputStreamWriter(toClient)); out.println(\"Proxy\" +\":\\n\" ); ; }InputStream fromServer = server.getInputStream();OutputStream toServer = Thread(() -> {try { while ((bytesRead(request)) != -1) { if (delay > 0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } } toServer.write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead(reply)) != -1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(reply, 0, bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 12:33:35.484617", "n_pass": [859, 33, 32], "score": "0.9714", "loss": "0.0441", "code": "@Override public void run() { logger.trace(\"started\"); stop = false; try { try { if (ss.isClosed()) { ss = new ServerSocket(localport); } } catch (BindException b) { try { Thread.sleep(100); } catch (InterruptedException i) { } if (ss.isClosed()) { ss = new ServerSocket(localport); } } request = new byte[1024]; byte[] reply = new byte[4096]; while (!stop) { try { clientclient.getInputStream(); final OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter out = new PrintWriter(new OutputStreamWriter(toClient)); out.println(\"Proxy\" +\":\\n\" ); ; }InputStream fromServer = server.getInputStream();OutputStream toServer = Thread(() -> {try { while ((bytesRead) != -1) { if (delay > 0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } } toServer.write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead(reply)) != -1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(reply, 0, bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 12:33:36.973649", "n_pass": [861, 34, 33], "score": "0.9737", "loss": "0.0394", "code": "@Override public void run() { logger.trace(\"started\"); stop = false; try { try { if (ss.isClosed()) { ss = new ServerSocket(localport); } } catch (BindException b) { try { Thread.sleep(100); } catch (InterruptedException i) { } if (ss.isClosed()) { ss = new ServerSocket(localport); } } request = new byte[1024]; byte[] reply = new byte[4096]; while (!stop) { try { clientclient.getInputStream(); final OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter out = new PrintWriter(new OutputStreamWriter(toClient)); out.println(\"Proxy\" +\":\\n\" ); ; }InputStream fromServer = server.getInputStream();OutputStream toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay > 0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } } toServer.write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead(reply)) != -1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(reply, 0, bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 12:33:38.469136", "n_pass": [865, 35, 34], "score": "0.9855", "loss": "0.0257", "code": "@Override public void run() { logger.trace(\"started\"); stop = false; try { try { if (ss.isClosed()) { ss = new ServerSocket(localport); } } catch (BindException b) { try { Thread.sleep(100); } catch (InterruptedException i) { } if (ss.isClosed()) { ss = new ServerSocket(localport); } } request = new byte[1024]; byte[] reply = new byte[4096]; while (!stop) { try { clientclient.getInputStream(); final OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter out = new PrintWriter(new OutputStreamWriter(toClient)); out.println(\"Proxy\" +\":\\n\" ); ; }InputStream fromServer = server.getInputStream();OutputStream toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } } toServer.write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead(reply)) != -1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(reply, 0, bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 12:33:40.007983", "n_pass": [877, 36, 35], "score": "0.9769", "loss": "0.0351", "code": "@Override public void run() { logger.trace(\"started\"); stop = false; try { try { if (ss.isClosed()) { ss = new ServerSocket(localport); } } catch (BindException b) { try { Thread.sleep(100); } catch (InterruptedException i) { } if (ss.isClosed()) { ss = new ServerSocket(localport); } } request = new byte[1024]; byte[] reply = new byte[4096]; while (!stop) { try { clientclient.getInputStream(); final OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter out = new PrintWriter(new OutputStreamWriter(toClient)); out.println(\"Proxy\" +\":\\n\" ); ; }InputStream fromServer = server.getInputStream();OutputStream toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } }write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead(reply)) != -1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(reply, 0, bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 12:33:41.589574", "n_pass": [893, 37, 36], "score": "0.957", "loss": "0.0623", "code": "@Override public void run() { logger.trace(\"started\"); stop = false; try { try { if (ss.isClosed()) { ss = new ServerSocket(localport); } } catch (BindException b) { try { Thread.sleep(100); } catch (InterruptedException i) { } if (ss.isClosed()) { ss = new ServerSocket(localport); } } request = new byte[1024]; byte[] reply = new byte[4096]; while (!stop) { try { clientclient.getInputStream(); final OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter out = new PrintWriter(new OutputStreamWriter(toClient)); out.println(\"Proxy\" +\":\\n\" ); ; }InputStream fromServer = server.getInputStream();OutputStream toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } }write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) != -1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(reply, 0, bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 12:33:43.073150", "n_pass": [895, 38, 37], "score": "0.9563", "loss": "0.068", "code": "@Override public void run() { logger.trace(\"started\"); stop = false; try { try { if (ss.isClosed()) { ss = new ServerSocket(localport); } } catch (BindException b) { try { Thread.sleep(100); } catch (InterruptedException i) { } if (ss.isClosed()) { ss = new ServerSocket(localport); } } request = new byte[1024]; byte[] reply = new byte[4096]; while (!stop) { try { clientclient.getInputStream(); final OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter out = new PrintWriter(new OutputStreamWriter(toClient)); out.println(\"Proxy\" +\":\\n\" ); ; }InputStream fromServer = server.getInputStream();OutputStream toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } }write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) !1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(reply, 0, bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 12:33:44.635564", "n_pass": [908, 39, 38], "score": "0.9655", "loss": "0.06", "code": "@Override public void run() { logger.trace(\"started\"); stop = false; try { try { if (ss.isClosed()) { ss = new ServerSocket(localport); } } catch (BindException b) { try { Thread.sleep(100); } catch (InterruptedException i) { } if (ss.isClosed()) { ss = new ServerSocket(localport); } } request = new byte[1024]; byte[] reply = new byte[4096]; while (!stop) { try { clientclient.getInputStream(); final OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter out = new PrintWriter(new OutputStreamWriter(toClient)); out.println(\"Proxy\" +\":\\n\" ); ; }InputStream fromServer = server.getInputStream();OutputStream toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } }write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) !1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(0, bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 12:33:46.112954", "n_pass": [909, 40, 39], "score": "0.9005", "loss": "0.1356", "code": "@Override public void run() { logger.trace(\"started\"); stop = false; try { try { if (ss.isClosed()) { ss = new ServerSocket(localport); } } catch (BindException b) { try { Thread.sleep(100); } catch (InterruptedException i) { } if (ss.isClosed()) { ss = new ServerSocket(localport); } } request = new byte[1024]; byte[] reply = new byte[4096]; while (!stop) { try { clientclient.getInputStream(); final OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter out = new PrintWriter(new OutputStreamWriter(toClient)); out.println(\"Proxy\" +\":\\n\" ); ; }InputStream fromServer = server.getInputStream();OutputStream toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } }write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) !1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 12:33:47.907188", "n_pass": [945, 41, 40], "score": "0.787", "loss": "0.3469", "code": "public void run() { logger.trace(\"started\"); stop = false; try { try { if (ss.isClosed()) { ss = new ServerSocket(localport); } } catch (BindException b) { try { Thread.sleep(100); } catch (InterruptedException i) { } if (ss.isClosed()) { ss = new ServerSocket(localport); } } request = new byte[1024]; byte[] reply = new byte[4096]; while (!stop) { try { clientclient.getInputStream(); final OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter out = new PrintWriter(new OutputStreamWriter(toClient)); out.println(\"Proxy\" +\":\\n\" ); ; }InputStream fromServer = server.getInputStream();OutputStream toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } }write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) !1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 12:33:51.690930", "n_pass": [953, 43, 41], "score": "0.8876", "loss": "0.1567", "code": "public void run() { logger.trace(\"started\"); stopfalse; try { try { if (ss.isClosed()) { ss = new ServerSocket(localport); } } catch (BindException b) { try { Thread.sleep(100); } catch (InterruptedException i) { } if (ss.isClosed()) { ss = new ServerSocket(localport); } } request = new byte[1024]; byte[] reply = new byte[4096]; while (!stop) { try { clientclient.getInputStream(); final OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter out = new PrintWriter(new OutputStreamWriter(toClient)); out.println(\"Proxy\" +\":\\n\" ); ; }InputStream fromServer = server.getInputStream();OutputStream toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } }write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) !1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 12:33:53.194178", "n_pass": [963, 44, 42], "score": "0.7383", "loss": "0.4667", "code": "public void run() { logger.trace(\"started\"); stopfalse; try { try { if (ss.isClosed()) { ss = (localport); } } catch (BindException b) { try { Thread.sleep(100); } catch (InterruptedException i) { } if (ss.isClosed()) { ss = new ServerSocket(localport); } } request = new byte[1024]; byte[] reply = new byte[4096]; while (!stop) { try { clientclient.getInputStream(); final OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter out = new PrintWriter(new OutputStreamWriter(toClient)); out.println(\"Proxy\" +\":\\n\" ); ; }InputStream fromServer = server.getInputStream();OutputStream toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } }write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) !1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 12:33:54.701932", "n_pass": [973, 45, 43], "score": "0.8793", "loss": "0.2298", "code": "public void run() { logger.trace(\"started\"); stopfalse; try { try { if (ss.isClosed()) { ss = (localport); } } catch (BindException b) { try { Thread.sleep(); } catch (InterruptedException i) { } if (ss.isClosed()) { ss = new ServerSocket(localport); } } request = new byte[1024]; byte[] reply = new byte[4096]; while (!stop) { try { clientclient.getInputStream(); final OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter out = new PrintWriter(new OutputStreamWriter(toClient)); out.println(\"Proxy\" +\":\\n\" ); ; }InputStream fromServer = server.getInputStream();OutputStream toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } }write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) !1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 12:33:56.236364", "n_pass": [985, 46, 44], "score": "0.7796", "loss": "0.3573", "code": "public void run() { logger.trace(\"started\"); stopfalse; try { try { if (ss.isClosed()) { ss = (localport); } } catch (BindException b) { try { Thread.sleep(); } catch (InterruptedException i) { } if (ss.isClosed()) { ss = (localport); } } request = new byte[1024]; byte[] reply = new byte[4096]; while (!stop) { try { clientclient.getInputStream(); final OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter out = new PrintWriter(new OutputStreamWriter(toClient)); out.println(\"Proxy\" +\":\\n\" ); ; }InputStream fromServer = server.getInputStream();OutputStream toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } }write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) !1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 12:33:57.727196", "n_pass": [989, 47, 45], "score": "0.7968", "loss": "0.3702", "code": "public void run() { logger.trace(\"started\"); stopfalse; try { try { if (ss.isClosed()) { ss = (localport); } } catch (BindException b) { try { Thread.sleep(); } catch (InterruptedException i) { } if (ss.isClosed()) { ss = (localport); } }  new byte[1024]; byte[] reply = new byte[4096]; while (!stop) { try { clientclient.getInputStream(); final OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter out = new PrintWriter(new OutputStreamWriter(toClient)); out.println(\"Proxy\" +\":\\n\" ); ; }InputStream fromServer = server.getInputStream();OutputStream toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } }write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) !1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 12:33:59.221284", "n_pass": [992, 48, 46], "score": "0.9014", "loss": "0.2205", "code": "public void run() { logger.trace(\"started\"); stopfalse; try { try { if (ss.isClosed()) { ss = (localport); } } catch (BindException b) { try { Thread.sleep(); } catch (InterruptedException i) { } if (ss.isClosed()) { ss = (localport); } }  new byte[1]; byte[] reply = new byte[4096]; while (!stop) { try { clientclient.getInputStream(); final OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter out = new PrintWriter(new OutputStreamWriter(toClient)); out.println(\"Proxy\" +\":\\n\" ); ; }InputStream fromServer = server.getInputStream();OutputStream toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } }write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) !1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 12:34:00.694789", "n_pass": [994, 49, 47], "score": "0.825", "loss": "0.2878", "code": "public void run() { logger.trace(\"started\"); stopfalse; try { try { if (ss.isClosed()) { ss = (localport); } } catch (BindException b) { try { Thread.sleep(); } catch (InterruptedException i) { } if (ss.isClosed()) { ss = (localport); } }  new byte[1];  reply = new byte[4096]; while (!stop) { try { clientclient.getInputStream(); final OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter out = new PrintWriter(new OutputStreamWriter(toClient)); out.println(\"Proxy\" +\":\\n\" ); ; }InputStream fromServer = server.getInputStream();OutputStream toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } }write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) !1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 12:34:02.185462", "n_pass": [998, 50, 48], "score": "0.955", "loss": "0.0888", "code": "public void run() { logger.trace(\"started\"); stopfalse; try { try { if (ss.isClosed()) { ss = (localport); } } catch (BindException b) { try { Thread.sleep(); } catch (InterruptedException i) { } if (ss.isClosed()) { ss = (localport); } }  new byte[1];  reply = new byte[6]; while (!stop) { try { clientclient.getInputStream(); final OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter out = new PrintWriter(new OutputStreamWriter(toClient)); out.println(\"Proxy\" +\":\\n\" ); ; }InputStream fromServer = server.getInputStream();OutputStream toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } }write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) !1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 12:34:03.688199", "n_pass": [1005, 51, 49], "score": "0.9321", "loss": "0.1514", "code": "public void run() { logger.trace(\"started\"); stopfalse; try { try { if (ss.isClosed()) { ss = (localport); } } catch (BindException b) { try { Thread.sleep(); } catch (InterruptedException i) { } if (ss.isClosed()) { ss = (localport); } }  new byte[1];  reply = new byte[6]; while (!stop) { try { client(); final OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter out = new PrintWriter(new OutputStreamWriter(toClient)); out.println(\"Proxy\" +\":\\n\" ); ; }InputStream fromServer = server.getInputStream();OutputStream toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } }write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) !1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 12:34:05.164263", "n_pass": [1007, 52, 50], "score": "0.8088", "loss": "0.4431", "code": "public void run() { logger.trace(\"started\"); stopfalse; try { try { if (ss.isClosed()) { ss = (localport); } } catch (BindException b) { try { Thread.sleep(); } catch (InterruptedException i) { } if (ss.isClosed()) { ss = (localport); } }  new byte[1];  reply = new byte[6]; while (!stop) { try { client();OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter out = new PrintWriter(new OutputStreamWriter(toClient)); out.println(\"Proxy\" +\":\\n\" ); ; }InputStream fromServer = server.getInputStream();OutputStream toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } }write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) !1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 12:34:06.704003", "n_pass": [1023, 53, 51], "score": "0.8334", "loss": "0.2861", "code": "public void run() { logger.trace(\"started\"); stopfalse; try { try { if (ss.isClosed()) { ss = (localport); } } catch (BindException b) { try { Thread.sleep(); } catch (InterruptedException i) { } if (ss.isClosed()) { ss = (localport); } }  new byte[1];  reply = new byte[6]; while (!stop) { try { client();OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter= new PrintWriter(new OutputStreamWriter(toClient)); out.println(\"Proxy\" +\":\\n\" ); ; }InputStream fromServer = server.getInputStream();OutputStream toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } }write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) !1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 12:34:08.183112", "n_pass": [1026, 54, 52], "score": "0.8147", "loss": "0.2854", "code": "public void run() { logger.trace(\"started\"); stopfalse; try { try { if (ss.isClosed()) { ss = (localport); } } catch (BindException b) { try { Thread.sleep(); } catch (InterruptedException i) { } if (ss.isClosed()) { ss = (localport); } }  new byte[1];  reply = new byte[6]; while (!stop) { try { client();OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter= new PrintWriter((toClient)); out.println(\"Proxy\" +\":\\n\" ); ; }InputStream fromServer = server.getInputStream();OutputStream toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } }write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) !1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 12:34:09.645782", "n_pass": [1027, 55, 53], "score": "0.8979", "loss": "0.2054", "code": "public void run() { logger.trace(\"started\"); stopfalse; try { try { if (ss.isClosed()) { ss = (localport); } } catch (BindException b) { try { Thread.sleep(); } catch (InterruptedException i) { } if (ss.isClosed()) { ss = (localport); } }  new byte[1];  reply = new byte[6]; while (!stop) { try { client();OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter= new PrintWriter(); out.println(\"Proxy\" +\":\\n\" ); ; }InputStream fromServer = server.getInputStream();OutputStream toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } }write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) !1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 12:34:11.112071", "n_pass": [1029, 56, 54], "score": "0.912", "loss": "0.1701", "code": "public void run() { logger.trace(\"started\"); stopfalse; try { try { if (ss.isClosed()) { ss = (localport); } } catch (BindException b) { try { Thread.sleep(); } catch (InterruptedException i) { } if (ss.isClosed()) { ss = (localport); } }  new byte[1];  reply = new byte[6]; while (!stop) { try { client();OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter= new PrintWriter(); (\"Proxy\" +\":\\n\" ); ; }InputStream fromServer = server.getInputStream();OutputStream toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } }write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) !1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 12:34:13.408056", "n_pass": [1129, 57, 55], "score": "0.5013", "loss": "0.8359", "code": "public void run() {trace(\"started\"); stopfalse; try { try { if (ss.isClosed()) { ss = (localport); } } catch (BindException b) { try { Thread.sleep(); } catch (InterruptedException i) { } if (ss.isClosed()) { ss = (localport); } }  new byte[1];  reply = new byte[6]; while (!stop) { try { client();OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter= new PrintWriter(); (\"Proxy\" +\":\\n\" ); ; }InputStream fromServer = server.getInputStream();OutputStream toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } }write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) !1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 12:34:15.053168", "n_pass": [1141, 58, 56], "score": "0.8091", "loss": "0.305", "code": "public void run() {trace(\"started\"); stopfalse; try { try { if (ss.isClosed()) { ss(localport); } } catch (BindException b) { try { Thread.sleep(); } catch (InterruptedException i) { } if (ss.isClosed()) { ss = (localport); } }  new byte[1];  reply = new byte[6]; while (!stop) { try { client();OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter= new PrintWriter(); (\"Proxy\" +\":\\n\" ); ; }InputStream fromServer = server.getInputStream();OutputStream toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } }write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) !1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 12:34:16.525311", "n_pass": [1142, 59, 57], "score": "0.7596", "loss": "0.3431", "code": "public void run() {trace(\"started\"); stopfalse; try { try { if (ss.isClosed()) { ss; } } catch (BindException b) { try { Thread.sleep(); } catch (InterruptedException i) { } if (ss.isClosed()) { ss = (localport); } }  new byte[1];  reply = new byte[6]; while (!stop) { try { client();OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter= new PrintWriter(); (\"Proxy\" +\":\\n\" ); ; }InputStream fromServer = server.getInputStream();OutputStream toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } }write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) !1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 12:34:45.285172", "n_pass": [1632, 62, 58], "score": "0.9183", "loss": "0.1264", "code": "public void run() {trace(\"started\"); stopfalse; try { try {if (ss.isClosed()) { ss; } } catch (BindException b) { try { Thread.sleep(); } catch (InterruptedException i) { } if (ss.isClosed()) { ss = (localport); } }  new byte[1];  reply = new byte[6]; while (!stop) { try { client();OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter= new PrintWriter(); (\"Proxy\" +\":\\n\" ); ; }InputStream fromServer = server.getInputStream();OutputStream toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } }write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) !1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 12:34:46.760698", "n_pass": [1634, 63, 59], "score": "0.8099", "loss": "0.2848", "code": "public void run() {trace(\"started\"); stopfalse; try { try {if(ss.isClosed()) { ss; } } catch (BindException b) { try { Thread.sleep(); } catch (InterruptedException i) { } if (ss.isClosed()) { ss = (localport); } }  new byte[1];  reply = new byte[6]; while (!stop) { try { client();OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter= new PrintWriter(); (\"Proxy\" +\":\\n\" ); ; }InputStream fromServer = server.getInputStream();OutputStream toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } }write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) !1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 12:34:48.231075", "n_pass": [1637, 64, 60], "score": "0.5796", "loss": "0.7199", "code": "public void run() {trace(\"started\"); stopfalse; try { try {if(ssisClosed()) { ss; } } catch (BindException b) { try { Thread.sleep(); } catch (InterruptedException i) { } if (ss.isClosed()) { ss = (localport); } }  new byte[1];  reply = new byte[6]; while (!stop) { try { client();OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter= new PrintWriter(); (\"Proxy\" +\":\\n\" ); ; }InputStream fromServer = server.getInputStream();OutputStream toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } }write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) !1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 12:34:49.707197", "n_pass": [1638, 65, 61], "score": "0.5092", "loss": "0.793", "code": "public void run() {trace(\"started\"); stopfalse; try { try {if(ss()) { ss; } } catch (BindException b) { try { Thread.sleep(); } catch (InterruptedException i) { } if (ss.isClosed()) { ss = (localport); } }  new byte[1];  reply = new byte[6]; while (!stop) { try { client();OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter= new PrintWriter(); (\"Proxy\" +\":\\n\" ); ; }InputStream fromServer = server.getInputStream();OutputStream toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } }write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) !1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 12:34:51.191865", "n_pass": [1642, 66, 62], "score": "0.5791", "loss": "0.6749", "code": "public void run() {trace(\"started\"); stopfalse; try { try {if(ss()){ ss; } } catch (BindException b) { try { Thread.sleep(); } catch (InterruptedException i) { } if (ss.isClosed()) { ss = (localport); } }  new byte[1];  reply = new byte[6]; while (!stop) { try { client();OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter= new PrintWriter(); (\"Proxy\" +\":\\n\" ); ; }InputStream fromServer = server.getInputStream();OutputStream toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } }write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) !1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 12:34:52.661681", "n_pass": [1644, 67, 63], "score": "0.7346", "loss": "0.4227", "code": "public void run() {trace(\"started\"); stopfalse; try { try {if(ss()){ss; } } catch (BindException b) { try { Thread.sleep(); } catch (InterruptedException i) { } if (ss.isClosed()) { ss = (localport); } }  new byte[1];  reply = new byte[6]; while (!stop) { try { client();OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter= new PrintWriter(); (\"Proxy\" +\":\\n\" ); ; }InputStream fromServer = server.getInputStream();OutputStream toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } }write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) !1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 12:34:54.132272", "n_pass": [1645, 68, 64], "score": "0.6759", "loss": "0.4625", "code": "public void run() {trace(\"started\"); stopfalse; try { try {if(ss()){; } } catch (BindException b) { try { Thread.sleep(); } catch (InterruptedException i) { } if (ss.isClosed()) { ss = (localport); } }  new byte[1];  reply = new byte[6]; while (!stop) { try { client();OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter= new PrintWriter(); (\"Proxy\" +\":\\n\" ); ; }InputStream fromServer = server.getInputStream();OutputStream toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } }write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) !1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 12:34:57.054191", "n_pass": [1647, 70, 65], "score": "0.7708", "loss": "0.3282", "code": "public void run() {trace(\"started\"); stopfalse; try { try {if(ss()){;} } catch (BindException b) { try { Thread.sleep(); } catch (InterruptedException i) { } if (ss.isClosed()) { ss = (localport); } }  new byte[1];  reply = new byte[6]; while (!stop) { try { client();OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter= new PrintWriter(); (\"Proxy\" +\":\\n\" ); ; }InputStream fromServer = server.getInputStream();OutputStream toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } }write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) !1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 12:34:58.543749", "n_pass": [1649, 71, 66], "score": "0.6552", "loss": "0.5615", "code": "public void run() {trace(\"started\"); stopfalse; try { try {if(ss()){;}} catch (BindException b) { try { Thread.sleep(); } catch (InterruptedException i) { } if (ss.isClosed()) { ss = (localport); } }  new byte[1];  reply = new byte[6]; while (!stop) { try { client();OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter= new PrintWriter(); (\"Proxy\" +\":\\n\" ); ; }InputStream fromServer = server.getInputStream();OutputStream toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } }write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) !1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 12:35:00.015129", "n_pass": [1651, 72, 67], "score": "0.6975", "loss": "0.45", "code": "public void run() {trace(\"started\"); stopfalse; try { try {if(ss()){;}}catch (BindException b) { try { Thread.sleep(); } catch (InterruptedException i) { } if (ss.isClosed()) { ss = (localport); } }  new byte[1];  reply = new byte[6]; while (!stop) { try { client();OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter= new PrintWriter(); (\"Proxy\" +\":\\n\" ); ; }InputStream fromServer = server.getInputStream();OutputStream toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } }write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) !1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 12:35:01.487998", "n_pass": [1653, 73, 68], "score": "0.6887", "loss": "0.4742", "code": "public void run() {trace(\"started\"); stopfalse; try { try {if(ss()){;}}catch(BindException b) { try { Thread.sleep(); } catch (InterruptedException i) { } if (ss.isClosed()) { ss = (localport); } }  new byte[1];  reply = new byte[6]; while (!stop) { try { client();OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter= new PrintWriter(); (\"Proxy\" +\":\\n\" ); ; }InputStream fromServer = server.getInputStream();OutputStream toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } }write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) !1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 12:35:02.977148", "n_pass": [1659, 74, 69], "score": "0.6096", "loss": "0.5953", "code": "public void run() {trace(\"started\"); stopfalse; try { try {if(ss()){;}}catch(BindException b){ try { Thread.sleep(); } catch (InterruptedException i) { } if (ss.isClosed()) { ss = (localport); } }  new byte[1];  reply = new byte[6]; while (!stop) { try { client();OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter= new PrintWriter(); (\"Proxy\" +\":\\n\" ); ; }InputStream fromServer = server.getInputStream();OutputStream toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } }write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) !1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 12:35:04.466453", "n_pass": [1661, 75, 70], "score": "0.9638", "loss": "0.0688", "code": "public void run() {trace(\"started\"); stopfalse; try { try {if(ss()){;}}catch(BindException b){try { Thread.sleep(); } catch (InterruptedException i) { } if (ss.isClosed()) { ss = (localport); } }  new byte[1];  reply = new byte[6]; while (!stop) { try { client();OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter= new PrintWriter(); (\"Proxy\" +\":\\n\" ); ; }InputStream fromServer = server.getInputStream();OutputStream toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } }write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) !1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 12:35:05.956322", "n_pass": [1663, 76, 71], "score": "0.818", "loss": "0.2638", "code": "public void run() {trace(\"started\"); stopfalse; try { try {if(ss()){;}}catch(BindException b){try{ Thread.sleep(); } catch (InterruptedException i) { } if (ss.isClosed()) { ss = (localport); } }  new byte[1];  reply = new byte[6]; while (!stop) { try { client();OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter= new PrintWriter(); (\"Proxy\" +\":\\n\" ); ; }InputStream fromServer = server.getInputStream();OutputStream toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } }write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) !1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 12:35:07.429903", "n_pass": [1665, 77, 72], "score": "0.4727", "loss": "0.9059", "code": "public void run() {trace(\"started\"); stopfalse; try { try {if(ss()){;}}catch(BindException b){try{Thread.sleep(); } catch (InterruptedException i) { } if (ss.isClosed()) { ss = (localport); } }  new byte[1];  reply = new byte[6]; while (!stop) { try { client();OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter= new PrintWriter(); (\"Proxy\" +\":\\n\" ); ; }InputStream fromServer = server.getInputStream();OutputStream toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } }write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) !1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 12:35:08.915982", "n_pass": [1667, 78, 73], "score": "0.9505", "loss": "0.1005", "code": "public void run() {trace(\"started\"); stopfalse; try { try {if(ss()){;}}catch(BindException b){try{Threadsleep(); } catch (InterruptedException i) { } if (ss.isClosed()) { ss = (localport); } }  new byte[1];  reply = new byte[6]; while (!stop) { try { client();OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter= new PrintWriter(); (\"Proxy\" +\":\\n\" ); ; }InputStream fromServer = server.getInputStream();OutputStream toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } }write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) !1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 12:35:10.385321", "n_pass": [1668, 79, 74], "score": "0.6466", "loss": "0.5914", "code": "public void run() {trace(\"started\"); stopfalse; try { try {if(ss()){;}}catch(BindException b){try{Thread(); } catch (InterruptedException i) { } if (ss.isClosed()) { ss = (localport); } }  new byte[1];  reply = new byte[6]; while (!stop) { try { client();OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter= new PrintWriter(); (\"Proxy\" +\":\\n\" ); ; }InputStream fromServer = server.getInputStream();OutputStream toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } }write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) !1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 12:35:11.876968", "n_pass": [1672, 80, 75], "score": "0.6705", "loss": "0.5031", "code": "public void run() {trace(\"started\"); stopfalse; try { try {if(ss()){;}}catch(BindException b){try{Thread();} catch (InterruptedException i) { } if (ss.isClosed()) { ss = (localport); } }  new byte[1];  reply = new byte[6]; while (!stop) { try { client();OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter= new PrintWriter(); (\"Proxy\" +\":\\n\" ); ; }InputStream fromServer = server.getInputStream();OutputStream toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } }write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) !1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 12:35:13.348994", "n_pass": [1674, 81, 76], "score": "0.8813", "loss": "0.221", "code": "public void run() {trace(\"started\"); stopfalse; try { try {if(ss()){;}}catch(BindException b){try{Thread();}catch (InterruptedException i) { } if (ss.isClosed()) { ss = (localport); } }  new byte[1];  reply = new byte[6]; while (!stop) { try { client();OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter= new PrintWriter(); (\"Proxy\" +\":\\n\" ); ; }InputStream fromServer = server.getInputStream();OutputStream toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } }write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) !1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 12:35:14.998574", "n_pass": [1676, 82, 77], "score": "0.8177", "loss": "0.2745", "code": "public void run() {trace(\"started\"); stopfalse; try { try {if(ss()){;}}catch(BindException b){try{Thread();}catch(InterruptedException i) { } if (ss.isClosed()) { ss = (localport); } }  new byte[1];  reply = new byte[6]; while (!stop) { try { client();OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter= new PrintWriter(); (\"Proxy\" +\":\\n\" ); ; }InputStream fromServer = server.getInputStream();OutputStream toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } }write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) !1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 12:35:16.478845", "n_pass": [1682, 83, 78], "score": "0.8724", "loss": "0.2144", "code": "public void run() {trace(\"started\"); stopfalse; try { try {if(ss()){;}}catch(BindException b){try{Thread();}catch(InterruptedException i){ } if (ss.isClosed()) { ss = (localport); } }  new byte[1];  reply = new byte[6]; while (!stop) { try { client();OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter= new PrintWriter(); (\"Proxy\" +\":\\n\" ); ; }InputStream fromServer = server.getInputStream();OutputStream toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } }write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) !1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 12:35:17.978326", "n_pass": [1684, 84, 79], "score": "0.5886", "loss": "0.6393", "code": "public void run() {trace(\"started\"); stopfalse; try { try {if(ss()){;}}catch(BindException b){try{Thread();}catch(InterruptedException i){} if (ss.isClosed()) { ss = (localport); } }  new byte[1];  reply = new byte[6]; while (!stop) { try { client();OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter= new PrintWriter(); (\"Proxy\" +\":\\n\" ); ; }InputStream fromServer = server.getInputStream();OutputStream toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } }write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) !1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 12:35:19.471964", "n_pass": [1686, 85, 80], "score": "0.9354", "loss": "0.1287", "code": "public void run() {trace(\"started\"); stopfalse; try { try {if(ss()){;}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if (ss.isClosed()) { ss = (localport); } }  new byte[1];  reply = new byte[6]; while (!stop) { try { client();OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter= new PrintWriter(); (\"Proxy\" +\":\\n\" ); ; }InputStream fromServer = server.getInputStream();OutputStream toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } }write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) !1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 12:35:20.943426", "n_pass": [1688, 86, 81], "score": "0.6561", "loss": "0.5683", "code": "public void run() {trace(\"started\"); stopfalse; try { try {if(ss()){;}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss.isClosed()) { ss = (localport); } }  new byte[1];  reply = new byte[6]; while (!stop) { try { client();OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter= new PrintWriter(); (\"Proxy\" +\":\\n\" ); ; }InputStream fromServer = server.getInputStream();OutputStream toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } }write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) !1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 12:35:22.445528", "n_pass": [1691, 87, 82], "score": "0.9463", "loss": "0.0963", "code": "public void run() {trace(\"started\"); stopfalse; try { try {if(ss()){;}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ssisClosed()) { ss = (localport); } }  new byte[1];  reply = new byte[6]; while (!stop) { try { client();OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter= new PrintWriter(); (\"Proxy\" +\":\\n\" ); ; }InputStream fromServer = server.getInputStream();OutputStream toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } }write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) !1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 12:35:23.912840", "n_pass": [1692, 88, 83], "score": "0.4774", "loss": "0.8641", "code": "public void run() {trace(\"started\"); stopfalse; try { try {if(ss()){;}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()) { ss = (localport); } }  new byte[1];  reply = new byte[6]; while (!stop) { try { client();OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter= new PrintWriter(); (\"Proxy\" +\":\\n\" ); ; }InputStream fromServer = server.getInputStream();OutputStream toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } }write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) !1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 12:35:25.391215", "n_pass": [1696, 89, 84], "score": "0.5827", "loss": "0.7034", "code": "public void run() {trace(\"started\"); stopfalse; try { try {if(ss()){;}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ ss = (localport); } }  new byte[1];  reply = new byte[6]; while (!stop) { try { client();OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter= new PrintWriter(); (\"Proxy\" +\":\\n\" ); ; }InputStream fromServer = server.getInputStream();OutputStream toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } }write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) !1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 12:35:26.883952", "n_pass": [1698, 90, 85], "score": "0.7721", "loss": "0.3033", "code": "public void run() {trace(\"started\"); stopfalse; try { try {if(ss()){;}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss = (localport); } }  new byte[1];  reply = new byte[6]; while (!stop) { try { client();OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter= new PrintWriter(); (\"Proxy\" +\":\\n\" ); ; }InputStream fromServer = server.getInputStream();OutputStream toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } }write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) !1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 12:35:28.382790", "n_pass": [1700, 91, 86], "score": "0.5551", "loss": "0.6947", "code": "public void run() {trace(\"started\"); stopfalse; try { try {if(ss()){;}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss= (localport); } }  new byte[1];  reply = new byte[6]; while (!stop) { try { client();OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter= new PrintWriter(); (\"Proxy\" +\":\\n\" ); ; }InputStream fromServer = server.getInputStream();OutputStream toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } }write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) !1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 12:35:29.849575", "n_pass": [1701, 92, 87], "score": "0.6821", "loss": "0.5099", "code": "public void run() {trace(\"started\"); stopfalse; try { try {if(ss()){;}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss (localport); } }  new byte[1];  reply = new byte[6]; while (!stop) { try { client();OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter= new PrintWriter(); (\"Proxy\" +\":\\n\" ); ; }InputStream fromServer = server.getInputStream();OutputStream toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } }write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) !1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 12:35:32.772285", "n_pass": [1704, 94, 88], "score": "0.7472", "loss": "0.3882", "code": "public void run() {trace(\"started\"); stopfalse; try { try {if(ss()){;}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss (); } }  new byte[1];  reply = new byte[6]; while (!stop) { try { client();OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter= new PrintWriter(); (\"Proxy\" +\":\\n\" ); ; }InputStream fromServer = server.getInputStream();OutputStream toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } }write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) !1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 12:35:34.243246", "n_pass": [1707, 95, 89], "score": "0.6542", "loss": "0.5727", "code": "public void run() {trace(\"started\"); stopfalse; try { try {if(ss()){;}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss ();} }  new byte[1];  reply = new byte[6]; while (!stop) { try { client();OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter= new PrintWriter(); (\"Proxy\" +\":\\n\" ); ; }InputStream fromServer = server.getInputStream();OutputStream toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } }write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) !1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 12:35:35.730667", "n_pass": [1709, 96, 90], "score": "0.7377", "loss": "0.4565", "code": "public void run() {trace(\"started\"); stopfalse; try { try {if(ss()){;}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss ();}}  new byte[1];  reply = new byte[6]; while (!stop) { try { client();OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter= new PrintWriter(); (\"Proxy\" +\":\\n\" ); ; }InputStream fromServer = server.getInputStream();OutputStream toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } }write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) !1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 12:35:40.169534", "n_pass": [1714, 99, 91], "score": "0.697", "loss": "0.5564", "code": "public void run() {trace(\"started\"); stopfalse; try { try {if(ss()){;}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss ();}}  newbyte[1];  reply = new byte[6]; while (!stop) { try { client();OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter= new PrintWriter(); (\"Proxy\" +\":\\n\" ); ; }InputStream fromServer = server.getInputStream();OutputStream toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } }write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) !1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 12:35:41.680634", "n_pass": [1720, 100, 92], "score": "0.9161", "loss": "0.1636", "code": "public void run() {trace(\"started\"); stopfalse; try { try {if(ss()){;}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss ();}}  newbyte[1]; reply = new byte[6]; while (!stop) { try { client();OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter= new PrintWriter(); (\"Proxy\" +\":\\n\" ); ; }InputStream fromServer = server.getInputStream();OutputStream toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } }write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) !1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 12:35:43.146250", "n_pass": [1721, 101, 93], "score": "0.7916", "loss": "0.3567", "code": "public void run() {trace(\"started\"); stopfalse; try { try {if(ss()){;}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss ();}}  newbyte[1];reply = new byte[6]; while (!stop) { try { client();OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter= new PrintWriter(); (\"Proxy\" +\":\\n\" ); ; }InputStream fromServer = server.getInputStream();OutputStream toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } }write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) !1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 12:35:44.638820", "n_pass": [1723, 102, 94], "score": "0.846", "loss": "0.2793", "code": "public void run() {trace(\"started\"); stopfalse; try { try {if(ss()){;}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss ();}}  newbyte[1];reply= new byte[6]; while (!stop) { try { client();OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter= new PrintWriter(); (\"Proxy\" +\":\\n\" ); ; }InputStream fromServer = server.getInputStream();OutputStream toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } }write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) !1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 12:35:46.104968", "n_pass": [1725, 103, 95], "score": "0.7925", "loss": "0.3436", "code": "public void run() {trace(\"started\"); stopfalse; try { try {if(ss()){;}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss ();}}  newbyte[1];reply=new byte[6]; while (!stop) { try { client();OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter= new PrintWriter(); (\"Proxy\" +\":\\n\" ); ; }InputStream fromServer = server.getInputStream();OutputStream toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } }write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) !1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 12:35:47.570783", "n_pass": [1727, 104, 96], "score": "0.7303", "loss": "0.4827", "code": "public void run() {trace(\"started\"); stopfalse; try { try {if(ss()){;}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss ();}}  newbyte[1];reply=newbyte[6]; while (!stop) { try { client();OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter= new PrintWriter(); (\"Proxy\" +\":\\n\" ); ; }InputStream fromServer = server.getInputStream();OutputStream toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } }write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) !1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 12:35:49.067831", "n_pass": [1733, 105, 97], "score": "0.9262", "loss": "0.1248", "code": "public void run() {trace(\"started\"); stopfalse; try { try {if(ss()){;}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss ();}}  newbyte[1];reply=newbyte[6];while (!stop) { try { client();OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter= new PrintWriter(); (\"Proxy\" +\":\\n\" ); ; }InputStream fromServer = server.getInputStream();OutputStream toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } }write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) !1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 12:35:50.535593", "n_pass": [1735, 106, 98], "score": "0.9125", "loss": "0.1688", "code": "public void run() {trace(\"started\"); stopfalse; try { try {if(ss()){;}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss ();}}  newbyte[1];reply=newbyte[6];while(!stop) { try { client();OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter= new PrintWriter(); (\"Proxy\" +\":\\n\" ); ; }InputStream fromServer = server.getInputStream();OutputStream toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } }write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) !1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 12:35:52.001136", "n_pass": [1737, 107, 99], "score": "0.9685", "loss": "0.0589", "code": "public void run() {trace(\"started\"); stopfalse; try { try {if(ss()){;}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss ();}}  newbyte[1];reply=newbyte[6];while(stop) { try { client();OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter= new PrintWriter(); (\"Proxy\" +\":\\n\" ); ; }InputStream fromServer = server.getInputStream();OutputStream toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } }write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) !1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 12:35:53.469695", "n_pass": [1740, 108, 100], "score": "0.9303", "loss": "0.1116", "code": "public void run() {trace(\"started\"); stopfalse; try { try {if(ss()){;}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss ();}}  newbyte[1];reply=newbyte[6];while(stop){ try { client();OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter= new PrintWriter(); (\"Proxy\" +\":\\n\" ); ; }InputStream fromServer = server.getInputStream();OutputStream toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } }write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) !1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 12:35:54.953939", "n_pass": [1742, 109, 101], "score": "0.8975", "loss": "0.179", "code": "public void run() {trace(\"started\"); stopfalse; try { try {if(ss()){;}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss ();}}  newbyte[1];reply=newbyte[6];while(stop){try { client();OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter= new PrintWriter(); (\"Proxy\" +\":\\n\" ); ; }InputStream fromServer = server.getInputStream();OutputStream toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } }write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) !1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 12:35:56.437475", "n_pass": [1744, 110, 102], "score": "0.9548", "loss": "0.0802", "code": "public void run() {trace(\"started\"); stopfalse; try { try {if(ss()){;}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss ();}}  newbyte[1];reply=newbyte[6];while(stop){try{ client();OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter= new PrintWriter(); (\"Proxy\" +\":\\n\" ); ; }InputStream fromServer = server.getInputStream();OutputStream toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } }write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) !1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 12:35:57.929159", "n_pass": [1746, 111, 103], "score": "0.9456", "loss": "0.1066", "code": "public void run() {trace(\"started\"); stopfalse; try { try {if(ss()){;}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss ();}}  newbyte[1];reply=newbyte[6];while(stop){try{client();OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter= new PrintWriter(); (\"Proxy\" +\":\\n\" ); ; }InputStream fromServer = server.getInputStream();OutputStream toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } }write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) !1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 12:35:59.402283", "n_pass": [1751, 112, 104], "score": "0.739", "loss": "0.439", "code": "public void run() {trace(\"started\"); stopfalse; try { try {if(ss()){;}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss ();}}  newbyte[1];reply=newbyte[6];while(stop){try{client(); toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter= new PrintWriter(); (\"Proxy\" +\":\\n\" ); ; }InputStream fromServer = server.getInputStream();OutputStream toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } }write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) !1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 12:36:00.860440", "n_pass": [1752, 113, 105], "score": "0.907", "loss": "0.1546", "code": "public void run() {trace(\"started\"); stopfalse; try { try {if(ss()){;}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss ();}}  newbyte[1];reply=newbyte[6];while(stop){try{client();toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter= new PrintWriter(); (\"Proxy\" +\":\\n\" ); ; }InputStream fromServer = server.getInputStream();OutputStream toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } }write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) !1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 12:36:02.327878", "n_pass": [1754, 114, 106], "score": "0.7532", "loss": "0.38", "code": "public void run() {trace(\"started\"); stopfalse; try { try {if(ss()){;}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss ();}}  newbyte[1];reply=newbyte[6];while(stop){try{client();toClient= client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter= new PrintWriter(); (\"Proxy\" +\":\\n\" ); ; }InputStream fromServer = server.getInputStream();OutputStream toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } }write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) !1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 12:36:03.793317", "n_pass": [1756, 115, 107], "score": "0.9382", "loss": "0.1092", "code": "public void run() {trace(\"started\"); stopfalse; try { try {if(ss()){;}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss ();}}  newbyte[1];reply=newbyte[6];while(stop){try{client();toClient=client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter= new PrintWriter(); (\"Proxy\" +\":\\n\" ); ; }InputStream fromServer = server.getInputStream();OutputStream toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } }write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) !1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 12:36:05.244683", "n_pass": [1757, 116, 108], "score": "0.8051", "loss": "0.2902", "code": "public void run() {trace(\"started\"); stopfalse; try { try {if(ss()){;}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss ();}}  newbyte[1];reply=newbyte[6];while(stop){try{client();toClient=getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter= new PrintWriter(); (\"Proxy\" +\":\\n\" ); ; }InputStream fromServer = server.getInputStream();OutputStream toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } }write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) !1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 12:36:06.724873", "n_pass": [1764, 117, 109], "score": "0.9194", "loss": "0.1361", "code": "public void run() {trace(\"started\"); stopfalse; try { try {if(ss()){;}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss ();}}  newbyte[1];reply=newbyte[6];while(stop){try{client();toClient=getOutputStream(); try { server = Socket(host, remoteport); } catch (IOException e) { PrintWriter= new PrintWriter(); (\"Proxy\" +\":\\n\" ); ; }InputStream fromServer = server.getInputStream();OutputStream toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } }write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) !1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 12:36:08.197458", "n_pass": [1767, 118, 110], "score": "0.8468", "loss": "0.2197", "code": "public void run() {trace(\"started\"); stopfalse; try { try {if(ss()){;}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss ();}}  newbyte[1];reply=newbyte[6];while(stop){try{client();toClient=getOutputStream(); try { server = Socket(hostremoteport); } catch (IOException e) { PrintWriter= new PrintWriter(); (\"Proxy\" +\":\\n\" ); ; }InputStream fromServer = server.getInputStream();OutputStream toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } }write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) !1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 12:36:09.682985", "n_pass": [1776, 119, 111], "score": "0.8293", "loss": "0.2958", "code": "public void run() {trace(\"started\"); stopfalse; try { try {if(ss()){;}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss ();}}  newbyte[1];reply=newbyte[6];while(stop){try{client();toClient=getOutputStream(); try { server = Socket(hostremoteport); } catch (IOException e) {  new PrintWriter(); (\"Proxy\" +\":\\n\" ); ; }InputStream fromServer = server.getInputStream();OutputStream toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } }write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) !1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 12:36:11.139270", "n_pass": [1777, 120, 112], "score": "0.9444", "loss": "0.0969", "code": "public void run() {trace(\"started\"); stopfalse; try { try {if(ss()){;}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss ();}}  newbyte[1];reply=newbyte[6];while(stop){try{client();toClient=getOutputStream(); try { server = Socket(hostremoteport); } catch (IOException e) {  PrintWriter(); (\"Proxy\" +\":\\n\" ); ; }InputStream fromServer = server.getInputStream();OutputStream toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } }write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) !1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 12:36:12.599335", "n_pass": [1779, 121, 113], "score": "0.9172", "loss": "0.153", "code": "public void run() {trace(\"started\"); stopfalse; try { try {if(ss()){;}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss ();}}  newbyte[1];reply=newbyte[6];while(stop){try{client();toClient=getOutputStream(); try { server = Socket(hostremoteport); } catch (IOException e) {  PrintWriter; (\"Proxy\" +\":\\n\" ); ; }InputStream fromServer = server.getInputStream();OutputStream toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } }write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) !1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 12:36:14.059700", "n_pass": [1780, 122, 114], "score": "0.8057", "loss": "0.3788", "code": "public void run() {trace(\"started\"); stopfalse; try { try {if(ss()){;}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss ();}}  newbyte[1];reply=newbyte[6];while(stop){try{client();toClient=getOutputStream(); try { server = Socket(hostremoteport); } catch (IOException e) {  PrintWriter(\"Proxy\" +\":\\n\" ); ; }InputStream fromServer = server.getInputStream();OutputStream toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } }write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) !1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 12:36:15.525724", "n_pass": [1785, 123, 115], "score": "0.8547", "loss": "0.2416", "code": "public void run() {trace(\"started\"); stopfalse; try { try {if(ss()){;}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss ();}}  newbyte[1];reply=newbyte[6];while(stop){try{client();toClient=getOutputStream(); try { server = Socket(hostremoteport); } catch (IOException e) {  PrintWriter(\"Proxy\" +\":\" ); ; }InputStream fromServer = server.getInputStream();OutputStream toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } }write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) !1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 12:36:16.989989", "n_pass": [1788, 124, 116], "score": "0.8249", "loss": "0.331", "code": "public void run() {trace(\"started\"); stopfalse; try { try {if(ss()){;}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss ();}}  newbyte[1];reply=newbyte[6];while(stop){try{client();toClient=getOutputStream(); try { server = Socket(hostremoteport); } catch (IOException e) {  PrintWriter(\"Proxy\" +\":\" ); }InputStream fromServer = server.getInputStream();OutputStream toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } }write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) !1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 12:36:18.451586", "n_pass": [1790, 125, 117], "score": "0.564", "loss": "0.7878", "code": "public void run() {trace(\"started\"); stopfalse; try { try {if(ss()){;}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss ();}}  newbyte[1];reply=newbyte[6];while(stop){try{client();toClient=getOutputStream(); try { server = Socket(hostremoteport); } catch (IOException e) {  PrintWriter(\"Proxy\" +\":\" ); }fromServer = server.getInputStream();OutputStream toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } }write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) !1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 12:36:19.914744", "n_pass": [1793, 126, 118], "score": "0.8769", "loss": "0.2218", "code": "public void run() {trace(\"started\"); stopfalse; try { try {if(ss()){;}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss ();}}  newbyte[1];reply=newbyte[6];while(stop){try{client();toClient=getOutputStream(); try { server = Socket(hostremoteport); } catch (IOException e) {  PrintWriter(\"Proxy\" +\":\" ); }fromServer = getInputStream();OutputStream toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } }write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) !1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 12:36:21.356549", "n_pass": [1796, 127, 119], "score": "0.7662", "loss": "0.4204", "code": "public void run() {trace(\"started\"); stopfalse; try { try {if(ss()){;}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss ();}}  newbyte[1];reply=newbyte[6];while(stop){try{client();toClient=getOutputStream(); try { server = Socket(hostremoteport); } catch (IOException e) {  PrintWriter(\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } }write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) !1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 12:36:24.338285", "n_pass": [1818, 129, 120], "score": "0.6437", "loss": "0.5888", "code": "public void run() {trace(\"started\"); stopfalse; try { try {if(ss()){;}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss ();}}  newbyte[1];reply=newbyte[6];while(stop){try{client();toClient=getOutputStream(); try { server = Socket(hostremoteport); } catch (IOException e) {  PrintWriter(\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { } catch (InterruptedException e) { e.printStackTrace(); } }write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) !1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 12:36:25.830844", "n_pass": [1826, 130, 121], "score": "0.7436", "loss": "0.4324", "code": "public void run() {trace(\"started\"); stopfalse; try { try {if(ss()){;}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss ();}}  newbyte[1];reply=newbyte[6];while(stop){try{client();toClient=getOutputStream(); try { server = Socket(hostremoteport); } catch (IOException e) {  PrintWriter(\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { } catch (InterruptedException e) { e(); } }write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) !1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 12:36:27.289839", "n_pass": [1827, 131, 122], "score": "0.5509", "loss": "0.8413", "code": "public void run() {trace(\"started\"); stopfalse; try { try {if(ss()){;}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss ();}}  newbyte[1];reply=newbyte[6];while(stop){try{client();toClient=getOutputStream(); try { server = Socket(hostremoteport); } catch (IOException e) {  PrintWriter(\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { } catch (InterruptedException e) { e; } }write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) !1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 12:36:28.745090", "n_pass": [1834, 132, 123], "score": "0.6475", "loss": "0.6802", "code": "public void run() {trace(\"started\"); stopfalse; try { try {if(ss()){;}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss ();}}  newbyte[1];reply=newbyte[6];while(stop){try{client();toClient=getOutputStream(); try { server = Socket(hostremoteport); } catch (IOException e) {  PrintWriter(\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { } catch (InterruptedException e) { e; } }write(request); toServer(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) !1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 12:36:30.177642", "n_pass": [1835, 133, 124], "score": "0.7524", "loss": "0.4583", "code": "public void run() {trace(\"started\"); stopfalse; try { try {if(ss()){;}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss ();}}  newbyte[1];reply=newbyte[6];while(stop){try{client();toClient=getOutputStream(); try { server = Socket(hostremoteport); } catch (IOException e) {  PrintWriter(\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { } catch (InterruptedException e) { e; } }write(request); toServer; } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) !1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 12:36:31.702275", "n_pass": [1854, 134, 125], "score": "0.7506", "loss": "0.4758", "code": "public void run() {trace(\"started\"); stopfalse; try { try {if(ss()){;}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss ();}}  newbyte[1];reply=newbyte[6];while(stop){try{client();toClient=getOutputStream(); try { server = Socket(hostremoteport); } catch (IOException e) {  PrintWriter(\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { } catch (InterruptedException e) { e; } }write(request); toServer; } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) ) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 12:36:33.161041", "n_pass": [1859, 135, 126], "score": "0.7332", "loss": "0.479", "code": "public void run() {trace(\"started\"); stopfalse; try { try {if(ss()){;}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss ();}}  newbyte[1];reply=newbyte[6];while(stop){try{client();toClient=getOutputStream(); try { server = Socket(hostremoteport); } catch (IOException e) {  PrintWriter(\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { } catch (InterruptedException e) { e; } }write(request); toServer; } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) ) { try { } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 12:36:34.633030", "n_pass": [1866, 136, 127], "score": "0.7419", "loss": "0.4564", "code": "public void run() {trace(\"started\"); stopfalse; try { try {if(ss()){;}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss ();}}  newbyte[1];reply=newbyte[6];while(stop){try{client();toClient=getOutputStream(); try { server = Socket(hostremoteport); } catch (IOException e) {  PrintWriter(\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { } catch (InterruptedException e) { e; } }write(request); toServer; } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) ) { try { } catch (InterruptedException e) { printStackTrace(); } toClient.write(bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 12:36:36.096366", "n_pass": [1871, 137, 128], "score": "0.7667", "loss": "0.3887", "code": "public void run() {trace(\"started\"); stopfalse; try { try {if(ss()){;}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss ();}}  newbyte[1];reply=newbyte[6];while(stop){try{client();toClient=getOutputStream(); try { server = Socket(hostremoteport); } catch (IOException e) {  PrintWriter(\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { } catch (InterruptedException e) { e; } }write(request); toServer; } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) ) { try { } catch (InterruptedException e) { printStackTrace(); } toClient(bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 12:36:37.539100", "n_pass": [1874, 138, 129], "score": "0.5786", "loss": "0.7789", "code": "public void run() {trace(\"started\"); stopfalse; try { try {if(ss()){;}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss ();}}  newbyte[1];reply=newbyte[6];while(stop){try{client();toClient=getOutputStream(); try { server = Socket(hostremoteport); } catch (IOException e) {  PrintWriter(\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { } catch (InterruptedException e) { e; } }write(request); toServer; } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) ) { try { } catch (InterruptedException e) { printStackTrace(); } toClient(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 12:36:39.077154", "n_pass": [1898, 139, 130], "score": "0.7583", "loss": "0.4137", "code": "public void run() {trace(\"started\"); stopfalse; try { try {if(ss()){;}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss ();}}  newbyte[1];reply=newbyte[6];while(stop){try{client();toClient=getOutputStream(); try { server = Socket(hostremoteport); } catch (IOException e) {  PrintWriter(\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { } catch (InterruptedException e) { e; } }write(request); toServer; } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) ) { try { } catch (InterruptedException e) { printStackTrace(); } toClient(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 12:36:40.624627", "n_pass": [1925, 140, 131], "score": "0.7572", "loss": "0.4504", "code": "public void run() {trace(\"started\"); stopfalse; try { try {if(ss()){;}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss ();}}  newbyte[1];reply=newbyte[6];while(stop){try{client();toClient=getOutputStream(); try { server = Socket(hostremoteport); } catch (IOException e) {  PrintWriter(\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { } catch (InterruptedException e) { e; } }write(request); toServer; } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) ) { try { } catch (InterruptedException e) { printStackTrace(); } toClient(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-20 12:36:42.080888", "n_pass": [1930, 141, 132], "score": "0.8361", "loss": "0.2913", "code": " void run() {trace(\"started\"); stopfalse; try { try {if(ss()){;}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss ();}}  newbyte[1];reply=newbyte[6];while(stop){try{client();toClient=getOutputStream(); try { server = Socket(hostremoteport); } catch (IOException e) {  PrintWriter(\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { } catch (InterruptedException e) { e; } }write(request); toServer; } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) ) { try { } catch (InterruptedException e) { printStackTrace(); } toClient(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-20 12:36:43.537906", "n_pass": [1931, 142, 133], "score": "0.6933", "loss": "0.5314", "code": "void run() {trace(\"started\"); stopfalse; try { try {if(ss()){;}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss ();}}  newbyte[1];reply=newbyte[6];while(stop){try{client();toClient=getOutputStream(); try { server = Socket(hostremoteport); } catch (IOException e) {  PrintWriter(\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { } catch (InterruptedException e) { e; } }write(request); toServer; } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) ) { try { } catch (InterruptedException e) { printStackTrace(); } toClient(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-20 12:36:45.794410", "n_pass": [1937, 143, 134], "score": "0.7324", "loss": "0.4406", "code": "void run(){trace(\"started\"); stopfalse; try { try {if(ss()){;}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss ();}}  newbyte[1];reply=newbyte[6];while(stop){try{client();toClient=getOutputStream(); try { server = Socket(hostremoteport); } catch (IOException e) {  PrintWriter(\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { } catch (InterruptedException e) { e; } }write(request); toServer; } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) ) { try { } catch (InterruptedException e) { printStackTrace(); } toClient(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-20 12:36:47.252603", "n_pass": [1939, 144, 135], "score": "0.7903", "loss": "0.4142", "code": "void run(){(\"started\"); stopfalse; try { try {if(ss()){;}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss ();}}  newbyte[1];reply=newbyte[6];while(stop){try{client();toClient=getOutputStream(); try { server = Socket(hostremoteport); } catch (IOException e) {  PrintWriter(\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { } catch (InterruptedException e) { e; } }write(request); toServer; } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) ) { try { } catch (InterruptedException e) { printStackTrace(); } toClient(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-20 12:36:48.686186", "n_pass": [1942, 145, 136], "score": "0.8109", "loss": "0.3324", "code": "void run(){(\"\"); stopfalse; try { try {if(ss()){;}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss ();}}  newbyte[1];reply=newbyte[6];while(stop){try{client();toClient=getOutputStream(); try { server = Socket(hostremoteport); } catch (IOException e) {  PrintWriter(\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { } catch (InterruptedException e) { e; } }write(request); toServer; } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) ) { try { } catch (InterruptedException e) { printStackTrace(); } toClient(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-20 12:36:50.143980", "n_pass": [1946, 146, 137], "score": "0.633", "loss": "0.7082", "code": "void run(){(\"\");stopfalse; try { try {if(ss()){;}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss ();}}  newbyte[1];reply=newbyte[6];while(stop){try{client();toClient=getOutputStream(); try { server = Socket(hostremoteport); } catch (IOException e) {  PrintWriter(\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { } catch (InterruptedException e) { e; } }write(request); toServer; } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) ) { try { } catch (InterruptedException e) { printStackTrace(); } toClient(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-20 12:36:51.589353", "n_pass": [1947, 147, 138], "score": "0.8755", "loss": "0.2226", "code": "void run(){(\"\");false; try { try {if(ss()){;}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss ();}}  newbyte[1];reply=newbyte[6];while(stop){try{client();toClient=getOutputStream(); try { server = Socket(hostremoteport); } catch (IOException e) {  PrintWriter(\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { } catch (InterruptedException e) { e; } }write(request); toServer; } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) ) { try { } catch (InterruptedException e) { printStackTrace(); } toClient(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-20 12:36:53.026953", "n_pass": [1948, 148, 139], "score": "0.8282", "loss": "0.3314", "code": "void run(){(\"\");; try { try {if(ss()){;}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss ();}}  newbyte[1];reply=newbyte[6];while(stop){try{client();toClient=getOutputStream(); try { server = Socket(hostremoteport); } catch (IOException e) {  PrintWriter(\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { } catch (InterruptedException e) { e; } }write(request); toServer; } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) ) { try { } catch (InterruptedException e) { printStackTrace(); } toClient(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-20 12:36:54.457171", "n_pass": [1949, 149, 140], "score": "0.7408", "loss": "0.506", "code": "void run(){(\"\"); try { try {if(ss()){;}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss ();}}  newbyte[1];reply=newbyte[6];while(stop){try{client();toClient=getOutputStream(); try { server = Socket(hostremoteport); } catch (IOException e) {  PrintWriter(\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { } catch (InterruptedException e) { e; } }write(request); toServer; } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) ) { try { } catch (InterruptedException e) { printStackTrace(); } toClient(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-20 12:36:55.892779", "n_pass": [1950, 150, 141], "score": "0.7892", "loss": "0.3915", "code": "void run(){(\"\");try { try {if(ss()){;}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss ();}}  newbyte[1];reply=newbyte[6];while(stop){try{client();toClient=getOutputStream(); try { server = Socket(hostremoteport); } catch (IOException e) {  PrintWriter(\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { } catch (InterruptedException e) { e; } }write(request); toServer; } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) ) { try { } catch (InterruptedException e) { printStackTrace(); } toClient(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-20 12:36:57.326262", "n_pass": [1952, 151, 142], "score": "0.8822", "loss": "0.2149", "code": "void run(){(\"\");try{ try {if(ss()){;}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss ();}}  newbyte[1];reply=newbyte[6];while(stop){try{client();toClient=getOutputStream(); try { server = Socket(hostremoteport); } catch (IOException e) {  PrintWriter(\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { } catch (InterruptedException e) { e; } }write(request); toServer; } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) ) { try { } catch (InterruptedException e) { printStackTrace(); } toClient(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-20 12:36:58.758007", "n_pass": [1954, 152, 143], "score": "0.886", "loss": "0.2104", "code": "void run(){(\"\");try{try {if(ss()){;}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss ();}}  newbyte[1];reply=newbyte[6];while(stop){try{client();toClient=getOutputStream(); try { server = Socket(hostremoteport); } catch (IOException e) {  PrintWriter(\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { } catch (InterruptedException e) { e; } }write(request); toServer; } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) ) { try { } catch (InterruptedException e) { printStackTrace(); } toClient(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-20 12:37:00.189576", "n_pass": [1956, 153, 144], "score": "0.7436", "loss": "0.4875", "code": "void run(){(\"\");try{try{if(ss()){;}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss ();}}  newbyte[1];reply=newbyte[6];while(stop){try{client();toClient=getOutputStream(); try { server = Socket(hostremoteport); } catch (IOException e) {  PrintWriter(\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { } catch (InterruptedException e) { e; } }write(request); toServer; } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) ) { try { } catch (InterruptedException e) { printStackTrace(); } toClient(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-20 12:37:01.641488", "n_pass": [1965, 154, 145], "score": "0.8612", "loss": "0.2497", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss ();}}  newbyte[1];reply=newbyte[6];while(stop){try{client();toClient=getOutputStream(); try { server = Socket(hostremoteport); } catch (IOException e) {  PrintWriter(\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { } catch (InterruptedException e) { e; } }write(request); toServer; } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) ) { try { } catch (InterruptedException e) { printStackTrace(); } toClient(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-20 12:37:03.342759", "n_pass": [1998, 155, 146], "score": "0.746", "loss": "0.4683", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss();}}  newbyte[1];reply=newbyte[6];while(stop){try{client();toClient=getOutputStream(); try { server = Socket(hostremoteport); } catch (IOException e) {  PrintWriter(\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { } catch (InterruptedException e) { e; } }write(request); toServer; } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) ) { try { } catch (InterruptedException e) { printStackTrace(); } toClient(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-20 12:37:04.787985", "n_pass": [2004, 156, 147], "score": "0.7179", "loss": "0.5472", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss();}} newbyte[1];reply=newbyte[6];while(stop){try{client();toClient=getOutputStream(); try { server = Socket(hostremoteport); } catch (IOException e) {  PrintWriter(\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { } catch (InterruptedException e) { e; } }write(request); toServer; } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) ) { try { } catch (InterruptedException e) { printStackTrace(); } toClient(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-20 12:37:06.214781", "n_pass": [2005, 157, 148], "score": "0.7674", "loss": "0.4346", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss();}}newbyte[1];reply=newbyte[6];while(stop){try{client();toClient=getOutputStream(); try { server = Socket(hostremoteport); } catch (IOException e) {  PrintWriter(\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { } catch (InterruptedException e) { e; } }write(request); toServer; } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) ) { try { } catch (InterruptedException e) { printStackTrace(); } toClient(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-20 12:37:07.660502", "n_pass": [2013, 158, 149], "score": "0.817", "loss": "0.3362", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss();}}newbyte[1];replynewbyte[6];while(stop){try{client();toClient=getOutputStream(); try { server = Socket(hostremoteport); } catch (IOException e) {  PrintWriter(\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { } catch (InterruptedException e) { e; } }write(request); toServer; } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) ) { try { } catch (InterruptedException e) { printStackTrace(); } toClient(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-20 12:37:09.088515", "n_pass": [2014, 159, 150], "score": "0.7696", "loss": "0.4681", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss();}}newbyte[1];replybyte[6];while(stop){try{client();toClient=getOutputStream(); try { server = Socket(hostremoteport); } catch (IOException e) {  PrintWriter(\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { } catch (InterruptedException e) { e; } }write(request); toServer; } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) ) { try { } catch (InterruptedException e) { printStackTrace(); } toClient(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-20 12:37:10.535807", "n_pass": [2015, 160, 151], "score": "0.7839", "loss": "0.4103", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss();}}newbyte[1];reply[6];while(stop){try{client();toClient=getOutputStream(); try { server = Socket(hostremoteport); } catch (IOException e) {  PrintWriter(\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { } catch (InterruptedException e) { e; } }write(request); toServer; } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) ) { try { } catch (InterruptedException e) { printStackTrace(); } toClient(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-20 12:37:12.007179", "n_pass": [2032, 161, 152], "score": "0.8931", "loss": "0.226", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss();}}newbyte[1];reply[6];while(stop){try{client();toClientgetOutputStream(); try { server = Socket(hostremoteport); } catch (IOException e) {  PrintWriter(\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { } catch (InterruptedException e) { e; } }write(request); toServer; } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) ) { try { } catch (InterruptedException e) { printStackTrace(); } toClient(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-20 12:37:13.466830", "n_pass": [2039, 162, 153], "score": "0.9046", "loss": "0.1946", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss();}}newbyte[1];reply[6];while(stop){try{client();toClientgetOutputStream(); try { server =(hostremoteport); } catch (IOException e) {  PrintWriter(\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { } catch (InterruptedException e) { e; } }write(request); toServer; } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) ) { try { } catch (InterruptedException e) { printStackTrace(); } toClient(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-20 12:37:14.942535", "n_pass": [2049, 163, 154], "score": "0.8997", "loss": "0.2012", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss();}}newbyte[1];reply[6];while(stop){try{client();toClientgetOutputStream(); try { server =(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { } catch (InterruptedException e) { e; } }write(request); toServer; } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) ) { try { } catch (InterruptedException e) { printStackTrace(); } toClient(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-20 12:37:16.456618", "n_pass": [2073, 164, 155], "score": "0.9154", "loss": "0.1624", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss();}}newbyte[1];reply[6];while(stop){try{client();toClientgetOutputStream(); try { server =(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() -> {try { while ((bytesRead) ) { if (delay0) { try { } catch (InterruptedException e) { e; } }write(request); toServer; } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) ) { try { } catch (InterruptedException e) { printStackTrace(); } toClient(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-20 12:37:17.929193", "n_pass": [2088, 165, 156], "score": "0.825", "loss": "0.3695", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss();}}newbyte[1];reply[6];while(stop){try{client();toClientgetOutputStream(); try { server =(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() -> {try { while ((bytesRead) ) { if (delay0) { try { } catch (InterruptedException e) {; } }write(request); toServer; } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) ) { try { } catch (InterruptedException e) { printStackTrace(); } toClient(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-20 12:37:19.350801", "n_pass": [2089, 166, 157], "score": "0.8956", "loss": "0.2001", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss();}}newbyte[1];reply[6];while(stop){try{client();toClientgetOutputStream(); try { server =(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() -> {try { while ((bytesRead) ) { if (delay0) { try { } catch (InterruptedException e) {} }write(request); toServer; } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) ) { try { } catch (InterruptedException e) { printStackTrace(); } toClient(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-20 12:37:20.787177", "n_pass": [2094, 167, 158], "score": "0.9145", "loss": "0.1727", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss();}}newbyte[1];reply[6];while(stop){try{client();toClientgetOutputStream(); try { server =(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() -> {try { while ((bytesRead) ) { if (delay0) { try { } catch (InterruptedException e) {} }write(request);; } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) ) { try { } catch (InterruptedException e) { printStackTrace(); } toClient(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-20 12:37:22.240556", "n_pass": [2095, 168, 159], "score": "0.9172", "loss": "0.1668", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss();}}newbyte[1];reply[6];while(stop){try{client();toClientgetOutputStream(); try { server =(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() -> {try { while ((bytesRead) ) { if (delay0) { try { } catch (InterruptedException e) {} }write(request);} } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) ) { try { } catch (InterruptedException e) { printStackTrace(); } toClient(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-20 12:37:23.767854", "n_pass": [2126, 169, 160], "score": "0.8917", "loss": "0.2123", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss();}}newbyte[1];reply[6];while(stop){try{client();toClientgetOutputStream(); try { server =(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() -> {try { while ((bytesRead) ) { if (delay0) { try { } catch (InterruptedException e) {} }write(request);} } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) ) { try { } catch (InterruptedException e) { printStackTrace(); }(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-20 12:37:26.364258", "n_pass": [2263, 170, 161], "score": "0.8979", "loss": "0.204", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss();}}newbyte[1];reply[6];while(stop){try{client();getOutputStream(); try { server =(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() -> {try { while ((bytesRead) ) { if (delay0) { try { } catch (InterruptedException e) {} }write(request);} } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) ) { try { } catch (InterruptedException e) { printStackTrace(); }(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-20 12:37:27.800195", "n_pass": [2269, 171, 162], "score": "0.8127", "loss": "0.3789", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss();}}newbyte[1];reply[6];while(stop){try{client();getOutputStream(); try { server(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() -> {try { while ((bytesRead) ) { if (delay0) { try { } catch (InterruptedException e) {} }write(request);} } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) ) { try { } catch (InterruptedException e) { printStackTrace(); }(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-20 12:37:30.864688", "n_pass": [2490, 172, 163], "score": "0.8642", "loss": "0.2774", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss();}}newbyte[1];reply[6];while(stop){try{client();getOutputStream(); try {(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() -> {try { while ((bytesRead) ) { if (delay0) { try { } catch (InterruptedException e) {} }write(request);} } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) ) { try { } catch (InterruptedException e) { printStackTrace(); }(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-20 12:38:11.088168", "n_pass": [2991, 173, 164], "score": "0.897", "loss": "0.1942", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss();}}newbyte[1];reply[6];while(stop){try{client();getOutputStream(); try {(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try { while ((bytesRead) ) { if (delay0) { try { } catch (InterruptedException e) {} }write(request);} } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) ) { try { } catch (InterruptedException e) { printStackTrace(); }(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-20 12:38:12.538867", "n_pass": [2994, 174, 165], "score": "0.8595", "loss": "0.2861", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss();}}newbyte[1];reply[6];while(stop){try{client();getOutputStream(); try {(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{ while ((bytesRead) ) { if (delay0) { try { } catch (InterruptedException e) {} }write(request);} } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) ) { try { } catch (InterruptedException e) { printStackTrace(); }(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-20 12:38:13.972828", "n_pass": [2996, 175, 166], "score": "0.8423", "loss": "0.3113", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss();}}newbyte[1];reply[6];while(stop){try{client();getOutputStream(); try {(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while ((bytesRead) ) { if (delay0) { try { } catch (InterruptedException e) {} }write(request);} } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) ) { try { } catch (InterruptedException e) { printStackTrace(); }(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-20 12:38:15.402505", "n_pass": [2998, 176, 167], "score": "0.8078", "loss": "0.3931", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss();}}newbyte[1];reply[6];while(stop){try{client();getOutputStream(); try {(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead) ) { if (delay0) { try { } catch (InterruptedException e) {} }write(request);} } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) ) { try { } catch (InterruptedException e) { printStackTrace(); }(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-20 12:38:16.830807", "n_pass": [3003, 177, 168], "score": "0.8726", "loss": "0.257", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss();}}newbyte[1];reply[6];while(stop){try{client();getOutputStream(); try {(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)) { if (delay0) { try { } catch (InterruptedException e) {} }write(request);} } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) ) { try { } catch (InterruptedException e) { printStackTrace(); }(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-20 12:38:18.285258", "n_pass": [3005, 178, 169], "score": "0.9024", "loss": "0.1898", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss();}}newbyte[1];reply[6];while(stop){try{client();getOutputStream(); try {(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){ if (delay0) { try { } catch (InterruptedException e) {} }write(request);} } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) ) { try { } catch (InterruptedException e) { printStackTrace(); }(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-20 12:38:19.726952", "n_pass": [3007, 179, 170], "score": "0.8107", "loss": "0.3965", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss();}}newbyte[1];reply[6];while(stop){try{client();getOutputStream(); try {(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if (delay0) { try { } catch (InterruptedException e) {} }write(request);} } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) ) { try { } catch (InterruptedException e) { printStackTrace(); }(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-20 12:38:21.176206", "n_pass": [3009, 180, 171], "score": "0.8995", "loss": "0.2032", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss();}}newbyte[1];reply[6];while(stop){try{client();getOutputStream(); try {(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(delay0) { try { } catch (InterruptedException e) {} }write(request);} } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) ) { try { } catch (InterruptedException e) { printStackTrace(); }(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-20 12:38:22.606793", "n_pass": [3011, 181, 172], "score": "0.8818", "loss": "0.2236", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss();}}newbyte[1];reply[6];while(stop){try{client();getOutputStream(); try {(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0) { try { } catch (InterruptedException e) {} }write(request);} } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) ) { try { } catch (InterruptedException e) { printStackTrace(); }(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-20 12:38:24.040857", "n_pass": [3014, 182, 173], "score": "0.922", "loss": "0.1508", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss();}}newbyte[1];reply[6];while(stop){try{client();getOutputStream(); try {(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){ try { } catch (InterruptedException e) {} }write(request);} } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) ) { try { } catch (InterruptedException e) { printStackTrace(); }(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-20 12:38:25.479182", "n_pass": [3016, 183, 174], "score": "0.9149", "loss": "0.1667", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss();}}newbyte[1];reply[6];while(stop){try{client();getOutputStream(); try {(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try { } catch (InterruptedException e) {} }write(request);} } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) ) { try { } catch (InterruptedException e) { printStackTrace(); }(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-20 12:38:26.915082", "n_pass": [3018, 184, 175], "score": "0.933", "loss": "0.13", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss();}}newbyte[1];reply[6];while(stop){try{client();getOutputStream(); try {(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{ } catch (InterruptedException e) {} }write(request);} } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) ) { try { } catch (InterruptedException e) { printStackTrace(); }(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-20 12:38:28.343519", "n_pass": [3020, 185, 176], "score": "0.9129", "loss": "0.174", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss();}}newbyte[1];reply[6];while(stop){try{client();getOutputStream(); try {(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{} catch (InterruptedException e) {} }write(request);} } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) ) { try { } catch (InterruptedException e) { printStackTrace(); }(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-20 12:38:29.772582", "n_pass": [3022, 186, 177], "score": "0.8561", "loss": "0.2897", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss();}}newbyte[1];reply[6];while(stop){try{client();getOutputStream(); try {(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch (InterruptedException e) {} }write(request);} } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) ) { try { } catch (InterruptedException e) { printStackTrace(); }(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-20 12:38:31.204584", "n_pass": [3024, 187, 178], "score": "0.9098", "loss": "0.1827", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss();}}newbyte[1];reply[6];while(stop){try{client();getOutputStream(); try {(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e) {} }write(request);} } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) ) { try { } catch (InterruptedException e) { printStackTrace(); }(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-20 12:38:32.654952", "n_pass": [3030, 188, 179], "score": "0.8258", "loss": "0.3467", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss();}}newbyte[1];reply[6];while(stop){try{client();getOutputStream(); try {(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){} }write(request);} } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) ) { try { } catch (InterruptedException e) { printStackTrace(); }(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-20 12:38:34.084149", "n_pass": [3033, 189, 180], "score": "0.9219", "loss": "0.1527", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss();}}newbyte[1];reply[6];while(stop){try{client();getOutputStream(); try {(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}write(request);} } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) ) { try { } catch (InterruptedException e) { printStackTrace(); }(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-20 12:38:35.544566", "n_pass": [3035, 190, 181], "score": "0.8448", "loss": "0.3149", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss();}}newbyte[1];reply[6];while(stop){try{client();getOutputStream(); try {(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);} } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) ) { try { } catch (InterruptedException e) { printStackTrace(); }(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-20 12:38:37.022585", "n_pass": [3041, 191, 182], "score": "0.8283", "loss": "0.3524", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss();}}newbyte[1];reply[6];while(stop){try{client();getOutputStream(); try {(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}} catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) ) { try { } catch (InterruptedException e) { printStackTrace(); }(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-20 12:38:38.452186", "n_pass": [3043, 192, 183], "score": "0.8913", "loss": "0.2229", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss();}}newbyte[1];reply[6];while(stop){try{client();getOutputStream(); try {(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) ) { try { } catch (InterruptedException e) { printStackTrace(); }(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-20 12:38:39.881666", "n_pass": [3045, 193, 184], "score": "0.843", "loss": "0.3098", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss();}}newbyte[1];reply[6];while(stop){try{client();getOutputStream(); try {(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e) { } }).startbytesRead; try { while ((bytesRead) ) { try { } catch (InterruptedException e) { printStackTrace(); }(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-20 12:38:41.322860", "n_pass": [3051, 194, 185], "score": "0.7487", "loss": "0.5", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss();}}newbyte[1];reply[6];while(stop){try{client();getOutputStream(); try {(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){ } }).startbytesRead; try { while ((bytesRead) ) { try { } catch (InterruptedException e) { printStackTrace(); }(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-20 12:38:42.762122", "n_pass": [3053, 195, 186], "score": "0.9071", "loss": "0.1855", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss();}}newbyte[1];reply[6];while(stop){try{client();getOutputStream(); try {(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){} }).startbytesRead; try { while ((bytesRead) ) { try { } catch (InterruptedException e) { printStackTrace(); }(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-20 12:38:44.215186", "n_pass": [3055, 196, 187], "score": "0.903", "loss": "0.1928", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss();}}newbyte[1];reply[6];while(stop){try{client();getOutputStream(); try {(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).startbytesRead; try { while ((bytesRead) ) { try { } catch (InterruptedException e) { printStackTrace(); }(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-20 12:38:45.664953", "n_pass": [3059, 197, 188], "score": "0.8468", "loss": "0.2999", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss();}}newbyte[1];reply[6];while(stop){try{client();getOutputStream(); try {(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead; try { while ((bytesRead) ) { try { } catch (InterruptedException e) { printStackTrace(); }(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-20 12:38:47.092954", "n_pass": [3062, 198, 189], "score": "0.7918", "loss": "0.4036", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss();}}newbyte[1];reply[6];while(stop){try{client();getOutputStream(); try {(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try { while ((bytesRead) ) { try { } catch (InterruptedException e) { printStackTrace(); }(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-20 12:38:48.524336", "n_pass": [3064, 199, 190], "score": "0.8201", "loss": "0.3607", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss();}}newbyte[1];reply[6];while(stop){try{client();getOutputStream(); try {(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{ while ((bytesRead) ) { try { } catch (InterruptedException e) { printStackTrace(); }(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-20 12:38:49.970538", "n_pass": [3066, 200, 191], "score": "0.8505", "loss": "0.2927", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss();}}newbyte[1];reply[6];while(stop){try{client();getOutputStream(); try {(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while ((bytesRead) ) { try { } catch (InterruptedException e) { printStackTrace(); }(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-20 12:38:51.403376", "n_pass": [3068, 201, 192], "score": "0.8695", "loss": "0.2604", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss();}}newbyte[1];reply[6];while(stop){try{client();getOutputStream(); try {(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead) ) { try { } catch (InterruptedException e) { printStackTrace(); }(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-20 12:38:52.843106", "n_pass": [3073, 202, 193], "score": "0.9425", "loss": "0.1089", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss();}}newbyte[1];reply[6];while(stop){try{client();getOutputStream(); try {(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead)) { try { } catch (InterruptedException e) { printStackTrace(); }(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-20 12:38:54.283234", "n_pass": [3075, 203, 194], "score": "0.9052", "loss": "0.1802", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss();}}newbyte[1];reply[6];while(stop){try{client();getOutputStream(); try {(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead)){ try { } catch (InterruptedException e) { printStackTrace(); }(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-20 12:38:55.709749", "n_pass": [3077, 204, 195], "score": "0.8574", "loss": "0.2863", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss();}}newbyte[1];reply[6];while(stop){try{client();getOutputStream(); try {(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead)){try { } catch (InterruptedException e) { printStackTrace(); }(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-20 12:38:57.138557", "n_pass": [3079, 205, 196], "score": "0.881", "loss": "0.2328", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss();}}newbyte[1];reply[6];while(stop){try{client();getOutputStream(); try {(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead)){try{ } catch (InterruptedException e) { printStackTrace(); }(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-20 12:38:58.568228", "n_pass": [3081, 206, 197], "score": "0.8655", "loss": "0.2564", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss();}}newbyte[1];reply[6];while(stop){try{client();getOutputStream(); try {(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead)){try{} catch (InterruptedException e) { printStackTrace(); }(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-20 12:39:00.009827", "n_pass": [3083, 207, 198], "score": "0.8594", "loss": "0.2845", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss();}}newbyte[1];reply[6];while(stop){try{client();getOutputStream(); try {(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead)){try{}catch (InterruptedException e) { printStackTrace(); }(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-20 12:39:01.440392", "n_pass": [3085, 208, 199], "score": "0.8834", "loss": "0.224", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss();}}newbyte[1];reply[6];while(stop){try{client();getOutputStream(); try {(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead)){try{}catch(InterruptedException e) { printStackTrace(); }(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-20 12:39:02.907895", "n_pass": [3091, 209, 200], "score": "0.8517", "loss": "0.2857", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss();}}newbyte[1];reply[6];while(stop){try{client();getOutputStream(); try {(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead)){try{}catch(InterruptedException e){ printStackTrace(); }(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-20 12:39:04.335504", "n_pass": [3093, 210, 201], "score": "0.8796", "loss": "0.2402", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss();}}newbyte[1];reply[6];while(stop){try{client();getOutputStream(); try {(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead)){try{}catch(InterruptedException e){printStackTrace(); }(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-20 12:39:05.768593", "n_pass": [3098, 211, 202], "score": "0.8726", "loss": "0.254", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss();}}newbyte[1];reply[6];while(stop){try{client();getOutputStream(); try {(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead)){try{}catch(InterruptedException e){printStackTrace();}(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-20 12:39:07.246775", "n_pass": [3105, 212, 203], "score": "0.8719", "loss": "0.2592", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss();}}newbyte[1];reply[6];while(stop){try{client();getOutputStream(); try {(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead)){try{}catch(InterruptedException e){printStackTrace();}(bytesRead);}} catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-20 12:39:08.674085", "n_pass": [3107, 213, 204], "score": "0.8779", "loss": "0.2401", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss();}}newbyte[1];reply[6];while(stop){try{client();getOutputStream(); try {(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead)){try{}catch(InterruptedException e){printStackTrace();}(bytesRead);}}catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-20 12:39:10.107397", "n_pass": [3109, 214, 205], "score": "0.809", "loss": "0.3783", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss();}}newbyte[1];reply[6];while(stop){try{client();getOutputStream(); try {(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead)){try{}catch(InterruptedException e){printStackTrace();}(bytesRead);}}catch(IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-20 12:39:11.571053", "n_pass": [3115, 215, 206], "score": "0.8349", "loss": "0.3237", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss();}}newbyte[1];reply[6];while(stop){try{client();getOutputStream(); try {(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead)){try{}catch(InterruptedException e){printStackTrace();}(bytesRead);}}catch(IOException e){ }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-20 12:39:13.002079", "n_pass": [3117, 216, 207], "score": "0.8745", "loss": "0.2486", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss();}}newbyte[1];reply[6];while(stop){try{client();getOutputStream(); try {(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead)){try{}catch(InterruptedException e){printStackTrace();}(bytesRead);}}catch(IOException e){}  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-20 12:39:14.431166", "n_pass": [3119, 217, 208], "score": "0.8333", "loss": "0.3294", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss();}}newbyte[1];reply[6];while(stop){try{client();getOutputStream(); try {(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead)){try{}catch(InterruptedException e){printStackTrace();}(bytesRead);}}catch(IOException e){} } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-20 12:39:15.868991", "n_pass": [3120, 218, 209], "score": "0.8542", "loss": "0.2874", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss();}}newbyte[1];reply[6];while(stop){try{client();getOutputStream(); try {(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead)){try{}catch(InterruptedException e){printStackTrace();}(bytesRead);}}catch(IOException e){}} catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-20 12:39:17.296256", "n_pass": [3122, 219, 210], "score": "0.9263", "loss": "0.1406", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss();}}newbyte[1];reply[6];while(stop){try{client();getOutputStream(); try {(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead)){try{}catch(InterruptedException e){printStackTrace();}(bytesRead);}}catch(IOException e){}}catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-20 12:39:18.728395", "n_pass": [3124, 220, 211], "score": "0.8777", "loss": "0.2398", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss();}}newbyte[1];reply[6];while(stop){try{client();getOutputStream(); try {(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead)){try{}catch(InterruptedException e){printStackTrace();}(bytesRead);}}catch(IOException e){}}catch(IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-20 12:39:20.171998", "n_pass": [3130, 221, 212], "score": "0.8369", "loss": "0.3207", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss();}}newbyte[1];reply[6];while(stop){try{client();getOutputStream(); try {(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead)){try{}catch(InterruptedException e){printStackTrace();}(bytesRead);}}catch(IOException e){}}catch(IOException e){ try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-20 12:39:21.600324", "n_pass": [3132, 222, 213], "score": "0.9273", "loss": "0.1424", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss();}}newbyte[1];reply[6];while(stop){try{client();getOutputStream(); try {(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead)){try{}catch(InterruptedException e){printStackTrace();}(bytesRead);}}catch(IOException e){}}catch(IOException e){try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-20 12:39:23.031997", "n_pass": [3134, 223, 214], "score": "0.8539", "loss": "0.2981", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss();}}newbyte[1];reply[6];while(stop){try{client();getOutputStream(); try {(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead)){try{}catch(InterruptedException e){printStackTrace();}(bytesRead);}}catch(IOException e){}}catch(IOException e){try{ if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-20 12:39:24.468034", "n_pass": [3136, 224, 215], "score": "0.8589", "loss": "0.2664", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss();}}newbyte[1];reply[6];while(stop){try{client();getOutputStream(); try {(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead)){try{}catch(InterruptedException e){printStackTrace();}(bytesRead);}}catch(IOException e){}}catch(IOException e){try{if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-20 12:39:25.896461", "n_pass": [3138, 225, 216], "score": "0.8729", "loss": "0.2469", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss();}}newbyte[1];reply[6];while(stop){try{client();getOutputStream(); try {(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead)){try{}catch(InterruptedException e){printStackTrace();}(bytesRead);}}catch(IOException e){}}catch(IOException e){try{if(server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-20 12:39:27.328613", "n_pass": [3141, 226, 217], "score": "0.8749", "loss": "0.244", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss();}}newbyte[1];reply[6];while(stop){try{client();getOutputStream(); try {(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead)){try{}catch(InterruptedException e){printStackTrace();}(bytesRead);}}catch(IOException e){}}catch(IOException e){try{if(server!= null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-20 12:39:28.773982", "n_pass": [3142, 227, 218], "score": "0.8269", "loss": "0.3466", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss();}}newbyte[1];reply[6];while(stop){try{client();getOutputStream(); try {(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead)){try{}catch(InterruptedException e){printStackTrace();}(bytesRead);}}catch(IOException e){}}catch(IOException e){try{if(server= null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-20 12:39:30.230147", "n_pass": [3144, 228, 219], "score": "0.8344", "loss": "0.3303", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss();}}newbyte[1];reply[6];while(stop){try{client();getOutputStream(); try {(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead)){try{}catch(InterruptedException e){printStackTrace();}(bytesRead);}}catch(IOException e){}}catch(IOException e){try{if(server=null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-20 12:39:31.664881", "n_pass": [3147, 229, 220], "score": "0.7886", "loss": "0.4118", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss();}}newbyte[1];reply[6];while(stop){try{client();getOutputStream(); try {(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead)){try{}catch(InterruptedException e){printStackTrace();}(bytesRead);}}catch(IOException e){}}catch(IOException e){try{if(server=null){ close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-20 12:39:33.094649", "n_pass": [3149, 230, 221], "score": "0.9169", "loss": "0.1627", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss();}}newbyte[1];reply[6];while(stop){try{client();getOutputStream(); try {(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead)){try{}catch(InterruptedException e){printStackTrace();}(bytesRead);}}catch(IOException e){}}catch(IOException e){try{if(server=null){close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-20 12:39:34.533140", "n_pass": [3154, 231, 222], "score": "0.9034", "loss": "0.1817", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss();}}newbyte[1];reply[6];while(stop){try{client();getOutputStream(); try {(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead)){try{}catch(InterruptedException e){printStackTrace();}(bytesRead);}}catch(IOException e){}}catch(IOException e){try{if(server=null){close();} if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-20 12:39:35.992083", "n_pass": [3156, 232, 223], "score": "0.8189", "loss": "0.3668", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss();}}newbyte[1];reply[6];while(stop){try{client();getOutputStream(); try {(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead)){try{}catch(InterruptedException e){printStackTrace();}(bytesRead);}}catch(IOException e){}}catch(IOException e){try{if(server=null){close();}if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-20 12:39:37.423908", "n_pass": [3158, 233, 224], "score": "0.8455", "loss": "0.3051", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss();}}newbyte[1];reply[6];while(stop){try{client();getOutputStream(); try {(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead)){try{}catch(InterruptedException e){printStackTrace();}(bytesRead);}}catch(IOException e){}}catch(IOException e){try{if(server=null){close();}if(client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-20 12:39:38.886805", "n_pass": [3161, 234, 225], "score": "0.9011", "loss": "0.1953", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss();}}newbyte[1];reply[6];while(stop){try{client();getOutputStream(); try {(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead)){try{}catch(InterruptedException e){printStackTrace();}(bytesRead);}}catch(IOException e){}}catch(IOException e){try{if(server=null){close();}if(client!= null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-20 12:39:40.307620", "n_pass": [3162, 235, 226], "score": "0.8009", "loss": "0.3967", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss();}}newbyte[1];reply[6];while(stop){try{client();getOutputStream(); try {(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead)){try{}catch(InterruptedException e){printStackTrace();}(bytesRead);}}catch(IOException e){}}catch(IOException e){try{if(server=null){close();}if(client= null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-20 12:39:41.732571", "n_pass": [3164, 236, 227], "score": "0.8606", "loss": "0.2677", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss();}}newbyte[1];reply[6];while(stop){try{client();getOutputStream(); try {(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead)){try{}catch(InterruptedException e){printStackTrace();}(bytesRead);}}catch(IOException e){}}catch(IOException e){try{if(server=null){close();}if(client=null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-20 12:39:43.183034", "n_pass": [3167, 237, 228], "score": "0.8591", "loss": "0.2633", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss();}}newbyte[1];reply[6];while(stop){try{client();getOutputStream(); try {(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead)){try{}catch(InterruptedException e){printStackTrace();}(bytesRead);}}catch(IOException e){}}catch(IOException e){try{if(server=null){close();}if(client=null){ } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-20 12:39:44.608421", "n_pass": [3169, 238, 229], "score": "0.8431", "loss": "0.3043", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss();}}newbyte[1];reply[6];while(stop){try{client();getOutputStream(); try {(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead)){try{}catch(InterruptedException e){printStackTrace();}(bytesRead);}}catch(IOException e){}}catch(IOException e){try{if(server=null){close();}if(client=null){} } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-20 12:39:46.035008", "n_pass": [3171, 239, 230], "score": "0.8308", "loss": "0.3181", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss();}}newbyte[1];reply[6];while(stop){try{client();getOutputStream(); try {(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead)){try{}catch(InterruptedException e){printStackTrace();}(bytesRead);}}catch(IOException e){}}catch(IOException e){try{if(server=null){close();}if(client=null){}} catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-20 12:39:47.470761", "n_pass": [3173, 240, 231], "score": "0.8624", "loss": "0.27", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss();}}newbyte[1];reply[6];while(stop){try{client();getOutputStream(); try {(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead)){try{}catch(InterruptedException e){printStackTrace();}(bytesRead);}}catch(IOException e){}}catch(IOException e){try{if(server=null){close();}if(client=null){}}catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-20 12:39:48.925321", "n_pass": [3175, 241, 232], "score": "0.7981", "loss": "0.395", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss();}}newbyte[1];reply[6];while(stop){try{client();getOutputStream(); try {(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead)){try{}catch(InterruptedException e){printStackTrace();}(bytesRead);}}catch(IOException e){}}catch(IOException e){try{if(server=null){close();}if(client=null){}}catch(IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-20 12:39:50.382549", "n_pass": [3181, 242, 233], "score": "0.8768", "loss": "0.2397", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss();}}newbyte[1];reply[6];while(stop){try{client();getOutputStream(); try {(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead)){try{}catch(InterruptedException e){printStackTrace();}(bytesRead);}}catch(IOException e){}}catch(IOException e){try{if(server=null){close();}if(client=null){}}catch(IOException e){ } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-20 12:39:51.809326", "n_pass": [3183, 243, 234], "score": "0.8238", "loss": "0.3415", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss();}}newbyte[1];reply[6];while(stop){try{client();getOutputStream(); try {(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead)){try{}catch(InterruptedException e){printStackTrace();}(bytesRead);}}catch(IOException e){}}catch(IOException e){try{if(server=null){close();}if(client=null){}}catch(IOException e){} } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-20 12:39:53.279303", "n_pass": [3185, 244, 235], "score": "0.8708", "loss": "0.2529", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss();}}newbyte[1];reply[6];while(stop){try{client();getOutputStream(); try {(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead)){try{}catch(InterruptedException e){printStackTrace();}(bytesRead);}}catch(IOException e){}}catch(IOException e){try{if(server=null){close();}if(client=null){}}catch(IOException e){}} } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-20 12:39:54.704929", "n_pass": [3187, 245, 236], "score": "0.7564", "loss": "0.4966", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss();}}newbyte[1];reply[6];while(stop){try{client();getOutputStream(); try {(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead)){try{}catch(InterruptedException e){printStackTrace();}(bytesRead);}}catch(IOException e){}}catch(IOException e){try{if(server=null){close();}if(client=null){}}catch(IOException e){}}} } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-20 12:39:56.131209", "n_pass": [3189, 246, 237], "score": "0.8616", "loss": "0.264", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss();}}newbyte[1];reply[6];while(stop){try{client();getOutputStream(); try {(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead)){try{}catch(InterruptedException e){printStackTrace();}(bytesRead);}}catch(IOException e){}}catch(IOException e){try{if(server=null){close();}if(client=null){}}catch(IOException e){}}}} catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-20 12:39:57.556507", "n_pass": [3191, 247, 238], "score": "0.8776", "loss": "0.2392", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss();}}newbyte[1];reply[6];while(stop){try{client();getOutputStream(); try {(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead)){try{}catch(InterruptedException e){printStackTrace();}(bytesRead);}}catch(IOException e){}}catch(IOException e){try{if(server=null){close();}if(client=null){}}catch(IOException e){}}}}catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-20 12:39:58.990871", "n_pass": [3193, 248, 239], "score": "0.8543", "loss": "0.2784", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss();}}newbyte[1];reply[6];while(stop){try{client();getOutputStream(); try {(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead)){try{}catch(InterruptedException e){printStackTrace();}(bytesRead);}}catch(IOException e){}}catch(IOException e){try{if(server=null){close();}if(client=null){}}catch(IOException e){}}}}catch(IOException e) { printStackTrace(); } }"}
{"time": "2021-01-20 12:40:00.467265", "n_pass": [3199, 249, 240], "score": "0.7991", "loss": "0.4155", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss();}}newbyte[1];reply[6];while(stop){try{client();getOutputStream(); try {(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead)){try{}catch(InterruptedException e){printStackTrace();}(bytesRead);}}catch(IOException e){}}catch(IOException e){try{if(server=null){close();}if(client=null){}}catch(IOException e){}}}}catch(IOException e){ printStackTrace(); } }"}
{"time": "2021-01-20 12:40:01.931054", "n_pass": [3201, 250, 241], "score": "0.8005", "loss": "0.3924", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss();}}newbyte[1];reply[6];while(stop){try{client();getOutputStream(); try {(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead)){try{}catch(InterruptedException e){printStackTrace();}(bytesRead);}}catch(IOException e){}}catch(IOException e){try{if(server=null){close();}if(client=null){}}catch(IOException e){}}}}catch(IOException e){printStackTrace(); } }"}
{"time": "2021-01-20 12:40:03.366894", "n_pass": [3206, 251, 242], "score": "0.8758", "loss": "0.2457", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss();}}newbyte[1];reply[6];while(stop){try{client();getOutputStream(); try {(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead)){try{}catch(InterruptedException e){printStackTrace();}(bytesRead);}}catch(IOException e){}}catch(IOException e){try{if(server=null){close();}if(client=null){}}catch(IOException e){}}}}catch(IOException e){printStackTrace();} }"}
{"time": "2021-01-20 12:40:04.796175", "n_pass": [3208, 252, 243], "score": "0.8491", "loss": "0.2911", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss();}}newbyte[1];reply[6];while(stop){try{client();getOutputStream(); try {(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead)){try{}catch(InterruptedException e){printStackTrace();}(bytesRead);}}catch(IOException e){}}catch(IOException e){try{if(server=null){close();}if(client=null){}}catch(IOException e){}}}}catch(IOException e){printStackTrace();}}"}
{"time": "2021-01-20 12:40:07.188950", "n_pass": [3295, 253, 244], "score": "0.8584", "loss": "0.2791", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss();}}newbyte[1];reply[6];while(stop){try{client();getOutputStream();try {(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead)){try{}catch(InterruptedException e){printStackTrace();}(bytesRead);}}catch(IOException e){}}catch(IOException e){try{if(server=null){close();}if(client=null){}}catch(IOException e){}}}}catch(IOException e){printStackTrace();}}"}
{"time": "2021-01-20 12:40:08.615338", "n_pass": [3297, 254, 245], "score": "0.8678", "loss": "0.2582", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss();}}newbyte[1];reply[6];while(stop){try{client();getOutputStream();try{(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead)){try{}catch(InterruptedException e){printStackTrace();}(bytesRead);}}catch(IOException e){}}catch(IOException e){try{if(server=null){close();}if(client=null){}}catch(IOException e){}}}}catch(IOException e){printStackTrace();}}"}
{"time": "2021-01-20 12:40:10.044214", "n_pass": [3300, 255, 246], "score": "0.831", "loss": "0.3168", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss();}}newbyte[1];reply[6];while(stop){try{client();getOutputStream();try{(remoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead)){try{}catch(InterruptedException e){printStackTrace();}(bytesRead);}}catch(IOException e){}}catch(IOException e){try{if(server=null){close();}if(client=null){}}catch(IOException e){}}}}catch(IOException e){printStackTrace();}}"}
{"time": "2021-01-20 12:40:11.501863", "n_pass": [3304, 256, 247], "score": "0.8654", "loss": "0.2678", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss();}}newbyte[1];reply[6];while(stop){try{client();getOutputStream();try{(remoteport);} catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead)){try{}catch(InterruptedException e){printStackTrace();}(bytesRead);}}catch(IOException e){}}catch(IOException e){try{if(server=null){close();}if(client=null){}}catch(IOException e){}}}}catch(IOException e){printStackTrace();}}"}
{"time": "2021-01-20 12:40:12.925187", "n_pass": [3306, 257, 248], "score": "0.7399", "loss": "0.5209", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss();}}newbyte[1];reply[6];while(stop){try{client();getOutputStream();try{(remoteport);}catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead)){try{}catch(InterruptedException e){printStackTrace();}(bytesRead);}}catch(IOException e){}}catch(IOException e){try{if(server=null){close();}if(client=null){}}catch(IOException e){}}}}catch(IOException e){printStackTrace();}}"}
{"time": "2021-01-20 12:40:14.357760", "n_pass": [3308, 258, 249], "score": "0.8509", "loss": "0.298", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss();}}newbyte[1];reply[6];while(stop){try{client();getOutputStream();try{(remoteport);}catch(IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead)){try{}catch(InterruptedException e){printStackTrace();}(bytesRead);}}catch(IOException e){}}catch(IOException e){try{if(server=null){close();}if(client=null){}}catch(IOException e){}}}}catch(IOException e){printStackTrace();}}"}
{"time": "2021-01-20 12:40:15.791512", "n_pass": [3314, 259, 250], "score": "0.7764", "loss": "0.4247", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss();}}newbyte[1];reply[6];while(stop){try{client();getOutputStream();try{(remoteport);}catch(IOException e){ (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead)){try{}catch(InterruptedException e){printStackTrace();}(bytesRead);}}catch(IOException e){}}catch(IOException e){try{if(server=null){close();}if(client=null){}}catch(IOException e){}}}}catch(IOException e){printStackTrace();}}"}
{"time": "2021-01-20 12:40:17.241784", "n_pass": [3316, 260, 251], "score": "0.7796", "loss": "0.4418", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss();}}newbyte[1];reply[6];while(stop){try{client();getOutputStream();try{(remoteport);}catch(IOException e){(\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead)){try{}catch(InterruptedException e){printStackTrace();}(bytesRead);}}catch(IOException e){}}catch(IOException e){try{if(server=null){close();}if(client=null){}}catch(IOException e){}}}}catch(IOException e){printStackTrace();}}"}
{"time": "2021-01-20 12:40:18.688308", "n_pass": [3319, 261, 252], "score": "0.7877", "loss": "0.4201", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss();}}newbyte[1];reply[6];while(stop){try{client();getOutputStream();try{(remoteport);}catch(IOException e){(\"\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead)){try{}catch(InterruptedException e){printStackTrace();}(bytesRead);}}catch(IOException e){}}catch(IOException e){try{if(server=null){close();}if(client=null){}}catch(IOException e){}}}}catch(IOException e){printStackTrace();}}"}
{"time": "2021-01-20 12:40:20.155028", "n_pass": [3321, 262, 253], "score": "0.8253", "loss": "0.3462", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss();}}newbyte[1];reply[6];while(stop){try{client();getOutputStream();try{(remoteport);}catch(IOException e){(\"\"+\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead)){try{}catch(InterruptedException e){printStackTrace();}(bytesRead);}}catch(IOException e){}}catch(IOException e){try{if(server=null){close();}if(client=null){}}catch(IOException e){}}}}catch(IOException e){printStackTrace();}}"}
{"time": "2021-01-20 12:40:21.594553", "n_pass": [3324, 263, 254], "score": "0.8717", "loss": "0.2466", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss();}}newbyte[1];reply[6];while(stop){try{client();getOutputStream();try{(remoteport);}catch(IOException e){(\"\"+\"\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead)){try{}catch(InterruptedException e){printStackTrace();}(bytesRead);}}catch(IOException e){}}catch(IOException e){try{if(server=null){close();}if(client=null){}}catch(IOException e){}}}}catch(IOException e){printStackTrace();}}"}
{"time": "2021-01-20 12:40:23.045245", "n_pass": [3326, 264, 255], "score": "0.7218", "loss": "0.5419", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss();}}newbyte[1];reply[6];while(stop){try{client();getOutputStream();try{(remoteport);}catch(IOException e){(\"\"+\"\"); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead)){try{}catch(InterruptedException e){printStackTrace();}(bytesRead);}}catch(IOException e){}}catch(IOException e){try{if(server=null){close();}if(client=null){}}catch(IOException e){}}}}catch(IOException e){printStackTrace();}}"}
{"time": "2021-01-20 12:40:24.477995", "n_pass": [3329, 265, 256], "score": "0.8762", "loss": "0.2377", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss();}}newbyte[1];reply[6];while(stop){try{client();getOutputStream();try{(remoteport);}catch(IOException e){(\"\"+\"\");}fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead)){try{}catch(InterruptedException e){printStackTrace();}(bytesRead);}}catch(IOException e){}}catch(IOException e){try{if(server=null){close();}if(client=null){}}catch(IOException e){}}}}catch(IOException e){printStackTrace();}}"}
{"time": "2021-01-20 12:40:25.905448", "n_pass": [3332, 266, 257], "score": "0.8207", "loss": "0.3543", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss();}}newbyte[1];reply[6];while(stop){try{client();getOutputStream();try{(remoteport);}catch(IOException e){(\"\"+\"\");}fromServer= getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead)){try{}catch(InterruptedException e){printStackTrace();}(bytesRead);}}catch(IOException e){}}catch(IOException e){try{if(server=null){close();}if(client=null){}}catch(IOException e){}}}}catch(IOException e){printStackTrace();}}"}
{"time": "2021-01-20 12:40:27.346676", "n_pass": [3334, 267, 258], "score": "0.8253", "loss": "0.3359", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss();}}newbyte[1];reply[6];while(stop){try{client();getOutputStream();try{(remoteport);}catch(IOException e){(\"\"+\"\");}fromServer=getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead)){try{}catch(InterruptedException e){printStackTrace();}(bytesRead);}}catch(IOException e){}}catch(IOException e){try{if(server=null){close();}if(client=null){}}catch(IOException e){}}}}catch(IOException e){printStackTrace();}}"}
{"time": "2021-01-20 12:40:28.791292", "n_pass": [3340, 268, 259], "score": "0.7385", "loss": "0.5355", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss();}}newbyte[1];reply[6];while(stop){try{client();getOutputStream();try{(remoteport);}catch(IOException e){(\"\"+\"\");}fromServer=getInputStream();toServer= Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead)){try{}catch(InterruptedException e){printStackTrace();}(bytesRead);}}catch(IOException e){}}catch(IOException e){try{if(server=null){close();}if(client=null){}}catch(IOException e){}}}}catch(IOException e){printStackTrace();}}"}
{"time": "2021-01-20 12:40:30.217081", "n_pass": [3342, 269, 260], "score": "0.8266", "loss": "0.3394", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss();}}newbyte[1];reply[6];while(stop){try{client();getOutputStream();try{(remoteport);}catch(IOException e){(\"\"+\"\");}fromServer=getInputStream();toServer=Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead)){try{}catch(InterruptedException e){printStackTrace();}(bytesRead);}}catch(IOException e){}}catch(IOException e){try{if(server=null){close();}if(client=null){}}catch(IOException e){}}}}catch(IOException e){printStackTrace();}}"}
{"time": "2021-01-20 12:40:31.637293", "n_pass": [3343, 270, 261], "score": "0.8445", "loss": "0.3088", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss();}}newbyte[1];reply[6];while(stop){try{client();getOutputStream();try{(remoteport);}catch(IOException e){(\"\"+\"\");}fromServer=getInputStream();toServer=(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead)){try{}catch(InterruptedException e){printStackTrace();}(bytesRead);}}catch(IOException e){}}catch(IOException e){try{if(server=null){close();}if(client=null){}}catch(IOException e){}}}}catch(IOException e){printStackTrace();}}"}
{"time": "2021-01-20 12:40:33.065669", "n_pass": [3347, 271, 262], "score": "0.8241", "loss": "0.3435", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss();}}newbyte[1];reply[6];while(stop){try{client();getOutputStream();try{(remoteport);}catch(IOException e){(\"\"+\"\");}fromServer=getInputStream();toServer=(()->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead)){try{}catch(InterruptedException e){printStackTrace();}(bytesRead);}}catch(IOException e){}}catch(IOException e){try{if(server=null){close();}if(client=null){}}catch(IOException e){}}}}catch(IOException e){printStackTrace();}}"}
{"time": "2021-01-20 12:40:34.790980", "n_pass": [3447, 272, 263], "score": "0.8566", "loss": "0.28", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss();}}newbyte[1];reply[6];while(stop){try{client();getOutputStream();try{(remoteport);}catch(IOException e){(\"\"+\"\");}fromServer=getInputStream();toServer=(()->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead)){try{}catch(InterruptedException e){printStackTrace();}(bytesRead);}}catch(IOException e){}}catch(IOException e){try{if(servernull){close();}if(client=null){}}catch(IOException e){}}}}catch(IOException e){printStackTrace();}}"}
{"time": "2021-01-20 12:40:36.241204", "n_pass": [3448, 273, 264], "score": "0.8687", "loss": "0.2528", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss();}}newbyte[1];reply[6];while(stop){try{client();getOutputStream();try{(remoteport);}catch(IOException e){(\"\"+\"\");}fromServer=getInputStream();toServer=(()->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead)){try{}catch(InterruptedException e){printStackTrace();}(bytesRead);}}catch(IOException e){}}catch(IOException e){try{if(server){close();}if(client=null){}}catch(IOException e){}}}}catch(IOException e){printStackTrace();}}"}
{"time": "2021-01-20 12:40:37.698633", "n_pass": [3459, 274, 265], "score": "0.8809", "loss": "0.2278", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss();}}newbyte[1];reply[6];while(stop){try{client();getOutputStream();try{(remoteport);}catch(IOException e){(\"\"+\"\");}fromServer=getInputStream();toServer=(()->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead)){try{}catch(InterruptedException e){printStackTrace();}(bytesRead);}}catch(IOException e){}}catch(IOException e){try{if(server){close();}if(clientnull){}}catch(IOException e){}}}}catch(IOException e){printStackTrace();}}"}
{"time": "2021-01-20 12:40:39.117359", "n_pass": [3460, 275, 266], "score": "0.833", "loss": "0.3253", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss();}}newbyte[1];reply[6];while(stop){try{client();getOutputStream();try{(remoteport);}catch(IOException e){(\"\"+\"\");}fromServer=getInputStream();toServer=(()->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead)){try{}catch(InterruptedException e){printStackTrace();}(bytesRead);}}catch(IOException e){}}catch(IOException e){try{if(server){close();}if(client){}}catch(IOException e){}}}}catch(IOException e){printStackTrace();}}"}
{"time": "2021-01-20 12:40:41.890531", "n_pass": [3598, 276, 267], "score": "0.9038", "loss": "0.1889", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss();}}newbyte[1];reply[6];while(stop){try{client();getOutputStream();try{(remoteport);}catch(IOException e){(\"\"+\"\");}fromServergetInputStream();toServer=(()->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead)){try{}catch(InterruptedException e){printStackTrace();}(bytesRead);}}catch(IOException e){}}catch(IOException e){try{if(server){close();}if(client){}}catch(IOException e){}}}}catch(IOException e){printStackTrace();}}"}
{"time": "2021-01-20 12:40:43.332601", "n_pass": [3599, 277, 268], "score": "0.8913", "loss": "0.2187", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss();}}newbyte[1];reply[6];while(stop){try{client();getOutputStream();try{(remoteport);}catch(IOException e){(\"\"+\"\");}fromServer();toServer=(()->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead)){try{}catch(InterruptedException e){printStackTrace();}(bytesRead);}}catch(IOException e){}}catch(IOException e){try{if(server){close();}if(client){}}catch(IOException e){}}}}catch(IOException e){printStackTrace();}}"}
{"time": "2021-01-20 12:40:44.769886", "n_pass": [3604, 278, 269], "score": "0.9081", "loss": "0.1821", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss();}}newbyte[1];reply[6];while(stop){try{client();getOutputStream();try{(remoteport);}catch(IOException e){(\"\"+\"\");}fromServer();toServer(()->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead)){try{}catch(InterruptedException e){printStackTrace();}(bytesRead);}}catch(IOException e){}}catch(IOException e){try{if(server){close();}if(client){}}catch(IOException e){}}}}catch(IOException e){printStackTrace();}}"}
{"time": "2021-01-20 12:40:47.624599", "n_pass": [3857, 279, 270], "score": "0.8949", "loss": "0.2078", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss();}}newbyte[1];reply[6];while(stop){try{client();getOutputStream();try{(remoteport);}catch(IOException e){(\"\"+\"\");}fromServer();(()->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead)){try{}catch(InterruptedException e){printStackTrace();}(bytesRead);}}catch(IOException e){}}catch(IOException e){try{if(server){close();}if(client){}}catch(IOException e){}}}}catch(IOException e){printStackTrace();}}"}

Minimal simplified code:
void run(){("");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss();}}newbyte[1];reply[6];while(stop){try{client();getOutputStream();try{(remoteport);}catch(IOException e){(""+"");}fromServer();(()->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead)){try{}catch(InterruptedException e){printStackTrace();}(bytesRead);}}catch(IOException e){}}catch(IOException e){try{if(server){close();}if(client){}}catch(IOException e){}}}}catch(IOException e){printStackTrace();}}

