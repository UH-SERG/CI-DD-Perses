
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/OpenRock__OpenAM/openam-core/src/main/java/com/sun/identity/monitoring/Agent_main.java
method_name = main
method_body = public static void main(String[] args) { final MBeanServer server; final ObjectName htmlObjName; final ObjectName snmpObjName; final ObjectName sunMibObjName; final ObjectName forgerockCtsMibObjName; final ObjectName forgerockPolicyMibObjName; final ObjectName forgerockSessionMibObjName; final ObjectName trapGeneratorObjName; int htmlPort = 8082; int snmpPort = 11161; if ((args.length != 0) && (args.length != 1)) { usage(); java.lang.System.exit(1); } else if (args.length == 1) { try { nbTraps = (new Integer(args[0])).intValue(); if (nbTraps < 0) { usage(); System.exit(1); } } catch (java.lang.NumberFormatException e) { usage(); System.exit(1); } } try { List<MBeanServer> servers = MBeanServerFactory.findMBeanServer(null); if ((servers != null) && !servers.isEmpty()) { server = servers.get(0); } else { server = MBeanServerFactory.createMBeanServer(); } String domain = server.getDefaultDomain(); htmlObjName = new ObjectName(domain + ":class=HtmlAdaptorServer,protocol=html,port=" + htmlPort); println("Adding HTML adaptor to MBean server with name \n " + htmlObjName); println("NOTE: HTML adaptor is bound on TCP port " + htmlPort); HtmlAdaptorServer htmlAdaptor = new HtmlAdaptorServer(htmlPort); server.registerMBean(htmlAdaptor, htmlObjName); htmlAdaptor.start(); snmpPort = 11161; snmpObjName = new ObjectName(domain + ":class=SnmpAdaptorServer,protocol=snmp,port=" + snmpPort); println("Adding SNMP adaptor to MBean server with name \n " + snmpObjName); println("NOTE: SNMP Adaptor is bound on UDP port " + snmpPort); snmpAdaptor = new SnmpAdaptorServer(snmpPort); server.registerMBean(snmpAdaptor, snmpObjName); snmpAdaptor.start(); print("NOTE: Sending a coldStart SNMP trap" + " to each destination defined in the ACL file..."); snmpAdaptor.setTrapPort(new Integer(snmpPort + 1)); snmpAdaptor.snmpV1Trap(0, 0, null); println("Done."); try { JMXServiceURL url = new JMXServiceURL("service:jmx:rmi:///jndi/rmi://localhost:9999/server"); JMXConnectorServer cs = JMXConnectorServerFactory.newJMXConnectorServer(url, null, server); cs.start(); } catch (Exception ex) { println("Error starting RMI : execute rmiregistry 9999; ex=" + ex); } sunMibObjName = new ObjectName("snmp:class=SUN_OPENSSO_SERVER_MIB"); println("Adding SUN_OPENSSO_SERVER_MIB-MIB to MBean server with name" + "\n " + sunMibObjName); SUN_OPENSSO_SERVER_MIB mib2 = new SUN_OPENSSO_SERVER_MIB(); server.registerMBean(mib2, sunMibObjName); forgerockCtsMibObjName = new ObjectName("snmp:class=FORGEROCK_OPENAM_CTS_MIB"); println("Adding FORGEROCK_OPENAM_CTS_MIB-MIB to MBean server with name" + "\n " + forgerockCtsMibObjName); forgerockPolicyMibObjName = new ObjectName("snmp:class=FORGEROCK_OPENAM_POLICY_MIB"); println("Adding FORGEROCK_OPENAM_POLICY_MIB-MIB to MBean server with name" + "\n " + forgerockPolicyMibObjName); forgerockSessionMibObjName = new ObjectName("snmp:class=FORGEROCK_OPENAM_SESSION_MIB"); println("Adding FORGEROCK_OPENAM_SESSION_MIB-MIB to MBean server with name" + "\n " + forgerockSessionMibObjName); FORGEROCK_OPENAM_CTS_MIB mib3 = new FORGEROCK_OPENAM_CTS_MIB(); server.registerMBean(mib3, forgerockCtsMibObjName); FORGEROCK_OPENAM_POLICY_MIB mib4 = new FORGEROCK_OPENAM_POLICY_MIB(); server.registerMBean(mib4, forgerockPolicyMibObjName); FORGEROCK_OPENAM_SESSION_MIB mib5 = new FORGEROCK_OPENAM_SESSION_MIB(); server.registerMBean(mib5, forgerockSessionMibObjName); mib2.setSnmpAdaptor(snmpAdaptor); int ifIndex = 1; trapGeneratorObjName = new ObjectName("trapGenerator" + ":class=LinkTrapGenerator,ifIndex=" + ifIndex); println("Adding LinkTrapGenerator to MBean server with name" + "\n " + trapGeneratorObjName); LinkTrapGenerator trapGenerator = new LinkTrapGenerator(nbTraps); server.registerMBean(trapGenerator, trapGeneratorObjName); println("\n>> Press <Enter> if you want to start sending traps."); println(" -or-"); println(">> Press <Ctrl-C> if you want to stop this agent."); System.in.read(); trapGenerator.start(); } catch (Exception e) { e.printStackTrace(); } }
predict, score, loss = main, 0.978366, 0.02669478

Trace of simplified code(s):
{"time": "2021-01-20 11:06:16.214374", "n_pass": [1, 1, 1], "score": "0.9959", "loss": "0.005", "code": "public static void main(String[] args) { final MBeanServer server; final ObjectName htmlObjName; final ObjectName snmpObjName; final ObjectName sunMibObjName; final ObjectName forgerockCtsMibObjName; final ObjectName forgerockPolicyMibObjName; final ObjectName forgerockSessionMibObjName; final ObjectName trapGeneratorObjName; int htmlPort = 8082; int snmpPort = 11161; if ((args.length != 0) && (args.length != 1)) { usage(); java.lang.System.exit(1); } else if (args.length == 1) { try { nbTraps = (new Integer(args[0])).intValue(); if (nbTraps < 0) { usage(); System.exit(1); } } catch (java.lang.NumberFormatException e) { usage(); System.exit(1); } } try { List<MBeanServer> servers = MBeanServerFactory.findMBeanServer(null); if ((servers != null) && !servers.isEmpty()) { server = servers.get(0); } else { server = MBeanServerFactory.createMBeanServer(); } String domain = server.getDefaultDomain(); htmlObjName = new ObjectName(domain + \":class=HtmlAdaptorServer,protocol=html,port=\" + htmlPort); println(\"Adding HTML adaptor to MBean server with name \\n \" + htmlObjName); println(\"NOTE: HTML adaptor is bound on TCP port \" + htmlPort); HtmlAdaptorServer htmlAdaptor = new HtmlAdaptorServer(htmlPort); server.registerMBean(htmlAdaptor, htmlObjName); htmlAdaptor.start(); snmpPort = 11161; snmpObjName = new ObjectName(domain + \":class=SnmpAdaptorServer,protocol=snmp,port=\" + snmpPort); println(\"Adding SNMP adaptor to MBean server with name \\n \" + snmpObjName); println(\"NOTE: SNMP Adaptor is bound on UDP port \" + snmpPort); snmpAdaptor = new SnmpAdaptorServer(snmpPort); server.registerMBean(snmpAdaptor, snmpObjName); snmpAdaptor.start(); print(\"NOTE: Sending a coldStart SNMP trap\" + \" to each destination defined in the ACL file...\"); snmpAdaptor.setTrapPort(new Integer(snmpPort + 1)); snmpAdaptor.snmpV1Trap(0, 0, null); println(\"Done.\"); try { JMXServiceURL url = new JMXServiceURL(\"service:jmx:rmi:///jndi/rmi://localhost:9999/server\"); JMXConnectorServer cs = JMXConnectorServerFactory.newJMXConnectorServer(url, null, server); cs.start(); } catch (Exception ex) { println(\"Error starting RMI : execute rmiregistry 9999; ex=\" + ex); } sunMibObjName = new ObjectName(\"snmp:class=SUN_OPENSSO_SERVER_MIB\"); println(\"Adding SUN_OPENSSO_SERVER_MIB-MIB to MBean server with name\" + \"\\n \" + sunMibObjName); SUN_OPENSSO_SERVER_MIB mib2 = new SUN_OPENSSO_SERVER_MIB(); server.registerMBean(mib2, sunMibObjName); forgerockCtsMibObjName = new ObjectName(\"snmp:class=FORGEROCK_OPENAM_CTS_MIB\"); println(\"Adding FORGEROCK_OPENAM_CTS_MIB-MIB to MBean server with name\" + \"\\n \" + forgerockCtsMibObjName); forgerockPolicyMibObjName = new ObjectName(\"snmp:class=FORGEROCK_OPENAM_POLICY_MIB\"); println(\"Adding FORGEROCK_OPENAM_POLICY_MIB-MIB to MBean server with name\" + \"\\n \" + forgerockPolicyMibObjName); forgerockSessionMibObjName = new ObjectName(\"snmp:class=FORGEROCK_OPENAM_SESSION_MIB\"); println(\"Adding FORGEROCK_OPENAM_SESSION_MIB-MIB to MBean server with name\" + \"\\n \" + forgerockSessionMibObjName); FORGEROCK_OPENAM_CTS_MIB mib3 = new FORGEROCK_OPENAM_CTS_MIB(); server.registerMBean(mib3, forgerockCtsMibObjName); FORGEROCK_OPENAM_POLICY_MIB mib4 = new FORGEROCK_OPENAM_POLICY_MIB(); server.registerMBean(mib4, forgerockPolicyMibObjName); FORGEROCK_OPENAM_SESSION_MIB mib5 = new FORGEROCK_OPENAM_SESSION_MIB(); server.registerMBean(mib5, forgerockSessionMibObjName); mib2.setSnmpAdaptor(snmpAdaptor); int ifIndex = 1; trapGeneratorObjName = new ObjectName(\"trapGenerator\" + \":class=LinkTrapGenerator,ifIndex=\" + ifIndex); println(\"Adding LinkTrapGenerator to MBean server with name\" + \"\\n \" + trapGeneratorObjName); LinkTrapGenerator trapGenerator = new LinkTrapGenerator(nbTraps); server.registerMBean(trapGenerator, trapGeneratorObjName); println(\"\\n>> Press <Enter> if you want to start sending traps.\"); println(\" -or-\"); println(\">> Press <Ctrl-C> if you want to stop this agent.\"); System.in.read(); trapGenerator.start(); } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 11:06:17.892303", "n_pass": [26, 2, 2], "score": "0.9813", "loss": "0.0229", "code": "public static void main(String[] args) { final MBeanServer server; final ObjectName htmlObjName; final ObjectName snmpObjName; final ObjectName sunMibObjName; final ObjectName forgerockCtsMibObjName; final ObjectName forgerockPolicyMibObjName; final ObjectName forgerockSessionMibObjName; final ObjectName trapGeneratorObjName; int htmlPort = 8082; int snmpPort = 11161; if ((args.length != 0) && (args.length != 1)) { usage(); java.lang.System.exit(1); } else if (args.length == 1) { try { nbTraps = (new Integer(args[0])).intValue(); if (nbTraps < 0) { usage(); System.exit(1); } } catch (java.lang.NumberFormatException e) { usage(); System.exit(1); } } try { List<MBeanServer> servers = MBeanServerFactory.findMBeanServer(null); if ((servers != null) && !servers.isEmpty()) { server = servers.get(0); } else { server = MBeanServerFactory.createMBeanServer(); } String domain = server.getDefaultDomain(); htmlObjName = new ObjectName(domain + \":class=HtmlAdaptorServer,protocol=html,port=\" + htmlPort); println(\"Adding HTML adaptor to MBean server with name \\n \" + htmlObjName); println(\"NOTE: HTML adaptor is bound on TCP port \" + htmlPort); HtmlAdaptorServer htmlAdaptor = new HtmlAdaptorServer(htmlPort); server.registerMBean(htmlAdaptor, htmlObjName); htmlAdaptor.start(); snmpPort = 11161; snmpObjName = new ObjectName(domain + \":class=SnmpAdaptorServer,protocol=snmp,port=\" + snmpPort); println(\"Adding SNMP adaptor to MBean server with name \\n \" + snmpObjName); println(\"NOTE: SNMP Adaptor is bound on UDP port \" + snmpPort); snmpAdaptor = new SnmpAdaptorServer(snmpPort); server.registerMBean(snmpAdaptor, snmpObjName); snmpAdaptor.start(); print(\"NOTE: Sending a coldStart SNMP trap\" + \" to each destination defined in the ACL file...\"); snmpAdaptor.setTrapPort(new Integer(snmpPort + 1)); snmpAdaptor.snmpV1Trap(0, 0, null); println(\"Done.\"); try { JMXServiceURL url = new JMXServiceURL(\"service:jmx:rmi:///jndi/rmi://localhost:9999/server\"); JMXConnectorServer cs = JMXConnectorServerFactory.newJMXConnectorServer(url, null, server); cs.start(); } catch (Exception ex) { println(\"Error starting RMI : execute rmiregistry 9999; ex=\" + ex); } sunMibObjName = new ObjectName(\"snmp:class=SUN_OPENSSO_SERVER_MIB\"); println(\"Adding SUN_OPENSSO_SERVER_MIB-MIB to MBean server with name\" + \"\\n \" + sunMibObjName); SUN_OPENSSO_SERVER_MIB mib2 = new SUN_OPENSSO_SERVER_MIB(); server.registerMBean(mib2, sunMibObjName); forgerockCtsMibObjName = new ObjectName(\"snmp:class=FORGEROCK_OPENAM_CTS_MIB\"); println(\"Adding FORGEROCK_OPENAM_CTS_MIB-MIB to MBean server with name\" + \"\\n \" + forgerockCtsMibObjName); forgerockPolicyMibObjName = new ObjectName(\"snmp:class=FORGEROCK_OPENAM_POLICY_MIB\"); println(\"Adding FORGEROCK_OPENAM_POLICY_MIB-MIB to MBean server with name\" + \"\\n \" + forgerockPolicyMibObjName); forgerockSessionMibObjName = new ObjectName(\"snmp:class=FORGEROCK_OPENAM_SESSION_MIB\"); println(\"Adding FORGEROCK_OPENAM_SESSION_MIB-MIB to\" + ifIndex); println(\"Adding LinkTrapGenerator to MBean server with name\" + \"\\n \" + trapGeneratorObjName); LinkTrapGenerator trapGenerator = new LinkTrapGenerator(nbTraps); server.registerMBean(trapGenerator, trapGeneratorObjName); println(\"\\n>> Press <Enter> if you want to start sending traps.\"); println(\" -or-\"); println(\">> Press <Ctrl-C> if you want to stop this agent.\"); System.in.read(); trapGenerator.start(); } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 11:06:19.460695", "n_pass": [48, 3, 3], "score": "0.9989", "loss": "0.0013", "code": "public static void main(String[] args) { final MBeanServer server; final ObjectName htmlObjName; final ObjectName snmpObjName; final ObjectName sunMibObjName; final ObjectName forgerockCtsMibObjName; final ObjectName forgerockPolicyMibObjName; final ObjectName forgerockSessionMibObjName; final ObjectName trapGeneratorObjName; int htmlPort = 8082; int snmpPort = 11161; if ((args.length != 0) && (args.length != 1)) { usage(); java.lang.System.exit(1); } else if (args.length == 1) { try { nbTraps = (new Integer(args[0])).intValue(); if (nbTraps < 0) { usage(); System.exit(1); } } catch (java.lang.NumberFormatException e) { usage(); System.exit(1); } } try { List<MBeanServer> servers = MBeanServerFactory.findMBeanServer(null); if ((servers != null) && !servers.isEmpty()) { server = servers.get(0); } else { server = MBeanServerFactory.createMBeanServer(); } String domain = server.getDefaultDomain(); htmlObjName = new ObjectName(domain + \":class=HtmlAdaptorServer,protocol=html,port=\" + htmlPort); println(\"Adding HTML adaptor to MBean server with name \\n \" + htmlObjName); println(\"NOTE: HTML adaptor is bound on TCP port \" + htmlPort); HtmlAdaptorServer htmlAdaptor = new HtmlAdaptorServer(htmlPort); server.registerMBean(htmlAdaptor, htmlObjName); htmlAdaptor.start(); snmpPort = 11161; snmpObjName = new ObjectName(domain + \":class=SnmpAdaptorServer,protocol=snmp,port=\" + snmpPort); println(\"Adding SNMP adaptor to MBean server with name \\n \" + snmpObjName); println(\"NOTE: SNMP Adaptor is bound on UDP port \" + snmpPort); snmpAdaptor = new SnmpAdaptorServer(snmpPort); server.registerMBean(snmpAdaptor, snmpObjName); snmpAdaptor.start(); print(\"NOTE: Sending a coldStart SNMP trap\" + \" to each destination defined in the ACL file...\"); snmpAdaptor.setTrapPort(new Integer(snmpPort + 1)); snmpAdaptor.snmpV1Trap(0, 0, null); println(\"Done.\"); try { JMXServiceURL url = new JMXServiceURL(\"service:jmx:rmi:///jndi/rmi://localhost:9999/server\"); JMXConnectorServer cs = JMXConnectorServerFactory.newJMXConnectorServer(url, null, server); cs.start(); } catch (Exception ex) { println(\"Error starting RMI : execute rmiregistry 9999; ex=\" + ex); } sunMibObjName = new ObjectName(\"snmp:class=SUN_OPENSSO_SERVER_MIB\"); println(\"Adding SUN_OPENSSO_SERVER_MIB-MIB to MBean server with name\" + \"\\n \" + sunMibObjName); SUN_OPENSSO_SERVER_MIB mib2 = new SUN_OPENSSO_SERVER_MIB(); server.registerMBean(mib2, sunMibObjName); forgerockCtsMibObjName = new ObjectName(\"snmp:class=FORGEROCK_OPENAM_CTS_MIB\"); println(\"Adding FORGEROCK_OPENAM_CTS_MIB-MIB to MBean server with name\" + \"\\n \" + forgerockCtsMibObjName); forgerockPolicyMibObjName = new ObjectName(\"snmp:class=FORGEROCK_OPENAM_POLICY_MIB\"); println(\"Adding FORGEROCK_OPENAM_POLICY_MIB-MIB to MBean server with name\" + \"\\n \" + forgerockPolicyMibObjName); forgerockSessionMibObjName = new ObjectName(\"snmp:class=FORGEROCK_OPENAM_SESSION_MIB\"); println(\"Adding FORGEROCK_OPENAM_SESSION_MIB-MIB tosending traps.\"); println(\" -or-\"); println(\">> Press <Ctrl-C> if you want to stop this agent.\"); System.in.read(); trapGenerator.start(); } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 11:06:21.010525", "n_pass": [53, 4, 4], "score": "0.9536", "loss": "0.0595", "code": "public static void main(String[] args) { final MBeanServer server; final ObjectName htmlObjName; final ObjectName snmpObjName; final ObjectName sunMibObjName; final ObjectName forgerockCtsMibObjName; final ObjectName forgerockPolicyMibObjName; final ObjectName forgerockSessionMibObjName; final ObjectName trapGeneratorObjName; int htmlPort = 8082; int snmpPort = 11161; if ((args.length != 0) && (args.length != 1)) { usage(); java.lang.System.exit(1); } else if (args.length == 1) { try { nbTraps = (new Integer(args[0])).intValue(); if (nbTraps < 0) { usage(); System.exit(1); } } catch (java.lang.NumberFormatException e) { usage(); System.exit(1); } } try { List<MBeanServer> servers = MBeanServerFactory.findMBeanServer(null); if ((servers != null) && !servers.isEmpty()) { server = servers.get(0); } else { server = MBeanServerFactory.createMBeanServer(); } String domain = server.getDefaultDomain(); htmlObjName = new ObjectName(domain + htmlPort); server.registerMBean(htmlAdaptor, htmlObjName); htmlAdaptor.start(); snmpPort = 11161; snmpObjName = new ObjectName(domain + \":class=SnmpAdaptorServer,protocol=snmp,port=\" + snmpPort); println(\"Adding SNMP adaptor to MBean server with name \\n \" + snmpObjName); println(\"NOTE: SNMP Adaptor is bound on UDP port \" + snmpPort); snmpAdaptor = new SnmpAdaptorServer(snmpPort); server.registerMBean(snmpAdaptor, snmpObjName); snmpAdaptor.start(); print(\"NOTE: Sending a coldStart SNMP trap\" + \" to each destination defined in the ACL file...\"); snmpAdaptor.setTrapPort(new Integer(snmpPort + 1)); snmpAdaptor.snmpV1Trap(0, 0, null); println(\"Done.\"); try { JMXServiceURL url = new JMXServiceURL(\"service:jmx:rmi:///jndi/rmi://localhost:9999/server\"); JMXConnectorServer cs = JMXConnectorServerFactory.newJMXConnectorServer(url, null, server); cs.start(); } catch (Exception ex) { println(\"Error starting RMI : execute rmiregistry 9999; ex=\" + ex); } sunMibObjName = new ObjectName(\"snmp:class=SUN_OPENSSO_SERVER_MIB\"); println(\"Adding SUN_OPENSSO_SERVER_MIB-MIB to MBean server with name\" + \"\\n \" + sunMibObjName); SUN_OPENSSO_SERVER_MIB mib2 = new SUN_OPENSSO_SERVER_MIB(); server.registerMBean(mib2, sunMibObjName); forgerockCtsMibObjName = new ObjectName(\"snmp:class=FORGEROCK_OPENAM_CTS_MIB\"); println(\"Adding FORGEROCK_OPENAM_CTS_MIB-MIB to MBean server with name\" + \"\\n \" + forgerockCtsMibObjName); forgerockPolicyMibObjName = new ObjectName(\"snmp:class=FORGEROCK_OPENAM_POLICY_MIB\"); println(\"Adding FORGEROCK_OPENAM_POLICY_MIB-MIB to MBean server with name\" + \"\\n \" + forgerockPolicyMibObjName); forgerockSessionMibObjName = new ObjectName(\"snmp:class=FORGEROCK_OPENAM_SESSION_MIB\"); println(\"Adding FORGEROCK_OPENAM_SESSION_MIB-MIB tosending traps.\"); println(\" -or-\"); println(\">> Press <Ctrl-C> if you want to stop this agent.\"); System.in.read(); trapGenerator.start(); } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 11:06:22.535756", "n_pass": [54, 5, 5], "score": "0.8869", "loss": "0.1629", "code": "public static void main(String[] args) { final MBeanServer server; final ObjectName htmlObjName; final ObjectName snmpObjName; final ObjectName sunMibObjName; final ObjectName forgerockCtsMibObjName; final ObjectName forgerockPolicyMibObjName; final ObjectName forgerockSessionMibObjName; final ObjectName trapGeneratorObjName; int htmlPort = 8082; int snmpPort = 11161; if ((args.length != 0) && (args.length != 1)) { usage(); java.lang.System.exit(1); } else if (args.length == 1) { try { nbTraps = (new Integer(args[0])).intValue(); if (nbTraps < 0) { usage(); System.exit(1); } } catch (java.lang.NumberFormatException e) { usage(); System.exit(1); } } try { List<MBeanServer> servers = MBeanServerFactory.findMBeanServer(null); if ((servers != null) && !servers.isEmpty()) { server = servers.get(0); } else { server = MBeanServerFactory.createMBeanServer(); } String domain = server.getDefaultDomain(); htmlObjName = new ObjectName(domain +  + snmpObjName); println(\"NOTE: SNMP Adaptor is bound on UDP port \" + snmpPort); snmpAdaptor = new SnmpAdaptorServer(snmpPort); server.registerMBean(snmpAdaptor, snmpObjName); snmpAdaptor.start(); print(\"NOTE: Sending a coldStart SNMP trap\" + \" to each destination defined in the ACL file...\"); snmpAdaptor.setTrapPort(new Integer(snmpPort + 1)); snmpAdaptor.snmpV1Trap(0, 0, null); println(\"Done.\"); try { JMXServiceURL url = new JMXServiceURL(\"service:jmx:rmi:///jndi/rmi://localhost:9999/server\"); JMXConnectorServer cs = JMXConnectorServerFactory.newJMXConnectorServer(url, null, server); cs.start(); } catch (Exception ex) { println(\"Error starting RMI : execute rmiregistry 9999; ex=\" + ex); } sunMibObjName = new ObjectName(\"snmp:class=SUN_OPENSSO_SERVER_MIB\"); println(\"Adding SUN_OPENSSO_SERVER_MIB-MIB to MBean server with name\" + \"\\n \" + sunMibObjName); SUN_OPENSSO_SERVER_MIB mib2 = new SUN_OPENSSO_SERVER_MIB(); server.registerMBean(mib2, sunMibObjName); forgerockCtsMibObjName = new ObjectName(\"snmp:class=FORGEROCK_OPENAM_CTS_MIB\"); println(\"Adding FORGEROCK_OPENAM_CTS_MIB-MIB to MBean server with name\" + \"\\n \" + forgerockCtsMibObjName); forgerockPolicyMibObjName = new ObjectName(\"snmp:class=FORGEROCK_OPENAM_POLICY_MIB\"); println(\"Adding FORGEROCK_OPENAM_POLICY_MIB-MIB to MBean server with name\" + \"\\n \" + forgerockPolicyMibObjName); forgerockSessionMibObjName = new ObjectName(\"snmp:class=FORGEROCK_OPENAM_SESSION_MIB\"); println(\"Adding FORGEROCK_OPENAM_SESSION_MIB-MIB tosending traps.\"); println(\" -or-\"); println(\">> Press <Ctrl-C> if you want to stop this agent.\"); System.in.read(); trapGenerator.start(); } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 11:06:24.056670", "n_pass": [58, 6, 6], "score": "0.9712", "loss": "0.04", "code": "public static void main(String[] args) { final MBeanServer server; final ObjectName htmlObjName; final ObjectName snmpObjName; final ObjectName sunMibObjName; final ObjectName forgerockCtsMibObjName; final ObjectName forgerockPolicyMibObjName; final ObjectName forgerockSessionMibObjName; final ObjectName trapGeneratorObjName; int htmlPort = 8082; int snmpPort = 11161; if ((args.length != 0) && (args.length != 1)) { usage(); java.lang.System.exit(1); } else if (args.length == 1) { try { nbTraps = (new Integer(args[0])).intValue(); if (nbTraps < 0) { usage(); System.exit(1); } } catch (java.lang.NumberFormatException e) { usage(); System.exit(1); } } try { List<MBeanServer> servers = MBeanServerFactory.findMBeanServer(null); if ((servers != null) && !servers.isEmpty()) { server = servers.get(0); } else { server = MBeanServerFactory.createMBeanServer(); } String domain = server.getDefaultDomain(); htmlObjName = new ObjectName(domain +  + snmpObjName); println(\"NOTE: SNMP Adaptor is bound on UDP port \" + snmpPort); snmpAdaptor = new SnmpAdaptorServer(snmpPort); server.registerMBean(snmpAdaptor, snmpObjName); snmpAdaptor.start(); print(\"NOTE: Sending a coldStart SNMP trap\" + \" to each destination defined in the ACL file...\"); snmpAdaptor.setTrapPort(new Integer(snmpPort + 1)); snmpAdaptor.snmpV1Trap(0, 0, null); println(\"Done.\"); try { JMXServiceURL url = new JMXServiceURL(\"service:jmx:rmi:///jndi/rmi://localhost:9999/server\"); JMXConnectorServer cs = JMXConnectorServerFactory.newJMXConnectorServer(url, null, server); cs.start(); } catch (Exception ex) { println(\"Error starting RMI : execute rmiregistry 9999; ex=\" + ex); } sunMibObjName =registerMBean(mib2, sunMibObjName); forgerockCtsMibObjName = new ObjectName(\"snmp:class=FORGEROCK_OPENAM_CTS_MIB\"); println(\"Adding FORGEROCK_OPENAM_CTS_MIB-MIB to MBean server with name\" + \"\\n \" + forgerockCtsMibObjName); forgerockPolicyMibObjName = new ObjectName(\"snmp:class=FORGEROCK_OPENAM_POLICY_MIB\"); println(\"Adding FORGEROCK_OPENAM_POLICY_MIB-MIB to MBean server with name\" + \"\\n \" + forgerockPolicyMibObjName); forgerockSessionMibObjName = new ObjectName(\"snmp:class=FORGEROCK_OPENAM_SESSION_MIB\"); println(\"Adding FORGEROCK_OPENAM_SESSION_MIB-MIB tosending traps.\"); println(\" -or-\"); println(\">> Press <Ctrl-C> if you want to stop this agent.\"); System.in.read(); trapGenerator.start(); } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 11:06:25.554901", "n_pass": [60, 7, 7], "score": "0.9661", "loss": "0.042", "code": "public static void main(String[] args) { final MBeanServer server; final ObjectName htmlObjName; final ObjectName snmpObjName; final ObjectName sunMibObjName; final ObjectName forgerockCtsMibObjName; final ObjectName forgerockPolicyMibObjName; final ObjectName forgerockSessionMibObjName; final ObjectName trapGeneratorObjName; int htmlPort = 8082; int snmpPort = 11161; if ((args.length != 0) && (args.length != 1)) { usage(); java.lang.System.exit(1); } else if (args.length == 1) { try { nbTraps = (new Integer(args[0])).intValue(); if (nbTraps < 0) { usage(); System.exit(1); } } catch (java.lang.NumberFormatException e) { usage(); System.exit(1); } } try { List<MBeanServer> servers = MBeanServerFactory.findMBeanServer(null); if ((servers != null) && !servers.isEmpty()) { server = servers.get(0); } else { server = MBeanServerFactory.createMBeanServer(); } String domain = server.getDefaultDomain(); htmlObjName = new ObjectName(domain +  + snmpObjName); println(\"NOTE: SNMP Adaptor is bound on UDP port \" + snmpPort); snmpAdaptor = new SnmpAdaptorServer(snmpPort); server.registerMBean(snmpAdaptor, snmpObjName); snmpAdaptor.start(); print(\"NOTE: Sending a coldStart SNMP trap\" + \" to each destination defined in the ACL file...\"); snmpAdaptor.setTrapPort(new Integer(snmpPort + 1)); snmpAdaptor.snmpV1Trap(0, 0, null); println(\"Done.\"); try { JMXServiceURL url = new JMXServiceURL(\"service:jmx:rmi:///jndi/rmi://localhost:9999/server\"); JMXConnectorServer cs = JMXConnectorServerFactory.newJMXConnectorServer(url, null, server); cs.start(); } catch (Exception ex) { println(\"Error starting RMI : execute rmiregistry 9999; ex=\" + ex); } sunMibObjName =registerMBean(mib2, sunMibObjName); forgerockCtsMibObjName = new ObjectName(\"snmp:class=FORGEROCK_OPENAM_CTS_MIB\"); println(\"Adding FORGEROCK_OPENAM_CTS_MIB-MIB to MBean server with name\" + \"\\n \" + forgerockCtsMibObjName); forgerockPolicyMibObjName = new ObjectName(\"snmp:class=FORGEROCK_sending traps.\"); println(\" -or-\"); println(\">> Press <Ctrl-C> if you want to stop this agent.\"); System.in.read(); trapGenerator.start(); } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 11:06:27.112318", "n_pass": [88, 8, 8], "score": "0.9809", "loss": "0.0224", "code": "public static void main(String[] args) { final MBeanServer server; final ObjectName htmlObjName; final ObjectName snmpObjName; final ObjectName sunMibObjName; final ObjectName forgerockCtsMibObjName; final ObjectName forgerockPolicyMibObjName; final ObjectName forgerockSessionMibObjName; final ObjectName trapGeneratorObjName; int htmlPort = 8082; int snmpPort = 11161; if ((args.length != 0) && (args.length != 1)) { usage(); java.lang.System.exit(1); } else if (args.length == 1) { try { nbTraps = (new Integer(args[0])).intValue(); if (nbTraps < 0) { usage(); System.exit(1); } } catch (java.lang.NumberFormatException e) { usage(); System.exit(1); } } try { List<MBeanServer> servers = MBeanServerFactory.findMBeanServer(null); if ((servers != null) && !servers.isEmpty()) { server = servers.get(0); } else { server = MBeanServerFactory.createMBeanServer(); } String domain = server.getDefaultDomain(); htmlObjName = new ObjectName(domain +  + snmpObjName); println(\"NOTE: SNMP Adaptor is bound on UDP port \" + snmpPort); snmpAdaptor = new SnmpAdaptorServer(snmpPort); server.registerMBean(snmpAdaptor, snmpObjName); snmpAdaptor.start(); print(\"NOTE: Sending a coldStart SNMP trap\" + \" to each destination defined in the ACL file...\"); snmpAdaptor.setTrapPort(new Integer(snmpPort + 1)); snmpAdaptor.snmpV1Trap(0, 0, null); println(\"Done.\"); try { JMXServiceURL url = new JMXServiceURL(\"service:jmx:rmi:///jndi/rmi://localhost:9999/server\"); JMXConnectorServer cs = JMXConnectorServerFactory.newJMXConnectorServer(url, null, server); cs.start(); } catch (Exception ex) { println(\"Error starting RMI : execute rmiregistry 9999; ex=\" + ex); } sunMibObjName =registerMBean(mib2, sunMibObjName); forgerockCtsMibObjName = new ObjectName(\"snmp:class=FORGEROCK_OPENAM_CTS_MIB\"); println(\"Adding FORGEROCK_OPENAM_CTS_MIB-MIB to MBean server with name\" + \"\\n \" + forgerockCtsMibObjName); forgerockPolicyMibObjName = new ObjectName(\"snmp:class=FORGEROCK agent.\"); System.in.read(); trapGenerator.start(); } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 11:06:28.690715", "n_pass": [105, 9, 9], "score": "0.9973", "loss": "0.0035", "code": "public static void main(String[] args) { final MBeanServer server; final ObjectName htmlObjName; final ObjectName snmpObjName; final ObjectName sunMibObjName; final ObjectName forgerockCtsMibObjName; final ObjectName forgerockPolicyMibObjName; final ObjectName forgerockSessionMibObjName; final ObjectName trapGeneratorObjName; int htmlPort = 8082; int snmpPort = 11161; if ((args.length != 0) && (args.length != 1)) { usage(); java.lang.System.exit(1); } else if (args.length == 1) { try { nbTraps = (new Integer(args[0])).intValue(); if (nbTraps < 0) { usage(); System.exit(1); } } catch (java.lang.NumberFormatException e) { usage(); System.exit(1); } } try { List<MBeanServer> servers = MBeanServerFactory.findMBeanServer(null); if ((servers != null) && !servers.isEmpty()) { server = servers.get(0); } else { server = MBeanServerFactory.createMBeanServer(); } String domain = server.getDefaultDomain(); htmlObjName = new ObjectName(domain +  + snmpObjName); println(\"NOTE: SNMP Adaptor is bound on UDP port \" + snmpPort); snmpAdaptor = new SnmpAdaptorServer(snmpPort); server.registerMBean(snmpAdaptor, snmpObjName); snmpAdaptor.start(); print(\"NOTE: Sending a coldStart SNMP trap\" + \" to each destination defined in the ACL file...\"); snmpAdaptor.setTrapPort(new Integer(snmpPort + 1)); snmpAdaptor.snmpV1Trap(0, 0, null); println(\"Done.\"); try { JMXServiceURL url = new JMXServiceURL(\"service:jmx:rmi:///jndi/rmi://localhost:9999/server\"); JMXConnectorServer cs = JMXConnectorServerFactory.newJMXConnectorServer(url, null, server); cs.start(); } catch (Exception ex) { println(\"Error starting RMI : execute rmiregistry 9999; ex=\" + ex); } sunMibObjName =registerMBean(mib2, sunMibObjName); forgerockCtsMibObjName = new ObjectName(\"snmp:class=FORGEROCK_OPENAM_CTS_MIB\"); println(\"Adding FORGEROCK_OPENAM_ agent.\"); System.in.read(); trapGenerator.start(); } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 11:06:30.969551", "n_pass": [158, 10, 10], "score": "0.9959", "loss": "0.0052", "code": "public static void main(String[] args) { final MBeanServer server; final ObjectName htmlObjName; final ObjectName snmpObjName; final ObjectName sunMibObjName;final ObjectName trapGeneratorObjName; int htmlPort = 8082; int snmpPort = 11161; if ((args.length != 0) && (args.length != 1)) { usage(); java.lang.System.exit(1); } else if (args.length == 1) { try { nbTraps = (new Integer(args[0])).intValue(); if (nbTraps < 0) { usage(); System.exit(1); } } catch (java.lang.NumberFormatException e) { usage(); System.exit(1); } } try { List<MBeanServer> servers = MBeanServerFactory.findMBeanServer(null); if ((servers != null) && !servers.isEmpty()) { server = servers.get(0); } else { server = MBeanServerFactory.createMBeanServer(); } String domain = server.getDefaultDomain(); htmlObjName = new ObjectName(domain +  + snmpObjName); println(\"NOTE: SNMP Adaptor is bound on UDP port \" + snmpPort); snmpAdaptor = new SnmpAdaptorServer(snmpPort); server.registerMBean(snmpAdaptor, snmpObjName); snmpAdaptor.start(); print(\"NOTE: Sending a coldStart SNMP trap\" + \" to each destination defined in the ACL file...\"); snmpAdaptor.setTrapPort(new Integer(snmpPort + 1)); snmpAdaptor.snmpV1Trap(0, 0, null); println(\"Done.\"); try { JMXServiceURL url = new JMXServiceURL(\"service:jmx:rmi:///jndi/rmi://localhost:9999/server\"); JMXConnectorServer cs = JMXConnectorServerFactory.newJMXConnectorServer(url, null, server); cs.start(); } catch (Exception ex) { println(\"Error starting RMI : execute rmiregistry 9999; ex=\" + ex); } sunMibObjName =registerMBean(mib2, sunMibObjName); forgerockCtsMibObjName = new ObjectName(\"snmp:class=FORGEROCK_OPENAM_CTS_MIB\"); println(\"Adding FORGEROCK_OPENAM_ agent.\"); System.in.read(); trapGenerator.start(); } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 11:06:32.557365", "n_pass": [184, 11, 11], "score": "0.9996", "loss": "0.0006", "code": "public static void main(String[] args) { final MBeanServer server; final ObjectName htmlObjName; final ObjectName snmpObjName; final ObjectName sunMibObjName;final ObjectName trapGeneratorObjName; int htmlPort = 8082; int snmpPort = 11161; if ((args.length != 0) && (args.length != 1)) { usage(); java.lang.System.exit(1); } else if (args.length == 1) { try { nbTraps = (new Integer(args[0])).intValue(); if (nbTraps < 0) { usage(); System.exit(1); } } catch (java.lang.NumberFormatException e) { usage(); System.exit(1); } } try { List<MBeanServer> servers = MBeanServerFactory.findMBeanServer(null); if ((servers != null) && !servers.isEmpty()) { server = servers.get(0); } else { server = MBeanServerFactory.createMBeanServer(); } String domain = server.getDefaultDomain(); htmlObjName = new ObjectName(domain +  + snmpObjName); println(\"NOTE: SNMP Adaptor is bound on UDP port \" + snmpPort); snmpAdaptor = new SnmpAdaptorServer(snmpPort); server.registerMBean(snmpAdaptor, snmpObjName); snmpAdaptor.start(); print(\"NOTE: Sending a coldStart SNMP trap\" + \" to each destination defined in the ACL file...\"); snmpAdaptor.setTrapPort(new Integer(snmpPort + 1)); snmpAdaptor.snmpV1Trap(0, 0, null); println(\"Done.\"); try { JMXServiceURL url = new JMXServiceURL(\"service:jmx:rmi:///jndi/rmi://localhost:9999/server\"); JMXConnectorServer cs = JMXConnectorServerFactory.newJMXConnectorServer(url, null, server); cs.start(); } catch (Exception ex) { println(\"Error starting RMI : execute rmiregistry 9999; ex=\" + ex); } sunMibObjName =registerMBean(mib2, sunMibObjName); forgerockCtsMibObjName = new ObjectName(\"_ agent.\"); System.in.read(); trapGenerator.start(); } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 11:06:34.564663", "n_pass": [276, 12, 12], "score": "0.9984", "loss": "0.0021", "code": "public static void main(String[] args) { final MBeanServer server; final ObjectName htmlObjName; final ObjectName snmpObjName; final ObjectName sunMibObjName;final ObjectName trapGeneratorObjName; int htmlPort = 8082; int snmpPort = 11161; if ((args.length != 0) && (args.length != 1)) { usage(); java.lang.System.exit(1); } else if (args.length == 1) { try { nbTraps = (new Integer(args[0])).intValue(); if (nbTraps < 0) { usage(); System.exit(1); } } catch (java.lang.NumberFormatException e) { usage(); System.exit(1); } } try { List<MBeanServer> servers = MBeanServerFactory.findMBeanServer(null); if ((servers != null) && !servers.isEmpty()) { server = servers.get(0); } else { server = MBeanServerFactory.createMBeanServer(); } String domain = server.getDefaultDomain(); htmlObjName = new ObjectName(domain +  + snmpObjName); println(\"NOTE: SNMP Adaptor is bound on UDP port \" + snmpPort); snmpAdaptor = new SnmpAdaptorServer(snmpPort); server.registerMBean(snmpAdaptor, snmpObjName); snmpAdaptor.start(); print(\"NOTE: Sending a coldStart SNMP trap\" + \" to each destination defined in the ACL file...\"); snmpAdaptor.setTrapPort(new Integer(snmpPort + 1)); snmpAdaptor.snmpV1Trap(0, 0, null); println(\"Done.\"); try { JMXServiceURL url = new JMXServiceURL(\"service:jmx:rmi:///jndi/rmi://localhost:9999/server\"); JMXConnectorServer cs = JMXConnectorServerFactory.newJMXConnectorServer(url, null, server); cs.start(); } catch (Exception ex) { println(\"Error starting RMI : execute rmiregistry 9999; ex=\" + ex); } sunMibObjName =registerMBean(mib2, sunMibObjName); forgerockCtsMibObjName = new ObjectName(\"_ agent.\"); System.in; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 11:06:36.987647", "n_pass": [284, 14, 13], "score": "0.9938", "loss": "0.0075", "code": "public static void main(String[] args) { final MBeanServer server; final ObjectName htmlObjName; final ObjectName snmpObjName; final ObjectName sunMibObjName;final ObjectName trapGeneratorObjName; int htmlPort  = 11161; if ((args.length != 0) && (args.length != 1)) { usage(); java.lang.System.exit(1); } else if (args.length == 1) { try { nbTraps = (new Integer(args[0])).intValue(); if (nbTraps < 0) { usage(); System.exit(1); } } catch (java.lang.NumberFormatException e) { usage(); System.exit(1); } } try { List<MBeanServer> servers = MBeanServerFactory.findMBeanServer(null); if ((servers != null) && !servers.isEmpty()) { server = servers.get(0); } else { server = MBeanServerFactory.createMBeanServer(); } String domain = server.getDefaultDomain(); htmlObjName = new ObjectName(domain +  + snmpObjName); println(\"NOTE: SNMP Adaptor is bound on UDP port \" + snmpPort); snmpAdaptor = new SnmpAdaptorServer(snmpPort); server.registerMBean(snmpAdaptor, snmpObjName); snmpAdaptor.start(); print(\"NOTE: Sending a coldStart SNMP trap\" + \" to each destination defined in the ACL file...\"); snmpAdaptor.setTrapPort(new Integer(snmpPort + 1)); snmpAdaptor.snmpV1Trap(0, 0, null); println(\"Done.\"); try { JMXServiceURL url = new JMXServiceURL(\"service:jmx:rmi:///jndi/rmi://localhost:9999/server\"); JMXConnectorServer cs = JMXConnectorServerFactory.newJMXConnectorServer(url, null, server); cs.start(); } catch (Exception ex) { println(\"Error starting RMI : execute rmiregistry 9999; ex=\" + ex); } sunMibObjName =registerMBean(mib2, sunMibObjName); forgerockCtsMibObjName = new ObjectName(\"_ agent.\"); System.in; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 11:06:39.051866", "n_pass": [307, 15, 14], "score": "0.9897", "loss": "0.0117", "code": "public static void main(String[] args) { final MBeanServer server; final ObjectName htmlObjName; final ObjectName snmpObjName; final ObjectName sunMibObjName;final ObjectName trapGeneratorObjName; int htmlPort  = 11161; if ((args.length != 0) && (args.length != 1)) { usage(); java.lang.System.exit(1); } else if (args.length == 1) { try { nbTraps = (new Integer(args[0])).intValue(); if (nbTraps < 0) { usage(); System.exit(1); } } catch (java.lang.NumberFormatException e) { usage(); System.exit(1); } } try { List<MBeanServer> servers = MBeanServerFactory.findMBeanServer(null); if ((servers != null) && !servers.isEmpty()) { server = servers.get(0); } else { server = MBeanServerFactory.createMBeanServer(); } String domain = new ObjectName(domain +  + snmpObjName); println(\"NOTE: SNMP Adaptor is bound on UDP port \" + snmpPort); snmpAdaptor = new SnmpAdaptorServer(snmpPort); server.registerMBean(snmpAdaptor, snmpObjName); snmpAdaptor.start(); print(\"NOTE: Sending a coldStart SNMP trap\" + \" to each destination defined in the ACL file...\"); snmpAdaptor.setTrapPort(new Integer(snmpPort + 1)); snmpAdaptor.snmpV1Trap(0, 0, null); println(\"Done.\"); try { JMXServiceURL url = new JMXServiceURL(\"service:jmx:rmi:///jndi/rmi://localhost:9999/server\"); JMXConnectorServer cs = JMXConnectorServerFactory.newJMXConnectorServer(url, null, server); cs.start(); } catch (Exception ex) { println(\"Error starting RMI : execute rmiregistry 9999; ex=\" + ex); } sunMibObjName =registerMBean(mib2, sunMibObjName); forgerockCtsMibObjName = new ObjectName(\"_ agent.\"); System.in; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 11:06:40.540503", "n_pass": [310, 16, 15], "score": "0.9963", "loss": "0.0042", "code": "public static void main(String[] args) { final MBeanServer server; final ObjectName htmlObjName; final ObjectName snmpObjName; final ObjectName sunMibObjName;final ObjectName trapGeneratorObjName; int htmlPort  = 11161; if ((args.length != 0) && (args.length != 1)) { usage(); java.lang.System.exit(1); } else if (args.length == 1) { try { nbTraps = (new Integer(args[0])).intValue(); if (nbTraps < 0) { usage(); System.exit(1); } } catch (java.lang.NumberFormatException e) { usage(); System.exit(1); } } try { List<MBeanServer> servers = MBeanServerFactory.findMBeanServer(null); if ((servers != null) && !servers.isEmpty()) { server = servers.get(0); } else { server = MBeanServerFactory.createMBeanServer(); } String domain = new ObjectName(domain +  + snmpObjName); println(\"NOTE UDP port \" + snmpPort); snmpAdaptor = new SnmpAdaptorServer(snmpPort); server.registerMBean(snmpAdaptor, snmpObjName); snmpAdaptor.start(); print(\"NOTE: Sending a coldStart SNMP trap\" + \" to each destination defined in the ACL file...\"); snmpAdaptor.setTrapPort(new Integer(snmpPort + 1)); snmpAdaptor.snmpV1Trap(0, 0, null); println(\"Done.\"); try { JMXServiceURL url = new JMXServiceURL(\"service:jmx:rmi:///jndi/rmi://localhost:9999/server\"); JMXConnectorServer cs = JMXConnectorServerFactory.newJMXConnectorServer(url, null, server); cs.start(); } catch (Exception ex) { println(\"Error starting RMI : execute rmiregistry 9999; ex=\" + ex); } sunMibObjName =registerMBean(mib2, sunMibObjName); forgerockCtsMibObjName = new ObjectName(\"_ agent.\"); System.in; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 11:06:42.018117", "n_pass": [313, 17, 16], "score": "0.9839", "loss": "0.0199", "code": "public static void main(String[] args) { final MBeanServer server; final ObjectName htmlObjName; final ObjectName snmpObjName; final ObjectName sunMibObjName;final ObjectName trapGeneratorObjName; int htmlPort  = 11161; if ((args.length != 0) && (args.length != 1)) { usage(); java.lang.System.exit(1); } else if (args.length == 1) { try { nbTraps = (new Integer(args[0])).intValue(); if (nbTraps < 0) { usage(); System.exit(1); } } catch (java.lang.NumberFormatException e) { usage(); System.exit(1); } } try { List<MBeanServer> servers = MBeanServerFactory.findMBeanServer(null); if ((servers != null) && !servers.isEmpty()) { server = servers.get(0); } else { server = MBeanServerFactory.createMBeanServer(); } String domain = new ObjectName(domain +  + snmpObjName); println(\"NOTE UDP port \" + snmpPort); snmpAdaptor = new SnmpAdaptorServer(snmpPort); snmpAdaptor.start(); print(\"NOTE: Sending a coldStart SNMP trap\" + \" to each destination defined in the ACL file...\"); snmpAdaptor.setTrapPort(new Integer(snmpPort + 1)); snmpAdaptor.snmpV1Trap(0, 0, null); println(\"Done.\"); try { JMXServiceURL url = new JMXServiceURL(\"service:jmx:rmi:///jndi/rmi://localhost:9999/server\"); JMXConnectorServer cs = JMXConnectorServerFactory.newJMXConnectorServer(url, null, server); cs.start(); } catch (Exception ex) { println(\"Error starting RMI : execute rmiregistry 9999; ex=\" + ex); } sunMibObjName =registerMBean(mib2, sunMibObjName); forgerockCtsMibObjName = new ObjectName(\"_ agent.\"); System.in; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 11:06:43.511067", "n_pass": [316, 18, 17], "score": "0.9788", "loss": "0.0263", "code": "public static void main(String[] args) { final MBeanServer server; final ObjectName htmlObjName; final ObjectName snmpObjName; final ObjectName sunMibObjName;final ObjectName trapGeneratorObjName; int htmlPort  = 11161; if ((args.length != 0) && (args.length != 1)) { usage(); java.lang.System.exit(1); } else if (args.length == 1) { try { nbTraps = (new Integer(args[0])).intValue(); if (nbTraps < 0) { usage(); System.exit(1); } } catch (java.lang.NumberFormatException e) { usage(); System.exit(1); } } try { List<MBeanServer> servers = MBeanServerFactory.findMBeanServer(null); if ((servers != null) && !servers.isEmpty()) { server = servers.get(0); } else { server = MBeanServerFactory.createMBeanServer(); } String domain = new ObjectName(domain +  + snmpObjName); println(\"NOTE UDP port \" + snmpPort); snmpAdaptor = new SnmpAdaptorServer(snmpPort); snmpAdaptor.start(); print(\"NOTE: Sending a coldStart each destination defined in the ACL file...\"); snmpAdaptor.setTrapPort(new Integer(snmpPort + 1)); snmpAdaptor.snmpV1Trap(0, 0, null); println(\"Done.\"); try { JMXServiceURL url = new JMXServiceURL(\"service:jmx:rmi:///jndi/rmi://localhost:9999/server\"); JMXConnectorServer cs = JMXConnectorServerFactory.newJMXConnectorServer(url, null, server); cs.start(); } catch (Exception ex) { println(\"Error starting RMI : execute rmiregistry 9999; ex=\" + ex); } sunMibObjName =registerMBean(mib2, sunMibObjName); forgerockCtsMibObjName = new ObjectName(\"_ agent.\"); System.in; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 11:06:44.978393", "n_pass": [317, 19, 18], "score": "0.9677", "loss": "0.0385", "code": "public static void main(String[] args) { final MBeanServer server; final ObjectName htmlObjName; final ObjectName snmpObjName; final ObjectName sunMibObjName;final ObjectName trapGeneratorObjName; int htmlPort  = 11161; if ((args.length != 0) && (args.length != 1)) { usage(); java.lang.System.exit(1); } else if (args.length == 1) { try { nbTraps = (new Integer(args[0])).intValue(); if (nbTraps < 0) { usage(); System.exit(1); } } catch (java.lang.NumberFormatException e) { usage(); System.exit(1); } } try { List<MBeanServer> servers = MBeanServerFactory.findMBeanServer(null); if ((servers != null) && !servers.isEmpty()) { server = servers.get(0); } else { server = MBeanServerFactory.createMBeanServer(); } String domain = new ObjectName(domain +  + snmpObjName); println(\"NOTE UDP port \" + snmpPort); snmpAdaptor = new SnmpAdaptorServer(snmpPort); snmpAdaptor.start(); print(\"NOTE: Sending a coldStart  file...\"); snmpAdaptor.setTrapPort(new Integer(snmpPort + 1)); snmpAdaptor.snmpV1Trap(0, 0, null); println(\"Done.\"); try { JMXServiceURL url = new JMXServiceURL(\"service:jmx:rmi:///jndi/rmi://localhost:9999/server\"); JMXConnectorServer cs = JMXConnectorServerFactory.newJMXConnectorServer(url, null, server); cs.start(); } catch (Exception ex) { println(\"Error starting RMI : execute rmiregistry 9999; ex=\" + ex); } sunMibObjName =registerMBean(mib2, sunMibObjName); forgerockCtsMibObjName = new ObjectName(\"_ agent.\"); System.in; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 11:06:46.474248", "n_pass": [324, 20, 19], "score": "0.9836", "loss": "0.0209", "code": "public static void main(String[] args) { final MBeanServer server; final ObjectName htmlObjName; final ObjectName snmpObjName; final ObjectName sunMibObjName;final ObjectName trapGeneratorObjName; int htmlPort  = 11161; if ((args.length != 0) && (args.length != 1)) { usage(); java.lang.System.exit(1); } else if (args.length == 1) { try { nbTraps = (new Integer(args[0])).intValue(); if (nbTraps < 0) { usage(); System.exit(1); } } catch (java.lang.NumberFormatException e) { usage(); System.exit(1); } } try { List<MBeanServer> servers = MBeanServerFactory.findMBeanServer(null); if ((servers != null) && !servers.isEmpty()) { server = servers.get(0); } else { server = MBeanServerFactory.createMBeanServer(); } String domain = new ObjectName(domain +  + snmpObjName); println(\"NOTE UDP port \" + snmpPort); snmpAdaptor = new SnmpAdaptorServer(snmpPort); snmpAdaptor.start(); print(\"NOTE: Sending a coldStart  file...\"); snmpAdaptor.setTrapPort(new Integer(snmpPort + 1)); snmpAdaptor.snmpV1Trap(0, 0, null); println(\"Done.\"); try { JMXServiceURL url = new JMXServiceURL(\"rmi://localhost:9999/server\"); JMXConnectorServer cs = JMXConnectorServerFactory.newJMXConnectorServer(url, null, server); cs.start(); } catch (Exception ex) { println(\"Error starting RMI : execute rmiregistry 9999; ex=\" + ex); } sunMibObjName =registerMBean(mib2, sunMibObjName); forgerockCtsMibObjName = new ObjectName(\"_ agent.\"); System.in; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 11:06:47.962485", "n_pass": [325, 21, 20], "score": "0.9962", "loss": "0.0048", "code": "public static void main(String[] args) { final MBeanServer server; final ObjectName htmlObjName; final ObjectName snmpObjName; final ObjectName sunMibObjName;final ObjectName trapGeneratorObjName; int htmlPort  = 11161; if ((args.length != 0) && (args.length != 1)) { usage(); java.lang.System.exit(1); } else if (args.length == 1) { try { nbTraps = (new Integer(args[0])).intValue(); if (nbTraps < 0) { usage(); System.exit(1); } } catch (java.lang.NumberFormatException e) { usage(); System.exit(1); } } try { List<MBeanServer> servers = MBeanServerFactory.findMBeanServer(null); if ((servers != null) && !servers.isEmpty()) { server = servers.get(0); } else { server = MBeanServerFactory.createMBeanServer(); } String domain = new ObjectName(domain +  + snmpObjName); println(\"NOTE UDP port \" + snmpPort); snmpAdaptor = new SnmpAdaptorServer(snmpPort); snmpAdaptor.start(); print(\"NOTE: Sending a coldStart  file...\"); snmpAdaptor.setTrapPort(new Integer(snmpPort + 1)); snmpAdaptor.snmpV1Trap(0, 0, null); println(\"Done.\"); try { JMXServiceURL url = new JMXServiceURL(\"server\"); JMXConnectorServer cs = JMXConnectorServerFactory.newJMXConnectorServer(url, null, server); cs.start(); } catch (Exception ex) { println(\"Error starting RMI : execute rmiregistry 9999; ex=\" + ex); } sunMibObjName =registerMBean(mib2, sunMibObjName); forgerockCtsMibObjName = new ObjectName(\"_ agent.\"); System.in; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 11:06:49.448118", "n_pass": [331, 22, 21], "score": "0.9957", "loss": "0.0057", "code": "public static void main(String[] args) { final MBeanServer server; final ObjectName htmlObjName; final ObjectName snmpObjName; final ObjectName sunMibObjName;final ObjectName trapGeneratorObjName; int htmlPort  = 11161; if ((args.length != 0) && (args.length != 1)) { usage(); java.lang.System.exit(1); } else if (args.length == 1) { try { nbTraps = (new Integer(args[0])).intValue(); if (nbTraps < 0) { usage(); System.exit(1); } } catch (java.lang.NumberFormatException e) { usage(); System.exit(1); } } try { List<MBeanServer> servers = MBeanServerFactory.findMBeanServer(null); if ((servers != null) && !servers.isEmpty()) { server = servers.get(0); } else { server = MBeanServerFactory.createMBeanServer(); } String domain = new ObjectName(domain +  + snmpObjName); println(\"NOTE UDP port \" + snmpPort); snmpAdaptor = new SnmpAdaptorServer(snmpPort); snmpAdaptor.start(); print(\"NOTE: Sending a coldStart  file...\"); snmpAdaptor.setTrapPort(new Integer(snmpPort + 1)); snmpAdaptor.snmpV1Trap(0, 0, null); println(\"Done.\"); try { JMXServiceURL url = new JMXServiceURL(\"server\"); JMXConnectorServer cs = JMXConnectorServerFactory.newJMXConnectorServer(url, null, server); cs.start(); } catch (Exception ex) { println(\"Error starting RMI : =\" + ex); } sunMibObjName =registerMBean(mib2, sunMibObjName); forgerockCtsMibObjName = new ObjectName(\"_ agent.\"); System.in; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 11:06:50.907093", "n_pass": [333, 23, 22], "score": "0.9984", "loss": "0.0019", "code": "public static void main(String[] args) { final MBeanServer server; final ObjectName htmlObjName; final ObjectName snmpObjName; final ObjectName sunMibObjName;final ObjectName trapGeneratorObjName; int htmlPort  = 11161; if ((args.length != 0) && (args.length != 1)) { usage(); java.lang.System.exit(1); } else if (args.length == 1) { try { nbTraps = (new Integer(args[0])).intValue(); if (nbTraps < 0) { usage(); System.exit(1); } } catch (java.lang.NumberFormatException e) { usage(); System.exit(1); } } try { List<MBeanServer> servers = MBeanServerFactory.findMBeanServer(null); if ((servers != null) && !servers.isEmpty()) { server = servers.get(0); } else { server = MBeanServerFactory.createMBeanServer(); } String domain = new ObjectName(domain +  + snmpObjName); println(\"NOTE UDP port \" + snmpPort); snmpAdaptor = new SnmpAdaptorServer(snmpPort); snmpAdaptor.start(); print(\"NOTE: Sending a coldStart  file...\"); snmpAdaptor.setTrapPort(new Integer(snmpPort + 1)); snmpAdaptor.snmpV1Trap(0, 0, null); println(\"Done.\"); try { JMXServiceURL url = new JMXServiceURL(\"server\"); JMXConnectorServer cs = JMXConnectorServerFactory.newJMXConnectorServer(url, null, server); cs.start(); } catch (Exception ex) { println(\"Error starting RMI : =\" + ex); } ; forgerockCtsMibObjName = new ObjectName(\"_ agent.\"); System.in; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 11:06:54.592389", "n_pass": [483, 25, 23], "score": "0.9769", "loss": "0.0282", "code": "public static void main(String[] args) { final MBeanServer server; final ObjectName htmlObjName; final ObjectName snmpObjName; final ObjectName sunMibObjName;final ObjectName trapGeneratorObjName; int htmlPort  = 11161; if ((args.length != 0) && (args.length != 1)) { usage(); java.lang.System.exit(1); } else if (args.length == 1) { try { nbTraps = (new Integer(args[0])).intValue(); if (nbTraps < 0) { usage(); System.exit(1); } } catch (java.lang.NumberFormatException e) { usage(); System.exit(1); } } try { List<MBeanServer> servers = MBeanServerFactory.findMBeanServer(null); if ((servers != null) && !servers.isEmpty()) { server = servers.get(0); } else { server = MBeanServerFactory.createMBeanServer(); } String domain = new ObjectName(domain +  + snmpObjName); println(\"NOTE UDP port \" + snmpPort); snmpAdaptor = new SnmpAdaptorServer(snmpPort); snmpAdaptor.start(); print(\"NOTE: Sending a coldStart  file...\"); snmpAdaptor.setTrapPort(new Integer(snmpPort + 1)); snmpAdaptor.snmpV1Trap(0, 0, null); println(\"Done.\"); try { JMXServiceURL url = new JMXServiceURL(\"server\"); JMXConnectorServer cs = JMXConnectorServerFactory.newJMXConnectorServer(url, null, server); cs.start(); } catch (Exception ex) { println(\"Error starting RMI : =\" + ex); } ; forgerockCtsMibObjName = new ObjectName(); System.in; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 11:06:57.378476", "n_pass": [495, 27, 24], "score": "0.994", "loss": "0.0069", "code": "public static void main(String[] args) { final MBeanServer server; final ObjectName htmlObjName;snmpObjName; final ObjectName sunMibObjName;final ObjectName trapGeneratorObjName; int htmlPort  = 11161; if ((args.length != 0) && (args.length != 1)) { usage(); java.lang.System.exit(1); } else if (args.length == 1) { try { nbTraps = (new Integer(args[0])).intValue(); if (nbTraps < 0) { usage(); System.exit(1); } } catch (java.lang.NumberFormatException e) { usage(); System.exit(1); } } try { List<MBeanServer> servers = MBeanServerFactory.findMBeanServer(null); if ((servers != null) && !servers.isEmpty()) { server = servers.get(0); } else { server = MBeanServerFactory.createMBeanServer(); } String domain = new ObjectName(domain +  + snmpObjName); println(\"NOTE UDP port \" + snmpPort); snmpAdaptor = new SnmpAdaptorServer(snmpPort); snmpAdaptor.start(); print(\"NOTE: Sending a coldStart  file...\"); snmpAdaptor.setTrapPort(new Integer(snmpPort + 1)); snmpAdaptor.snmpV1Trap(0, 0, null); println(\"Done.\"); try { JMXServiceURL url = new JMXServiceURL(\"server\"); JMXConnectorServer cs = JMXConnectorServerFactory.newJMXConnectorServer(url, null, server); cs.start(); } catch (Exception ex) { println(\"Error starting RMI : =\" + ex); } ; forgerockCtsMibObjName = new ObjectName(); System.in; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 11:06:58.834089", "n_pass": [496, 28, 25], "score": "0.9926", "loss": "0.0092", "code": "public static void main(String[] args) { final MBeanServer server; final ObjectName htmlObjName;ObjectName sunMibObjName;final ObjectName trapGeneratorObjName; int htmlPort  = 11161; if ((args.length != 0) && (args.length != 1)) { usage(); java.lang.System.exit(1); } else if (args.length == 1) { try { nbTraps = (new Integer(args[0])).intValue(); if (nbTraps < 0) { usage(); System.exit(1); } } catch (java.lang.NumberFormatException e) { usage(); System.exit(1); } } try { List<MBeanServer> servers = MBeanServerFactory.findMBeanServer(null); if ((servers != null) && !servers.isEmpty()) { server = servers.get(0); } else { server = MBeanServerFactory.createMBeanServer(); } String domain = new ObjectName(domain +  + snmpObjName); println(\"NOTE UDP port \" + snmpPort); snmpAdaptor = new SnmpAdaptorServer(snmpPort); snmpAdaptor.start(); print(\"NOTE: Sending a coldStart  file...\"); snmpAdaptor.setTrapPort(new Integer(snmpPort + 1)); snmpAdaptor.snmpV1Trap(0, 0, null); println(\"Done.\"); try { JMXServiceURL url = new JMXServiceURL(\"server\"); JMXConnectorServer cs = JMXConnectorServerFactory.newJMXConnectorServer(url, null, server); cs.start(); } catch (Exception ex) { println(\"Error starting RMI : =\" + ex); } ; forgerockCtsMibObjName = new ObjectName(); System.in; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 11:07:00.294368", "n_pass": [497, 29, 26], "score": "0.9505", "loss": "0.0634", "code": "public static void main(String[] args) { final MBeanServer server; final ObjectName htmlObjName; ObjectName trapGeneratorObjName; int htmlPort  = 11161; if ((args.length != 0) && (args.length != 1)) { usage(); java.lang.System.exit(1); } else if (args.length == 1) { try { nbTraps = (new Integer(args[0])).intValue(); if (nbTraps < 0) { usage(); System.exit(1); } } catch (java.lang.NumberFormatException e) { usage(); System.exit(1); } } try { List<MBeanServer> servers = MBeanServerFactory.findMBeanServer(null); if ((servers != null) && !servers.isEmpty()) { server = servers.get(0); } else { server = MBeanServerFactory.createMBeanServer(); } String domain = new ObjectName(domain +  + snmpObjName); println(\"NOTE UDP port \" + snmpPort); snmpAdaptor = new SnmpAdaptorServer(snmpPort); snmpAdaptor.start(); print(\"NOTE: Sending a coldStart  file...\"); snmpAdaptor.setTrapPort(new Integer(snmpPort + 1)); snmpAdaptor.snmpV1Trap(0, 0, null); println(\"Done.\"); try { JMXServiceURL url = new JMXServiceURL(\"server\"); JMXConnectorServer cs = JMXConnectorServerFactory.newJMXConnectorServer(url, null, server); cs.start(); } catch (Exception ex) { println(\"Error starting RMI : =\" + ex); } ; forgerockCtsMibObjName = new ObjectName(); System.in; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 11:07:01.779329", "n_pass": [498, 30, 27], "score": "0.9838", "loss": "0.0183", "code": "public static void main(String[] args) { final MBeanServer server; final ObjectName htmlObjName; int htmlPort  = 11161; if ((args.length != 0) && (args.length != 1)) { usage(); java.lang.System.exit(1); } else if (args.length == 1) { try { nbTraps = (new Integer(args[0])).intValue(); if (nbTraps < 0) { usage(); System.exit(1); } } catch (java.lang.NumberFormatException e) { usage(); System.exit(1); } } try { List<MBeanServer> servers = MBeanServerFactory.findMBeanServer(null); if ((servers != null) && !servers.isEmpty()) { server = servers.get(0); } else { server = MBeanServerFactory.createMBeanServer(); } String domain = new ObjectName(domain +  + snmpObjName); println(\"NOTE UDP port \" + snmpPort); snmpAdaptor = new SnmpAdaptorServer(snmpPort); snmpAdaptor.start(); print(\"NOTE: Sending a coldStart  file...\"); snmpAdaptor.setTrapPort(new Integer(snmpPort + 1)); snmpAdaptor.snmpV1Trap(0, 0, null); println(\"Done.\"); try { JMXServiceURL url = new JMXServiceURL(\"server\"); JMXConnectorServer cs = JMXConnectorServerFactory.newJMXConnectorServer(url, null, server); cs.start(); } catch (Exception ex) { println(\"Error starting RMI : =\" + ex); } ; forgerockCtsMibObjName = new ObjectName(); System.in; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 11:07:03.257053", "n_pass": [508, 31, 28], "score": "0.9888", "loss": "0.0123", "code": "public static void main(String[] args) { final MBeanServer server; final ObjectName htmlObjName; int htmlPort  = 11161; if ((args.length != 0) && (args.length != 1)) { java.lang.System.exit(1); } else if (args.length == 1) { try { nbTraps = (new Integer(args[0])).intValue(); if (nbTraps < 0) { usage(); System.exit(1); } } catch (java.lang.NumberFormatException e) { usage(); System.exit(1); } } try { List<MBeanServer> servers = MBeanServerFactory.findMBeanServer(null); if ((servers != null) && !servers.isEmpty()) { server = servers.get(0); } else { server = MBeanServerFactory.createMBeanServer(); } String domain = new ObjectName(domain +  + snmpObjName); println(\"NOTE UDP port \" + snmpPort); snmpAdaptor = new SnmpAdaptorServer(snmpPort); snmpAdaptor.start(); print(\"NOTE: Sending a coldStart  file...\"); snmpAdaptor.setTrapPort(new Integer(snmpPort + 1)); snmpAdaptor.snmpV1Trap(0, 0, null); println(\"Done.\"); try { JMXServiceURL url = new JMXServiceURL(\"server\"); JMXConnectorServer cs = JMXConnectorServerFactory.newJMXConnectorServer(url, null, server); cs.start(); } catch (Exception ex) { println(\"Error starting RMI : =\" + ex); } ; forgerockCtsMibObjName = new ObjectName(); System.in; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 11:07:04.736450", "n_pass": [509, 32, 29], "score": "0.974", "loss": "0.0297", "code": "public static void main(String[] args) { final MBeanServer server; final ObjectName htmlObjName; int htmlPort  = 11161; if ((args.length != 0) && (args.length != 1)) {System.exit(1); } else if (args.length == 1) { try { nbTraps = (new Integer(args[0])).intValue(); if (nbTraps < 0) { usage(); System.exit(1); } } catch (java.lang.NumberFormatException e) { usage(); System.exit(1); } } try { List<MBeanServer> servers = MBeanServerFactory.findMBeanServer(null); if ((servers != null) && !servers.isEmpty()) { server = servers.get(0); } else { server = MBeanServerFactory.createMBeanServer(); } String domain = new ObjectName(domain +  + snmpObjName); println(\"NOTE UDP port \" + snmpPort); snmpAdaptor = new SnmpAdaptorServer(snmpPort); snmpAdaptor.start(); print(\"NOTE: Sending a coldStart  file...\"); snmpAdaptor.setTrapPort(new Integer(snmpPort + 1)); snmpAdaptor.snmpV1Trap(0, 0, null); println(\"Done.\"); try { JMXServiceURL url = new JMXServiceURL(\"server\"); JMXConnectorServer cs = JMXConnectorServerFactory.newJMXConnectorServer(url, null, server); cs.start(); } catch (Exception ex) { println(\"Error starting RMI : =\" + ex); } ; forgerockCtsMibObjName = new ObjectName(); System.in; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 11:07:06.226565", "n_pass": [516, 33, 30], "score": "0.9947", "loss": "0.0059", "code": "public static void main(String[] args) { final MBeanServer server; final ObjectName htmlObjName; int htmlPort  = 11161; if ((args.length != 0) && (args.length != 1)) {System.exit(1); } else if (args.length == 1) { try {(new Integer(args[0])).intValue(); if (nbTraps < 0) { usage(); System.exit(1); } } catch (java.lang.NumberFormatException e) { usage(); System.exit(1); } } try { List<MBeanServer> servers = MBeanServerFactory.findMBeanServer(null); if ((servers != null) && !servers.isEmpty()) { server = servers.get(0); } else { server = MBeanServerFactory.createMBeanServer(); } String domain = new ObjectName(domain +  + snmpObjName); println(\"NOTE UDP port \" + snmpPort); snmpAdaptor = new SnmpAdaptorServer(snmpPort); snmpAdaptor.start(); print(\"NOTE: Sending a coldStart  file...\"); snmpAdaptor.setTrapPort(new Integer(snmpPort + 1)); snmpAdaptor.snmpV1Trap(0, 0, null); println(\"Done.\"); try { JMXServiceURL url = new JMXServiceURL(\"server\"); JMXConnectorServer cs = JMXConnectorServerFactory.newJMXConnectorServer(url, null, server); cs.start(); } catch (Exception ex) { println(\"Error starting RMI : =\" + ex); } ; forgerockCtsMibObjName = new ObjectName(); System.in; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 11:07:07.722856", "n_pass": [523, 34, 31], "score": "0.967", "loss": "0.0396", "code": "public static void main(String[] args) { final MBeanServer server; final ObjectName htmlObjName; int htmlPort  = 11161; if ((args.length != 0) && (args.length != 1)) {System.exit(1); } else if (args.length == 1) { try {(new Integer(args[0])).intValue(); if (nbTraps < 0) { usage.exit(1); } } catch (java.lang.NumberFormatException e) { usage(); System.exit(1); } } try { List<MBeanServer> servers = MBeanServerFactory.findMBeanServer(null); if ((servers != null) && !servers.isEmpty()) { server = servers.get(0); } else { server = MBeanServerFactory.createMBeanServer(); } String domain = new ObjectName(domain +  + snmpObjName); println(\"NOTE UDP port \" + snmpPort); snmpAdaptor = new SnmpAdaptorServer(snmpPort); snmpAdaptor.start(); print(\"NOTE: Sending a coldStart  file...\"); snmpAdaptor.setTrapPort(new Integer(snmpPort + 1)); snmpAdaptor.snmpV1Trap(0, 0, null); println(\"Done.\"); try { JMXServiceURL url = new JMXServiceURL(\"server\"); JMXConnectorServer cs = JMXConnectorServerFactory.newJMXConnectorServer(url, null, server); cs.start(); } catch (Exception ex) { println(\"Error starting RMI : =\" + ex); } ; forgerockCtsMibObjName = new ObjectName(); System.in; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 11:07:09.173237", "n_pass": [524, 35, 32], "score": "0.995", "loss": "0.0057", "code": "public static void main(String[] args) { final MBeanServer server; final ObjectName htmlObjName; int htmlPort  = 11161; if ((args.length != 0) && (args.length != 1)) {System.exit(1); } else if (args.length == 1) { try {(new Integer(args[0])).intValue(); if (nbTraps < 0) { usage; } } catch (java.lang.NumberFormatException e) { usage(); System.exit(1); } } try { List<MBeanServer> servers = MBeanServerFactory.findMBeanServer(null); if ((servers != null) && !servers.isEmpty()) { server = servers.get(0); } else { server = MBeanServerFactory.createMBeanServer(); } String domain = new ObjectName(domain +  + snmpObjName); println(\"NOTE UDP port \" + snmpPort); snmpAdaptor = new SnmpAdaptorServer(snmpPort); snmpAdaptor.start(); print(\"NOTE: Sending a coldStart  file...\"); snmpAdaptor.setTrapPort(new Integer(snmpPort + 1)); snmpAdaptor.snmpV1Trap(0, 0, null); println(\"Done.\"); try { JMXServiceURL url = new JMXServiceURL(\"server\"); JMXConnectorServer cs = JMXConnectorServerFactory.newJMXConnectorServer(url, null, server); cs.start(); } catch (Exception ex) { println(\"Error starting RMI : =\" + ex); } ; forgerockCtsMibObjName = new ObjectName(); System.in; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 11:07:10.631101", "n_pass": [529, 36, 33], "score": "0.9823", "loss": "0.0209", "code": "public static void main(String[] args) { final MBeanServer server; final ObjectName htmlObjName; int htmlPort  = 11161; if ((args.length != 0) && (args.length != 1)) {System.exit(1); } else if (args.length == 1) { try {(new Integer(args[0])).intValue(); if (nbTraps < 0) { usage; } } catch (java.lang.NumberFormatException e) { System.exit(1); } } try { List<MBeanServer> servers = MBeanServerFactory.findMBeanServer(null); if ((servers != null) && !servers.isEmpty()) { server = servers.get(0); } else { server = MBeanServerFactory.createMBeanServer(); } String domain = new ObjectName(domain +  + snmpObjName); println(\"NOTE UDP port \" + snmpPort); snmpAdaptor = new SnmpAdaptorServer(snmpPort); snmpAdaptor.start(); print(\"NOTE: Sending a coldStart  file...\"); snmpAdaptor.setTrapPort(new Integer(snmpPort + 1)); snmpAdaptor.snmpV1Trap(0, 0, null); println(\"Done.\"); try { JMXServiceURL url = new JMXServiceURL(\"server\"); JMXConnectorServer cs = JMXConnectorServerFactory.newJMXConnectorServer(url, null, server); cs.start(); } catch (Exception ex) { println(\"Error starting RMI : =\" + ex); } ; forgerockCtsMibObjName = new ObjectName(); System.in; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 11:07:12.224161", "n_pass": [533, 37, 34], "score": "0.9975", "loss": "0.0028", "code": "public static void main(String[] args) { final MBeanServer server; final ObjectName htmlObjName; int htmlPort  = 11161; if ((args.length != 0) && (args.length != 1)) {System.exit(1); } else if (args.length == 1) { try {(new Integer(args[0])).intValue(); if (nbTraps < 0) { usage; } } catch (java.lang.NumberFormatException e) { System.exit(1); } } try { servers = MBeanServerFactory.findMBeanServer(null); if ((servers != null) && !servers.isEmpty()) { server = servers.get(0); } else { server = MBeanServerFactory.createMBeanServer(); } String domain = new ObjectName(domain +  + snmpObjName); println(\"NOTE UDP port \" + snmpPort); snmpAdaptor = new SnmpAdaptorServer(snmpPort); snmpAdaptor.start(); print(\"NOTE: Sending a coldStart  file...\"); snmpAdaptor.setTrapPort(new Integer(snmpPort + 1)); snmpAdaptor.snmpV1Trap(0, 0, null); println(\"Done.\"); try { JMXServiceURL url = new JMXServiceURL(\"server\"); JMXConnectorServer cs = JMXConnectorServerFactory.newJMXConnectorServer(url, null, server); cs.start(); } catch (Exception ex) { println(\"Error starting RMI : =\" + ex); } ; forgerockCtsMibObjName = new ObjectName(); System.in; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 11:07:13.688688", "n_pass": [534, 38, 35], "score": "0.9941", "loss": "0.007", "code": "public static void main(String[] args) { final MBeanServer server; final ObjectName htmlObjName; int htmlPort  = 11161; if ((args.length != 0) && (args.length != 1)) {System.exit(1); } else if (args.length == 1) { try {(new Integer(args[0])).intValue(); if (nbTraps < 0) { usage; } } catch (java.lang.NumberFormatException e) { System.exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null) && !servers.isEmpty()) { server = servers.get(0); } else { server = MBeanServerFactory.createMBeanServer(); } String domain = new ObjectName(domain +  + snmpObjName); println(\"NOTE UDP port \" + snmpPort); snmpAdaptor = new SnmpAdaptorServer(snmpPort); snmpAdaptor.start(); print(\"NOTE: Sending a coldStart  file...\"); snmpAdaptor.setTrapPort(new Integer(snmpPort + 1)); snmpAdaptor.snmpV1Trap(0, 0, null); println(\"Done.\"); try { JMXServiceURL url = new JMXServiceURL(\"server\"); JMXConnectorServer cs = JMXConnectorServerFactory.newJMXConnectorServer(url, null, server); cs.start(); } catch (Exception ex) { println(\"Error starting RMI : =\" + ex); } ; forgerockCtsMibObjName = new ObjectName(); System.in; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 11:07:15.186918", "n_pass": [552, 39, 36], "score": "0.9926", "loss": "0.0081", "code": "public static void main(String[] args) { final MBeanServer server; final ObjectName htmlObjName; int htmlPort  = 11161; if ((args.length != 0) && (args.length != 1)) {System.exit(1); } else if (args.length == 1) { try {(new Integer(args[0])).intValue(); if (nbTraps < 0) { usage; } } catch (java.lang.NumberFormatException e) { System.exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null) && !servers.isEmpty()) { server = servers.get(0); } else { server = MBeanServerFactory.createMBeanServer(); } String domain = new ObjectName(domain +  + snmpObjName); println(\"NOTE UDP port \" + snmpPort); SnmpAdaptorServer(snmpPort); snmpAdaptor.start(); print(\"NOTE: Sending a coldStart  file...\"); snmpAdaptor.setTrapPort(new Integer(snmpPort + 1)); snmpAdaptor.snmpV1Trap(0, 0, null); println(\"Done.\"); try { JMXServiceURL url = new JMXServiceURL(\"server\"); JMXConnectorServer cs = JMXConnectorServerFactory.newJMXConnectorServer(url, null, server); cs.start(); } catch (Exception ex) { println(\"Error starting RMI : =\" + ex); } ; forgerockCtsMibObjName = new ObjectName(); System.in; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 11:07:16.636314", "n_pass": [553, 40, 37], "score": "0.9672", "loss": "0.0393", "code": "public static void main(String[] args) { final MBeanServer server; final ObjectName htmlObjName; int htmlPort  = 11161; if ((args.length != 0) && (args.length != 1)) {System.exit(1); } else if (args.length == 1) { try {(new Integer(args[0])).intValue(); if (nbTraps < 0) { usage; } } catch (java.lang.NumberFormatException e) { System.exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null) && !servers.isEmpty()) { server = servers.get(0); } else { server = MBeanServerFactory.createMBeanServer(); } String domain = new ObjectName(domain +  + snmpObjName); println(\"NOTE UDP port \" + snmpPort); snmpAdaptor.start(); print(\"NOTE: Sending a coldStart  file...\"); snmpAdaptor.setTrapPort(new Integer(snmpPort + 1)); snmpAdaptor.snmpV1Trap(0, 0, null); println(\"Done.\"); try { JMXServiceURL url = new JMXServiceURL(\"server\"); JMXConnectorServer cs = JMXConnectorServerFactory.newJMXConnectorServer(url, null, server); cs.start(); } catch (Exception ex) { println(\"Error starting RMI : =\" + ex); } ; forgerockCtsMibObjName = new ObjectName(); System.in; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 11:07:18.118532", "n_pass": [554, 41, 38], "score": "0.9963", "loss": "0.0044", "code": "public static void main(String[] args) { final MBeanServer server; final ObjectName htmlObjName; int htmlPort  = 11161; if ((args.length != 0) && (args.length != 1)) {System.exit(1); } else if (args.length == 1) { try {(new Integer(args[0])).intValue(); if (nbTraps < 0) { usage; } } catch (java.lang.NumberFormatException e) { System.exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null) && !servers.isEmpty()) { server = servers.get(0); } else { server = MBeanServerFactory.createMBeanServer(); } String domain = new ObjectName(domain +  + snmpObjName); println(\"NOTE UDP port \" + snmpPort);; print(\"NOTE: Sending a coldStart  file...\"); snmpAdaptor.setTrapPort(new Integer(snmpPort + 1)); snmpAdaptor.snmpV1Trap(0, 0, null); println(\"Done.\"); try { JMXServiceURL url = new JMXServiceURL(\"server\"); JMXConnectorServer cs = JMXConnectorServerFactory.newJMXConnectorServer(url, null, server); cs.start(); } catch (Exception ex) { println(\"Error starting RMI : =\" + ex); } ; forgerockCtsMibObjName = new ObjectName(); System.in; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 11:07:19.578175", "n_pass": [556, 42, 39], "score": "0.9673", "loss": "0.0423", "code": "public static void main(String[] args) { final MBeanServer server; final ObjectName htmlObjName; int htmlPort  = 11161; if ((args.length != 0) && (args.length != 1)) {System.exit(1); } else if (args.length == 1) { try {(new Integer(args[0])).intValue(); if (nbTraps < 0) { usage; } } catch (java.lang.NumberFormatException e) { System.exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null) && !servers.isEmpty()) { server = servers.get(0); } else { server = MBeanServerFactory.createMBeanServer(); } String domain = new ObjectName(domain +  + snmpObjName); println(\"NOTE UDP port \" + snmpPort);; print(\"NOTEcoldStart  file...\"); snmpAdaptor.setTrapPort(new Integer(snmpPort + 1)); snmpAdaptor.snmpV1Trap(0, 0, null); println(\"Done.\"); try { JMXServiceURL url = new JMXServiceURL(\"server\"); JMXConnectorServer cs = JMXConnectorServerFactory.newJMXConnectorServer(url, null, server); cs.start(); } catch (Exception ex) { println(\"Error starting RMI : =\" + ex); } ; forgerockCtsMibObjName = new ObjectName(); System.in; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 11:07:21.025704", "n_pass": [557, 43, 40], "score": "0.9911", "loss": "0.0104", "code": "public static void main(String[] args) { final MBeanServer server; final ObjectName htmlObjName; int htmlPort  = 11161; if ((args.length != 0) && (args.length != 1)) {System.exit(1); } else if (args.length == 1) { try {(new Integer(args[0])).intValue(); if (nbTraps < 0) { usage; } } catch (java.lang.NumberFormatException e) { System.exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null) && !servers.isEmpty()) { server = servers.get(0); } else { server = MBeanServerFactory.createMBeanServer(); } String domain = new ObjectName(domain +  + snmpObjName); println(\"NOTE UDP port \" + snmpPort);; print(\"NOTE.\"); snmpAdaptor.setTrapPort(new Integer(snmpPort + 1)); snmpAdaptor.snmpV1Trap(0, 0, null); println(\"Done.\"); try { JMXServiceURL url = new JMXServiceURL(\"server\"); JMXConnectorServer cs = JMXConnectorServerFactory.newJMXConnectorServer(url, null, server); cs.start(); } catch (Exception ex) { println(\"Error starting RMI : =\" + ex); } ; forgerockCtsMibObjName = new ObjectName(); System.in; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 11:07:22.506336", "n_pass": [569, 44, 41], "score": "0.9871", "loss": "0.015", "code": "public static void main(String[] args) { final MBeanServer server; final ObjectName htmlObjName; int htmlPort  = 11161; if ((args.length != 0) && (args.length != 1)) {System.exit(1); } else if (args.length == 1) { try {(new Integer(args[0])).intValue(); if (nbTraps < 0) { usage; } } catch (java.lang.NumberFormatException e) { System.exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null) && !servers.isEmpty()) { server = servers.get(0); } else { server = MBeanServerFactory.createMBeanServer(); } String domain = new ObjectName(domain +  + snmpObjName); println(\"NOTE UDP port \" + snmpPort);; print(\"NOTE.\"); snmpAdaptor.setTrapPort(new Integer(snmpPort + 1)); snmpAdaptor.snmpV1Trap(0, 0, null); println(\"Done.\"); try { JMXServiceURL url = new JMXServiceURL(\"server\"); JMXConnectorServerFactory.newJMXConnectorServer(url, null, server); cs.start(); } catch (Exception ex) { println(\"Error starting RMI : =\" + ex); } ; forgerockCtsMibObjName = new ObjectName(); System.in; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 11:07:23.957175", "n_pass": [571, 45, 42], "score": "0.9971", "loss": "0.0033", "code": "public static void main(String[] args) { final MBeanServer server; final ObjectName htmlObjName; int htmlPort  = 11161; if ((args.length != 0) && (args.length != 1)) {System.exit(1); } else if (args.length == 1) { try {(new Integer(args[0])).intValue(); if (nbTraps < 0) { usage; } } catch (java.lang.NumberFormatException e) { System.exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null) && !servers.isEmpty()) { server = servers.get(0); } else { server = MBeanServerFactory.createMBeanServer(); } String domain = new ObjectName(domain +  + snmpObjName); println(\"NOTE UDP port \" + snmpPort);; print(\"NOTE.\"); snmpAdaptor.setTrapPort(new Integer(snmpPort + 1)); snmpAdaptor.snmpV1Trap(0, 0, null); println(\"Done.\"); try { JMXServiceURL url = new JMXServiceURL(\"server\"); JMXConnectorServerFactory.newJMXConnectorServer(url); cs.start(); } catch (Exception ex) { println(\"Error starting RMI : =\" + ex); } ; forgerockCtsMibObjName = new ObjectName(); System.in; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 11:07:25.876021", "n_pass": [591, 46, 43], "score": "0.9929", "loss": "0.0087", "code": "public static void main(String[] args) { final MBeanServer server; final int htmlPort  = 11161; if ((args.length != 0) && (args.length != 1)) {System.exit(1); } else if (args.length == 1) { try {(new Integer(args[0])).intValue(); if (nbTraps < 0) { usage; } } catch (java.lang.NumberFormatException e) { System.exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null) && !servers.isEmpty()) { server = servers.get(0); } else { server = MBeanServerFactory.createMBeanServer(); } String domain = new ObjectName(domain +  + snmpObjName); println(\"NOTE UDP port \" + snmpPort);; print(\"NOTE.\"); snmpAdaptor.setTrapPort(new Integer(snmpPort + 1)); snmpAdaptor.snmpV1Trap(0, 0, null); println(\"Done.\"); try { JMXServiceURL url = new JMXServiceURL(\"server\"); JMXConnectorServerFactory.newJMXConnectorServer(url); cs.start(); } catch (Exception ex) { println(\"Error starting RMI : =\" + ex); } ; forgerockCtsMibObjName = new ObjectName(); System.in; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 11:07:28.706102", "n_pass": [825, 47, 44], "score": "0.9926", "loss": "0.0087", "code": "public static void main(String[] args) { final MBeanServer server; int htmlPort  = 11161; if ((args.length != 0) && (args.length != 1)) {System.exit(1); } else if (args.length == 1) { try {(new Integer(args[0])).intValue(); if (nbTraps < 0) { usage; } } catch (java.lang.NumberFormatException e) { System.exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null) && !servers.isEmpty()) { server = servers.get(0); } else { server = MBeanServerFactory.createMBeanServer(); } String domain = new ObjectName(domain +  + snmpObjName); println(\"NOTE UDP port \" + snmpPort);; print(\"NOTE.\"); snmpAdaptor.setTrapPort(new Integer(snmpPort + 1)); snmpAdaptor.snmpV1Trap(0, 0, null); println(\"Done.\"); try { JMXServiceURL url = new JMXServiceURL(\"server\"); JMXConnectorServerFactory.newJMXConnectorServer(url); cs.start(); } catch (Exception ex) { println(\"Error starting RMI : =\" + ex); } ; forgerockCtsMibObjName = new ObjectName(); System.in; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 11:07:30.168961", "n_pass": [826, 48, 45], "score": "0.9774", "loss": "0.0269", "code": "public static void main(String[] args) { final MBeanServer server; htmlPort  = 11161; if ((args.length != 0) && (args.length != 1)) {System.exit(1); } else if (args.length == 1) { try {(new Integer(args[0])).intValue(); if (nbTraps < 0) { usage; } } catch (java.lang.NumberFormatException e) { System.exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null) && !servers.isEmpty()) { server = servers.get(0); } else { server = MBeanServerFactory.createMBeanServer(); } String domain = new ObjectName(domain +  + snmpObjName); println(\"NOTE UDP port \" + snmpPort);; print(\"NOTE.\"); snmpAdaptor.setTrapPort(new Integer(snmpPort + 1)); snmpAdaptor.snmpV1Trap(0, 0, null); println(\"Done.\"); try { JMXServiceURL url = new JMXServiceURL(\"server\"); JMXConnectorServerFactory.newJMXConnectorServer(url); cs.start(); } catch (Exception ex) { println(\"Error starting RMI : =\" + ex); } ; forgerockCtsMibObjName = new ObjectName(); System.in; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 11:07:31.624100", "n_pass": [829, 49, 46], "score": "0.9948", "loss": "0.0061", "code": "public static void main(String[] args) { final MBeanServer server; htmlPort  =1161; if ((args.length != 0) && (args.length != 1)) {System.exit(1); } else if (args.length == 1) { try {(new Integer(args[0])).intValue(); if (nbTraps < 0) { usage; } } catch (java.lang.NumberFormatException e) { System.exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null) && !servers.isEmpty()) { server = servers.get(0); } else { server = MBeanServerFactory.createMBeanServer(); } String domain = new ObjectName(domain +  + snmpObjName); println(\"NOTE UDP port \" + snmpPort);; print(\"NOTE.\"); snmpAdaptor.setTrapPort(new Integer(snmpPort + 1)); snmpAdaptor.snmpV1Trap(0, 0, null); println(\"Done.\"); try { JMXServiceURL url = new JMXServiceURL(\"server\"); JMXConnectorServerFactory.newJMXConnectorServer(url); cs.start(); } catch (Exception ex) { println(\"Error starting RMI : =\" + ex); } ; forgerockCtsMibObjName = new ObjectName(); System.in; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 11:07:33.091920", "n_pass": [830, 50, 47], "score": "0.9642", "loss": "0.0424", "code": "public static void main(String[] args) { final MBeanServer server; htmlPort  =61; if ((args.length != 0) && (args.length != 1)) {System.exit(1); } else if (args.length == 1) { try {(new Integer(args[0])).intValue(); if (nbTraps < 0) { usage; } } catch (java.lang.NumberFormatException e) { System.exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null) && !servers.isEmpty()) { server = servers.get(0); } else { server = MBeanServerFactory.createMBeanServer(); } String domain = new ObjectName(domain +  + snmpObjName); println(\"NOTE UDP port \" + snmpPort);; print(\"NOTE.\"); snmpAdaptor.setTrapPort(new Integer(snmpPort + 1)); snmpAdaptor.snmpV1Trap(0, 0, null); println(\"Done.\"); try { JMXServiceURL url = new JMXServiceURL(\"server\"); JMXConnectorServerFactory.newJMXConnectorServer(url); cs.start(); } catch (Exception ex) { println(\"Error starting RMI : =\" + ex); } ; forgerockCtsMibObjName = new ObjectName(); System.in; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 11:07:34.550058", "n_pass": [835, 51, 48], "score": "0.9888", "loss": "0.013", "code": "public static void main(String[] args) { final MBeanServer server; htmlPort  =61; if ((length != 0) && (args.length != 1)) {System.exit(1); } else if (args.length == 1) { try {(new Integer(args[0])).intValue(); if (nbTraps < 0) { usage; } } catch (java.lang.NumberFormatException e) { System.exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null) && !servers.isEmpty()) { server = servers.get(0); } else { server = MBeanServerFactory.createMBeanServer(); } String domain = new ObjectName(domain +  + snmpObjName); println(\"NOTE UDP port \" + snmpPort);; print(\"NOTE.\"); snmpAdaptor.setTrapPort(new Integer(snmpPort + 1)); snmpAdaptor.snmpV1Trap(0, 0, null); println(\"Done.\"); try { JMXServiceURL url = new JMXServiceURL(\"server\"); JMXConnectorServerFactory.newJMXConnectorServer(url); cs.start(); } catch (Exception ex) { println(\"Error starting RMI : =\" + ex); } ; forgerockCtsMibObjName = new ObjectName(); System.in; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 11:07:35.998024", "n_pass": [842, 52, 49], "score": "0.9964", "loss": "0.0043", "code": "public static void main(String[] args) { final MBeanServer server; htmlPort  =61; if ((length != 0) && (length != 1)) {System.exit(1); } else if (args.length == 1) { try {(new Integer(args[0])).intValue(); if (nbTraps < 0) { usage; } } catch (java.lang.NumberFormatException e) { System.exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null) && !servers.isEmpty()) { server = servers.get(0); } else { server = MBeanServerFactory.createMBeanServer(); } String domain = new ObjectName(domain +  + snmpObjName); println(\"NOTE UDP port \" + snmpPort);; print(\"NOTE.\"); snmpAdaptor.setTrapPort(new Integer(snmpPort + 1)); snmpAdaptor.snmpV1Trap(0, 0, null); println(\"Done.\"); try { JMXServiceURL url = new JMXServiceURL(\"server\"); JMXConnectorServerFactory.newJMXConnectorServer(url); cs.start(); } catch (Exception ex) { println(\"Error starting RMI : =\" + ex); } ; forgerockCtsMibObjName = new ObjectName(); System.in; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 11:07:37.456495", "n_pass": [853, 53, 50], "score": "0.9955", "loss": "0.0055", "code": "public static void main(String[] args) { final MBeanServer server; htmlPort  =61; if ((length != 0) && (length != 1)) {System.exit(1); } else if (args== 1) { try {(new Integer(args[0])).intValue(); if (nbTraps < 0) { usage; } } catch (java.lang.NumberFormatException e) { System.exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null) && !servers.isEmpty()) { server = servers.get(0); } else { server = MBeanServerFactory.createMBeanServer(); } String domain = new ObjectName(domain +  + snmpObjName); println(\"NOTE UDP port \" + snmpPort);; print(\"NOTE.\"); snmpAdaptor.setTrapPort(new Integer(snmpPort + 1)); snmpAdaptor.snmpV1Trap(0, 0, null); println(\"Done.\"); try { JMXServiceURL url = new JMXServiceURL(\"server\"); JMXConnectorServerFactory.newJMXConnectorServer(url); cs.start(); } catch (Exception ex) { println(\"Error starting RMI : =\" + ex); } ; forgerockCtsMibObjName = new ObjectName(); System.in; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 11:07:38.890405", "n_pass": [854, 54, 51], "score": "0.9846", "loss": "0.0185", "code": "public static void main(String[] args) { final MBeanServer server; htmlPort  =61; if ((length != 0) && (length != 1)) {System.exit(1); } else if (args1) { try {(new Integer(args[0])).intValue(); if (nbTraps < 0) { usage; } } catch (java.lang.NumberFormatException e) { System.exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null) && !servers.isEmpty()) { server = servers.get(0); } else { server = MBeanServerFactory.createMBeanServer(); } String domain = new ObjectName(domain +  + snmpObjName); println(\"NOTE UDP port \" + snmpPort);; print(\"NOTE.\"); snmpAdaptor.setTrapPort(new Integer(snmpPort + 1)); snmpAdaptor.snmpV1Trap(0, 0, null); println(\"Done.\"); try { JMXServiceURL url = new JMXServiceURL(\"server\"); JMXConnectorServerFactory.newJMXConnectorServer(url); cs.start(); } catch (Exception ex) { println(\"Error starting RMI : =\" + ex); } ; forgerockCtsMibObjName = new ObjectName(); System.in; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 11:07:40.460154", "n_pass": [858, 55, 52], "score": "0.9945", "loss": "0.0073", "code": "public static void main(String[] args) { final MBeanServer server; htmlPort  =61; if ((length != 0) && (length != 1)) {System.exit(1); } else if (args1) { try {((args[0])).intValue(); if (nbTraps < 0) { usage; } } catch (java.lang.NumberFormatException e) { System.exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null) && !servers.isEmpty()) { server = servers.get(0); } else { server = MBeanServerFactory.createMBeanServer(); } String domain = new ObjectName(domain +  + snmpObjName); println(\"NOTE UDP port \" + snmpPort);; print(\"NOTE.\"); snmpAdaptor.setTrapPort(new Integer(snmpPort + 1)); snmpAdaptor.snmpV1Trap(0, 0, null); println(\"Done.\"); try { JMXServiceURL url = new JMXServiceURL(\"server\"); JMXConnectorServerFactory.newJMXConnectorServer(url); cs.start(); } catch (Exception ex) { println(\"Error starting RMI : =\" + ex); } ; forgerockCtsMibObjName = new ObjectName(); System.in; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 11:07:41.918343", "n_pass": [865, 56, 53], "score": "0.997", "loss": "0.0037", "code": "public static void main(String[] args) { final MBeanServer server; htmlPort  =61; if ((length != 0) && (length != 1)) {System.exit(1); } else if (args1) { try {((args[0])).intValue(); if (nbTraps ) { usage; } } catch (java.lang.NumberFormatException e) { System.exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null) && !servers.isEmpty()) { server = servers.get(0); } else { server = MBeanServerFactory.createMBeanServer(); } String domain = new ObjectName(domain +  + snmpObjName); println(\"NOTE UDP port \" + snmpPort);; print(\"NOTE.\"); snmpAdaptor.setTrapPort(new Integer(snmpPort + 1)); snmpAdaptor.snmpV1Trap(0, 0, null); println(\"Done.\"); try { JMXServiceURL url = new JMXServiceURL(\"server\"); JMXConnectorServerFactory.newJMXConnectorServer(url); cs.start(); } catch (Exception ex) { println(\"Error starting RMI : =\" + ex); } ; forgerockCtsMibObjName = new ObjectName(); System.in; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 11:07:43.351840", "n_pass": [867, 57, 54], "score": "0.9977", "loss": "0.0028", "code": "public static void main(String[] args) { final MBeanServer server; htmlPort  =61; if ((length != 0) && (length != 1)) {System.exit(1); } else if (args1) { try {((args[0])).intValue(); if (nbTraps ) { } } catch (java.lang.NumberFormatException e) { System.exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null) && !servers.isEmpty()) { server = servers.get(0); } else { server = MBeanServerFactory.createMBeanServer(); } String domain = new ObjectName(domain +  + snmpObjName); println(\"NOTE UDP port \" + snmpPort);; print(\"NOTE.\"); snmpAdaptor.setTrapPort(new Integer(snmpPort + 1)); snmpAdaptor.snmpV1Trap(0, 0, null); println(\"Done.\"); try { JMXServiceURL url = new JMXServiceURL(\"server\"); JMXConnectorServerFactory.newJMXConnectorServer(url); cs.start(); } catch (Exception ex) { println(\"Error starting RMI : =\" + ex); } ; forgerockCtsMibObjName = new ObjectName(); System.in; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 11:07:44.823057", "n_pass": [871, 58, 55], "score": "0.9918", "loss": "0.01", "code": "public static void main(String[] args) { final MBeanServer server; htmlPort  =61; if ((length != 0) && (length != 1)) {System.exit(1); } else if (args1) { try {((args[0])).intValue(); if (nbTraps ) { } } catch (javaNumberFormatException e) { System.exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null) && !servers.isEmpty()) { server = servers.get(0); } else { server = MBeanServerFactory.createMBeanServer(); } String domain = new ObjectName(domain +  + snmpObjName); println(\"NOTE UDP port \" + snmpPort);; print(\"NOTE.\"); snmpAdaptor.setTrapPort(new Integer(snmpPort + 1)); snmpAdaptor.snmpV1Trap(0, 0, null); println(\"Done.\"); try { JMXServiceURL url = new JMXServiceURL(\"server\"); JMXConnectorServerFactory.newJMXConnectorServer(url); cs.start(); } catch (Exception ex) { println(\"Error starting RMI : =\" + ex); } ; forgerockCtsMibObjName = new ObjectName(); System.in; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 11:07:46.268933", "n_pass": [874, 59, 56], "score": "0.9949", "loss": "0.006", "code": "public static void main(String[] args) { final MBeanServer server; htmlPort  =61; if ((length != 0) && (length != 1)) {System.exit(1); } else if (args1) { try {((args[0])).intValue(); if (nbTraps ) { } } catch (javaNumberFormatException e) {exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null) && !servers.isEmpty()) { server = servers.get(0); } else { server = MBeanServerFactory.createMBeanServer(); } String domain = new ObjectName(domain +  + snmpObjName); println(\"NOTE UDP port \" + snmpPort);; print(\"NOTE.\"); snmpAdaptor.setTrapPort(new Integer(snmpPort + 1)); snmpAdaptor.snmpV1Trap(0, 0, null); println(\"Done.\"); try { JMXServiceURL url = new JMXServiceURL(\"server\"); JMXConnectorServerFactory.newJMXConnectorServer(url); cs.start(); } catch (Exception ex) { println(\"Error starting RMI : =\" + ex); } ; forgerockCtsMibObjName = new ObjectName(); System.in; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 11:07:47.766242", "n_pass": [887, 60, 57], "score": "0.976", "loss": "0.0289", "code": "public static void main(String[] args) { final MBeanServer server; htmlPort  =61; if ((length != 0) && (length != 1)) {System.exit(1); } else if (args1) { try {((args[0])).intValue(); if (nbTraps ) { } } catch (javaNumberFormatException e) {exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null) && isEmpty()) { server = servers.get(0); } else { server = MBeanServerFactory.createMBeanServer(); } String domain = new ObjectName(domain +  + snmpObjName); println(\"NOTE UDP port \" + snmpPort);; print(\"NOTE.\"); snmpAdaptor.setTrapPort(new Integer(snmpPort + 1)); snmpAdaptor.snmpV1Trap(0, 0, null); println(\"Done.\"); try { JMXServiceURL url = new JMXServiceURL(\"server\"); JMXConnectorServerFactory.newJMXConnectorServer(url); cs.start(); } catch (Exception ex) { println(\"Error starting RMI : =\" + ex); } ; forgerockCtsMibObjName = new ObjectName(); System.in; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 11:07:49.203697", "n_pass": [891, 61, 58], "score": "0.9972", "loss": "0.0032", "code": "public static void main(String[] args) { final MBeanServer server; htmlPort  =61; if ((length != 0) && (length != 1)) {System.exit(1); } else if (args1) { try {((args[0])).intValue(); if (nbTraps ) { } } catch (javaNumberFormatException e) {exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null) && isEmpty()) { server .get(0); } else { server = MBeanServerFactory.createMBeanServer(); } String domain = new ObjectName(domain +  + snmpObjName); println(\"NOTE UDP port \" + snmpPort);; print(\"NOTE.\"); snmpAdaptor.setTrapPort(new Integer(snmpPort + 1)); snmpAdaptor.snmpV1Trap(0, 0, null); println(\"Done.\"); try { JMXServiceURL url = new JMXServiceURL(\"server\"); JMXConnectorServerFactory.newJMXConnectorServer(url); cs.start(); } catch (Exception ex) { println(\"Error starting RMI : =\" + ex); } ; forgerockCtsMibObjName = new ObjectName(); System.in; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 11:07:50.684321", "n_pass": [897, 62, 59], "score": "0.9929", "loss": "0.0082", "code": "public static void main(String[] args) { final MBeanServer server; htmlPort  =61; if ((length != 0) && (length != 1)) {System.exit(1); } else if (args1) { try {((args[0])).intValue(); if (nbTraps ) { } } catch (javaNumberFormatException e) {exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null) && isEmpty()) { server .get(0); } else { server .createMBeanServer(); } String domain = new ObjectName(domain +  + snmpObjName); println(\"NOTE UDP port \" + snmpPort);; print(\"NOTE.\"); snmpAdaptor.setTrapPort(new Integer(snmpPort + 1)); snmpAdaptor.snmpV1Trap(0, 0, null); println(\"Done.\"); try { JMXServiceURL url = new JMXServiceURL(\"server\"); JMXConnectorServerFactory.newJMXConnectorServer(url); cs.start(); } catch (Exception ex) { println(\"Error starting RMI : =\" + ex); } ; forgerockCtsMibObjName = new ObjectName(); System.in; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 11:07:52.132365", "n_pass": [901, 63, 60], "score": "0.9632", "loss": "0.0474", "code": "public static void main(String[] args) { final MBeanServer server; htmlPort  =61; if ((length != 0) && (length != 1)) {System.exit(1); } else if (args1) { try {((args[0])).intValue(); if (nbTraps ) { } } catch (javaNumberFormatException e) {exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null) && isEmpty()) { server .get(0); } else { server .createMBeanServer(); } String= new ObjectName(domain +  + snmpObjName); println(\"NOTE UDP port \" + snmpPort);; print(\"NOTE.\"); snmpAdaptor.setTrapPort(new Integer(snmpPort + 1)); snmpAdaptor.snmpV1Trap(0, 0, null); println(\"Done.\"); try { JMXServiceURL url = new JMXServiceURL(\"server\"); JMXConnectorServerFactory.newJMXConnectorServer(url); cs.start(); } catch (Exception ex) { println(\"Error starting RMI : =\" + ex); } ; forgerockCtsMibObjName = new ObjectName(); System.in; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 11:07:53.591087", "n_pass": [904, 64, 61], "score": "0.9938", "loss": "0.0071", "code": "public static void main(String[] args) { final MBeanServer server; htmlPort  =61; if ((length != 0) && (length != 1)) {System.exit(1); } else if (args1) { try {((args[0])).intValue(); if (nbTraps ) { } } catch (javaNumberFormatException e) {exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null) && isEmpty()) { server .get(0); } else { server .createMBeanServer(); } String= new ObjectName(  + snmpObjName); println(\"NOTE UDP port \" + snmpPort);; print(\"NOTE.\"); snmpAdaptor.setTrapPort(new Integer(snmpPort + 1)); snmpAdaptor.snmpV1Trap(0, 0, null); println(\"Done.\"); try { JMXServiceURL url = new JMXServiceURL(\"server\"); JMXConnectorServerFactory.newJMXConnectorServer(url); cs.start(); } catch (Exception ex) { println(\"Error starting RMI : =\" + ex); } ; forgerockCtsMibObjName = new ObjectName(); System.in; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 11:07:55.017703", "n_pass": [905, 65, 62], "score": "0.9417", "loss": "0.0812", "code": "public static void main(String[] args) { final MBeanServer server; htmlPort  =61; if ((length != 0) && (length != 1)) {System.exit(1); } else if (args1) { try {((args[0])).intValue(); if (nbTraps ) { } } catch (javaNumberFormatException e) {exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null) && isEmpty()) { server .get(0); } else { server .createMBeanServer(); } String= new ObjectName( snmpObjName); println(\"NOTE UDP port \" + snmpPort);; print(\"NOTE.\"); snmpAdaptor.setTrapPort(new Integer(snmpPort + 1)); snmpAdaptor.snmpV1Trap(0, 0, null); println(\"Done.\"); try { JMXServiceURL url = new JMXServiceURL(\"server\"); JMXConnectorServerFactory.newJMXConnectorServer(url); cs.start(); } catch (Exception ex) { println(\"Error starting RMI : =\" + ex); } ; forgerockCtsMibObjName = new ObjectName(); System.in; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 11:07:56.449849", "n_pass": [909, 66, 63], "score": "0.9976", "loss": "0.0029", "code": "public static void main(String[] args) { final MBeanServer server; htmlPort  =61; if ((length != 0) && (length != 1)) {System.exit(1); } else if (args1) { try {((args[0])).intValue(); if (nbTraps ) { } } catch (javaNumberFormatException e) {exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null) && isEmpty()) { server .get(0); } else { server .createMBeanServer(); } String= new ObjectName( snmpObjName); println(\"NOTEport \" + snmpPort);; print(\"NOTE.\"); snmpAdaptor.setTrapPort(new Integer(snmpPort + 1)); snmpAdaptor.snmpV1Trap(0, 0, null); println(\"Done.\"); try { JMXServiceURL url = new JMXServiceURL(\"server\"); JMXConnectorServerFactory.newJMXConnectorServer(url); cs.start(); } catch (Exception ex) { println(\"Error starting RMI : =\" + ex); } ; forgerockCtsMibObjName = new ObjectName(); System.in; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 11:07:57.883012", "n_pass": [913, 67, 64], "score": "0.9978", "loss": "0.003", "code": "public static void main(String[] args) { final MBeanServer server; htmlPort  =61; if ((length != 0) && (length != 1)) {System.exit(1); } else if (args1) { try {((args[0])).intValue(); if (nbTraps ) { } } catch (javaNumberFormatException e) {exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null) && isEmpty()) { server .get(0); } else { server .createMBeanServer(); } String= new ObjectName( snmpObjName); println(\"NOTEport \" + snmpPort);(\"NOTE.\"); snmpAdaptor.setTrapPort(new Integer(snmpPort + 1)); snmpAdaptor.snmpV1Trap(0, 0, null); println(\"Done.\"); try { JMXServiceURL url = new JMXServiceURL(\"server\"); JMXConnectorServerFactory.newJMXConnectorServer(url); cs.start(); } catch (Exception ex) { println(\"Error starting RMI : =\" + ex); } ; forgerockCtsMibObjName = new ObjectName(); System.in; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 11:07:59.312954", "n_pass": [916, 68, 65], "score": "0.9792", "loss": "0.0248", "code": "public static void main(String[] args) { final MBeanServer server; htmlPort  =61; if ((length != 0) && (length != 1)) {System.exit(1); } else if (args1) { try {((args[0])).intValue(); if (nbTraps ) { } } catch (javaNumberFormatException e) {exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null) && isEmpty()) { server .get(0); } else { server .createMBeanServer(); } String= new ObjectName( snmpObjName); println(\"NOTEport \" + snmpPort);(\"NOTE.\").setTrapPort(new Integer(snmpPort + 1)); snmpAdaptor.snmpV1Trap(0, 0, null); println(\"Done.\"); try { JMXServiceURL url = new JMXServiceURL(\"server\"); JMXConnectorServerFactory.newJMXConnectorServer(url); cs.start(); } catch (Exception ex) { println(\"Error starting RMI : =\" + ex); } ; forgerockCtsMibObjName = new ObjectName(); System.in; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 11:08:00.740775", "n_pass": [918, 69, 66], "score": "0.9276", "loss": "0.0959", "code": "public static void main(String[] args) { final MBeanServer server; htmlPort  =61; if ((length != 0) && (length != 1)) {System.exit(1); } else if (args1) { try {((args[0])).intValue(); if (nbTraps ) { } } catch (javaNumberFormatException e) {exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null) && isEmpty()) { server .get(0); } else { server .createMBeanServer(); } String= new ObjectName( snmpObjName); println(\"NOTEport \" + snmpPort);(\"NOTE.\").setTrapPort((snmpPort + 1)); snmpAdaptor.snmpV1Trap(0, 0, null); println(\"Done.\"); try { JMXServiceURL url = new JMXServiceURL(\"server\"); JMXConnectorServerFactory.newJMXConnectorServer(url); cs.start(); } catch (Exception ex) { println(\"Error starting RMI : =\" + ex); } ; forgerockCtsMibObjName = new ObjectName(); System.in; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 11:08:02.169180", "n_pass": [920, 70, 67], "score": "0.9867", "loss": "0.0177", "code": "public static void main(String[] args) { final MBeanServer server; htmlPort  =61; if ((length != 0) && (length != 1)) {System.exit(1); } else if (args1) { try {((args[0])).intValue(); if (nbTraps ) { } } catch (javaNumberFormatException e) {exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null) && isEmpty()) { server .get(0); } else { server .createMBeanServer(); } String= new ObjectName( snmpObjName); println(\"NOTEport \" + snmpPort);(\"NOTE.\").setTrapPort((snmpPort )); snmpAdaptor.snmpV1Trap(0, 0, null); println(\"Done.\"); try { JMXServiceURL url = new JMXServiceURL(\"server\"); JMXConnectorServerFactory.newJMXConnectorServer(url); cs.start(); } catch (Exception ex) { println(\"Error starting RMI : =\" + ex); } ; forgerockCtsMibObjName = new ObjectName(); System.in; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 11:08:03.626790", "n_pass": [922, 71, 68], "score": "0.9466", "loss": "0.0723", "code": "public static void main(String[] args) { final MBeanServer server; htmlPort  =61; if ((length != 0) && (length != 1)) {System.exit(1); } else if (args1) { try {((args[0])).intValue(); if (nbTraps ) { } } catch (javaNumberFormatException e) {exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null) && isEmpty()) { server .get(0); } else { server .createMBeanServer(); } String= new ObjectName( snmpObjName); println(\"NOTEport \" + snmpPort);(\"NOTE.\").setTrapPort((snmpPort ));snmpV1Trap(0, 0, null); println(\"Done.\"); try { JMXServiceURL url = new JMXServiceURL(\"server\"); JMXConnectorServerFactory.newJMXConnectorServer(url); cs.start(); } catch (Exception ex) { println(\"Error starting RMI : =\" + ex); } ; forgerockCtsMibObjName = new ObjectName(); System.in; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 11:08:05.084377", "n_pass": [925, 72, 69], "score": "0.9859", "loss": "0.0175", "code": "public static void main(String[] args) { final MBeanServer server; htmlPort  =61; if ((length != 0) && (length != 1)) {System.exit(1); } else if (args1) { try {((args[0])).intValue(); if (nbTraps ) { } } catch (javaNumberFormatException e) {exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null) && isEmpty()) { server .get(0); } else { server .createMBeanServer(); } String= new ObjectName( snmpObjName); println(\"NOTEport \" + snmpPort);(\"NOTE.\").setTrapPort((snmpPort ));snmpV1Trap(0, null); println(\"Done.\"); try { JMXServiceURL url = new JMXServiceURL(\"server\"); JMXConnectorServerFactory.newJMXConnectorServer(url); cs.start(); } catch (Exception ex) { println(\"Error starting RMI : =\" + ex); } ; forgerockCtsMibObjName = new ObjectName(); System.in; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 11:08:06.552954", "n_pass": [934, 73, 70], "score": "0.9934", "loss": "0.0084", "code": "public static void main(String[] args) { final MBeanServer server; htmlPort  =61; if ((length != 0) && (length != 1)) {System.exit(1); } else if (args1) { try {((args[0])).intValue(); if (nbTraps ) { } } catch (javaNumberFormatException e) {exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null) && isEmpty()) { server .get(0); } else { server .createMBeanServer(); } String= new ObjectName( snmpObjName); println(\"NOTEport \" + snmpPort);(\"NOTE.\").setTrapPort((snmpPort ));snmpV1Trap(0, null); println(\"Done.\"); try { JMXServiceURL url = (\"server\"); JMXConnectorServerFactory.newJMXConnectorServer(url); cs.start(); } catch (Exception ex) { println(\"Error starting RMI : =\" + ex); } ; forgerockCtsMibObjName = new ObjectName(); System.in; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 11:08:07.975453", "n_pass": [937, 74, 71], "score": "0.9867", "loss": "0.0168", "code": "public static void main(String[] args) { final MBeanServer server; htmlPort  =61; if ((length != 0) && (length != 1)) {System.exit(1); } else if (args1) { try {((args[0])).intValue(); if (nbTraps ) { } } catch (javaNumberFormatException e) {exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null) && isEmpty()) { server .get(0); } else { server .createMBeanServer(); } String= new ObjectName( snmpObjName); println(\"NOTEport \" + snmpPort);(\"NOTE.\").setTrapPort((snmpPort ));snmpV1Trap(0, null); println(\"Done.\"); try { JMXServiceURL url = (\"server\");newJMXConnectorServer(url); cs.start(); } catch (Exception ex) { println(\"Error starting RMI : =\" + ex); } ; forgerockCtsMibObjName = new ObjectName(); System.in; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 11:08:09.458621", "n_pass": [948, 75, 72], "score": "0.9947", "loss": "0.0065", "code": "public static void main(String[] args) { final MBeanServer server; htmlPort  =61; if ((length != 0) && (length != 1)) {System.exit(1); } else if (args1) { try {((args[0])).intValue(); if (nbTraps ) { } } catch (javaNumberFormatException e) {exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null) && isEmpty()) { server .get(0); } else { server .createMBeanServer(); } String= new ObjectName( snmpObjName); println(\"NOTEport \" + snmpPort);(\"NOTE.\").setTrapPort((snmpPort ));snmpV1Trap(0, null); println(\"Done.\"); try { JMXServiceURL url = (\"server\");newJMXConnectorServer(url); cs.start(); } catch (Exception ex) { println(\"Error  : =\" + ex); } ; forgerockCtsMibObjName = new ObjectName(); System.in; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 11:08:10.878798", "n_pass": [949, 76, 73], "score": "0.9819", "loss": "0.0228", "code": "public static void main(String[] args) { final MBeanServer server; htmlPort  =61; if ((length != 0) && (length != 1)) {System.exit(1); } else if (args1) { try {((args[0])).intValue(); if (nbTraps ) { } } catch (javaNumberFormatException e) {exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null) && isEmpty()) { server .get(0); } else { server .createMBeanServer(); } String= new ObjectName( snmpObjName); println(\"NOTEport \" + snmpPort);(\"NOTE.\").setTrapPort((snmpPort ));snmpV1Trap(0, null); println(\"Done.\"); try { JMXServiceURL url = (\"server\");newJMXConnectorServer(url); cs.start(); } catch (Exception ex) { println(\"Error =\" + ex); } ; forgerockCtsMibObjName = new ObjectName(); System.in; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 11:08:12.297604", "n_pass": [951, 77, 74], "score": "0.9329", "loss": "0.0851", "code": "public static void main(String[] args) { final MBeanServer server; htmlPort  =61; if ((length != 0) && (length != 1)) {System.exit(1); } else if (args1) { try {((args[0])).intValue(); if (nbTraps ) { } } catch (javaNumberFormatException e) {exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null) && isEmpty()) { server .get(0); } else { server .createMBeanServer(); } String= new ObjectName( snmpObjName); println(\"NOTEport \" + snmpPort);(\"NOTE.\").setTrapPort((snmpPort ));snmpV1Trap(0, null); println(\"Done.\"); try { JMXServiceURL url = (\"server\");newJMXConnectorServer(url); cs.start(); } catch (Exception ex) { println(\"Error =\" ); } ; forgerockCtsMibObjName = new ObjectName(); System.in; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 11:08:13.744170", "n_pass": [958, 78, 75], "score": "0.9947", "loss": "0.0065", "code": "public static void main(String[] args) { final MBeanServer server; htmlPort  =61; if ((length != 0) && (length != 1)) {System.exit(1); } else if (args1) { try {((args[0])).intValue(); if (nbTraps ) { } } catch (javaNumberFormatException e) {exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null) && isEmpty()) { server .get(0); } else { server .createMBeanServer(); } String= new ObjectName( snmpObjName); println(\"NOTEport \" + snmpPort);(\"NOTE.\").setTrapPort((snmpPort ));snmpV1Trap(0, null); println(\"Done.\"); try { JMXServiceURL url = (\"server\");newJMXConnectorServer(url); cs.start(); } catch (Exception ex) { println(\"Error =\" ); } ; forgerockCtsMibObjName = new ObjectName(); ; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 11:08:15.208979", "n_pass": [967, 79, 76], "score": "0.9339", "loss": "0.0987", "code": "static void main(String[] args) { final MBeanServer server; htmlPort  =61; if ((length != 0) && (length != 1)) {System.exit(1); } else if (args1) { try {((args[0])).intValue(); if (nbTraps ) { } } catch (javaNumberFormatException e) {exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null) && isEmpty()) { server .get(0); } else { server .createMBeanServer(); } String= new ObjectName( snmpObjName); println(\"NOTEport \" + snmpPort);(\"NOTE.\").setTrapPort((snmpPort ));snmpV1Trap(0, null); println(\"Done.\"); try { JMXServiceURL url = (\"server\");newJMXConnectorServer(url); cs.start(); } catch (Exception ex) { println(\"Error =\" ); } ; forgerockCtsMibObjName = new ObjectName(); ; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 11:08:16.638022", "n_pass": [968, 80, 77], "score": "0.9717", "loss": "0.0383", "code": "void main(String[] args) { final MBeanServer server; htmlPort  =61; if ((length != 0) && (length != 1)) {System.exit(1); } else if (args1) { try {((args[0])).intValue(); if (nbTraps ) { } } catch (javaNumberFormatException e) {exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null) && isEmpty()) { server .get(0); } else { server .createMBeanServer(); } String= new ObjectName( snmpObjName); println(\"NOTEport \" + snmpPort);(\"NOTE.\").setTrapPort((snmpPort ));snmpV1Trap(0, null); println(\"Done.\"); try { JMXServiceURL url = (\"server\");newJMXConnectorServer(url); cs.start(); } catch (Exception ex) { println(\"Error =\" ); } ; forgerockCtsMibObjName = new ObjectName(); ; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 11:08:18.444755", "n_pass": [975, 81, 78], "score": "0.9592", "loss": "0.0526", "code": "void main(String[] args) { MBeanServer server; htmlPort  =61; if ((length != 0) && (length != 1)) {System.exit(1); } else if (args1) { try {((args[0])).intValue(); if (nbTraps ) { } } catch (javaNumberFormatException e) {exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null) && isEmpty()) { server .get(0); } else { server .createMBeanServer(); } String= new ObjectName( snmpObjName); println(\"NOTEport \" + snmpPort);(\"NOTE.\").setTrapPort((snmpPort ));snmpV1Trap(0, null); println(\"Done.\"); try { JMXServiceURL url = (\"server\");newJMXConnectorServer(url); cs.start(); } catch (Exception ex) { println(\"Error =\" ); } ; forgerockCtsMibObjName = new ObjectName(); ; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 11:08:19.858520", "n_pass": [976, 82, 79], "score": "0.9902", "loss": "0.013", "code": "void main(String[] args) { server; htmlPort  =61; if ((length != 0) && (length != 1)) {System.exit(1); } else if (args1) { try {((args[0])).intValue(); if (nbTraps ) { } } catch (javaNumberFormatException e) {exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null) && isEmpty()) { server .get(0); } else { server .createMBeanServer(); } String= new ObjectName( snmpObjName); println(\"NOTEport \" + snmpPort);(\"NOTE.\").setTrapPort((snmpPort ));snmpV1Trap(0, null); println(\"Done.\"); try { JMXServiceURL url = (\"server\");newJMXConnectorServer(url); cs.start(); } catch (Exception ex) { println(\"Error =\" ); } ; forgerockCtsMibObjName = new ObjectName(); ; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 11:08:21.268352", "n_pass": [977, 83, 80], "score": "0.9572", "loss": "0.054", "code": "void main(String[] args) {; htmlPort  =61; if ((length != 0) && (length != 1)) {System.exit(1); } else if (args1) { try {((args[0])).intValue(); if (nbTraps ) { } } catch (javaNumberFormatException e) {exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null) && isEmpty()) { server .get(0); } else { server .createMBeanServer(); } String= new ObjectName( snmpObjName); println(\"NOTEport \" + snmpPort);(\"NOTE.\").setTrapPort((snmpPort ));snmpV1Trap(0, null); println(\"Done.\"); try { JMXServiceURL url = (\"server\");newJMXConnectorServer(url); cs.start(); } catch (Exception ex) { println(\"Error =\" ); } ; forgerockCtsMibObjName = new ObjectName(); ; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 11:08:22.680318", "n_pass": [978, 84, 81], "score": "0.9873", "loss": "0.015", "code": "void main(String[] args) {htmlPort  =61; if ((length != 0) && (length != 1)) {System.exit(1); } else if (args1) { try {((args[0])).intValue(); if (nbTraps ) { } } catch (javaNumberFormatException e) {exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null) && isEmpty()) { server .get(0); } else { server .createMBeanServer(); } String= new ObjectName( snmpObjName); println(\"NOTEport \" + snmpPort);(\"NOTE.\").setTrapPort((snmpPort ));snmpV1Trap(0, null); println(\"Done.\"); try { JMXServiceURL url = (\"server\");newJMXConnectorServer(url); cs.start(); } catch (Exception ex) { println(\"Error =\" ); } ; forgerockCtsMibObjName = new ObjectName(); ; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 11:08:41.574528", "n_pass": [1328, 85, 82], "score": "0.9869", "loss": "0.0162", "code": "void main(String[] args) {htmlPort =61; if ((length != 0) && (length != 1)) {System.exit(1); } else if (args1) { try {((args[0])).intValue(); if (nbTraps ) { } } catch (javaNumberFormatException e) {exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null) && isEmpty()) { server .get(0); } else { server .createMBeanServer(); } String= new ObjectName( snmpObjName); println(\"NOTEport \" + snmpPort);(\"NOTE.\").setTrapPort((snmpPort ));snmpV1Trap(0, null); println(\"Done.\"); try { JMXServiceURL url = (\"server\");newJMXConnectorServer(url); cs.start(); } catch (Exception ex) { println(\"Error =\" ); } ; forgerockCtsMibObjName = new ObjectName(); ; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 11:08:42.988957", "n_pass": [1329, 86, 83], "score": "0.7793", "loss": "0.3399", "code": "void main(String[] args) {htmlPort=61; if ((length != 0) && (length != 1)) {System.exit(1); } else if (args1) { try {((args[0])).intValue(); if (nbTraps ) { } } catch (javaNumberFormatException e) {exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null) && isEmpty()) { server .get(0); } else { server .createMBeanServer(); } String= new ObjectName( snmpObjName); println(\"NOTEport \" + snmpPort);(\"NOTE.\").setTrapPort((snmpPort ));snmpV1Trap(0, null); println(\"Done.\"); try { JMXServiceURL url = (\"server\");newJMXConnectorServer(url); cs.start(); } catch (Exception ex) { println(\"Error =\" ); } ; forgerockCtsMibObjName = new ObjectName(); ; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 11:08:44.432199", "n_pass": [1330, 87, 84], "score": "0.9196", "loss": "0.1164", "code": "void main(String[] args) {htmlPort61; if ((length != 0) && (length != 1)) {System.exit(1); } else if (args1) { try {((args[0])).intValue(); if (nbTraps ) { } } catch (javaNumberFormatException e) {exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null) && isEmpty()) { server .get(0); } else { server .createMBeanServer(); } String= new ObjectName( snmpObjName); println(\"NOTEport \" + snmpPort);(\"NOTE.\").setTrapPort((snmpPort ));snmpV1Trap(0, null); println(\"Done.\"); try { JMXServiceURL url = (\"server\");newJMXConnectorServer(url); cs.start(); } catch (Exception ex) { println(\"Error =\" ); } ; forgerockCtsMibObjName = new ObjectName(); ; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 11:08:45.845073", "n_pass": [1331, 88, 85], "score": "0.9914", "loss": "0.0122", "code": "void main(String[] args) {htmlPort1; if ((length != 0) && (length != 1)) {System.exit(1); } else if (args1) { try {((args[0])).intValue(); if (nbTraps ) { } } catch (javaNumberFormatException e) {exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null) && isEmpty()) { server .get(0); } else { server .createMBeanServer(); } String= new ObjectName( snmpObjName); println(\"NOTEport \" + snmpPort);(\"NOTE.\").setTrapPort((snmpPort ));snmpV1Trap(0, null); println(\"Done.\"); try { JMXServiceURL url = (\"server\");newJMXConnectorServer(url); cs.start(); } catch (Exception ex) { println(\"Error =\" ); } ; forgerockCtsMibObjName = new ObjectName(); ; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 11:08:47.257464", "n_pass": [1332, 89, 86], "score": "0.9183", "loss": "0.1286", "code": "void main(String[] args) {htmlPort; if ((length != 0) && (length != 1)) {System.exit(1); } else if (args1) { try {((args[0])).intValue(); if (nbTraps ) { } } catch (javaNumberFormatException e) {exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null) && isEmpty()) { server .get(0); } else { server .createMBeanServer(); } String= new ObjectName( snmpObjName); println(\"NOTEport \" + snmpPort);(\"NOTE.\").setTrapPort((snmpPort ));snmpV1Trap(0, null); println(\"Done.\"); try { JMXServiceURL url = (\"server\");newJMXConnectorServer(url); cs.start(); } catch (Exception ex) { println(\"Error =\" ); } ; forgerockCtsMibObjName = new ObjectName(); ; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 11:08:48.674133", "n_pass": [1334, 90, 87], "score": "0.9918", "loss": "0.0099", "code": "void main(String[] args) {htmlPort;if ((length != 0) && (length != 1)) {System.exit(1); } else if (args1) { try {((args[0])).intValue(); if (nbTraps ) { } } catch (javaNumberFormatException e) {exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null) && isEmpty()) { server .get(0); } else { server .createMBeanServer(); } String= new ObjectName( snmpObjName); println(\"NOTEport \" + snmpPort);(\"NOTE.\").setTrapPort((snmpPort ));snmpV1Trap(0, null); println(\"Done.\"); try { JMXServiceURL url = (\"server\");newJMXConnectorServer(url); cs.start(); } catch (Exception ex) { println(\"Error =\" ); } ; forgerockCtsMibObjName = new ObjectName(); ; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 11:08:50.105758", "n_pass": [1336, 91, 88], "score": "0.8903", "loss": "0.1492", "code": "void main(String[] args) {htmlPort;if((length != 0) && (length != 1)) {System.exit(1); } else if (args1) { try {((args[0])).intValue(); if (nbTraps ) { } } catch (javaNumberFormatException e) {exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null) && isEmpty()) { server .get(0); } else { server .createMBeanServer(); } String= new ObjectName( snmpObjName); println(\"NOTEport \" + snmpPort);(\"NOTE.\").setTrapPort((snmpPort ));snmpV1Trap(0, null); println(\"Done.\"); try { JMXServiceURL url = (\"server\");newJMXConnectorServer(url); cs.start(); } catch (Exception ex) { println(\"Error =\" ); } ; forgerockCtsMibObjName = new ObjectName(); ; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 11:08:51.546841", "n_pass": [1340, 92, 89], "score": "0.8986", "loss": "0.1585", "code": "void main(String[] args) {htmlPort;if((length!= 0) && (length != 1)) {System.exit(1); } else if (args1) { try {((args[0])).intValue(); if (nbTraps ) { } } catch (javaNumberFormatException e) {exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null) && isEmpty()) { server .get(0); } else { server .createMBeanServer(); } String= new ObjectName( snmpObjName); println(\"NOTEport \" + snmpPort);(\"NOTE.\").setTrapPort((snmpPort ));snmpV1Trap(0, null); println(\"Done.\"); try { JMXServiceURL url = (\"server\");newJMXConnectorServer(url); cs.start(); } catch (Exception ex) { println(\"Error =\" ); } ; forgerockCtsMibObjName = new ObjectName(); ; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 11:08:52.957405", "n_pass": [1341, 93, 90], "score": "0.9673", "loss": "0.0407", "code": "void main(String[] args) {htmlPort;if((length= 0) && (length != 1)) {System.exit(1); } else if (args1) { try {((args[0])).intValue(); if (nbTraps ) { } } catch (javaNumberFormatException e) {exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null) && isEmpty()) { server .get(0); } else { server .createMBeanServer(); } String= new ObjectName( snmpObjName); println(\"NOTEport \" + snmpPort);(\"NOTE.\").setTrapPort((snmpPort ));snmpV1Trap(0, null); println(\"Done.\"); try { JMXServiceURL url = (\"server\");newJMXConnectorServer(url); cs.start(); } catch (Exception ex) { println(\"Error =\" ); } ; forgerockCtsMibObjName = new ObjectName(); ; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 11:08:54.374170", "n_pass": [1343, 94, 91], "score": "0.9872", "loss": "0.0159", "code": "void main(String[] args) {htmlPort;if((length=0) && (length != 1)) {System.exit(1); } else if (args1) { try {((args[0])).intValue(); if (nbTraps ) { } } catch (javaNumberFormatException e) {exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null) && isEmpty()) { server .get(0); } else { server .createMBeanServer(); } String= new ObjectName( snmpObjName); println(\"NOTEport \" + snmpPort);(\"NOTE.\").setTrapPort((snmpPort ));snmpV1Trap(0, null); println(\"Done.\"); try { JMXServiceURL url = (\"server\");newJMXConnectorServer(url); cs.start(); } catch (Exception ex) { println(\"Error =\" ); } ; forgerockCtsMibObjName = new ObjectName(); ; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 11:08:55.796537", "n_pass": [1346, 95, 92], "score": "0.9835", "loss": "0.0199", "code": "void main(String[] args) {htmlPort;if((length=0)&& (length != 1)) {System.exit(1); } else if (args1) { try {((args[0])).intValue(); if (nbTraps ) { } } catch (javaNumberFormatException e) {exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null) && isEmpty()) { server .get(0); } else { server .createMBeanServer(); } String= new ObjectName( snmpObjName); println(\"NOTEport \" + snmpPort);(\"NOTE.\").setTrapPort((snmpPort ));snmpV1Trap(0, null); println(\"Done.\"); try { JMXServiceURL url = (\"server\");newJMXConnectorServer(url); cs.start(); } catch (Exception ex) { println(\"Error =\" ); } ; forgerockCtsMibObjName = new ObjectName(); ; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 11:08:57.236346", "n_pass": [1347, 96, 93], "score": "0.9838", "loss": "0.0231", "code": "void main(String[] args) {htmlPort;if((length=0)& (length != 1)) {System.exit(1); } else if (args1) { try {((args[0])).intValue(); if (nbTraps ) { } } catch (javaNumberFormatException e) {exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null) && isEmpty()) { server .get(0); } else { server .createMBeanServer(); } String= new ObjectName( snmpObjName); println(\"NOTEport \" + snmpPort);(\"NOTE.\").setTrapPort((snmpPort ));snmpV1Trap(0, null); println(\"Done.\"); try { JMXServiceURL url = (\"server\");newJMXConnectorServer(url); cs.start(); } catch (Exception ex) { println(\"Error =\" ); } ; forgerockCtsMibObjName = new ObjectName(); ; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 11:08:58.647308", "n_pass": [1349, 97, 94], "score": "0.981", "loss": "0.0231", "code": "void main(String[] args) {htmlPort;if((length=0)&(length != 1)) {System.exit(1); } else if (args1) { try {((args[0])).intValue(); if (nbTraps ) { } } catch (javaNumberFormatException e) {exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null) && isEmpty()) { server .get(0); } else { server .createMBeanServer(); } String= new ObjectName( snmpObjName); println(\"NOTEport \" + snmpPort);(\"NOTE.\").setTrapPort((snmpPort ));snmpV1Trap(0, null); println(\"Done.\"); try { JMXServiceURL url = (\"server\");newJMXConnectorServer(url); cs.start(); } catch (Exception ex) { println(\"Error =\" ); } ; forgerockCtsMibObjName = new ObjectName(); ; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 11:09:00.066400", "n_pass": [1352, 98, 95], "score": "0.9908", "loss": "0.0112", "code": "void main(String[] args) {htmlPort;if((length=0)&(length!= 1)) {System.exit(1); } else if (args1) { try {((args[0])).intValue(); if (nbTraps ) { } } catch (javaNumberFormatException e) {exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null) && isEmpty()) { server .get(0); } else { server .createMBeanServer(); } String= new ObjectName( snmpObjName); println(\"NOTEport \" + snmpPort);(\"NOTE.\").setTrapPort((snmpPort ));snmpV1Trap(0, null); println(\"Done.\"); try { JMXServiceURL url = (\"server\");newJMXConnectorServer(url); cs.start(); } catch (Exception ex) { println(\"Error =\" ); } ; forgerockCtsMibObjName = new ObjectName(); ; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 11:09:01.484670", "n_pass": [1353, 99, 96], "score": "0.9464", "loss": "0.0693", "code": "void main(String[] args) {htmlPort;if((length=0)&(length= 1)) {System.exit(1); } else if (args1) { try {((args[0])).intValue(); if (nbTraps ) { } } catch (javaNumberFormatException e) {exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null) && isEmpty()) { server .get(0); } else { server .createMBeanServer(); } String= new ObjectName( snmpObjName); println(\"NOTEport \" + snmpPort);(\"NOTE.\").setTrapPort((snmpPort ));snmpV1Trap(0, null); println(\"Done.\"); try { JMXServiceURL url = (\"server\");newJMXConnectorServer(url); cs.start(); } catch (Exception ex) { println(\"Error =\" ); } ; forgerockCtsMibObjName = new ObjectName(); ; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 11:09:02.900020", "n_pass": [1355, 100, 97], "score": "0.9856", "loss": "0.0182", "code": "void main(String[] args) {htmlPort;if((length=0)&(length=1)) {System.exit(1); } else if (args1) { try {((args[0])).intValue(); if (nbTraps ) { } } catch (javaNumberFormatException e) {exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null) && isEmpty()) { server .get(0); } else { server .createMBeanServer(); } String= new ObjectName( snmpObjName); println(\"NOTEport \" + snmpPort);(\"NOTE.\").setTrapPort((snmpPort ));snmpV1Trap(0, null); println(\"Done.\"); try { JMXServiceURL url = (\"server\");newJMXConnectorServer(url); cs.start(); } catch (Exception ex) { println(\"Error =\" ); } ; forgerockCtsMibObjName = new ObjectName(); ; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 11:09:04.349816", "n_pass": [1359, 101, 98], "score": "0.9841", "loss": "0.0201", "code": "void main(String[] args) {htmlPort;if((length=0)&(length=1)){System.exit(1); } else if (args1) { try {((args[0])).intValue(); if (nbTraps ) { } } catch (javaNumberFormatException e) {exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null) && isEmpty()) { server .get(0); } else { server .createMBeanServer(); } String= new ObjectName( snmpObjName); println(\"NOTEport \" + snmpPort);(\"NOTE.\").setTrapPort((snmpPort ));snmpV1Trap(0, null); println(\"Done.\"); try { JMXServiceURL url = (\"server\");newJMXConnectorServer(url); cs.start(); } catch (Exception ex) { println(\"Error =\" ); } ; forgerockCtsMibObjName = new ObjectName(); ; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 11:09:05.924999", "n_pass": [1362, 102, 99], "score": "0.9769", "loss": "0.0293", "code": "void main(String[] args) {htmlPort;if((length=0)&(length=1)){Systemexit(1); } else if (args1) { try {((args[0])).intValue(); if (nbTraps ) { } } catch (javaNumberFormatException e) {exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null) && isEmpty()) { server .get(0); } else { server .createMBeanServer(); } String= new ObjectName( snmpObjName); println(\"NOTEport \" + snmpPort);(\"NOTE.\").setTrapPort((snmpPort ));snmpV1Trap(0, null); println(\"Done.\"); try { JMXServiceURL url = (\"server\");newJMXConnectorServer(url); cs.start(); } catch (Exception ex) { println(\"Error =\" ); } ; forgerockCtsMibObjName = new ObjectName(); ; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 11:09:07.345090", "n_pass": [1363, 103, 100], "score": "0.9432", "loss": "0.0738", "code": "void main(String[] args) {htmlPort;if((length=0)&(length=1)){System(1); } else if (args1) { try {((args[0])).intValue(); if (nbTraps ) { } } catch (javaNumberFormatException e) {exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null) && isEmpty()) { server .get(0); } else { server .createMBeanServer(); } String= new ObjectName( snmpObjName); println(\"NOTEport \" + snmpPort);(\"NOTE.\").setTrapPort((snmpPort ));snmpV1Trap(0, null); println(\"Done.\"); try { JMXServiceURL url = (\"server\");newJMXConnectorServer(url); cs.start(); } catch (Exception ex) { println(\"Error =\" ); } ; forgerockCtsMibObjName = new ObjectName(); ; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 11:09:08.787884", "n_pass": [1365, 104, 101], "score": "0.9083", "loss": "0.1398", "code": "void main(String[] args) {htmlPort;if((length=0)&(length=1)){System(); } else if (args1) { try {((args[0])).intValue(); if (nbTraps ) { } } catch (javaNumberFormatException e) {exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null) && isEmpty()) { server .get(0); } else { server .createMBeanServer(); } String= new ObjectName( snmpObjName); println(\"NOTEport \" + snmpPort);(\"NOTE.\").setTrapPort((snmpPort ));snmpV1Trap(0, null); println(\"Done.\"); try { JMXServiceURL url = (\"server\");newJMXConnectorServer(url); cs.start(); } catch (Exception ex) { println(\"Error =\" ); } ; forgerockCtsMibObjName = new ObjectName(); ; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 11:09:10.203220", "n_pass": [1368, 105, 102], "score": "0.9851", "loss": "0.018", "code": "void main(String[] args) {htmlPort;if((length=0)&(length=1)){System();} else if (args1) { try {((args[0])).intValue(); if (nbTraps ) { } } catch (javaNumberFormatException e) {exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null) && isEmpty()) { server .get(0); } else { server .createMBeanServer(); } String= new ObjectName( snmpObjName); println(\"NOTEport \" + snmpPort);(\"NOTE.\").setTrapPort((snmpPort ));snmpV1Trap(0, null); println(\"Done.\"); try { JMXServiceURL url = (\"server\");newJMXConnectorServer(url); cs.start(); } catch (Exception ex) { println(\"Error =\" ); } ; forgerockCtsMibObjName = new ObjectName(); ; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 11:09:11.614593", "n_pass": [1370, 106, 103], "score": "0.9897", "loss": "0.0121", "code": "void main(String[] args) {htmlPort;if((length=0)&(length=1)){System();}else if (args1) { try {((args[0])).intValue(); if (nbTraps ) { } } catch (javaNumberFormatException e) {exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null) && isEmpty()) { server .get(0); } else { server .createMBeanServer(); } String= new ObjectName( snmpObjName); println(\"NOTEport \" + snmpPort);(\"NOTE.\").setTrapPort((snmpPort ));snmpV1Trap(0, null); println(\"Done.\"); try { JMXServiceURL url = (\"server\");newJMXConnectorServer(url); cs.start(); } catch (Exception ex) { println(\"Error =\" ); } ; forgerockCtsMibObjName = new ObjectName(); ; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 11:09:13.026163", "n_pass": [1371, 107, 104], "score": "0.8618", "loss": "0.1962", "code": "void main(String[] args) {htmlPort;if((length=0)&(length=1)){System();} if (args1) { try {((args[0])).intValue(); if (nbTraps ) { } } catch (javaNumberFormatException e) {exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null) && isEmpty()) { server .get(0); } else { server .createMBeanServer(); } String= new ObjectName( snmpObjName); println(\"NOTEport \" + snmpPort);(\"NOTE.\").setTrapPort((snmpPort ));snmpV1Trap(0, null); println(\"Done.\"); try { JMXServiceURL url = (\"server\");newJMXConnectorServer(url); cs.start(); } catch (Exception ex) { println(\"Error =\" ); } ; forgerockCtsMibObjName = new ObjectName(); ; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 11:09:14.435626", "n_pass": [1372, 108, 105], "score": "0.8915", "loss": "0.1559", "code": "void main(String[] args) {htmlPort;if((length=0)&(length=1)){System();}if (args1) { try {((args[0])).intValue(); if (nbTraps ) { } } catch (javaNumberFormatException e) {exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null) && isEmpty()) { server .get(0); } else { server .createMBeanServer(); } String= new ObjectName( snmpObjName); println(\"NOTEport \" + snmpPort);(\"NOTE.\").setTrapPort((snmpPort ));snmpV1Trap(0, null); println(\"Done.\"); try { JMXServiceURL url = (\"server\");newJMXConnectorServer(url); cs.start(); } catch (Exception ex) { println(\"Error =\" ); } ; forgerockCtsMibObjName = new ObjectName(); ; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 11:09:15.849145", "n_pass": [1374, 109, 106], "score": "0.8728", "loss": "0.179", "code": "void main(String[] args) {htmlPort;if((length=0)&(length=1)){System();}if(args1) { try {((args[0])).intValue(); if (nbTraps ) { } } catch (javaNumberFormatException e) {exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null) && isEmpty()) { server .get(0); } else { server .createMBeanServer(); } String= new ObjectName( snmpObjName); println(\"NOTEport \" + snmpPort);(\"NOTE.\").setTrapPort((snmpPort ));snmpV1Trap(0, null); println(\"Done.\"); try { JMXServiceURL url = (\"server\");newJMXConnectorServer(url); cs.start(); } catch (Exception ex) { println(\"Error =\" ); } ; forgerockCtsMibObjName = new ObjectName(); ; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 11:09:17.268728", "n_pass": [1376, 110, 107], "score": "0.9522", "loss": "0.0655", "code": "void main(String[] args) {htmlPort;if((length=0)&(length=1)){System();}if(1) { try {((args[0])).intValue(); if (nbTraps ) { } } catch (javaNumberFormatException e) {exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null) && isEmpty()) { server .get(0); } else { server .createMBeanServer(); } String= new ObjectName( snmpObjName); println(\"NOTEport \" + snmpPort);(\"NOTE.\").setTrapPort((snmpPort ));snmpV1Trap(0, null); println(\"Done.\"); try { JMXServiceURL url = (\"server\");newJMXConnectorServer(url); cs.start(); } catch (Exception ex) { println(\"Error =\" ); } ; forgerockCtsMibObjName = new ObjectName(); ; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 11:09:18.705565", "n_pass": [1379, 111, 108], "score": "0.9568", "loss": "0.062", "code": "void main(String[] args) {htmlPort;if((length=0)&(length=1)){System();}if(1){ try {((args[0])).intValue(); if (nbTraps ) { } } catch (javaNumberFormatException e) {exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null) && isEmpty()) { server .get(0); } else { server .createMBeanServer(); } String= new ObjectName( snmpObjName); println(\"NOTEport \" + snmpPort);(\"NOTE.\").setTrapPort((snmpPort ));snmpV1Trap(0, null); println(\"Done.\"); try { JMXServiceURL url = (\"server\");newJMXConnectorServer(url); cs.start(); } catch (Exception ex) { println(\"Error =\" ); } ; forgerockCtsMibObjName = new ObjectName(); ; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 11:09:20.120198", "n_pass": [1381, 112, 109], "score": "0.9785", "loss": "0.0273", "code": "void main(String[] args) {htmlPort;if((length=0)&(length=1)){System();}if(1){try {((args[0])).intValue(); if (nbTraps ) { } } catch (javaNumberFormatException e) {exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null) && isEmpty()) { server .get(0); } else { server .createMBeanServer(); } String= new ObjectName( snmpObjName); println(\"NOTEport \" + snmpPort);(\"NOTE.\").setTrapPort((snmpPort ));snmpV1Trap(0, null); println(\"Done.\"); try { JMXServiceURL url = (\"server\");newJMXConnectorServer(url); cs.start(); } catch (Exception ex) { println(\"Error =\" ); } ; forgerockCtsMibObjName = new ObjectName(); ; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 11:09:21.538985", "n_pass": [1383, 113, 110], "score": "0.9455", "loss": "0.0768", "code": "void main(String[] args) {htmlPort;if((length=0)&(length=1)){System();}if(1){try{((args[0])).intValue(); if (nbTraps ) { } } catch (javaNumberFormatException e) {exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null) && isEmpty()) { server .get(0); } else { server .createMBeanServer(); } String= new ObjectName( snmpObjName); println(\"NOTEport \" + snmpPort);(\"NOTE.\").setTrapPort((snmpPort ));snmpV1Trap(0, null); println(\"Done.\"); try { JMXServiceURL url = (\"server\");newJMXConnectorServer(url); cs.start(); } catch (Exception ex) { println(\"Error =\" ); } ; forgerockCtsMibObjName = new ObjectName(); ; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 11:09:22.981566", "n_pass": [1398, 114, 111], "score": "0.9031", "loss": "0.1285", "code": "void main(String[] args) {htmlPort;if((length=0)&(length=1)){System();}if(1){try{((args[0])).intValue();if (nbTraps ) { } } catch (javaNumberFormatException e) {exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null) && isEmpty()) { server .get(0); } else { server .createMBeanServer(); } String= new ObjectName( snmpObjName); println(\"NOTEport \" + snmpPort);(\"NOTE.\").setTrapPort((snmpPort ));snmpV1Trap(0, null); println(\"Done.\"); try { JMXServiceURL url = (\"server\");newJMXConnectorServer(url); cs.start(); } catch (Exception ex) { println(\"Error =\" ); } ; forgerockCtsMibObjName = new ObjectName(); ; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 11:09:24.397200", "n_pass": [1400, 115, 112], "score": "0.9101", "loss": "0.127", "code": "void main(String[] args) {htmlPort;if((length=0)&(length=1)){System();}if(1){try{((args[0])).intValue();if(nbTraps ) { } } catch (javaNumberFormatException e) {exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null) && isEmpty()) { server .get(0); } else { server .createMBeanServer(); } String= new ObjectName( snmpObjName); println(\"NOTEport \" + snmpPort);(\"NOTE.\").setTrapPort((snmpPort ));snmpV1Trap(0, null); println(\"Done.\"); try { JMXServiceURL url = (\"server\");newJMXConnectorServer(url); cs.start(); } catch (Exception ex) { println(\"Error =\" ); } ; forgerockCtsMibObjName = new ObjectName(); ; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 11:09:25.820982", "n_pass": [1403, 116, 113], "score": "0.9653", "loss": "0.047", "code": "void main(String[] args) {htmlPort;if((length=0)&(length=1)){System();}if(1){try{((args[0])).intValue();if(nbTraps) { } } catch (javaNumberFormatException e) {exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null) && isEmpty()) { server .get(0); } else { server .createMBeanServer(); } String= new ObjectName( snmpObjName); println(\"NOTEport \" + snmpPort);(\"NOTE.\").setTrapPort((snmpPort ));snmpV1Trap(0, null); println(\"Done.\"); try { JMXServiceURL url = (\"server\");newJMXConnectorServer(url); cs.start(); } catch (Exception ex) { println(\"Error =\" ); } ; forgerockCtsMibObjName = new ObjectName(); ; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 11:09:27.240178", "n_pass": [1405, 117, 114], "score": "0.9882", "loss": "0.0148", "code": "void main(String[] args) {htmlPort;if((length=0)&(length=1)){System();}if(1){try{((args[0])).intValue();if(nbTraps){ } } catch (javaNumberFormatException e) {exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null) && isEmpty()) { server .get(0); } else { server .createMBeanServer(); } String= new ObjectName( snmpObjName); println(\"NOTEport \" + snmpPort);(\"NOTE.\").setTrapPort((snmpPort ));snmpV1Trap(0, null); println(\"Done.\"); try { JMXServiceURL url = (\"server\");newJMXConnectorServer(url); cs.start(); } catch (Exception ex) { println(\"Error =\" ); } ; forgerockCtsMibObjName = new ObjectName(); ; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 11:09:28.671122", "n_pass": [1407, 118, 115], "score": "0.9881", "loss": "0.0154", "code": "void main(String[] args) {htmlPort;if((length=0)&(length=1)){System();}if(1){try{((args[0])).intValue();if(nbTraps){} } catch (javaNumberFormatException e) {exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null) && isEmpty()) { server .get(0); } else { server .createMBeanServer(); } String= new ObjectName( snmpObjName); println(\"NOTEport \" + snmpPort);(\"NOTE.\").setTrapPort((snmpPort ));snmpV1Trap(0, null); println(\"Done.\"); try { JMXServiceURL url = (\"server\");newJMXConnectorServer(url); cs.start(); } catch (Exception ex) { println(\"Error =\" ); } ; forgerockCtsMibObjName = new ObjectName(); ; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 11:09:30.105249", "n_pass": [1409, 119, 116], "score": "0.9072", "loss": "0.1351", "code": "void main(String[] args) {htmlPort;if((length=0)&(length=1)){System();}if(1){try{((args[0])).intValue();if(nbTraps){}} catch (javaNumberFormatException e) {exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null) && isEmpty()) { server .get(0); } else { server .createMBeanServer(); } String= new ObjectName( snmpObjName); println(\"NOTEport \" + snmpPort);(\"NOTE.\").setTrapPort((snmpPort ));snmpV1Trap(0, null); println(\"Done.\"); try { JMXServiceURL url = (\"server\");newJMXConnectorServer(url); cs.start(); } catch (Exception ex) { println(\"Error =\" ); } ; forgerockCtsMibObjName = new ObjectName(); ; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 11:09:31.516693", "n_pass": [1411, 120, 117], "score": "0.9792", "loss": "0.0266", "code": "void main(String[] args) {htmlPort;if((length=0)&(length=1)){System();}if(1){try{((args[0])).intValue();if(nbTraps){}}catch (javaNumberFormatException e) {exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null) && isEmpty()) { server .get(0); } else { server .createMBeanServer(); } String= new ObjectName( snmpObjName); println(\"NOTEport \" + snmpPort);(\"NOTE.\").setTrapPort((snmpPort ));snmpV1Trap(0, null); println(\"Done.\"); try { JMXServiceURL url = (\"server\");newJMXConnectorServer(url); cs.start(); } catch (Exception ex) { println(\"Error =\" ); } ; forgerockCtsMibObjName = new ObjectName(); ; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 11:09:32.930863", "n_pass": [1413, 121, 118], "score": "0.9411", "loss": "0.0775", "code": "void main(String[] args) {htmlPort;if((length=0)&(length=1)){System();}if(1){try{((args[0])).intValue();if(nbTraps){}}catch(javaNumberFormatException e) {exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null) && isEmpty()) { server .get(0); } else { server .createMBeanServer(); } String= new ObjectName( snmpObjName); println(\"NOTEport \" + snmpPort);(\"NOTE.\").setTrapPort((snmpPort ));snmpV1Trap(0, null); println(\"Done.\"); try { JMXServiceURL url = (\"server\");newJMXConnectorServer(url); cs.start(); } catch (Exception ex) { println(\"Error =\" ); } ; forgerockCtsMibObjName = new ObjectName(); ; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 11:09:34.361430", "n_pass": [1415, 122, 119], "score": "0.9432", "loss": "0.0774", "code": "void main(String[] args) {htmlPort;if((length=0)&(length=1)){System();}if(1){try{((args[0])).intValue();if(nbTraps){}}catch(NumberFormatException e) {exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null) && isEmpty()) { server .get(0); } else { server .createMBeanServer(); } String= new ObjectName( snmpObjName); println(\"NOTEport \" + snmpPort);(\"NOTE.\").setTrapPort((snmpPort ));snmpV1Trap(0, null); println(\"Done.\"); try { JMXServiceURL url = (\"server\");newJMXConnectorServer(url); cs.start(); } catch (Exception ex) { println(\"Error =\" ); } ; forgerockCtsMibObjName = new ObjectName(); ; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 11:09:35.796360", "n_pass": [1420, 123, 120], "score": "0.9741", "loss": "0.0349", "code": "void main(String[] args) {htmlPort;if((length=0)&(length=1)){System();}if(1){try{((args[0])).intValue();if(nbTraps){}}catch(NumberFormatException e){exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null) && isEmpty()) { server .get(0); } else { server .createMBeanServer(); } String= new ObjectName( snmpObjName); println(\"NOTEport \" + snmpPort);(\"NOTE.\").setTrapPort((snmpPort ));snmpV1Trap(0, null); println(\"Done.\"); try { JMXServiceURL url = (\"server\");newJMXConnectorServer(url); cs.start(); } catch (Exception ex) { println(\"Error =\" ); } ; forgerockCtsMibObjName = new ObjectName(); ; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 11:09:37.208778", "n_pass": [1422, 124, 121], "score": "0.8583", "loss": "0.2171", "code": "void main(String[] args) {htmlPort;if((length=0)&(length=1)){System();}if(1){try{((args[0])).intValue();if(nbTraps){}}catch(NumberFormatException e){(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null) && isEmpty()) { server .get(0); } else { server .createMBeanServer(); } String= new ObjectName( snmpObjName); println(\"NOTEport \" + snmpPort);(\"NOTE.\").setTrapPort((snmpPort ));snmpV1Trap(0, null); println(\"Done.\"); try { JMXServiceURL url = (\"server\");newJMXConnectorServer(url); cs.start(); } catch (Exception ex) { println(\"Error =\" ); } ; forgerockCtsMibObjName = new ObjectName(); ; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 11:09:38.640352", "n_pass": [1427, 125, 122], "score": "0.7835", "loss": "0.3437", "code": "void main(String[] args) {htmlPort;if((length=0)&(length=1)){System();}if(1){try{((args[0])).intValue();if(nbTraps){}}catch(NumberFormatException e){(1);} } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null) && isEmpty()) { server .get(0); } else { server .createMBeanServer(); } String= new ObjectName( snmpObjName); println(\"NOTEport \" + snmpPort);(\"NOTE.\").setTrapPort((snmpPort ));snmpV1Trap(0, null); println(\"Done.\"); try { JMXServiceURL url = (\"server\");newJMXConnectorServer(url); cs.start(); } catch (Exception ex) { println(\"Error =\" ); } ; forgerockCtsMibObjName = new ObjectName(); ; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 11:09:40.070007", "n_pass": [1429, 126, 123], "score": "0.9809", "loss": "0.0247", "code": "void main(String[] args) {htmlPort;if((length=0)&(length=1)){System();}if(1){try{((args[0])).intValue();if(nbTraps){}}catch(NumberFormatException e){(1);}} try {MBeanServerFactory.findMBeanServer(null); if ((servers != null) && isEmpty()) { server .get(0); } else { server .createMBeanServer(); } String= new ObjectName( snmpObjName); println(\"NOTEport \" + snmpPort);(\"NOTE.\").setTrapPort((snmpPort ));snmpV1Trap(0, null); println(\"Done.\"); try { JMXServiceURL url = (\"server\");newJMXConnectorServer(url); cs.start(); } catch (Exception ex) { println(\"Error =\" ); } ; forgerockCtsMibObjName = new ObjectName(); ; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 11:09:41.484583", "n_pass": [1431, 127, 124], "score": "0.985", "loss": "0.0188", "code": "void main(String[] args) {htmlPort;if((length=0)&(length=1)){System();}if(1){try{((args[0])).intValue();if(nbTraps){}}catch(NumberFormatException e){(1);}}try {MBeanServerFactory.findMBeanServer(null); if ((servers != null) && isEmpty()) { server .get(0); } else { server .createMBeanServer(); } String= new ObjectName( snmpObjName); println(\"NOTEport \" + snmpPort);(\"NOTE.\").setTrapPort((snmpPort ));snmpV1Trap(0, null); println(\"Done.\"); try { JMXServiceURL url = (\"server\");newJMXConnectorServer(url); cs.start(); } catch (Exception ex) { println(\"Error =\" ); } ; forgerockCtsMibObjName = new ObjectName(); ; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 11:09:42.905514", "n_pass": [1433, 128, 125], "score": "0.8381", "loss": "0.2482", "code": "void main(String[] args) {htmlPort;if((length=0)&(length=1)){System();}if(1){try{((args[0])).intValue();if(nbTraps){}}catch(NumberFormatException e){(1);}}try{MBeanServerFactory.findMBeanServer(null); if ((servers != null) && isEmpty()) { server .get(0); } else { server .createMBeanServer(); } String= new ObjectName( snmpObjName); println(\"NOTEport \" + snmpPort);(\"NOTE.\").setTrapPort((snmpPort ));snmpV1Trap(0, null); println(\"Done.\"); try { JMXServiceURL url = (\"server\");newJMXConnectorServer(url); cs.start(); } catch (Exception ex) { println(\"Error =\" ); } ; forgerockCtsMibObjName = new ObjectName(); ; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 11:09:44.320700", "n_pass": [1436, 129, 126], "score": "0.987", "loss": "0.0166", "code": "void main(String[] args) {htmlPort;if((length=0)&(length=1)){System();}if(1){try{((args[0])).intValue();if(nbTraps){}}catch(NumberFormatException e){(1);}}try{MBeanServerFactoryfindMBeanServer(null); if ((servers != null) && isEmpty()) { server .get(0); } else { server .createMBeanServer(); } String= new ObjectName( snmpObjName); println(\"NOTEport \" + snmpPort);(\"NOTE.\").setTrapPort((snmpPort ));snmpV1Trap(0, null); println(\"Done.\"); try { JMXServiceURL url = (\"server\");newJMXConnectorServer(url); cs.start(); } catch (Exception ex) { println(\"Error =\" ); } ; forgerockCtsMibObjName = new ObjectName(); ; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 11:09:45.750292", "n_pass": [1437, 130, 127], "score": "0.9135", "loss": "0.1204", "code": "void main(String[] args) {htmlPort;if((length=0)&(length=1)){System();}if(1){try{((args[0])).intValue();if(nbTraps){}}catch(NumberFormatException e){(1);}}try{MBeanServerFactory(null); if ((servers != null) && isEmpty()) { server .get(0); } else { server .createMBeanServer(); } String= new ObjectName( snmpObjName); println(\"NOTEport \" + snmpPort);(\"NOTE.\").setTrapPort((snmpPort ));snmpV1Trap(0, null); println(\"Done.\"); try { JMXServiceURL url = (\"server\");newJMXConnectorServer(url); cs.start(); } catch (Exception ex) { println(\"Error =\" ); } ; forgerockCtsMibObjName = new ObjectName(); ; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 11:09:47.169485", "n_pass": [1439, 131, 128], "score": "0.9835", "loss": "0.0202", "code": "void main(String[] args) {htmlPort;if((length=0)&(length=1)){System();}if(1){try{((args[0])).intValue();if(nbTraps){}}catch(NumberFormatException e){(1);}}try{MBeanServerFactory(); if ((servers != null) && isEmpty()) { server .get(0); } else { server .createMBeanServer(); } String= new ObjectName( snmpObjName); println(\"NOTEport \" + snmpPort);(\"NOTE.\").setTrapPort((snmpPort ));snmpV1Trap(0, null); println(\"Done.\"); try { JMXServiceURL url = (\"server\");newJMXConnectorServer(url); cs.start(); } catch (Exception ex) { println(\"Error =\" ); } ; forgerockCtsMibObjName = new ObjectName(); ; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 11:09:48.595397", "n_pass": [1442, 132, 129], "score": "0.9354", "loss": "0.1037", "code": "void main(String[] args) {htmlPort;if((length=0)&(length=1)){System();}if(1){try{((args[0])).intValue();if(nbTraps){}}catch(NumberFormatException e){(1);}}try{MBeanServerFactory();if ((servers != null) && isEmpty()) { server .get(0); } else { server .createMBeanServer(); } String= new ObjectName( snmpObjName); println(\"NOTEport \" + snmpPort);(\"NOTE.\").setTrapPort((snmpPort ));snmpV1Trap(0, null); println(\"Done.\"); try { JMXServiceURL url = (\"server\");newJMXConnectorServer(url); cs.start(); } catch (Exception ex) { println(\"Error =\" ); } ; forgerockCtsMibObjName = new ObjectName(); ; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 11:09:50.004805", "n_pass": [1444, 133, 130], "score": "0.9594", "loss": "0.0517", "code": "void main(String[] args) {htmlPort;if((length=0)&(length=1)){System();}if(1){try{((args[0])).intValue();if(nbTraps){}}catch(NumberFormatException e){(1);}}try{MBeanServerFactory();if((servers != null) && isEmpty()) { server .get(0); } else { server .createMBeanServer(); } String= new ObjectName( snmpObjName); println(\"NOTEport \" + snmpPort);(\"NOTE.\").setTrapPort((snmpPort ));snmpV1Trap(0, null); println(\"Done.\"); try { JMXServiceURL url = (\"server\");newJMXConnectorServer(url); cs.start(); } catch (Exception ex) { println(\"Error =\" ); } ; forgerockCtsMibObjName = new ObjectName(); ; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 11:09:51.421306", "n_pass": [1448, 134, 131], "score": "0.8782", "loss": "0.1943", "code": "void main(String[] args) {htmlPort;if((length=0)&(length=1)){System();}if(1){try{((args[0])).intValue();if(nbTraps){}}catch(NumberFormatException e){(1);}}try{MBeanServerFactory();if((servers!= null) && isEmpty()) { server .get(0); } else { server .createMBeanServer(); } String= new ObjectName( snmpObjName); println(\"NOTEport \" + snmpPort);(\"NOTE.\").setTrapPort((snmpPort ));snmpV1Trap(0, null); println(\"Done.\"); try { JMXServiceURL url = (\"server\");newJMXConnectorServer(url); cs.start(); } catch (Exception ex) { println(\"Error =\" ); } ; forgerockCtsMibObjName = new ObjectName(); ; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 11:09:52.850694", "n_pass": [1449, 135, 132], "score": "0.9502", "loss": "0.0703", "code": "void main(String[] args) {htmlPort;if((length=0)&(length=1)){System();}if(1){try{((args[0])).intValue();if(nbTraps){}}catch(NumberFormatException e){(1);}}try{MBeanServerFactory();if((servers= null) && isEmpty()) { server .get(0); } else { server .createMBeanServer(); } String= new ObjectName( snmpObjName); println(\"NOTEport \" + snmpPort);(\"NOTE.\").setTrapPort((snmpPort ));snmpV1Trap(0, null); println(\"Done.\"); try { JMXServiceURL url = (\"server\");newJMXConnectorServer(url); cs.start(); } catch (Exception ex) { println(\"Error =\" ); } ; forgerockCtsMibObjName = new ObjectName(); ; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 11:09:54.261570", "n_pass": [1451, 136, 133], "score": "0.988", "loss": "0.0153", "code": "void main(String[] args) {htmlPort;if((length=0)&(length=1)){System();}if(1){try{((args[0])).intValue();if(nbTraps){}}catch(NumberFormatException e){(1);}}try{MBeanServerFactory();if((servers=null) && isEmpty()) { server .get(0); } else { server .createMBeanServer(); } String= new ObjectName( snmpObjName); println(\"NOTEport \" + snmpPort);(\"NOTE.\").setTrapPort((snmpPort ));snmpV1Trap(0, null); println(\"Done.\"); try { JMXServiceURL url = (\"server\");newJMXConnectorServer(url); cs.start(); } catch (Exception ex) { println(\"Error =\" ); } ; forgerockCtsMibObjName = new ObjectName(); ; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 11:09:55.679162", "n_pass": [1456, 137, 134], "score": "0.9437", "loss": "0.0769", "code": "void main(String[] args) {htmlPort;if((length=0)&(length=1)){System();}if(1){try{((args[0])).intValue();if(nbTraps){}}catch(NumberFormatException e){(1);}}try{MBeanServerFactory();if((servers=null) && isEmpty) { server .get(0); } else { server .createMBeanServer(); } String= new ObjectName( snmpObjName); println(\"NOTEport \" + snmpPort);(\"NOTE.\").setTrapPort((snmpPort ));snmpV1Trap(0, null); println(\"Done.\"); try { JMXServiceURL url = (\"server\");newJMXConnectorServer(url); cs.start(); } catch (Exception ex) { println(\"Error =\" ); } ; forgerockCtsMibObjName = new ObjectName(); ; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 11:09:57.108567", "n_pass": [1460, 138, 135], "score": "0.9776", "loss": "0.0277", "code": "void main(String[] args) {htmlPort;if((length=0)&(length=1)){System();}if(1){try{((args[0])).intValue();if(nbTraps){}}catch(NumberFormatException e){(1);}}try{MBeanServerFactory();if((servers=null) && isEmpty) { server (0); } else { server .createMBeanServer(); } String= new ObjectName( snmpObjName); println(\"NOTEport \" + snmpPort);(\"NOTE.\").setTrapPort((snmpPort ));snmpV1Trap(0, null); println(\"Done.\"); try { JMXServiceURL url = (\"server\");newJMXConnectorServer(url); cs.start(); } catch (Exception ex) { println(\"Error =\" ); } ; forgerockCtsMibObjName = new ObjectName(); ; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 11:09:58.524555", "n_pass": [1464, 139, 136], "score": "0.9185", "loss": "0.1148", "code": "void main(String[] args) {htmlPort;if((length=0)&(length=1)){System();}if(1){try{((args[0])).intValue();if(nbTraps){}}catch(NumberFormatException e){(1);}}try{MBeanServerFactory();if((servers=null) && isEmpty) { server (0); } { server .createMBeanServer(); } String= new ObjectName( snmpObjName); println(\"NOTEport \" + snmpPort);(\"NOTE.\").setTrapPort((snmpPort ));snmpV1Trap(0, null); println(\"Done.\"); try { JMXServiceURL url = (\"server\");newJMXConnectorServer(url); cs.start(); } catch (Exception ex) { println(\"Error =\" ); } ; forgerockCtsMibObjName = new ObjectName(); ; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 11:09:59.940212", "n_pass": [1467, 140, 137], "score": "0.9658", "loss": "0.0451", "code": "void main(String[] args) {htmlPort;if((length=0)&(length=1)){System();}if(1){try{((args[0])).intValue();if(nbTraps){}}catch(NumberFormatException e){(1);}}try{MBeanServerFactory();if((servers=null) && isEmpty) { server (0); } { servercreateMBeanServer(); } String= new ObjectName( snmpObjName); println(\"NOTEport \" + snmpPort);(\"NOTE.\").setTrapPort((snmpPort ));snmpV1Trap(0, null); println(\"Done.\"); try { JMXServiceURL url = (\"server\");newJMXConnectorServer(url); cs.start(); } catch (Exception ex) { println(\"Error =\" ); } ; forgerockCtsMibObjName = new ObjectName(); ; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 11:10:01.367807", "n_pass": [1473, 141, 138], "score": "0.368", "loss": "1.3381", "code": "void main(String[] args) {htmlPort;if((length=0)&(length=1)){System();}if(1){try{((args[0])).intValue();if(nbTraps){}}catch(NumberFormatException e){(1);}}try{MBeanServerFactory();if((servers=null) && isEmpty) { server (0); } { servercreateMBeanServer(); } String= ObjectName( snmpObjName); println(\"NOTEport \" + snmpPort);(\"NOTE.\").setTrapPort((snmpPort ));snmpV1Trap(0, null); println(\"Done.\"); try { JMXServiceURL url = (\"server\");newJMXConnectorServer(url); cs.start(); } catch (Exception ex) { println(\"Error =\" ); } ; forgerockCtsMibObjName = new ObjectName(); ; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 11:10:02.788072", "n_pass": [1475, 142, 139], "score": "0.951", "loss": "0.0747", "code": "void main(String[] args) {htmlPort;if((length=0)&(length=1)){System();}if(1){try{((args[0])).intValue();if(nbTraps){}}catch(NumberFormatException e){(1);}}try{MBeanServerFactory();if((servers=null) && isEmpty) { server (0); } { servercreateMBeanServer(); } String= ObjectName(); println(\"NOTEport \" + snmpPort);(\"NOTE.\").setTrapPort((snmpPort ));snmpV1Trap(0, null); println(\"Done.\"); try { JMXServiceURL url = (\"server\");newJMXConnectorServer(url); cs.start(); } catch (Exception ex) { println(\"Error =\" ); } ; forgerockCtsMibObjName = new ObjectName(); ; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 11:10:04.213958", "n_pass": [1477, 143, 140], "score": "0.9808", "loss": "0.0273", "code": "void main(String[] args) {htmlPort;if((length=0)&(length=1)){System();}if(1){try{((args[0])).intValue();if(nbTraps){}}catch(NumberFormatException e){(1);}}try{MBeanServerFactory();if((servers=null) && isEmpty) { server (0); } { servercreateMBeanServer(); } String= ObjectName();(\"NOTEport \" + snmpPort);(\"NOTE.\").setTrapPort((snmpPort ));snmpV1Trap(0, null); println(\"Done.\"); try { JMXServiceURL url = (\"server\");newJMXConnectorServer(url); cs.start(); } catch (Exception ex) { println(\"Error =\" ); } ; forgerockCtsMibObjName = new ObjectName(); ; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 11:10:05.619018", "n_pass": [1479, 144, 141], "score": "0.9071", "loss": "0.1313", "code": "void main(String[] args) {htmlPort;if((length=0)&(length=1)){System();}if(1){try{((args[0])).intValue();if(nbTraps){}}catch(NumberFormatException e){(1);}}try{MBeanServerFactory();if((servers=null) && isEmpty) { server (0); } { servercreateMBeanServer(); } String= ObjectName();(\" \" + snmpPort);(\"NOTE.\").setTrapPort((snmpPort ));snmpV1Trap(0, null); println(\"Done.\"); try { JMXServiceURL url = (\"server\");newJMXConnectorServer(url); cs.start(); } catch (Exception ex) { println(\"Error =\" ); } ; forgerockCtsMibObjName = new ObjectName(); ; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 11:10:07.038437", "n_pass": [1485, 145, 142], "score": "0.9563", "loss": "0.0636", "code": "void main(String[] args) {htmlPort;if((length=0)&(length=1)){System();}if(1){try{((args[0])).intValue();if(nbTraps){}}catch(NumberFormatException e){(1);}}try{MBeanServerFactory();if((servers=null) && isEmpty) { server (0); } { servercreateMBeanServer(); } String= ObjectName();(\" \" + snmpPort);(\"\").setTrapPort((snmpPort ));snmpV1Trap(0, null); println(\"Done.\"); try { JMXServiceURL url = (\"server\");newJMXConnectorServer(url); cs.start(); } catch (Exception ex) { println(\"Error =\" ); } ; forgerockCtsMibObjName = new ObjectName(); ; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 11:10:08.465188", "n_pass": [1492, 146, 143], "score": "0.9589", "loss": "0.0532", "code": "void main(String[] args) {htmlPort;if((length=0)&(length=1)){System();}if(1){try{((args[0])).intValue();if(nbTraps){}}catch(NumberFormatException e){(1);}}try{MBeanServerFactory();if((servers=null) && isEmpty) { server (0); } { servercreateMBeanServer(); } String= ObjectName();(\" \" + snmpPort);(\"\").setTrapPort((snmpPort ));snmpV(0, null); println(\"Done.\"); try { JMXServiceURL url = (\"server\");newJMXConnectorServer(url); cs.start(); } catch (Exception ex) { println(\"Error =\" ); } ; forgerockCtsMibObjName = new ObjectName(); ; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 11:10:09.891825", "n_pass": [1503, 147, 144], "score": "0.8952", "loss": "0.1417", "code": "void main(String[] args) {htmlPort;if((length=0)&(length=1)){System();}if(1){try{((args[0])).intValue();if(nbTraps){}}catch(NumberFormatException e){(1);}}try{MBeanServerFactory();if((servers=null) && isEmpty) { server (0); } { servercreateMBeanServer(); } String= ObjectName();(\" \" + snmpPort);(\"\").setTrapPort((snmpPort ));snmpV(0, null); println(\"Done.\"); try { url = (\"server\");newJMXConnectorServer(url); cs.start(); } catch (Exception ex) { println(\"Error =\" ); } ; forgerockCtsMibObjName = new ObjectName(); ; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 11:10:11.329144", "n_pass": [1505, 148, 145], "score": "0.8302", "loss": "0.2424", "code": "void main(String[] args) {htmlPort;if((length=0)&(length=1)){System();}if(1){try{((args[0])).intValue();if(nbTraps){}}catch(NumberFormatException e){(1);}}try{MBeanServerFactory();if((servers=null) && isEmpty) { server (0); } { servercreateMBeanServer(); } String= ObjectName();(\" \" + snmpPort);(\"\").setTrapPort((snmpPort ));snmpV(0, null); println(\"Done.\"); try { url (\"server\");newJMXConnectorServer(url); cs.start(); } catch (Exception ex) { println(\"Error =\" ); } ; forgerockCtsMibObjName = new ObjectName(); ; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 11:10:12.748493", "n_pass": [1513, 149, 146], "score": "0.9623", "loss": "0.0486", "code": "void main(String[] args) {htmlPort;if((length=0)&(length=1)){System();}if(1){try{((args[0])).intValue();if(nbTraps){}}catch(NumberFormatException e){(1);}}try{MBeanServerFactory();if((servers=null) && isEmpty) { server (0); } { servercreateMBeanServer(); } String= ObjectName();(\" \" + snmpPort);(\"\").setTrapPort((snmpPort ));snmpV(0, null); println(\"Done.\"); try { url (\"server\");newJMXConnectorServer(url); cs(); } catch (Exception ex) { println(\"Error =\" ); } ; forgerockCtsMibObjName = new ObjectName(); ; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 11:10:14.152888", "n_pass": [1514, 150, 147], "score": "0.9502", "loss": "0.069", "code": "void main(String[] args) {htmlPort;if((length=0)&(length=1)){System();}if(1){try{((args[0])).intValue();if(nbTraps){}}catch(NumberFormatException e){(1);}}try{MBeanServerFactory();if((servers=null) && isEmpty) { server (0); } { servercreateMBeanServer(); } String= ObjectName();(\" \" + snmpPort);(\"\").setTrapPort((snmpPort ));snmpV(0, null); println(\"Done.\"); try { url (\"server\");newJMXConnectorServer(url); cs; } catch (Exception ex) { println(\"Error =\" ); } ; forgerockCtsMibObjName = new ObjectName(); ; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 11:10:15.581248", "n_pass": [1524, 151, 148], "score": "0.967", "loss": "0.0423", "code": "void main(String[] args) {htmlPort;if((length=0)&(length=1)){System();}if(1){try{((args[0])).intValue();if(nbTraps){}}catch(NumberFormatException e){(1);}}try{MBeanServerFactory();if((servers=null) && isEmpty) { server (0); } { servercreateMBeanServer(); } String= ObjectName();(\" \" + snmpPort);(\"\").setTrapPort((snmpPort ));snmpV(0, null); println(\"Done.\"); try { url (\"server\");newJMXConnectorServer(url); cs; } catch (Exception ex) { println(\"Error\" ); } ; forgerockCtsMibObjName = new ObjectName(); ; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 11:10:16.992621", "n_pass": [1528, 152, 149], "score": "0.9096", "loss": "0.1339", "code": "void main(String[] args) {htmlPort;if((length=0)&(length=1)){System();}if(1){try{((args[0])).intValue();if(nbTraps){}}catch(NumberFormatException e){(1);}}try{MBeanServerFactory();if((servers=null) && isEmpty) { server (0); } { servercreateMBeanServer(); } String= ObjectName();(\" \" + snmpPort);(\"\").setTrapPort((snmpPort ));snmpV(0, null); println(\"Done.\"); try { url (\"server\");newJMXConnectorServer(url); cs; } catch (Exception ex) { println(\"Error\" ); } forgerockCtsMibObjName = new ObjectName(); ; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 11:10:18.399945", "n_pass": [1531, 153, 150], "score": "0.9314", "loss": "0.0945", "code": "void main(String[] args) {htmlPort;if((length=0)&(length=1)){System();}if(1){try{((args[0])).intValue();if(nbTraps){}}catch(NumberFormatException e){(1);}}try{MBeanServerFactory();if((servers=null) && isEmpty) { server (0); } { servercreateMBeanServer(); } String= ObjectName();(\" \" + snmpPort);(\"\").setTrapPort((snmpPort ));snmpV(0, null); println(\"Done.\"); try { url (\"server\");newJMXConnectorServer(url); cs; } catch (Exception ex) { println(\"Error\" ); } forgerockCtsMibObjName = ObjectName(); ; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 11:10:19.820258", "n_pass": [1533, 154, 151], "score": "0.9281", "loss": "0.0995", "code": "void main(String[] args) {htmlPort;if((length=0)&(length=1)){System();}if(1){try{((args[0])).intValue();if(nbTraps){}}catch(NumberFormatException e){(1);}}try{MBeanServerFactory();if((servers=null) && isEmpty) { server (0); } { servercreateMBeanServer(); } String= ObjectName();(\" \" + snmpPort);(\"\").setTrapPort((snmpPort ));snmpV(0, null); println(\"Done.\"); try { url (\"server\");newJMXConnectorServer(url); cs; } catch (Exception ex) { println(\"Error\" ); } forgerockCtsMibObjName = ObjectName; ; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 11:10:21.221871", "n_pass": [1534, 155, 152], "score": "0.8546", "loss": "0.2337", "code": "void main(String[] args) {htmlPort;if((length=0)&(length=1)){System();}if(1){try{((args[0])).intValue();if(nbTraps){}}catch(NumberFormatException e){(1);}}try{MBeanServerFactory();if((servers=null) && isEmpty) { server (0); } { servercreateMBeanServer(); } String= ObjectName();(\" \" + snmpPort);(\"\").setTrapPort((snmpPort ));snmpV(0, null); println(\"Done.\"); try { url (\"server\");newJMXConnectorServer(url); cs; } catch (Exception ex) { println(\"Error\" ); } forgerockCtsMibObjName = ObjectName; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 11:10:22.644047", "n_pass": [1542, 156, 153], "score": "0.9385", "loss": "0.0823", "code": "void main(String[] args) {htmlPort;if((length=0)&(length=1)){System();}if(1){try{((args[0])).intValue();if(nbTraps){}}catch(NumberFormatException e){(1);}}try{MBeanServerFactory();if((servers=null) && isEmpty) { server (0); } { servercreateMBeanServer(); } String= ObjectName();(\" \" + snmpPort);(\"\").setTrapPort((snmpPort ));snmpV(0, null); println(\"Done.\"); try { url (\"server\");newJMXConnectorServer(url); cs; } catch (Exception ex) { println(\"Error\" ); } forgerockCtsMibObjName = ObjectName; } catch (Exception e) { printStackTrace(); } }"}
{"time": "2021-01-20 11:10:24.836930", "n_pass": [1554, 157, 154], "score": "0.8293", "loss": "0.255", "code": "void main(String[]args) {htmlPort;if((length=0)&(length=1)){System();}if(1){try{((args[0])).intValue();if(nbTraps){}}catch(NumberFormatException e){(1);}}try{MBeanServerFactory();if((servers=null) && isEmpty) { server (0); } { servercreateMBeanServer(); } String= ObjectName();(\" \" + snmpPort);(\"\").setTrapPort((snmpPort ));snmpV(0, null); println(\"Done.\"); try { url (\"server\");newJMXConnectorServer(url); cs; } catch (Exception ex) { println(\"Error\" ); } forgerockCtsMibObjName = ObjectName; } catch (Exception e) { printStackTrace(); } }"}
{"time": "2021-01-20 11:10:26.238654", "n_pass": [1557, 158, 155], "score": "0.9747", "loss": "0.0323", "code": "void main(String[]args){htmlPort;if((length=0)&(length=1)){System();}if(1){try{((args[0])).intValue();if(nbTraps){}}catch(NumberFormatException e){(1);}}try{MBeanServerFactory();if((servers=null) && isEmpty) { server (0); } { servercreateMBeanServer(); } String= ObjectName();(\" \" + snmpPort);(\"\").setTrapPort((snmpPort ));snmpV(0, null); println(\"Done.\"); try { url (\"server\");newJMXConnectorServer(url); cs; } catch (Exception ex) { println(\"Error\" ); } forgerockCtsMibObjName = ObjectName; } catch (Exception e) { printStackTrace(); } }"}
{"time": "2021-01-20 11:10:27.646420", "n_pass": [1559, 159, 156], "score": "0.9528", "loss": "0.0621", "code": "void main(String[]args){;if((length=0)&(length=1)){System();}if(1){try{((args[0])).intValue();if(nbTraps){}}catch(NumberFormatException e){(1);}}try{MBeanServerFactory();if((servers=null) && isEmpty) { server (0); } { servercreateMBeanServer(); } String= ObjectName();(\" \" + snmpPort);(\"\").setTrapPort((snmpPort ));snmpV(0, null); println(\"Done.\"); try { url (\"server\");newJMXConnectorServer(url); cs; } catch (Exception ex) { println(\"Error\" ); } forgerockCtsMibObjName = ObjectName; } catch (Exception e) { printStackTrace(); } }"}
{"time": "2021-01-20 11:10:29.061169", "n_pass": [1560, 160, 157], "score": "0.9007", "loss": "0.1313", "code": "void main(String[]args){if((length=0)&(length=1)){System();}if(1){try{((args[0])).intValue();if(nbTraps){}}catch(NumberFormatException e){(1);}}try{MBeanServerFactory();if((servers=null) && isEmpty) { server (0); } { servercreateMBeanServer(); } String= ObjectName();(\" \" + snmpPort);(\"\").setTrapPort((snmpPort ));snmpV(0, null); println(\"Done.\"); try { url (\"server\");newJMXConnectorServer(url); cs; } catch (Exception ex) { println(\"Error\" ); } forgerockCtsMibObjName = ObjectName; } catch (Exception e) { printStackTrace(); } }"}
{"time": "2021-01-20 11:10:30.464814", "n_pass": [1565, 161, 158], "score": "0.9319", "loss": "0.0948", "code": "void main(String[]args){if((length0)&(length=1)){System();}if(1){try{((args[0])).intValue();if(nbTraps){}}catch(NumberFormatException e){(1);}}try{MBeanServerFactory();if((servers=null) && isEmpty) { server (0); } { servercreateMBeanServer(); } String= ObjectName();(\" \" + snmpPort);(\"\").setTrapPort((snmpPort ));snmpV(0, null); println(\"Done.\"); try { url (\"server\");newJMXConnectorServer(url); cs; } catch (Exception ex) { println(\"Error\" ); } forgerockCtsMibObjName = ObjectName; } catch (Exception e) { printStackTrace(); } }"}
{"time": "2021-01-20 11:10:31.879999", "n_pass": [1566, 162, 159], "score": "0.9267", "loss": "0.1011", "code": "void main(String[]args){if((length)&(length=1)){System();}if(1){try{((args[0])).intValue();if(nbTraps){}}catch(NumberFormatException e){(1);}}try{MBeanServerFactory();if((servers=null) && isEmpty) { server (0); } { servercreateMBeanServer(); } String= ObjectName();(\" \" + snmpPort);(\"\").setTrapPort((snmpPort ));snmpV(0, null); println(\"Done.\"); try { url (\"server\");newJMXConnectorServer(url); cs; } catch (Exception ex) { println(\"Error\" ); } forgerockCtsMibObjName = ObjectName; } catch (Exception e) { printStackTrace(); } }"}
{"time": "2021-01-20 11:10:33.280097", "n_pass": [1568, 163, 160], "score": "0.7595", "loss": "0.3893", "code": "void main(String[]args){if((length)(length=1)){System();}if(1){try{((args[0])).intValue();if(nbTraps){}}catch(NumberFormatException e){(1);}}try{MBeanServerFactory();if((servers=null) && isEmpty) { server (0); } { servercreateMBeanServer(); } String= ObjectName();(\" \" + snmpPort);(\"\").setTrapPort((snmpPort ));snmpV(0, null); println(\"Done.\"); try { url (\"server\");newJMXConnectorServer(url); cs; } catch (Exception ex) { println(\"Error\" ); } forgerockCtsMibObjName = ObjectName; } catch (Exception e) { printStackTrace(); } }"}
{"time": "2021-01-20 11:10:34.687387", "n_pass": [1571, 164, 161], "score": "0.9028", "loss": "0.1433", "code": "void main(String[]args){if((length)(length1)){System();}if(1){try{((args[0])).intValue();if(nbTraps){}}catch(NumberFormatException e){(1);}}try{MBeanServerFactory();if((servers=null) && isEmpty) { server (0); } { servercreateMBeanServer(); } String= ObjectName();(\" \" + snmpPort);(\"\").setTrapPort((snmpPort ));snmpV(0, null); println(\"Done.\"); try { url (\"server\");newJMXConnectorServer(url); cs; } catch (Exception ex) { println(\"Error\" ); } forgerockCtsMibObjName = ObjectName; } catch (Exception e) { printStackTrace(); } }"}
{"time": "2021-01-20 11:10:36.091860", "n_pass": [1572, 165, 162], "score": "0.913", "loss": "0.1301", "code": "void main(String[]args){if((length)(length)){System();}if(1){try{((args[0])).intValue();if(nbTraps){}}catch(NumberFormatException e){(1);}}try{MBeanServerFactory();if((servers=null) && isEmpty) { server (0); } { servercreateMBeanServer(); } String= ObjectName();(\" \" + snmpPort);(\"\").setTrapPort((snmpPort ));snmpV(0, null); println(\"Done.\"); try { url (\"server\");newJMXConnectorServer(url); cs; } catch (Exception ex) { println(\"Error\" ); } forgerockCtsMibObjName = ObjectName; } catch (Exception e) { printStackTrace(); } }"}
{"time": "2021-01-20 11:10:37.624845", "n_pass": [1631, 166, 163], "score": "0.7799", "loss": "0.3501", "code": "void main(String[]args){if((length)(length)){System();}if(1){try{((args[0])).intValue();if(nbTraps){}}catch(NumberFormatException e){(1);}}try{MBeanServerFactory();if((serversnull) && isEmpty) { server (0); } { servercreateMBeanServer(); } String= ObjectName();(\" \" + snmpPort);(\"\").setTrapPort((snmpPort ));snmpV(0, null); println(\"Done.\"); try { url (\"server\");newJMXConnectorServer(url); cs; } catch (Exception ex) { println(\"Error\" ); } forgerockCtsMibObjName = ObjectName; } catch (Exception e) { printStackTrace(); } }"}
{"time": "2021-01-20 11:10:39.048183", "n_pass": [1632, 167, 164], "score": "0.8745", "loss": "0.1705", "code": "void main(String[]args){if((length)(length)){System();}if(1){try{((args[0])).intValue();if(nbTraps){}}catch(NumberFormatException e){(1);}}try{MBeanServerFactory();if((servers) && isEmpty) { server (0); } { servercreateMBeanServer(); } String= ObjectName();(\" \" + snmpPort);(\"\").setTrapPort((snmpPort ));snmpV(0, null); println(\"Done.\"); try { url (\"server\");newJMXConnectorServer(url); cs; } catch (Exception ex) { println(\"Error\" ); } forgerockCtsMibObjName = ObjectName; } catch (Exception e) { printStackTrace(); } }"}
{"time": "2021-01-20 11:10:40.448968", "n_pass": [1634, 168, 165], "score": "0.9653", "loss": "0.0438", "code": "void main(String[]args){if((length)(length)){System();}if(1){try{((args[0])).intValue();if(nbTraps){}}catch(NumberFormatException e){(1);}}try{MBeanServerFactory();if((servers)  isEmpty) { server (0); } { servercreateMBeanServer(); } String= ObjectName();(\" \" + snmpPort);(\"\").setTrapPort((snmpPort ));snmpV(0, null); println(\"Done.\"); try { url (\"server\");newJMXConnectorServer(url); cs; } catch (Exception ex) { println(\"Error\" ); } forgerockCtsMibObjName = ObjectName; } catch (Exception e) { printStackTrace(); } }"}
{"time": "2021-01-20 11:10:41.847425", "n_pass": [1635, 169, 166], "score": "0.9188", "loss": "0.1028", "code": "void main(String[]args){if((length)(length)){System();}if(1){try{((args[0])).intValue();if(nbTraps){}}catch(NumberFormatException e){(1);}}try{MBeanServerFactory();if((servers) ) { server (0); } { servercreateMBeanServer(); } String= ObjectName();(\" \" + snmpPort);(\"\").setTrapPort((snmpPort ));snmpV(0, null); println(\"Done.\"); try { url (\"server\");newJMXConnectorServer(url); cs; } catch (Exception ex) { println(\"Error\" ); } forgerockCtsMibObjName = ObjectName; } catch (Exception e) { printStackTrace(); } }"}
{"time": "2021-01-20 11:10:43.251761", "n_pass": [1638, 170, 167], "score": "0.9489", "loss": "0.0648", "code": "void main(String[]args){if((length)(length)){System();}if(1){try{((args[0])).intValue();if(nbTraps){}}catch(NumberFormatException e){(1);}}try{MBeanServerFactory();if((servers) ) { (0); } { servercreateMBeanServer(); } String= ObjectName();(\" \" + snmpPort);(\"\").setTrapPort((snmpPort ));snmpV(0, null); println(\"Done.\"); try { url (\"server\");newJMXConnectorServer(url); cs; } catch (Exception ex) { println(\"Error\" ); } forgerockCtsMibObjName = ObjectName; } catch (Exception e) { printStackTrace(); } }"}
{"time": "2021-01-20 11:10:44.652297", "n_pass": [1643, 171, 168], "score": "0.9833", "loss": "0.0203", "code": "void main(String[]args){if((length)(length)){System();}if(1){try{((args[0])).intValue();if(nbTraps){}}catch(NumberFormatException e){(1);}}try{MBeanServerFactory();if((servers) ) { (0); } {createMBeanServer(); } String= ObjectName();(\" \" + snmpPort);(\"\").setTrapPort((snmpPort ));snmpV(0, null); println(\"Done.\"); try { url (\"server\");newJMXConnectorServer(url); cs; } catch (Exception ex) { println(\"Error\" ); } forgerockCtsMibObjName = ObjectName; } catch (Exception e) { printStackTrace(); } }"}
{"time": "2021-01-20 11:10:46.089747", "n_pass": [1648, 172, 169], "score": "0.7662", "loss": "0.3496", "code": "void main(String[]args){if((length)(length)){System();}if(1){try{((args[0])).intValue();if(nbTraps){}}catch(NumberFormatException e){(1);}}try{MBeanServerFactory();if((servers) ) { (0); } {createMBeanServer(); } StringObjectName();(\" \" + snmpPort);(\"\").setTrapPort((snmpPort ));snmpV(0, null); println(\"Done.\"); try { url (\"server\");newJMXConnectorServer(url); cs; } catch (Exception ex) { println(\"Error\" ); } forgerockCtsMibObjName = ObjectName; } catch (Exception e) { printStackTrace(); } }"}
{"time": "2021-01-20 11:10:47.531526", "n_pass": [1673, 173, 170], "score": "0.918", "loss": "0.1075", "code": "void main(String[]args){if((length)(length)){System();}if(1){try{((args[0])).intValue();if(nbTraps){}}catch(NumberFormatException e){(1);}}try{MBeanServerFactory();if((servers) ) { (0); } {createMBeanServer(); } StringObjectName();(\" \" + snmpPort);(\"\").setTrapPort((snmpPort ));snmpV(0, null); println(\"Done.\"); try { (\"server\");newJMXConnectorServer(url); cs; } catch (Exception ex) { println(\"Error\" ); } forgerockCtsMibObjName = ObjectName; } catch (Exception e) { printStackTrace(); } }"}
{"time": "2021-01-20 11:10:48.944331", "n_pass": [1680, 174, 171], "score": "0.917", "loss": "0.1061", "code": "void main(String[]args){if((length)(length)){System();}if(1){try{((args[0])).intValue();if(nbTraps){}}catch(NumberFormatException e){(1);}}try{MBeanServerFactory();if((servers) ) { (0); } {createMBeanServer(); } StringObjectName();(\" \" + snmpPort);(\"\").setTrapPort((snmpPort ));snmpV(0, null); println(\"Done.\"); try { (\"server\");newJMXConnectorServer(url);; } catch (Exception ex) { println(\"Error\" ); } forgerockCtsMibObjName = ObjectName; } catch (Exception e) { printStackTrace(); } }"}
{"time": "2021-01-20 11:10:50.336992", "n_pass": [1681, 175, 172], "score": "0.9379", "loss": "0.0787", "code": "void main(String[]args){if((length)(length)){System();}if(1){try{((args[0])).intValue();if(nbTraps){}}catch(NumberFormatException e){(1);}}try{MBeanServerFactory();if((servers) ) { (0); } {createMBeanServer(); } StringObjectName();(\" \" + snmpPort);(\"\").setTrapPort((snmpPort ));snmpV(0, null); println(\"Done.\"); try { (\"server\");newJMXConnectorServer(url);} catch (Exception ex) { println(\"Error\" ); } forgerockCtsMibObjName = ObjectName; } catch (Exception e) { printStackTrace(); } }"}
{"time": "2021-01-20 11:10:51.764728", "n_pass": [1694, 176, 173], "score": "0.9203", "loss": "0.1", "code": "void main(String[]args){if((length)(length)){System();}if(1){try{((args[0])).intValue();if(nbTraps){}}catch(NumberFormatException e){(1);}}try{MBeanServerFactory();if((servers) ) { (0); } {createMBeanServer(); } StringObjectName();(\" \" + snmpPort);(\"\").setTrapPort((snmpPort ));snmpV(0, null); println(\"Done.\"); try { (\"server\");newJMXConnectorServer(url);} catch (Exception ex) { println(\"Error\" ); } forgerockCtsMibObjName ObjectName; } catch (Exception e) { printStackTrace(); } }"}
{"time": "2021-01-20 11:10:53.152694", "n_pass": [1695, 177, 174], "score": "0.7327", "loss": "0.4298", "code": "void main(String[]args){if((length)(length)){System();}if(1){try{((args[0])).intValue();if(nbTraps){}}catch(NumberFormatException e){(1);}}try{MBeanServerFactory();if((servers) ) { (0); } {createMBeanServer(); } StringObjectName();(\" \" + snmpPort);(\"\").setTrapPort((snmpPort ));snmpV(0, null); println(\"Done.\"); try { (\"server\");newJMXConnectorServer(url);} catch (Exception ex) { println(\"Error\" ); } forgerockCtsMibObjName; } catch (Exception e) { printStackTrace(); } }"}
{"time": "2021-01-20 11:10:55.641621", "n_pass": [1792, 178, 175], "score": "0.9378", "loss": "0.0742", "code": "void main(String[]args){if((length)(length)){System();}if(1){try{((args[0])).intValue();if(nbTraps){}}catch(NumberFormatException e){(1);}}try{MBeanServerFactory();if((servers) ) { (0); } {createMBeanServer(); }ObjectName();(\" \" + snmpPort);(\"\").setTrapPort((snmpPort ));snmpV(0, null); println(\"Done.\"); try { (\"server\");newJMXConnectorServer(url);} catch (Exception ex) { println(\"Error\" ); } forgerockCtsMibObjName; } catch (Exception e) { printStackTrace(); } }"}
{"time": "2021-01-20 11:10:57.115281", "n_pass": [1834, 179, 176], "score": "0.8511", "loss": "0.1909", "code": "void main(String[]args){if((length)(length)){System();}if(1){try{((args[0])).intValue();if(nbTraps){}}catch(NumberFormatException e){(1);}}try{MBeanServerFactory();if((servers) ) { (0); } {createMBeanServer(); }ObjectName();(\" \" + snmpPort);(\"\").setTrapPort((snmpPort ));snmpV(0, null); println(\"Done.\"); try { (\"server\");newJMXConnectorServer(url);} catch (Exception ex) { println(\"Error\" ); }; } catch (Exception e) { printStackTrace(); } }"}
{"time": "2021-01-20 11:10:58.515325", "n_pass": [1835, 180, 177], "score": "0.9707", "loss": "0.0333", "code": "void main(String[]args){if((length)(length)){System();}if(1){try{((args[0])).intValue();if(nbTraps){}}catch(NumberFormatException e){(1);}}try{MBeanServerFactory();if((servers) ) { (0); } {createMBeanServer(); }ObjectName();(\" \" + snmpPort);(\"\").setTrapPort((snmpPort ));snmpV(0, null); println(\"Done.\"); try { (\"server\");newJMXConnectorServer(url);} catch (Exception ex) { println(\"Error\" ); }} catch (Exception e) { printStackTrace(); } }"}
{"time": "2021-01-20 11:11:14.705809", "n_pass": [2098, 181, 178], "score": "0.8325", "loss": "0.2312", "code": "void main(String[]args){if((length)(length)){System();}if(1){try{((args[0])).intValue();if(nbTraps){}}catch(NumberFormatException e){(1);}}try{MBeanServerFactory();if((servers) ) { (0); } {createMBeanServer(); }ObjectName();(\" \" + snmpPort);(\"\").setTrapPort((snmpPort ));snmpV(0, null); println(\"Done.\"); try { (\"server\");newJMXConnectorServer(url);} catch (Exception ex) { println(\"Error\" ); }} catch (Exception e){ printStackTrace(); } }"}
{"time": "2021-01-20 11:11:16.097431", "n_pass": [2100, 182, 179], "score": "0.9067", "loss": "0.1197", "code": "void main(String[]args){if((length)(length)){System();}if(1){try{((args[0])).intValue();if(nbTraps){}}catch(NumberFormatException e){(1);}}try{MBeanServerFactory();if((servers) ) { (0); } {createMBeanServer(); }ObjectName();(\" \" + snmpPort);(\"\").setTrapPort((snmpPort ));snmpV(0, null); println(\"Done.\"); try { (\"server\");newJMXConnectorServer(url);} catch (Exception ex) { println(\"Error\" ); }} catch (Exception e){printStackTrace(); } }"}
{"time": "2021-01-20 11:11:17.513855", "n_pass": [2105, 183, 180], "score": "0.9008", "loss": "0.1287", "code": "void main(String[]args){if((length)(length)){System();}if(1){try{((args[0])).intValue();if(nbTraps){}}catch(NumberFormatException e){(1);}}try{MBeanServerFactory();if((servers) ) { (0); } {createMBeanServer(); }ObjectName();(\" \" + snmpPort);(\"\").setTrapPort((snmpPort ));snmpV(0, null); println(\"Done.\"); try { (\"server\");newJMXConnectorServer(url);} catch (Exception ex) { println(\"Error\" ); }} catch (Exception e){printStackTrace();} }"}
{"time": "2021-01-20 11:11:18.921512", "n_pass": [2107, 184, 181], "score": "0.962", "loss": "0.0452", "code": "void main(String[]args){if((length)(length)){System();}if(1){try{((args[0])).intValue();if(nbTraps){}}catch(NumberFormatException e){(1);}}try{MBeanServerFactory();if((servers) ) { (0); } {createMBeanServer(); }ObjectName();(\" \" + snmpPort);(\"\").setTrapPort((snmpPort ));snmpV(0, null); println(\"Done.\"); try { (\"server\");newJMXConnectorServer(url);} catch (Exception ex) { println(\"Error\" ); }} catch (Exception e){printStackTrace();}}"}
{"time": "2021-01-20 11:11:21.193837", "n_pass": [2185, 185, 182], "score": "0.8151", "loss": "0.2654", "code": "void main(String[]args){if((length)(length)){System();}if(1){try{((args[0])).intValue();if(nbTraps){}}catch(NumberFormatException e){(1);}}try{MBeanServerFactory();if((servers)) { (0); } {createMBeanServer(); }ObjectName();(\" \" + snmpPort);(\"\").setTrapPort((snmpPort ));snmpV(0, null); println(\"Done.\"); try { (\"server\");newJMXConnectorServer(url);} catch (Exception ex) { println(\"Error\" ); }} catch (Exception e){printStackTrace();}}"}
{"time": "2021-01-20 11:11:22.583828", "n_pass": [2187, 186, 183], "score": "0.7304", "loss": "0.3788", "code": "void main(String[]args){if((length)(length)){System();}if(1){try{((args[0])).intValue();if(nbTraps){}}catch(NumberFormatException e){(1);}}try{MBeanServerFactory();if((servers)){ (0); } {createMBeanServer(); }ObjectName();(\" \" + snmpPort);(\"\").setTrapPort((snmpPort ));snmpV(0, null); println(\"Done.\"); try { (\"server\");newJMXConnectorServer(url);} catch (Exception ex) { println(\"Error\" ); }} catch (Exception e){printStackTrace();}}"}
{"time": "2021-01-20 11:11:23.975960", "n_pass": [2189, 187, 184], "score": "0.928", "loss": "0.0908", "code": "void main(String[]args){if((length)(length)){System();}if(1){try{((args[0])).intValue();if(nbTraps){}}catch(NumberFormatException e){(1);}}try{MBeanServerFactory();if((servers)){(0); } {createMBeanServer(); }ObjectName();(\" \" + snmpPort);(\"\").setTrapPort((snmpPort ));snmpV(0, null); println(\"Done.\"); try { (\"server\");newJMXConnectorServer(url);} catch (Exception ex) { println(\"Error\" ); }} catch (Exception e){printStackTrace();}}"}
{"time": "2021-01-20 11:11:25.382021", "n_pass": [2194, 188, 185], "score": "0.835", "loss": "0.2244", "code": "void main(String[]args){if((length)(length)){System();}if(1){try{((args[0])).intValue();if(nbTraps){}}catch(NumberFormatException e){(1);}}try{MBeanServerFactory();if((servers)){(0);} {createMBeanServer(); }ObjectName();(\" \" + snmpPort);(\"\").setTrapPort((snmpPort ));snmpV(0, null); println(\"Done.\"); try { (\"server\");newJMXConnectorServer(url);} catch (Exception ex) { println(\"Error\" ); }} catch (Exception e){printStackTrace();}}"}
{"time": "2021-01-20 11:11:26.788323", "n_pass": [2196, 189, 186], "score": "0.893", "loss": "0.1343", "code": "void main(String[]args){if((length)(length)){System();}if(1){try{((args[0])).intValue();if(nbTraps){}}catch(NumberFormatException e){(1);}}try{MBeanServerFactory();if((servers)){(0);}{createMBeanServer(); }ObjectName();(\" \" + snmpPort);(\"\").setTrapPort((snmpPort ));snmpV(0, null); println(\"Done.\"); try { (\"server\");newJMXConnectorServer(url);} catch (Exception ex) { println(\"Error\" ); }} catch (Exception e){printStackTrace();}}"}
{"time": "2021-01-20 11:11:28.201182", "n_pass": [2202, 190, 187], "score": "0.9195", "loss": "0.1011", "code": "void main(String[]args){if((length)(length)){System();}if(1){try{((args[0])).intValue();if(nbTraps){}}catch(NumberFormatException e){(1);}}try{MBeanServerFactory();if((servers)){(0);}{createMBeanServer();}ObjectName();(\" \" + snmpPort);(\"\").setTrapPort((snmpPort ));snmpV(0, null); println(\"Done.\"); try { (\"server\");newJMXConnectorServer(url);} catch (Exception ex) { println(\"Error\" ); }} catch (Exception e){printStackTrace();}}"}
{"time": "2021-01-20 11:11:29.627204", "n_pass": [2210, 191, 188], "score": "0.9349", "loss": "0.0869", "code": "void main(String[]args){if((length)(length)){System();}if(1){try{((args[0])).intValue();if(nbTraps){}}catch(NumberFormatException e){(1);}}try{MBeanServerFactory();if((servers)){(0);}{createMBeanServer();}ObjectName();(\"\" + snmpPort);(\"\").setTrapPort((snmpPort ));snmpV(0, null); println(\"Done.\"); try { (\"server\");newJMXConnectorServer(url);} catch (Exception ex) { println(\"Error\" ); }} catch (Exception e){printStackTrace();}}"}
{"time": "2021-01-20 11:11:31.018787", "n_pass": [2212, 192, 189], "score": "0.9457", "loss": "0.068", "code": "void main(String[]args){if((length)(length)){System();}if(1){try{((args[0])).intValue();if(nbTraps){}}catch(NumberFormatException e){(1);}}try{MBeanServerFactory();if((servers)){(0);}{createMBeanServer();}ObjectName();(\"\"+ snmpPort);(\"\").setTrapPort((snmpPort ));snmpV(0, null); println(\"Done.\"); try { (\"server\");newJMXConnectorServer(url);} catch (Exception ex) { println(\"Error\" ); }} catch (Exception e){printStackTrace();}}"}
{"time": "2021-01-20 11:11:32.412588", "n_pass": [2214, 193, 190], "score": "0.962", "loss": "0.046", "code": "void main(String[]args){if((length)(length)){System();}if(1){try{((args[0])).intValue();if(nbTraps){}}catch(NumberFormatException e){(1);}}try{MBeanServerFactory();if((servers)){(0);}{createMBeanServer();}ObjectName();(\"\"+snmpPort);(\"\").setTrapPort((snmpPort ));snmpV(0, null); println(\"Done.\"); try { (\"server\");newJMXConnectorServer(url);} catch (Exception ex) { println(\"Error\" ); }} catch (Exception e){printStackTrace();}}"}
{"time": "2021-01-20 11:11:33.831330", "n_pass": [2227, 194, 191], "score": "0.9127", "loss": "0.1067", "code": "void main(String[]args){if((length)(length)){System();}if(1){try{((args[0])).intValue();if(nbTraps){}}catch(NumberFormatException e){(1);}}try{MBeanServerFactory();if((servers)){(0);}{createMBeanServer();}ObjectName();(\"\"+snmpPort);(\"\").setTrapPort((snmpPort));snmpV(0, null); println(\"Done.\"); try { (\"server\");newJMXConnectorServer(url);} catch (Exception ex) { println(\"Error\" ); }} catch (Exception e){printStackTrace();}}"}
{"time": "2021-01-20 11:11:35.251754", "n_pass": [2235, 195, 192], "score": "0.8872", "loss": "0.1431", "code": "void main(String[]args){if((length)(length)){System();}if(1){try{((args[0])).intValue();if(nbTraps){}}catch(NumberFormatException e){(1);}}try{MBeanServerFactory();if((servers)){(0);}{createMBeanServer();}ObjectName();(\"\"+snmpPort);(\"\").setTrapPort((snmpPort));snmpV(0,null); println(\"Done.\"); try { (\"server\");newJMXConnectorServer(url);} catch (Exception ex) { println(\"Error\" ); }} catch (Exception e){printStackTrace();}}"}
{"time": "2021-01-20 11:11:36.647244", "n_pass": [2239, 196, 193], "score": "0.8234", "loss": "0.2421", "code": "void main(String[]args){if((length)(length)){System();}if(1){try{((args[0])).intValue();if(nbTraps){}}catch(NumberFormatException e){(1);}}try{MBeanServerFactory();if((servers)){(0);}{createMBeanServer();}ObjectName();(\"\"+snmpPort);(\"\").setTrapPort((snmpPort));snmpV(0,null);println(\"Done.\"); try { (\"server\");newJMXConnectorServer(url);} catch (Exception ex) { println(\"Error\" ); }} catch (Exception e){printStackTrace();}}"}
{"time": "2021-01-20 11:11:38.032863", "n_pass": [2240, 197, 194], "score": "0.8419", "loss": "0.2103", "code": "void main(String[]args){if((length)(length)){System();}if(1){try{((args[0])).intValue();if(nbTraps){}}catch(NumberFormatException e){(1);}}try{MBeanServerFactory();if((servers)){(0);}{createMBeanServer();}ObjectName();(\"\"+snmpPort);(\"\").setTrapPort((snmpPort));snmpV(0,null);(\"Done.\"); try { (\"server\");newJMXConnectorServer(url);} catch (Exception ex) { println(\"Error\" ); }} catch (Exception e){printStackTrace();}}"}
{"time": "2021-01-20 11:11:39.452237", "n_pass": [2243, 198, 195], "score": "0.9028", "loss": "0.1377", "code": "void main(String[]args){if((length)(length)){System();}if(1){try{((args[0])).intValue();if(nbTraps){}}catch(NumberFormatException e){(1);}}try{MBeanServerFactory();if((servers)){(0);}{createMBeanServer();}ObjectName();(\"\"+snmpPort);(\"\").setTrapPort((snmpPort));snmpV(0,null);(\".\"); try { (\"server\");newJMXConnectorServer(url);} catch (Exception ex) { println(\"Error\" ); }} catch (Exception e){printStackTrace();}}"}
{"time": "2021-01-20 11:11:40.837304", "n_pass": [2244, 199, 196], "score": "0.929", "loss": "0.0958", "code": "void main(String[]args){if((length)(length)){System();}if(1){try{((args[0])).intValue();if(nbTraps){}}catch(NumberFormatException e){(1);}}try{MBeanServerFactory();if((servers)){(0);}{createMBeanServer();}ObjectName();(\"\"+snmpPort);(\"\").setTrapPort((snmpPort));snmpV(0,null);(\"\"); try { (\"server\");newJMXConnectorServer(url);} catch (Exception ex) { println(\"Error\" ); }} catch (Exception e){printStackTrace();}}"}
{"time": "2021-01-20 11:11:42.244176", "n_pass": [2248, 200, 197], "score": "0.8645", "loss": "0.2034", "code": "void main(String[]args){if((length)(length)){System();}if(1){try{((args[0])).intValue();if(nbTraps){}}catch(NumberFormatException e){(1);}}try{MBeanServerFactory();if((servers)){(0);}{createMBeanServer();}ObjectName();(\"\"+snmpPort);(\"\").setTrapPort((snmpPort));snmpV(0,null);(\"\");try { (\"server\");newJMXConnectorServer(url);} catch (Exception ex) { println(\"Error\" ); }} catch (Exception e){printStackTrace();}}"}
{"time": "2021-01-20 11:11:43.633148", "n_pass": [2250, 201, 198], "score": "0.9042", "loss": "0.1346", "code": "void main(String[]args){if((length)(length)){System();}if(1){try{((args[0])).intValue();if(nbTraps){}}catch(NumberFormatException e){(1);}}try{MBeanServerFactory();if((servers)){(0);}{createMBeanServer();}ObjectName();(\"\"+snmpPort);(\"\").setTrapPort((snmpPort));snmpV(0,null);(\"\");try{ (\"server\");newJMXConnectorServer(url);} catch (Exception ex) { println(\"Error\" ); }} catch (Exception e){printStackTrace();}}"}
{"time": "2021-01-20 11:11:45.023059", "n_pass": [2252, 202, 199], "score": "0.9131", "loss": "0.1257", "code": "void main(String[]args){if((length)(length)){System();}if(1){try{((args[0])).intValue();if(nbTraps){}}catch(NumberFormatException e){(1);}}try{MBeanServerFactory();if((servers)){(0);}{createMBeanServer();}ObjectName();(\"\"+snmpPort);(\"\").setTrapPort((snmpPort));snmpV(0,null);(\"\");try{(\"server\");newJMXConnectorServer(url);} catch (Exception ex) { println(\"Error\" ); }} catch (Exception e){printStackTrace();}}"}
{"time": "2021-01-20 11:11:46.409126", "n_pass": [2255, 203, 200], "score": "0.8801", "loss": "0.1821", "code": "void main(String[]args){if((length)(length)){System();}if(1){try{((args[0])).intValue();if(nbTraps){}}catch(NumberFormatException e){(1);}}try{MBeanServerFactory();if((servers)){(0);}{createMBeanServer();}ObjectName();(\"\"+snmpPort);(\"\").setTrapPort((snmpPort));snmpV(0,null);(\"\");try{(\"\");newJMXConnectorServer(url);} catch (Exception ex) { println(\"Error\" ); }} catch (Exception e){printStackTrace();}}"}
{"time": "2021-01-20 11:11:47.818037", "n_pass": [2259, 204, 201], "score": "0.8205", "loss": "0.2839", "code": "void main(String[]args){if((length)(length)){System();}if(1){try{((args[0])).intValue();if(nbTraps){}}catch(NumberFormatException e){(1);}}try{MBeanServerFactory();if((servers)){(0);}{createMBeanServer();}ObjectName();(\"\"+snmpPort);(\"\").setTrapPort((snmpPort));snmpV(0,null);(\"\");try{(\"\");(url);} catch (Exception ex) { println(\"Error\" ); }} catch (Exception e){printStackTrace();}}"}
{"time": "2021-01-20 11:11:49.248672", "n_pass": [2265, 205, 202], "score": "0.8955", "loss": "0.1557", "code": "void main(String[]args){if((length)(length)){System();}if(1){try{((args[0])).intValue();if(nbTraps){}}catch(NumberFormatException e){(1);}}try{MBeanServerFactory();if((servers)){(0);}{createMBeanServer();}ObjectName();(\"\"+snmpPort);(\"\").setTrapPort((snmpPort));snmpV(0,null);(\"\");try{(\"\");(url);}catch (Exception ex) { println(\"Error\" ); }} catch (Exception e){printStackTrace();}}"}
{"time": "2021-01-20 11:11:50.640970", "n_pass": [2267, 206, 203], "score": "0.8984", "loss": "0.1478", "code": "void main(String[]args){if((length)(length)){System();}if(1){try{((args[0])).intValue();if(nbTraps){}}catch(NumberFormatException e){(1);}}try{MBeanServerFactory();if((servers)){(0);}{createMBeanServer();}ObjectName();(\"\"+snmpPort);(\"\").setTrapPort((snmpPort));snmpV(0,null);(\"\");try{(\"\");(url);}catch(Exception ex) { println(\"Error\" ); }} catch (Exception e){printStackTrace();}}"}
{"time": "2021-01-20 11:11:52.058690", "n_pass": [2273, 207, 204], "score": "0.8966", "loss": "0.1587", "code": "void main(String[]args){if((length)(length)){System();}if(1){try{((args[0])).intValue();if(nbTraps){}}catch(NumberFormatException e){(1);}}try{MBeanServerFactory();if((servers)){(0);}{createMBeanServer();}ObjectName();(\"\"+snmpPort);(\"\").setTrapPort((snmpPort));snmpV(0,null);(\"\");try{(\"\");(url);}catch(Exception ex){ println(\"Error\" ); }} catch (Exception e){printStackTrace();}}"}
{"time": "2021-01-20 11:11:53.449181", "n_pass": [2275, 208, 205], "score": "0.9255", "loss": "0.1078", "code": "void main(String[]args){if((length)(length)){System();}if(1){try{((args[0])).intValue();if(nbTraps){}}catch(NumberFormatException e){(1);}}try{MBeanServerFactory();if((servers)){(0);}{createMBeanServer();}ObjectName();(\"\"+snmpPort);(\"\").setTrapPort((snmpPort));snmpV(0,null);(\"\");try{(\"\");(url);}catch(Exception ex){println(\"Error\" ); }} catch (Exception e){printStackTrace();}}"}
{"time": "2021-01-20 11:11:54.837711", "n_pass": [2276, 209, 206], "score": "0.8955", "loss": "0.1536", "code": "void main(String[]args){if((length)(length)){System();}if(1){try{((args[0])).intValue();if(nbTraps){}}catch(NumberFormatException e){(1);}}try{MBeanServerFactory();if((servers)){(0);}{createMBeanServer();}ObjectName();(\"\"+snmpPort);(\"\").setTrapPort((snmpPort));snmpV(0,null);(\"\");try{(\"\");(url);}catch(Exception ex){(\"Error\" ); }} catch (Exception e){printStackTrace();}}"}
{"time": "2021-01-20 11:11:56.256750", "n_pass": [2279, 210, 207], "score": "0.8198", "loss": "0.2705", "code": "void main(String[]args){if((length)(length)){System();}if(1){try{((args[0])).intValue();if(nbTraps){}}catch(NumberFormatException e){(1);}}try{MBeanServerFactory();if((servers)){(0);}{createMBeanServer();}ObjectName();(\"\"+snmpPort);(\"\").setTrapPort((snmpPort));snmpV(0,null);(\"\");try{(\"\");(url);}catch(Exception ex){(\"\" ); }} catch (Exception e){printStackTrace();}}"}
{"time": "2021-01-20 11:11:57.664171", "n_pass": [2281, 211, 208], "score": "0.9378", "loss": "0.089", "code": "void main(String[]args){if((length)(length)){System();}if(1){try{((args[0])).intValue();if(nbTraps){}}catch(NumberFormatException e){(1);}}try{MBeanServerFactory();if((servers)){(0);}{createMBeanServer();}ObjectName();(\"\"+snmpPort);(\"\").setTrapPort((snmpPort));snmpV(0,null);(\"\");try{(\"\");(url);}catch(Exception ex){(\"\"); }} catch (Exception e){printStackTrace();}}"}
{"time": "2021-01-20 11:11:59.071607", "n_pass": [2284, 212, 209], "score": "0.9099", "loss": "0.1231", "code": "void main(String[]args){if((length)(length)){System();}if(1){try{((args[0])).intValue();if(nbTraps){}}catch(NumberFormatException e){(1);}}try{MBeanServerFactory();if((servers)){(0);}{createMBeanServer();}ObjectName();(\"\"+snmpPort);(\"\").setTrapPort((snmpPort));snmpV(0,null);(\"\");try{(\"\");(url);}catch(Exception ex){(\"\");}} catch (Exception e){printStackTrace();}}"}
{"time": "2021-01-20 11:12:00.463189", "n_pass": [2287, 213, 210], "score": "0.928", "loss": "0.098", "code": "void main(String[]args){if((length)(length)){System();}if(1){try{((args[0])).intValue();if(nbTraps){}}catch(NumberFormatException e){(1);}}try{MBeanServerFactory();if((servers)){(0);}{createMBeanServer();}ObjectName();(\"\"+snmpPort);(\"\").setTrapPort((snmpPort));snmpV(0,null);(\"\");try{(\"\");(url);}catch(Exception ex){(\"\");}}catch (Exception e){printStackTrace();}}"}
{"time": "2021-01-20 11:12:01.857858", "n_pass": [2289, 214, 211], "score": "0.9047", "loss": "0.1354", "code": "void main(String[]args){if((length)(length)){System();}if(1){try{((args[0])).intValue();if(nbTraps){}}catch(NumberFormatException e){(1);}}try{MBeanServerFactory();if((servers)){(0);}{createMBeanServer();}ObjectName();(\"\"+snmpPort);(\"\").setTrapPort((snmpPort));snmpV(0,null);(\"\");try{(\"\");(url);}catch(Exception ex){(\"\");}}catch(Exception e){printStackTrace();}}"}

Minimal simplified code:
void main(String[]args){if((length)(length)){System();}if(1){try{((args[0])).intValue();if(nbTraps){}}catch(NumberFormatException e){(1);}}try{MBeanServerFactory();if((servers)){(0);}{createMBeanServer();}ObjectName();(""+snmpPort);("").setTrapPort((snmpPort));snmpV(0,null);("");try{("");(url);}catch(Exception ex){("");}}catch(Exception e){printStackTrace();}}

