
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/codefollower__Tomcat-Research/test/org/apache/catalina/tribes/demos/LoadTest_main.java
method_name = main
method_body = public static void main(String[] args) throws Exception { boolean send = true; boolean debug = false; long pause = 0; int count = 1000000; int stats = 10000; boolean breakOnEx = false; int threads = 1; boolean shutdown = false; int startoptions = Channel.DEFAULT; int channelOptions = Channel.SEND_OPTIONS_DEFAULT; if (args.length == 0) { args = new String[] { "-help" }; } for (int i = 0; i < args.length; i++) { if ("-threads".equals(args[i])) { threads = Integer.parseInt(args[++i]); } else if ("-count".equals(args[i])) { count = Integer.parseInt(args[++i]); System.out.println("Sending " + count + " messages."); } else if ("-pause".equals(args[i])) { pause = Long.parseLong(args[++i]) * 1000; } else if ("-break".equals(args[i])) { breakOnEx = true; } else if ("-shutdown".equals(args[i])) { shutdown = true; } else if ("-stats".equals(args[i])) { stats = Integer.parseInt(args[++i]); System.out.println("Stats every " + stats + " message"); } else if ("-sendoptions".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System.out.println("Setting send options to " + channelOptions); } else if ("-startoptions".equals(args[i])) { startoptions = Integer.parseInt(args[++i]); System.out.println("Setting start options to " + startoptions); } else if ("-size".equals(args[i])) { size = Integer.parseInt(args[++i]) - 4; System.out.println("Message size will be:" + (size + 4) + " bytes"); } else if ("-mode".equals(args[i])) { if ("receive".equals(args[++i])) send = false; } else if ("-debug".equals(args[i])) { debug = true; } else if ("-help".equals(args[i])) { usage(); System.exit(1); } } ManagedChannel channel = (ManagedChannel) ChannelCreator.createChannel(args); LoadTest test = new LoadTest(channel, send, count, debug, pause, stats, breakOnEx); test.channelOptions = channelOptions; LoadMessage msg = new LoadMessage(); messageSize = LoadMessage.getMessageSize(msg); channel.addChannelListener(test); channel.addMembershipListener(test); channel.start(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { Thread t = new Thread(test); t.setDaemon(true); t.start(); threads--; test = new LoadTest(channel, send, count, debug, pause, stats, breakOnEx); test.channelOptions = channelOptions; } test.run(); if (shutdown && send) channel.stop(Channel.DEFAULT); System.out.println("System test complete, sleeping to let threads finish."); Thread.sleep(60 * 1000 * 60); }
predict, score, loss = main, 0.9124187, 0.112040445

Trace of simplified code(s):
{"time": "2021-01-20 08:48:20.511642", "n_pass": [1, 1, 1], "score": "0.9223", "loss": "0.096", "code": "public static void main(String[] args) throws Exception { boolean send = true; boolean debug = false; long pause = 0; int count = 1000000; int stats = 10000; boolean breakOnEx = false; int threads = 1; boolean shutdown = false; int startoptions = Channel.DEFAULT; int channelOptions = Channel.SEND_OPTIONS_DEFAULT; if (args.length == 0) { args = new String[] { \"-help\" }; } for (int i = 0; i < args.length; i++) { if (\"-threads\".equals(args[i])) { threads = Integer.parseInt(args[++i]); } else if (\"-count\".equals(args[i])) { count = Integer.parseInt(args[++i]); System.out.println(\"Sending \" + count + \" messages.\"); } else if (\"-pause\".equals(args[i])) { pause = Long.parseLong(args[++i]) * 1000; } else if (\"-break\".equals(args[i])) { breakOnEx = true; } else if (\"-shutdown\".equals(args[i])) { shutdown = true; } else if (\"-stats\".equals(args[i])) { stats = Integer.parseInt(args[++i]); System.out.println(\"Stats every \" + stats + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System.out.println(\"Setting send options to \" + channelOptions); } else if (\"-startoptions\".equals(args[i])) { startoptions = Integer.parseInt(args[++i]); System.out.println(\"Setting start options to \" + startoptions); } else if (\"-size\".equals(args[i])) { size = Integer.parseInt(args[++i]) - 4; System.out.println(\"Message size will be:\" + (size + 4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) send = false; } else if (\"-debug\".equals(args[i])) { debug = true; } else if (\"-help\".equals(args[i])) { usage(); System.exit(1); } } ManagedChannel channel = (ManagedChannel) ChannelCreator.createChannel(args); LoadTest test = new LoadTest(channel, send, count, debug, pause, stats, breakOnEx); test.channelOptions = channelOptions; LoadMessage msg = new LoadMessage(); messageSize = LoadMessage.getMessageSize(msg); channel.addChannelListener(test); channel.addMembershipListener(test); channel.start(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { Thread t = new Thread(test); t.setDaemon(true); t.start(); threads--; test = new LoadTest(channel, send, count, debug, pause, stats, breakOnEx); test.channelOptions = channelOptions; } test.run(); if (shutdown && send) channel.stop(Channel.DEFAULT); System.out.println(\"System test complete, sleeping to let threads finish.\"); Thread.sleep(60 * 1000 * 60); }"}
{"time": "2021-01-20 08:48:22.315378", "n_pass": [52, 2, 2], "score": "0.9435", "loss": "0.0649", "code": "public static void main(String[] args) throws Exception { boolean send = true; boolean debug = false; long pause = 0; int count = 1000000; int stats = 10000; boolean breakOnEx = false; int threads = 1; boolean shutdown = false; int startoptions = Channel.DEFAULT; int channelOptions = Channel.SEND_OPTIONS_DEFAULT; if (args.length == 0) { args = new String[] { \"-help\" }; } for (int i = 0; i < args.length; i++) { if (\"-threads\".equals(args[i])) { threads = Integer.parseInt(args[++i]); } else if (\"-count\".equals(args[i])) { count = Integer.parseInt(args[++i]); System.out.println(\"Sending \" + count + \" messages.\"); } else if (\"-pause\".equals(args[i])) { pause = Long.parseLong(args[++i]) * 1000; } else if (\"-break\".equals(args[i])) { breakOnEx = true; } else if (\"-shutdown\".equals(args[i])) { shutdown = true; } else if (\"-stats\".equals(args[i])) { stats = Integer.parseInt(args[++i]); System.out.println(\"Stats every \" + stats + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System.out.println(\"Setting send options to \" + channelOptions); } else if (equals(args[i])) { size = Integer.parseInt(args[++i]) - 4; System.out.println(\"Message size will be:\" + (size + 4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) send = false; } else if (\"-debug\".equals(args[i])) { debug = true; } else if (\"-help\".equals(args[i])) { usage(); System.exit(1); } } ManagedChannel channel = (ManagedChannel) ChannelCreator.createChannel(args); LoadTest test = new LoadTest(channel, send, count, debug, pause, stats, breakOnEx); test.channelOptions = channelOptions; LoadMessage msg = new LoadMessage(); messageSize = LoadMessage.getMessageSize(msg); channel.addChannelListener(test); channel.addMembershipListener(test); channel.start(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { Thread t = new Thread(test); t.setDaemon(true); t.start(); threads--; test = new LoadTest(channel, send, count, debug, pause, stats, breakOnEx); test.channelOptions = channelOptions; } test.run(); if (shutdown && send) channel.stop(Channel.DEFAULT); System.out.println(\"System test complete, sleeping to let threads finish.\"); Thread.sleep(60 * 1000 * 60); }"}
{"time": "2021-01-20 08:48:23.898502", "n_pass": [56, 3, 3], "score": "0.9734", "loss": "0.0296", "code": "public static void main(String[] args) throws Exception { boolean send = true; boolean debug = false; long pause = 0; int count = 1000000; int stats = 10000; boolean breakOnEx = false; int threads = 1; boolean shutdown = false; int startoptions = Channel.DEFAULT; int channelOptions = Channel.SEND_OPTIONS_DEFAULT; if (args.length == 0) { args = new String[] { \"-help\" }; } for (int i = 0; i < args.length; i++) { if (\"-threads\".equals(args[i])) { threads = Integer.parseInt(args[++i]); } else if (\"-count\".equals(args[i])) { count = Integer.parseInt(args[++i]); System.out.println(\"Sending \" + count + \" messages.\"); } else if (\"-pause\".equals(args[i])) { pause = Long.parseLong(args[++i]) * 1000; } else if (\"-break\".equals(args[i])) { breakOnEx = true; } else if (\"-shutdown\".equals(args[i])) { shutdown = true; } else if (\"-stats\".equals(args[i])) { stats = Integer.parseInt(args[++i]); System.out.println(\"Stats every \" + stats + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System.out.println(\"Setting send options to \" + channelOptions); } else if (equals(args[i])) { size = Integer.parseInt(args[++i]) - 4; System.out.println(\"Message size will be:\" + (size + 4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) send = false; } else if (\"-debug\".equals(args[i])) { debug = true; } else if (\"-help\".equals(args[i])) { usage(); System.exit(1); } } ManagedChannel channel = (ManagedChannel) ChannelCreator.createChannel(args); addChannelListener(test); channel.addMembershipListener(test); channel.start(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { Thread t = new Thread(test); t.setDaemon(true); t.start(); threads--; test = new LoadTest(channel, send, count, debug, pause, stats, breakOnEx); test.channelOptions = channelOptions; } test.run(); if (shutdown && send) channel.stop(Channel.DEFAULT); System.out.println(\"System test complete, sleeping to let threads finish.\"); Thread.sleep(60 * 1000 * 60); }"}
{"time": "2021-01-20 08:48:25.585218", "n_pass": [106, 4, 4], "score": "0.9794", "loss": "0.0224", "code": "public static void main(String[] args) throws Exception { boolean send = true; boolean debug = 10000; boolean breakOnEx = false; int threads = 1; boolean shutdown = false; int startoptions = Channel.DEFAULT; int channelOptions = Channel.SEND_OPTIONS_DEFAULT; if (args.length == 0) { args = new String[] { \"-help\" }; } for (int i = 0; i < args.length; i++) { if (\"-threads\".equals(args[i])) { threads = Integer.parseInt(args[++i]); } else if (\"-count\".equals(args[i])) { count = Integer.parseInt(args[++i]); System.out.println(\"Sending \" + count + \" messages.\"); } else if (\"-pause\".equals(args[i])) { pause = Long.parseLong(args[++i]) * 1000; } else if (\"-break\".equals(args[i])) { breakOnEx = true; } else if (\"-shutdown\".equals(args[i])) { shutdown = true; } else if (\"-stats\".equals(args[i])) { stats = Integer.parseInt(args[++i]); System.out.println(\"Stats every \" + stats + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System.out.println(\"Setting send options to \" + channelOptions); } else if (equals(args[i])) { size = Integer.parseInt(args[++i]) - 4; System.out.println(\"Message size will be:\" + (size + 4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) send = false; } else if (\"-debug\".equals(args[i])) { debug = true; } else if (\"-help\".equals(args[i])) { usage(); System.exit(1); } } ManagedChannel channel = (ManagedChannel) ChannelCreator.createChannel(args); addChannelListener(test); channel.addMembershipListener(test); channel.start(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { Thread t = new Thread(test); t.setDaemon(true); t.start(); threads--; test = new LoadTest(channel, send, count, debug, pause, stats, breakOnEx); test.channelOptions = channelOptions; } test.run(); if (shutdown && send) channel.stop(Channel.DEFAULT); System.out.println(\"System test complete, sleeping to let threads finish.\"); Thread.sleep(60 * 1000 * 60); }"}
{"time": "2021-01-20 08:48:27.546579", "n_pass": [217, 5, 5], "score": "0.8819", "loss": "0.1404", "code": "public static void main(String[] args) throws Exception { boolean send = true; boolean debug = 10000; boolean breakOnEx = false; int threads = 1; boolean shutdown = false; int startoptions = Channel.DEFAULT; int channelOptions = Channel.SEND_OPTIONS_DEFAULT; if (args.length == 0) { args = new String[] { \"-help\" }; } for (int i = 0; i < args.length; i++) { if (\"-threads\".equals(args[i])) { threads = Integer.parseInt(args[++i]); } else if (\"-count\".equals(args[i])) { count = Integer.parseInt(args[++i]); System.out.println(\"Sending \" + count + \" messages.\"); } else if (\"-pause\".equals(args[i])) { pause = Long.parseLong(args[++i]) * 1000; } else if (\"-break\".equals(args[i])) { breakOnEx = true; } else if (\"-shutdown\".equals(args[i])) { shutdown = true; } else if (\"-stats\".equals(args[i])) { stats = Integer.parseInt(args[++i]); System.out.println(\"Stats every \" + stats + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System.out.println(\"Setting send options to \" + channelOptions); } else if (equals(args[i])) { size = Integer.out.println(\"Message size will be:\" + (size + 4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) send = false; } else if (\"-debug\".equals(args[i])) { debug = true; } else if (\"-help\".equals(args[i])) { usage(); System.exit(1); } } ManagedChannel channel = (ManagedChannel) ChannelCreator.createChannel(args); addChannelListener(test); channel.addMembershipListener(test); channel.start(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { Thread t = new Thread(test); t.setDaemon(true); t.start(); threads--; test = new LoadTest(channel, send, count, debug, pause, stats, breakOnEx); test.channelOptions = channelOptions; } test.run(); if (shutdown && send) channel.stop(Channel.DEFAULT); System.out.println(\"System test complete, sleeping to let threads finish.\"); Thread.sleep(60 * 1000 * 60); }"}
{"time": "2021-01-20 08:48:29.153781", "n_pass": [227, 6, 6], "score": "0.8251", "loss": "0.2545", "code": "public static void main(String[] args) throws Exception { boolean send = true; boolean debug = 10000; boolean breakOnEx = false; int threads = 1; boolean shutdown = false; int startoptions = Channel.DEFAULT; int channelOptions = Channel.SEND_OPTIONS_DEFAULT; if (args.length == 0) { args = new String[] { \"-help\" }; } for (int i = 0; i < args.length; i++) { if (\"-threads\".equals(args[i])) { threads = Integer.parseInt(args[++i]); } else if (\"-count\".equals(args[i])) { count = Integer.parseInt(args[++i]); System.out.println(\"Sending \" + count + \" messages.\"); } else if (\"-pause\".equals(args[i])) { pause = Long.parseLong(args[++i]) * 1000; } else if (\"-break\".equals(args[i])) { breakOnEx = true; } else if (\"-shutdown\".equals(args[i])) { shutdown = true; } else if (\"-stats\".equals(args[i])) { stats = Integer.parseInt(args[++i]); System.out.println(\"Stats every \" + stats + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System.out.println(\"Setting send options to \" + channelOptions); } else if (equals(args[i])) { size = Integer.out.println(\"Message size will be:\" + (size + 4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) send = false; } else if (\"-debug\".equals(args[i])) { debug = true; } else if (\"-help\".equals(args[i])) { usage(); System.exit(1); } } ManagedChanneladdChannelListener(test); channel.addMembershipListener(test); channel.start(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { Thread t = new Thread(test); t.setDaemon(true); t.start(); threads--; test = new LoadTest(channel, send, count, debug, pause, stats, breakOnEx); test.channelOptions = channelOptions; } test.run(); if (shutdown && send) channel.stop(Channel.DEFAULT); System.out.println(\"System test complete, sleeping to let threads finish.\"); Thread.sleep(60 * 1000 * 60); }"}
{"time": "2021-01-20 08:48:30.707461", "n_pass": [228, 7, 7], "score": "0.7962", "loss": "0.2468", "code": "public static void main(String[] args) throws Exception { boolean send = true; boolean debug = 10000; boolean breakOnEx = false; int threads = 1; boolean shutdown = false; int startoptions = Channel.DEFAULT; int channelOptions = Channel.SEND_OPTIONS_DEFAULT; if (args.length == 0) { args = new String[] { \"-help\" }; } for (int i = 0; i < args.length; i++) { if (\"-threads\".equals(args[i])) { threads = Integer.parseInt(args[++i]); } else if (\"-count\".equals(args[i])) { count = Integer.parseInt(args[++i]); System.out.println(\"Sending \" + count + \" messages.\"); } else if (\"-pause\".equals(args[i])) { pause = Long.parseLong(args[++i]) * 1000; } else if (\"-break\".equals(args[i])) { breakOnEx = true; } else if (\"-shutdown\".equals(args[i])) { shutdown = true; } else if (\"-stats\".equals(args[i])) { stats = Integer.parseInt(args[++i]); System.out.println(\"Stats every \" + stats + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System.out.println(\"Setting send options to \" + channelOptions); } else if (equals(args[i])) { size = Integer.out.println(\"Message size will be:\" + (size + 4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) send = false; } else if (\"-debug\".equals(args[i])) { debug = true; } else if (\"-help\".equals(args[i])) { usage(); System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { Thread t = new Thread(test); t.setDaemon(true); t.start(); threads--; test = new LoadTest(channel, send, count, debug, pause, stats, breakOnEx); test.channelOptions = channelOptions; } test.run(); if (shutdown && send) channel.stop(Channel.DEFAULT); System.out.println(\"System test complete, sleeping to let threads finish.\"); Thread.sleep(60 * 1000 * 60); }"}
{"time": "2021-01-20 08:48:32.239021", "n_pass": [231, 8, 8], "score": "0.9668", "loss": "0.0395", "code": "public static void main(String[] args) throws Exception { boolean send = true; boolean debug = 10000; boolean breakOnEx = false; int threads = 1; boolean shutdown = false; int startoptions = Channel.DEFAULT; int channelOptions = Channel.SEND_OPTIONS_DEFAULT; if (args.length == 0) { args = new String[] { \"-help\" }; } for (int i = 0; i < args.length; i++) { if (\"-threads\".equals(args[i])) { threads = Integer.parseInt(args[++i]); } else if (\"-count\".equals(args[i])) { count = Integer.parseInt(args[++i]); System.out.println(\"Sending \" + count + \" messages.\"); } else if (\"-pause\".equals(args[i])) { pause = Long.parseLong(args[++i]) * 1000; } else if (\"-break\".equals(args[i])) { breakOnEx = true; } else if (\"-shutdown\".equals(args[i])) { shutdown = true; } else if (\"-stats\".equals(args[i])) { stats = Integer.parseInt(args[++i]); System.out.println(\"Stats every \" + stats + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System.out.println(\"Setting send options to \" + channelOptions); } else if (equals(args[i])) { size = Integer.out.println(\"Message size will be:\" + (size + 4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) send = false; } else if (\"-debug\".equals(args[i])) { debug = true; } else if (\"-help\".equals(args[i])) { usage(); System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { (true); t.start(); threads--; test = new LoadTest(channel, send, count, debug, pause, stats, breakOnEx); test.channelOptions = channelOptions; } test.run(); if (shutdown && send) channel.stop(Channel.DEFAULT); System.out.println(\"System test complete, sleeping to let threads finish.\"); Thread.sleep(60 * 1000 * 60); }"}
{"time": "2021-01-20 08:48:33.762652", "n_pass": [232, 9, 9], "score": "0.9187", "loss": "0.1032", "code": "public static void main(String[] args) throws Exception { boolean send = true; boolean debug = 10000; boolean breakOnEx = false; int threads = 1; boolean shutdown = false; int startoptions = Channel.DEFAULT; int channelOptions = Channel.SEND_OPTIONS_DEFAULT; if (args.length == 0) { args = new String[] { \"-help\" }; } for (int i = 0; i < args.length; i++) { if (\"-threads\".equals(args[i])) { threads = Integer.parseInt(args[++i]); } else if (\"-count\".equals(args[i])) { count = Integer.parseInt(args[++i]); System.out.println(\"Sending \" + count + \" messages.\"); } else if (\"-pause\".equals(args[i])) { pause = Long.parseLong(args[++i]) * 1000; } else if (\"-break\".equals(args[i])) { breakOnEx = true; } else if (\"-shutdown\".equals(args[i])) { shutdown = true; } else if (\"-stats\".equals(args[i])) { stats = Integer.parseInt(args[++i]); System.out.println(\"Stats every \" + stats + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System.out.println(\"Setting send options to \" + channelOptions); } else if (equals(args[i])) { size = Integer.out.println(\"Message size will be:\" + (size + 4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) send = false; } else if (\"-debug\".equals(args[i])) { debug = true; } else if (\"-help\".equals(args[i])) { usage(); System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(channel, send, count, debug, pause, stats, breakOnEx); test.channelOptions = channelOptions; } test.run(); if (shutdown && send) channel.stop(Channel.DEFAULT); System.out.println(\"System test complete, sleeping to let threads finish.\"); Thread.sleep(60 * 1000 * 60); }"}
{"time": "2021-01-20 08:48:36.052904", "n_pass": [382, 10, 10], "score": "0.6228", "loss": "0.5506", "code": "public static void main(String[] args) throws Exception { boolean send = true; boolean debug = 10000; boolean breakOnEx = false; int threads = 1; boolean shutdown = false; int startoptions = Channel.DEFAULT; int channelOptions = Channel.SEND_OPTIONS_DEFAULT; if (args.length == 0) { args = new String[] { \"-help\" }; } for (int i = 0; i < args.length; i++) { if (\"-threads\".equals(args[i])) { threads = Integer.parseInt(args[++i]); } else if (\"-count\".equals(args[i])) { count = Integer.parseInt(args[++i]); System.out.println(\"Sending \" + count + \" messages.\"); } else if (\"-pause\".equals(args[i])) { pause = Long.parseLong(args[++i]) * 1000; } else if (\"-break\".equals(args[i])) { breakOnEx = true; } else if (\"-shutdown\".equals(args[i])) { shutdown = true; } else if (\"-stats\".equals(args[i])) { stats = Integer.parseInt(args[++i]); System.out.println(\"Stats every \" + stats + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System.out.println(\"Setting send options to \" + channelOptions); } else if (equals(args[i])) { size = Integer.out.println(\"Message size will be:\" + (size + 4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) send = false; } else if (\"-debug\".equals(args[i])) { debug = true; } else if (\"-help\".equals(args[i])) { usage(); System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(channel, pause, stats, breakOnEx); test.channelOptions = channelOptions; } test.run(); if (shutdown && send) channel.stop(Channel.DEFAULT); System.out.println(\"System test complete, sleeping to let threads finish.\"); Thread.sleep(60 * 1000 * 60); }"}
{"time": "2021-01-20 08:48:37.581276", "n_pass": [384, 11, 11], "score": "0.8989", "loss": "0.1177", "code": "public static void main(String[] args) throws Exception { boolean send = true; boolean debug = 10000; boolean breakOnEx = false; int threads = 1; boolean shutdown = false; int startoptions = Channel.DEFAULT; int channelOptions = Channel.SEND_OPTIONS_DEFAULT; if (args.length == 0) { args = new String[] { \"-help\" }; } for (int i = 0; i < args.length; i++) { if (\"-threads\".equals(args[i])) { threads = Integer.parseInt(args[++i]); } else if (\"-count\".equals(args[i])) { count = Integer.parseInt(args[++i]); System.out.println(\"Sending \" + count + \" messages.\"); } else if (\"-pause\".equals(args[i])) { pause = Long.parseLong(args[++i]) * 1000; } else if (\"-break\".equals(args[i])) { breakOnEx = true; } else if (\"-shutdown\".equals(args[i])) { shutdown = true; } else if (\"-stats\".equals(args[i])) { stats = Integer.parseInt(args[++i]); System.out.println(\"Stats every \" + stats + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System.out.println(\"Setting send options to \" + channelOptions); } else if (equals(args[i])) { size = Integer.out.println(\"Message size will be:\" + (size + 4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) send = false; } else if (\"-debug\".equals(args[i])) { debug = true; } else if (\"-help\".equals(args[i])) { usage(); System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(channel, pause, stats, breakOnEx); } test.run(); if (shutdown && send) channel.stop(Channel.DEFAULT); System.out.println(\"System test complete, sleeping to let threads finish.\"); Thread.sleep(60 * 1000 * 60); }"}
{"time": "2021-01-20 08:48:39.121754", "n_pass": [387, 12, 12], "score": "0.9399", "loss": "0.0728", "code": "public static void main(String[] args) throws Exception { boolean send = true; boolean debug = 10000; boolean breakOnEx = false; int threads = 1; boolean shutdown = false; int startoptions = Channel.DEFAULT; int channelOptions = Channel.SEND_OPTIONS_DEFAULT; if (args.length == 0) { args = new String[] { \"-help\" }; } for (int i = 0; i < args.length; i++) { if (\"-threads\".equals(args[i])) { threads = Integer.parseInt(args[++i]); } else if (\"-count\".equals(args[i])) { count = Integer.parseInt(args[++i]); System.out.println(\"Sending \" + count + \" messages.\"); } else if (\"-pause\".equals(args[i])) { pause = Long.parseLong(args[++i]) * 1000; } else if (\"-break\".equals(args[i])) { breakOnEx = true; } else if (\"-shutdown\".equals(args[i])) { shutdown = true; } else if (\"-stats\".equals(args[i])) { stats = Integer.parseInt(args[++i]); System.out.println(\"Stats every \" + stats + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System.out.println(\"Setting send options to \" + channelOptions); } else if (equals(args[i])) { size = Integer.out.println(\"Message size will be:\" + (size + 4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) send = false; } else if (\"-debug\".equals(args[i])) { debug = true; } else if (\"-help\".equals(args[i])) { usage(); System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(channel, pause, stats, breakOnEx); } test.run(); if (shutdown && DEFAULT); System.out.println(\"System test complete, sleeping to let threads finish.\"); Thread.sleep(60 * 1000 * 60); }"}
{"time": "2021-01-20 08:48:40.675487", "n_pass": [390, 13, 13], "score": "0.9594", "loss": "0.048", "code": "public static void main(String[] args) throws Exception { boolean send = true; boolean debug = 10000; boolean breakOnEx = false; int threads = 1; boolean shutdown = false; int startoptions = Channel.DEFAULT; int channelOptions = Channel.SEND_OPTIONS_DEFAULT; if (args.length == 0) { args = new String[] { \"-help\" }; } for (int i = 0; i < args.length; i++) { if (\"-threads\".equals(args[i])) { threads = Integer.parseInt(args[++i]); } else if (\"-count\".equals(args[i])) { count = Integer.parseInt(args[++i]); System.out.println(\"Sending \" + count + \" messages.\"); } else if (\"-pause\".equals(args[i])) { pause = Long.parseLong(args[++i]) * 1000; } else if (\"-break\".equals(args[i])) { breakOnEx = true; } else if (\"-shutdown\".equals(args[i])) { shutdown = true; } else if (\"-stats\".equals(args[i])) { stats = Integer.parseInt(args[++i]); System.out.println(\"Stats every \" + stats + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System.out.println(\"Setting send options to \" + channelOptions); } else if (equals(args[i])) { size = Integer.out.println(\"Message size will be:\" + (size + 4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) send = false; } else if (\"-debug\".equals(args[i])) { debug = true; } else if (\"-help\".equals(args[i])) { usage(); System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(channel, pause, stats, breakOnEx); } test.run(); if (shutdown && DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000 * 60); }"}
{"time": "2021-01-20 08:48:42.227038", "n_pass": [397, 14, 14], "score": "0.9311", "loss": "0.0832", "code": "public static void main(String[] args) throws Exception { boolean senddebug = 10000; boolean breakOnEx = false; int threads = 1; boolean shutdown = false; int startoptions = Channel.DEFAULT; int channelOptions = Channel.SEND_OPTIONS_DEFAULT; if (args.length == 0) { args = new String[] { \"-help\" }; } for (int i = 0; i < args.length; i++) { if (\"-threads\".equals(args[i])) { threads = Integer.parseInt(args[++i]); } else if (\"-count\".equals(args[i])) { count = Integer.parseInt(args[++i]); System.out.println(\"Sending \" + count + \" messages.\"); } else if (\"-pause\".equals(args[i])) { pause = Long.parseLong(args[++i]) * 1000; } else if (\"-break\".equals(args[i])) { breakOnEx = true; } else if (\"-shutdown\".equals(args[i])) { shutdown = true; } else if (\"-stats\".equals(args[i])) { stats = Integer.parseInt(args[++i]); System.out.println(\"Stats every \" + stats + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System.out.println(\"Setting send options to \" + channelOptions); } else if (equals(args[i])) { size = Integer.out.println(\"Message size will be:\" + (size + 4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) send = false; } else if (\"-debug\".equals(args[i])) { debug = true; } else if (\"-help\".equals(args[i])) { usage(); System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(channel, pause, stats, breakOnEx); } test.run(); if (shutdown && DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000 * 60); }"}
{"time": "2021-01-20 08:48:43.748681", "n_pass": [398, 15, 15], "score": "0.8867", "loss": "0.1472", "code": "public static void main(String[] args) throws Exception { boolean send0; boolean breakOnEx = false; int threads = 1; boolean shutdown = false; int startoptions = Channel.DEFAULT; int channelOptions = Channel.SEND_OPTIONS_DEFAULT; if (args.length == 0) { args = new String[] { \"-help\" }; } for (int i = 0; i < args.length; i++) { if (\"-threads\".equals(args[i])) { threads = Integer.parseInt(args[++i]); } else if (\"-count\".equals(args[i])) { count = Integer.parseInt(args[++i]); System.out.println(\"Sending \" + count + \" messages.\"); } else if (\"-pause\".equals(args[i])) { pause = Long.parseLong(args[++i]) * 1000; } else if (\"-break\".equals(args[i])) { breakOnEx = true; } else if (\"-shutdown\".equals(args[i])) { shutdown = true; } else if (\"-stats\".equals(args[i])) { stats = Integer.parseInt(args[++i]); System.out.println(\"Stats every \" + stats + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System.out.println(\"Setting send options to \" + channelOptions); } else if (equals(args[i])) { size = Integer.out.println(\"Message size will be:\" + (size + 4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) send = false; } else if (\"-debug\".equals(args[i])) { debug = true; } else if (\"-help\".equals(args[i])) { usage(); System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(channel, pause, stats, breakOnEx); } test.run(); if (shutdown && DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000 * 60); }"}
{"time": "2021-01-20 08:48:45.274882", "n_pass": [401, 16, 16], "score": "0.9634", "loss": "0.0458", "code": "public static void main(String[] args) throws Exception { boolean send0; boolean breakOnEx = false; int threads  = false; int startoptions = Channel.DEFAULT; int channelOptions = Channel.SEND_OPTIONS_DEFAULT; if (args.length == 0) { args = new String[] { \"-help\" }; } for (int i = 0; i < args.length; i++) { if (\"-threads\".equals(args[i])) { threads = Integer.parseInt(args[++i]); } else if (\"-count\".equals(args[i])) { count = Integer.parseInt(args[++i]); System.out.println(\"Sending \" + count + \" messages.\"); } else if (\"-pause\".equals(args[i])) { pause = Long.parseLong(args[++i]) * 1000; } else if (\"-break\".equals(args[i])) { breakOnEx = true; } else if (\"-shutdown\".equals(args[i])) { shutdown = true; } else if (\"-stats\".equals(args[i])) { stats = Integer.parseInt(args[++i]); System.out.println(\"Stats every \" + stats + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System.out.println(\"Setting send options to \" + channelOptions); } else if (equals(args[i])) { size = Integer.out.println(\"Message size will be:\" + (size + 4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) send = false; } else if (\"-debug\".equals(args[i])) { debug = true; } else if (\"-help\".equals(args[i])) { usage(); System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(channel, pause, stats, breakOnEx); } test.run(); if (shutdown && DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000 * 60); }"}
{"time": "2021-01-20 08:48:46.861711", "n_pass": [412, 17, 17], "score": "0.8427", "loss": "0.184", "code": "public static void main(String[] args) throws Exception { boolean send0; boolean breakOnEx = false; int threads  = false; int startoptions = Channel.DEFAULT; int channelOptions = Channel.SEND_OPTIONS_DEFAULT; if (args.length == 0) { args = new String[] { \"-help\" }; } for (int i = 0;; i++) { if (\"-threads\".equals(args[i])) { threads = Integer.parseInt(args[++i]); } else if (\"-count\".equals(args[i])) { count = Integer.parseInt(args[++i]); System.out.println(\"Sending \" + count + \" messages.\"); } else if (\"-pause\".equals(args[i])) { pause = Long.parseLong(args[++i]) * 1000; } else if (\"-break\".equals(args[i])) { breakOnEx = true; } else if (\"-shutdown\".equals(args[i])) { shutdown = true; } else if (\"-stats\".equals(args[i])) { stats = Integer.parseInt(args[++i]); System.out.println(\"Stats every \" + stats + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System.out.println(\"Setting send options to \" + channelOptions); } else if (equals(args[i])) { size = Integer.out.println(\"Message size will be:\" + (size + 4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) send = false; } else if (\"-debug\".equals(args[i])) { debug = true; } else if (\"-help\".equals(args[i])) { usage(); System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(channel, pause, stats, breakOnEx); } test.run(); if (shutdown && DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000 * 60); }"}
{"time": "2021-01-20 08:48:48.372345", "n_pass": [415, 18, 18], "score": "0.7874", "loss": "0.2656", "code": "public static void main(String[] args) throws Exception { boolean send0; boolean breakOnEx = false; int threads  = false; int startoptions = Channel.DEFAULT; int channelOptions = Channel.SEND_OPTIONS_DEFAULT; if (args.length == 0) { args = new String[] { \"-help\" }; } for (int i = 0;; i++) { if (\"-threads\") { threads = Integer.parseInt(args[++i]); } else if (\"-count\".equals(args[i])) { count = Integer.parseInt(args[++i]); System.out.println(\"Sending \" + count + \" messages.\"); } else if (\"-pause\".equals(args[i])) { pause = Long.parseLong(args[++i]) * 1000; } else if (\"-break\".equals(args[i])) { breakOnEx = true; } else if (\"-shutdown\".equals(args[i])) { shutdown = true; } else if (\"-stats\".equals(args[i])) { stats = Integer.parseInt(args[++i]); System.out.println(\"Stats every \" + stats + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System.out.println(\"Setting send options to \" + channelOptions); } else if (equals(args[i])) { size = Integer.out.println(\"Message size will be:\" + (size + 4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) send = false; } else if (\"-debug\".equals(args[i])) { debug = true; } else if (\"-help\".equals(args[i])) { usage(); System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(channel, pause, stats, breakOnEx); } test.run(); if (shutdown && DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000 * 60); }"}
{"time": "2021-01-20 08:48:49.917534", "n_pass": [420, 19, 19], "score": "0.9685", "loss": "0.0397", "code": "public static void main(String[] args) throws Exception { boolean send0; boolean breakOnEx = false; int threads  = false; int startoptions = Channel.DEFAULT; int channelOptions = Channel.SEND_OPTIONS_DEFAULT; if (args.length == 0) { args = new String[] { \"-help\" }; } for (int i = 0;; i++) { if (\"-threads\") { threads = Integer.parseInt(args[++i]); } else if (\"-count\") { count = Integer.parseInt(args[++i]); System.out.println(\"Sending \" + count + \" messages.\"); } else if (\"-pause\".equals(args[i])) { pause = Long.parseLong(args[++i]) * 1000; } else if (\"-break\".equals(args[i])) { breakOnEx = true; } else if (\"-shutdown\".equals(args[i])) { shutdown = true; } else if (\"-stats\".equals(args[i])) { stats = Integer.parseInt(args[++i]); System.out.println(\"Stats every \" + stats + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System.out.println(\"Setting send options to \" + channelOptions); } else if (equals(args[i])) { size = Integer.out.println(\"Message size will be:\" + (size + 4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) send = false; } else if (\"-debug\".equals(args[i])) { debug = true; } else if (\"-help\".equals(args[i])) { usage(); System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(channel, pause, stats, breakOnEx); } test.run(); if (shutdown && DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000 * 60); }"}
{"time": "2021-01-20 08:48:51.588192", "n_pass": [434, 20, 20], "score": "0.7812", "loss": "0.2681", "code": "public static void main(String[] args) throws Exception { boolean send0; boolean breakOnEx = false; int threads  = false; int startoptions = Channel.DEFAULT; int channelOptions = Channel.SEND_OPTIONS_DEFAULT; if (args.length == 0) { args = new String[] { \"-help\" }; } for (int i = 0;; i++) { if (\"-threads\") { threads = Integer.parseInt(args[++i]); } else if (\"-count\") { count = Integer.parseInt(args[++i]); System.out.println(\"Sending \" + count + \" messages.\"); } else if (\"-pause\".equals(args[i])) { pause = Long.parseLong(args[++i]) * 1000; } else if (\"-break\") { breakOnEx = true; } else if (\"-shutdown\".equals(args[i])) { shutdown = true; } else if (\"-stats\".equals(args[i])) { stats = Integer.parseInt(args[++i]); System.out.println(\"Stats every \" + stats + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System.out.println(\"Setting send options to \" + channelOptions); } else if (equals(args[i])) { size = Integer.out.println(\"Message size will be:\" + (size + 4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) send = false; } else if (\"-debug\".equals(args[i])) { debug = true; } else if (\"-help\".equals(args[i])) { usage(); System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(channel, pause, stats, breakOnEx); } test.run(); if (shutdown && DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000 * 60); }"}
{"time": "2021-01-20 08:48:53.564007", "n_pass": [697, 21, 21], "score": "0.9272", "loss": "0.0945", "code": "public static void main(String[] args) throws Exception { boolean send0; boolean breakOnEx = false; int threads  = false; int startoptions = Channel.DEFAULT; int channelOptions = Channel.SEND_OPTIONS_DEFAULT; if (args.length == 0) { args = new String[] { \"-help\" }; } for (int i = 0;; i++) { if (\"-threads\") { threads = Integer.parseInt(args[++i]); } else if (\"-count\") { count = Integer.parseInt(args[++i]); System.out.println(\"Sending \" + count + \" messages.\"); } else if (\"-pause\".equals(args[i])) { pause = Long.parseLong(args[++i]) * 1000; } else if (\"-break\") { true; } else if (\"-shutdown\".equals(args[i])) { shutdown = true; } else if (\"-stats\".equals(args[i])) { stats = Integer.parseInt(args[++i]); System.out.println(\"Stats every \" + stats + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System.out.println(\"Setting send options to \" + channelOptions); } else if (equals(args[i])) { size = Integer.out.println(\"Message size will be:\" + (size + 4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) send = false; } else if (\"-debug\".equals(args[i])) { debug = true; } else if (\"-help\".equals(args[i])) { usage(); System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(channel, pause, stats, breakOnEx); } test.run(); if (shutdown && DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000 * 60); }"}
{"time": "2021-01-20 08:48:55.271314", "n_pass": [712, 22, 22], "score": "0.8151", "loss": "0.2364", "code": "public static void main(String[] args) throws Exception { boolean send0; boolean breakOnEx = false; int threads  = false; int startoptions = Channel.DEFAULT; int channelOptions = Channel.SEND_OPTIONS_DEFAULT; if (args.length == 0) { args = new String[] { \"-help\" }; } for (int i = 0;; i++) { if (\"-threads\") { threads = Integer.parseInt(args[++i]); } else if (\"-count\") { count = Integer.parseInt(args[++i]); System.out.println(\"Sending \" + count + \" messages.\"); } else if (\"-pause\".equals(args[i])) { pause = Long.parseLong(args[++i]) * 1000; } else if (\"-break\") { true; } else if (\"-shutdown\".equals(args[i])) { shutdown = true; } else if (\"-stats\".equals(args[i])) { Integer.parseInt(args[++i]); System.out.println(\"Stats every \" + stats + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System.out.println(\"Setting send options to \" + channelOptions); } else if (equals(args[i])) { size = Integer.out.println(\"Message size will be:\" + (size + 4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) send = false; } else if (\"-debug\".equals(args[i])) { debug = true; } else if (\"-help\".equals(args[i])) { usage(); System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(channel, pause, stats, breakOnEx); } test.run(); if (shutdown && DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000 * 60); }"}
{"time": "2021-01-20 08:48:56.803663", "n_pass": [718, 23, 23], "score": "0.6127", "loss": "0.5067", "code": "public static void main(String[] args) throws Exception { boolean send0; boolean breakOnEx = false; int threads  = false; int startoptions = Channel.DEFAULT; int channelOptions = Channel.SEND_OPTIONS_DEFAULT; if (args.length == 0) { args = new String[] { \"-help\" }; } for (int i = 0;; i++) { if (\"-threads\") { threads = Integer.parseInt(args[++i]); } else if (\"-count\") { count = Integer.parseInt(args[++i]); System.out.println(\"Sending \" + count + \" messages.\"); } else if (\"-pause\".equals(args[i])) { pause = Long.parseLong(args[++i]) * 1000; } else if (\"-break\") { true; } else if (\"-shutdown\".equals(args[i])) { shutdown = true; } else if (\"-stats\".equals(args[i])) { Integer.parseInt(args[++i]); System.out.println(\"\" + stats + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System.out.println(\"Setting send options to \" + channelOptions); } else if (equals(args[i])) { size = Integer.out.println(\"Message size will be:\" + (size + 4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) send = false; } else if (\"-debug\".equals(args[i])) { debug = true; } else if (\"-help\".equals(args[i])) { usage(); System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(channel, pause, stats, breakOnEx); } test.run(); if (shutdown && DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000 * 60); }"}
{"time": "2021-01-20 08:48:58.313649", "n_pass": [720, 24, 24], "score": "0.7286", "loss": "0.3807", "code": "public static void main(String[] args) throws Exception { boolean send0; boolean breakOnEx = false; int threads  = false; int startoptions = Channel.DEFAULT; int channelOptions = Channel.SEND_OPTIONS_DEFAULT; if (args.length == 0) { args = new String[] { \"-help\" }; } for (int i = 0;; i++) { if (\"-threads\") { threads = Integer.parseInt(args[++i]); } else if (\"-count\") { count = Integer.parseInt(args[++i]); System.out.println(\"Sending \" + count + \" messages.\"); } else if (\"-pause\".equals(args[i])) { pause = Long.parseLong(args[++i]) * 1000; } else if (\"-break\") { true; } else if (\"-shutdown\".equals(args[i])) { shutdown = true; } else if (\"-stats\".equals(args[i])) { Integer.parseInt(args[++i]); System.out.println(\"\" + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System.out.println(\"Setting send options to \" + channelOptions); } else if (equals(args[i])) { size = Integer.out.println(\"Message size will be:\" + (size + 4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) send = false; } else if (\"-debug\".equals(args[i])) { debug = true; } else if (\"-help\".equals(args[i])) { usage(); System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(channel, pause, stats, breakOnEx); } test.run(); if (shutdown && DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000 * 60); }"}
{"time": "2021-01-20 08:48:59.877652", "n_pass": [733, 25, 25], "score": "0.617", "loss": "0.6346", "code": "public static void main(String[] args) throws Exception { boolean send0; boolean breakOnEx = false; int threads  = false; int startoptions = Channel.DEFAULT; int channelOptions = Channel.SEND_OPTIONS_DEFAULT; if (args.length == 0) { args = new String[] { \"-help\" }; } for (int i = 0;; i++) { if (\"-threads\") { threads = Integer.parseInt(args[++i]); } else if (\"-count\") { count = Integer.parseInt(args[++i]); System.out.println(\"Sending \" + count + \" messages.\"); } else if (\"-pause\".equals(args[i])) { pause = Long.parseLong(args[++i]) * 1000; } else if (\"-break\") { true; } else if (\"-shutdown\".equals(args[i])) { shutdown = true; } else if (\"-stats\".equals(args[i])) { Integer.parseInt(args[++i]); System.out.println(\"\" + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System(\"Setting send options to \" + channelOptions); } else if (equals(args[i])) { size = Integer.out.println(\"Message size will be:\" + (size + 4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) send = false; } else if (\"-debug\".equals(args[i])) { debug = true; } else if (\"-help\".equals(args[i])) { usage(); System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(channel, pause, stats, breakOnEx); } test.run(); if (shutdown && DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000 * 60); }"}
{"time": "2021-01-20 08:49:01.381644", "n_pass": [735, 26, 26], "score": "0.767", "loss": "0.2846", "code": "public static void main(String[] args) throws Exception { boolean send0; boolean breakOnEx = false; int threads  = false; int startoptions = Channel.DEFAULT; int channelOptions = Channel.SEND_OPTIONS_DEFAULT; if (args.length == 0) { args = new String[] { \"-help\" }; } for (int i = 0;; i++) { if (\"-threads\") { threads = Integer.parseInt(args[++i]); } else if (\"-count\") { count = Integer.parseInt(args[++i]); System.out.println(\"Sending \" + count + \" messages.\"); } else if (\"-pause\".equals(args[i])) { pause = Long.parseLong(args[++i]) * 1000; } else if (\"-break\") { true; } else if (\"-shutdown\".equals(args[i])) { shutdown = true; } else if (\"-stats\".equals(args[i])) { Integer.parseInt(args[++i]); System.out.println(\"\" + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System(\"Setting to \" + channelOptions); } else if (equals(args[i])) { size = Integer.out.println(\"Message size will be:\" + (size + 4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) send = false; } else if (\"-debug\".equals(args[i])) { debug = true; } else if (\"-help\".equals(args[i])) { usage(); System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(channel, pause, stats, breakOnEx); } test.run(); if (shutdown && DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000 * 60); }"}
{"time": "2021-01-20 08:49:02.920363", "n_pass": [743, 27, 27], "score": "0.9545", "loss": "0.0555", "code": "public static void main(String[] args) throws Exception { boolean send0; boolean breakOnEx = false; int threads  = false; int startoptions = Channel.DEFAULT; int channelOptions = Channel.SEND_OPTIONS_DEFAULT; if (args.length == 0) { args = new String[] { \"-help\" }; } for (int i = 0;; i++) { if (\"-threads\") { threads = Integer.parseInt(args[++i]); } else if (\"-count\") { count = Integer.parseInt(args[++i]); System.out.println(\"Sending \" + count + \" messages.\"); } else if (\"-pause\".equals(args[i])) { pause = Long.parseLong(args[++i]) * 1000; } else if (\"-break\") { true; } else if (\"-shutdown\".equals(args[i])) { shutdown = true; } else if (\"-stats\".equals(args[i])) { Integer.parseInt(args[++i]); System.out.println(\"\" + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System(\"Setting to \" + channelOptions); } else if (equals(args[i])) { Integer.out.println(\"Message size will be:\" + (size + 4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) send = false; } else if (\"-debug\".equals(args[i])) { debug = true; } else if (\"-help\".equals(args[i])) { usage(); System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(channel, pause, stats, breakOnEx); } test.run(); if (shutdown && DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000 * 60); }"}
{"time": "2021-01-20 08:49:04.421656", "n_pass": [744, 28, 28], "score": "0.8407", "loss": "0.1885", "code": "public static void main(String[] args) throws Exception { boolean send0; boolean breakOnEx = false; int threads  = false; int startoptions = Channel.DEFAULT; int channelOptions = Channel.SEND_OPTIONS_DEFAULT; if (args.length == 0) { args = new String[] { \"-help\" }; } for (int i = 0;; i++) { if (\"-threads\") { threads = Integer.parseInt(args[++i]); } else if (\"-count\") { count = Integer.parseInt(args[++i]); System.out.println(\"Sending \" + count + \" messages.\"); } else if (\"-pause\".equals(args[i])) { pause = Long.parseLong(args[++i]) * 1000; } else if (\"-break\") { true; } else if (\"-shutdown\".equals(args[i])) { shutdown = true; } else if (\"-stats\".equals(args[i])) { Integer.parseInt(args[++i]); System.out.println(\"\" + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System(\"Setting to \" + channelOptions); } else if (equals(args[i])) { println(\"Message size will be:\" + (size + 4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) send = false; } else if (\"-debug\".equals(args[i])) { debug = true; } else if (\"-help\".equals(args[i])) { usage(); System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(channel, pause, stats, breakOnEx); } test.run(); if (shutdown && DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000 * 60); }"}
{"time": "2021-01-20 08:49:05.944337", "n_pass": [746, 29, 29], "score": "0.9489", "loss": "0.0619", "code": "public static void main(String[] args) throws Exception { boolean send0; boolean breakOnEx = false; int threads  = false; int startoptions = Channel.DEFAULT; int channelOptions = Channel.SEND_OPTIONS_DEFAULT; if (args.length == 0) { args = new String[] { \"-help\" }; } for (int i = 0;; i++) { if (\"-threads\") { threads = Integer.parseInt(args[++i]); } else if (\"-count\") { count = Integer.parseInt(args[++i]); System.out.println(\"Sending \" + count + \" messages.\"); } else if (\"-pause\".equals(args[i])) { pause = Long.parseLong(args[++i]) * 1000; } else if (\"-break\") { true; } else if (\"-shutdown\".equals(args[i])) { shutdown = true; } else if (\"-stats\".equals(args[i])) { Integer.parseInt(args[++i]); System.out.println(\"\" + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System(\"Setting to \" + channelOptions); } else if (equals(args[i])) { println(\"Message be:\" + (size + 4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) send = false; } else if (\"-debug\".equals(args[i])) { debug = true; } else if (\"-help\".equals(args[i])) { usage(); System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(channel, pause, stats, breakOnEx); } test.run(); if (shutdown && DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000 * 60); }"}
{"time": "2021-01-20 08:49:07.445856", "n_pass": [749, 30, 30], "score": "0.9231", "loss": "0.0908", "code": "public static void main(String[] args) throws Exception { boolean send0; boolean breakOnEx = false; int threads  = false; int startoptions = Channel.DEFAULT; int channelOptions = Channel.SEND_OPTIONS_DEFAULT; if (args.length == 0) { args = new String[] { \"-help\" }; } for (int i = 0;; i++) { if (\"-threads\") { threads = Integer.parseInt(args[++i]); } else if (\"-count\") { count = Integer.parseInt(args[++i]); System.out.println(\"Sending \" + count + \" messages.\"); } else if (\"-pause\".equals(args[i])) { pause = Long.parseLong(args[++i]) * 1000; } else if (\"-break\") { true; } else if (\"-shutdown\".equals(args[i])) { shutdown = true; } else if (\"-stats\".equals(args[i])) { Integer.parseInt(args[++i]); System.out.println(\"\" + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System(\"Setting to \" + channelOptions); } else if (equals(args[i])) { println(\"Message be:\" + (4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) send = false; } else if (\"-debug\".equals(args[i])) { debug = true; } else if (\"-help\".equals(args[i])) { usage(); System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(channel, pause, stats, breakOnEx); } test.run(); if (shutdown && DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000 * 60); }"}
{"time": "2021-01-20 08:49:09.035341", "n_pass": [763, 31, 31], "score": "0.9118", "loss": "0.1005", "code": "public static void main(String[] args) throws Exception { boolean send0; boolean breakOnEx = false; int threads  = false; int startoptions = Channel.DEFAULT; int channelOptions = Channel.SEND_OPTIONS_DEFAULT; if (args.length == 0) { args = new String[] { \"-help\" }; } for (int i = 0;; i++) { if (\"-threads\") { threads = Integer.parseInt(args[++i]); } else if (\"-count\") { count = Integer.parseInt(args[++i]); System.out.println(\"Sending \" + count + \" messages.\"); } else if (\"-pause\".equals(args[i])) { pause = Long.parseLong(args[++i]) * 1000; } else if (\"-break\") { true; } else if (\"-shutdown\".equals(args[i])) { shutdown = true; } else if (\"-stats\".equals(args[i])) { Integer.parseInt(args[++i]); System.out.println(\"\" + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System(\"Setting to \" + channelOptions); } else if (equals(args[i])) { println(\"Message be:\" + (4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) ; } else if (\"-debug\".equals(args[i])) { debug = true; } else if (\"-help\".equals(args[i])) { usage(); System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(channel, pause, stats, breakOnEx); } test.run(); if (shutdown && DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000 * 60); }"}
{"time": "2021-01-20 08:49:10.565315", "n_pass": [769, 32, 32], "score": "0.6841", "loss": "0.4191", "code": "public static void main(String[] args) throws Exception { boolean send0; boolean breakOnEx = false; int threads  = false; int startoptions = Channel.DEFAULT; int channelOptions = Channel.SEND_OPTIONS_DEFAULT; if (args.length == 0) { args = new String[] { \"-help\" }; } for (int i = 0;; i++) { if (\"-threads\") { threads = Integer.parseInt(args[++i]); } else if (\"-count\") { count = Integer.parseInt(args[++i]); System.out.println(\"Sending \" + count + \" messages.\"); } else if (\"-pause\".equals(args[i])) { pause = Long.parseLong(args[++i]) * 1000; } else if (\"-break\") { true; } else if (\"-shutdown\".equals(args[i])) { shutdown = true; } else if (\"-stats\".equals(args[i])) { Integer.parseInt(args[++i]); System.out.println(\"\" + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System(\"Setting to \" + channelOptions); } else if (equals(args[i])) { println(\"Message be:\" + (4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) ; } else if (\"-debug\".equals(args[i])) { ; } else if (\"-help\".equals(args[i])) { usage(); System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(channel, pause, stats, breakOnEx); } test.run(); if (shutdown && DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000 * 60); }"}
{"time": "2021-01-20 08:49:12.084315", "n_pass": [775, 33, 33], "score": "0.8578", "loss": "0.1998", "code": "public static void main(String[] args) throws Exception { boolean send0; boolean breakOnEx = false; int threads  = false; int startoptions = Channel.DEFAULT; int channelOptions = Channel.SEND_OPTIONS_DEFAULT; if (args.length == 0) { args = new String[] { \"-help\" }; } for (int i = 0;; i++) { if (\"-threads\") { threads = Integer.parseInt(args[++i]); } else if (\"-count\") { count = Integer.parseInt(args[++i]); System.out.println(\"Sending \" + count + \" messages.\"); } else if (\"-pause\".equals(args[i])) { pause = Long.parseLong(args[++i]) * 1000; } else if (\"-break\") { true; } else if (\"-shutdown\".equals(args[i])) { shutdown = true; } else if (\"-stats\".equals(args[i])) { Integer.parseInt(args[++i]); System.out.println(\"\" + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System(\"Setting to \" + channelOptions); } else if (equals(args[i])) { println(\"Message be:\" + (4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) ; } else if (\"-debug\".equals(args[i])) { ; } else if (\"-help\".equals(args[i])) { System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(channel, pause, stats, breakOnEx); } test.run(); if (shutdown && DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000 * 60); }"}
{"time": "2021-01-20 08:49:13.635388", "n_pass": [787, 34, 34], "score": "0.8308", "loss": "0.2044", "code": "public static void main(String[] args) throws Exception { boolean send0; boolean breakOnEx = false; int threads  = false; int startoptions = Channel.DEFAULT; int channelOptions = Channel.SEND_OPTIONS_DEFAULT; if (args.length == 0) { args = new String[] { \"-help\" }; } for (int i = 0;; i++) { if (\"-threads\") { threads = Integer.parseInt(args[++i]); } else if (\"-count\") { count = Integer.parseInt(args[++i]); System.out.println(\"Sending \" + count + \" messages.\"); } else if (\"-pause\".equals(args[i])) { pause = Long.parseLong(args[++i]) * 1000; } else if (\"-break\") { true; } else if (\"-shutdown\".equals(args[i])) { shutdown = true; } else if (\"-stats\".equals(args[i])) { Integer.parseInt(args[++i]); System.out.println(\"\" + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System(\"Setting to \" + channelOptions); } else if (equals(args[i])) { println(\"Message be:\" + (4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) ; } else if (\"-debug\".equals(args[i])) { ; } else if (\"-help\".equals(args[i])) { System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest( stats, breakOnEx); } test.run(); if (shutdown && DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000 * 60); }"}
{"time": "2021-01-20 08:49:15.141129", "n_pass": [788, 35, 35], "score": "0.8904", "loss": "0.1472", "code": "public static void main(String[] args) throws Exception { boolean send0; boolean breakOnEx = false; int threads  = false; int startoptions = Channel.DEFAULT; int channelOptions = Channel.SEND_OPTIONS_DEFAULT; if (args.length == 0) { args = new String[] { \"-help\" }; } for (int i = 0;; i++) { if (\"-threads\") { threads = Integer.parseInt(args[++i]); } else if (\"-count\") { count = Integer.parseInt(args[++i]); System.out.println(\"Sending \" + count + \" messages.\"); } else if (\"-pause\".equals(args[i])) { pause = Long.parseLong(args[++i]) * 1000; } else if (\"-break\") { true; } else if (\"-shutdown\".equals(args[i])) { shutdown = true; } else if (\"-stats\".equals(args[i])) { Integer.parseInt(args[++i]); System.out.println(\"\" + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System(\"Setting to \" + channelOptions); } else if (equals(args[i])) { println(\"Message be:\" + (4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) ; } else if (\"-debug\".equals(args[i])) { ; } else if (\"-help\".equals(args[i])) { System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(); } test.run(); if (shutdown && DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000 * 60); }"}
{"time": "2021-01-20 08:49:16.638825", "n_pass": [790, 36, 36], "score": "0.8706", "loss": "0.171", "code": "public static void main(String[] args) throws Exception { boolean send0; boolean breakOnEx = false; int threads  = false; int startoptions = Channel.DEFAULT; int channelOptions = Channel.SEND_OPTIONS_DEFAULT; if (args.length == 0) { args = new String[] { \"-help\" }; } for (int i = 0;; i++) { if (\"-threads\") { threads = Integer.parseInt(args[++i]); } else if (\"-count\") { count = Integer.parseInt(args[++i]); System.out.println(\"Sending \" + count + \" messages.\"); } else if (\"-pause\".equals(args[i])) { pause = Long.parseLong(args[++i]) * 1000; } else if (\"-break\") { true; } else if (\"-shutdown\".equals(args[i])) { shutdown = true; } else if (\"-stats\".equals(args[i])) { Integer.parseInt(args[++i]); System.out.println(\"\" + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System(\"Setting to \" + channelOptions); } else if (equals(args[i])) { println(\"Message be:\" + (4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) ; } else if (\"-debug\".equals(args[i])) { ; } else if (\"-help\".equals(args[i])) { System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(); } ; if (shutdown && DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000 * 60); }"}
{"time": "2021-01-20 08:49:18.163967", "n_pass": [792, 37, 37], "score": "0.9117", "loss": "0.1164", "code": "public static void main(String[] args) throws Exception { boolean send0; boolean breakOnEx = false; int threads  = false; int startoptions = Channel.DEFAULT; int channelOptions = Channel.SEND_OPTIONS_DEFAULT; if (args.length == 0) { args = new String[] { \"-help\" }; } for (int i = 0;; i++) { if (\"-threads\") { threads = Integer.parseInt(args[++i]); } else if (\"-count\") { count = Integer.parseInt(args[++i]); System.out.println(\"Sending \" + count + \" messages.\"); } else if (\"-pause\".equals(args[i])) { pause = Long.parseLong(args[++i]) * 1000; } else if (\"-break\") { true; } else if (\"-shutdown\".equals(args[i])) { shutdown = true; } else if (\"-stats\".equals(args[i])) { Integer.parseInt(args[++i]); System.out.println(\"\" + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System(\"Setting to \" + channelOptions); } else if (equals(args[i])) { println(\"Message be:\" + (4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) ; } else if (\"-debug\".equals(args[i])) { ; } else if (\"-help\".equals(args[i])) { System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(); } ; if (DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000 * 60); }"}
{"time": "2021-01-20 08:49:19.689157", "n_pass": [800, 38, 38], "score": "0.8598", "loss": "0.182", "code": "public static void main(String[] args) throws Exception { boolean send0; boolean breakOnEx = false; int threads  = false; int startoptions = Channel.DEFAULT; int channelOptions = Channel.SEND_OPTIONS_DEFAULT; if (args.length == 0) { args = new String[] { \"-help\" }; } for (int i = 0;; i++) { if (\"-threads\") { threads = Integer.parseInt(args[++i]); } else if (\"-count\") { count = Integer.parseInt(args[++i]); System.out.println(\"Sending \" + count + \" messages.\"); } else if (\"-pause\".equals(args[i])) { pause = Long.parseLong(args[++i]) * 1000; } else if (\"-break\") { true; } else if (\"-shutdown\".equals(args[i])) { shutdown = true; } else if (\"-stats\".equals(args[i])) { Integer.parseInt(args[++i]); System.out.println(\"\" + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System(\"Setting to \" + channelOptions); } else if (equals(args[i])) { println(\"Message be:\" + (4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) ; } else if (\"-debug\".equals(args[i])) { ; } else if (\"-help\".equals(args[i])) { System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(); } ; if (DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000); }"}
{"time": "2021-01-20 08:49:21.198188", "n_pass": [802, 39, 39], "score": "0.9142", "loss": "0.1151", "code": "void main(String[] args) throws Exception { boolean send0; boolean breakOnEx = false; int threads  = false; int startoptions = Channel.DEFAULT; int channelOptions = Channel.SEND_OPTIONS_DEFAULT; if (args.length == 0) { args = new String[] { \"-help\" }; } for (int i = 0;; i++) { if (\"-threads\") { threads = Integer.parseInt(args[++i]); } else if (\"-count\") { count = Integer.parseInt(args[++i]); System.out.println(\"Sending \" + count + \" messages.\"); } else if (\"-pause\".equals(args[i])) { pause = Long.parseLong(args[++i]) * 1000; } else if (\"-break\") { true; } else if (\"-shutdown\".equals(args[i])) { shutdown = true; } else if (\"-stats\".equals(args[i])) { Integer.parseInt(args[++i]); System.out.println(\"\" + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System(\"Setting to \" + channelOptions); } else if (equals(args[i])) { println(\"Message be:\" + (4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) ; } else if (\"-debug\".equals(args[i])) { ; } else if (\"-help\".equals(args[i])) { System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(); } ; if (DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000); }"}
{"time": "2021-01-20 08:49:22.715925", "n_pass": [807, 40, 40], "score": "0.6078", "loss": "0.6746", "code": "void main(String[] args) throws Exception {0; boolean breakOnEx = false; int threads  = false; int startoptions = Channel.DEFAULT; int channelOptions = Channel.SEND_OPTIONS_DEFAULT; if (args.length == 0) { args = new String[] { \"-help\" }; } for (int i = 0;; i++) { if (\"-threads\") { threads = Integer.parseInt(args[++i]); } else if (\"-count\") { count = Integer.parseInt(args[++i]); System.out.println(\"Sending \" + count + \" messages.\"); } else if (\"-pause\".equals(args[i])) { pause = Long.parseLong(args[++i]) * 1000; } else if (\"-break\") { true; } else if (\"-shutdown\".equals(args[i])) { shutdown = true; } else if (\"-stats\".equals(args[i])) { Integer.parseInt(args[++i]); System.out.println(\"\" + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System(\"Setting to \" + channelOptions); } else if (equals(args[i])) { println(\"Message be:\" + (4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) ; } else if (\"-debug\".equals(args[i])) { ; } else if (\"-help\".equals(args[i])) { System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(); } ; if (DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000); }"}
{"time": "2021-01-20 08:49:24.197648", "n_pass": [808, 41, 41], "score": "0.6158", "loss": "0.6254", "code": "void main(String[] args) throws Exception { breakOnEx = false; int threads  = false; int startoptions = Channel.DEFAULT; int channelOptions = Channel.SEND_OPTIONS_DEFAULT; if (args.length == 0) { args = new String[] { \"-help\" }; } for (int i = 0;; i++) { if (\"-threads\") { threads = Integer.parseInt(args[++i]); } else if (\"-count\") { count = Integer.parseInt(args[++i]); System.out.println(\"Sending \" + count + \" messages.\"); } else if (\"-pause\".equals(args[i])) { pause = Long.parseLong(args[++i]) * 1000; } else if (\"-break\") { true; } else if (\"-shutdown\".equals(args[i])) { shutdown = true; } else if (\"-stats\".equals(args[i])) { Integer.parseInt(args[++i]); System.out.println(\"\" + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System(\"Setting to \" + channelOptions); } else if (equals(args[i])) { println(\"Message be:\" + (4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) ; } else if (\"-debug\".equals(args[i])) { ; } else if (\"-help\".equals(args[i])) { System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(); } ; if (DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000); }"}
{"time": "2021-01-20 08:49:25.694113", "n_pass": [809, 42, 42], "score": "0.9279", "loss": "0.1066", "code": "void main(String[] args) throws Exception { false; int threads  = false; int startoptions = Channel.DEFAULT; int channelOptions = Channel.SEND_OPTIONS_DEFAULT; if (args.length == 0) { args = new String[] { \"-help\" }; } for (int i = 0;; i++) { if (\"-threads\") { threads = Integer.parseInt(args[++i]); } else if (\"-count\") { count = Integer.parseInt(args[++i]); System.out.println(\"Sending \" + count + \" messages.\"); } else if (\"-pause\".equals(args[i])) { pause = Long.parseLong(args[++i]) * 1000; } else if (\"-break\") { true; } else if (\"-shutdown\".equals(args[i])) { shutdown = true; } else if (\"-stats\".equals(args[i])) { Integer.parseInt(args[++i]); System.out.println(\"\" + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System(\"Setting to \" + channelOptions); } else if (equals(args[i])) { println(\"Message be:\" + (4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) ; } else if (\"-debug\".equals(args[i])) { ; } else if (\"-help\".equals(args[i])) { System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(); } ; if (DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000); }"}
{"time": "2021-01-20 08:49:27.175595", "n_pass": [810, 43, 43], "score": "0.9432", "loss": "0.078", "code": "void main(String[] args) throws Exception {int threads  = false; int startoptions = Channel.DEFAULT; int channelOptions = Channel.SEND_OPTIONS_DEFAULT; if (args.length == 0) { args = new String[] { \"-help\" }; } for (int i = 0;; i++) { if (\"-threads\") { threads = Integer.parseInt(args[++i]); } else if (\"-count\") { count = Integer.parseInt(args[++i]); System.out.println(\"Sending \" + count + \" messages.\"); } else if (\"-pause\".equals(args[i])) { pause = Long.parseLong(args[++i]) * 1000; } else if (\"-break\") { true; } else if (\"-shutdown\".equals(args[i])) { shutdown = true; } else if (\"-stats\".equals(args[i])) { Integer.parseInt(args[++i]); System.out.println(\"\" + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System(\"Setting to \" + channelOptions); } else if (equals(args[i])) { println(\"Message be:\" + (4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) ; } else if (\"-debug\".equals(args[i])) { ; } else if (\"-help\".equals(args[i])) { System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(); } ; if (DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000); }"}
{"time": "2021-01-20 08:49:28.663400", "n_pass": [812, 44, 44], "score": "0.7451", "loss": "0.4274", "code": "void main(String[] args) throws Exception {int threads ; int startoptions = Channel.DEFAULT; int channelOptions = Channel.SEND_OPTIONS_DEFAULT; if (args.length == 0) { args = new String[] { \"-help\" }; } for (int i = 0;; i++) { if (\"-threads\") { threads = Integer.parseInt(args[++i]); } else if (\"-count\") { count = Integer.parseInt(args[++i]); System.out.println(\"Sending \" + count + \" messages.\"); } else if (\"-pause\".equals(args[i])) { pause = Long.parseLong(args[++i]) * 1000; } else if (\"-break\") { true; } else if (\"-shutdown\".equals(args[i])) { shutdown = true; } else if (\"-stats\".equals(args[i])) { Integer.parseInt(args[++i]); System.out.println(\"\" + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System(\"Setting to \" + channelOptions); } else if (equals(args[i])) { println(\"Message be:\" + (4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) ; } else if (\"-debug\".equals(args[i])) { ; } else if (\"-help\".equals(args[i])) { System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(); } ; if (DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000); }"}
{"time": "2021-01-20 08:49:30.158045", "n_pass": [818, 45, 45], "score": "0.8781", "loss": "0.1713", "code": "void main(String[] args) throws Exception {int threads ; int startoptions = Channel.DEFAULT; int channelOptions = Channel_DEFAULT; if (args.length == 0) { args = new String[] { \"-help\" }; } for (int i = 0;; i++) { if (\"-threads\") { threads = Integer.parseInt(args[++i]); } else if (\"-count\") { count = Integer.parseInt(args[++i]); System.out.println(\"Sending \" + count + \" messages.\"); } else if (\"-pause\".equals(args[i])) { pause = Long.parseLong(args[++i]) * 1000; } else if (\"-break\") { true; } else if (\"-shutdown\".equals(args[i])) { shutdown = true; } else if (\"-stats\".equals(args[i])) { Integer.parseInt(args[++i]); System.out.println(\"\" + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System(\"Setting to \" + channelOptions); } else if (equals(args[i])) { println(\"Message be:\" + (4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) ; } else if (\"-debug\".equals(args[i])) { ; } else if (\"-help\".equals(args[i])) { System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(); } ; if (DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000); }"}
{"time": "2021-01-20 08:49:31.655603", "n_pass": [821, 46, 46], "score": "0.8919", "loss": "0.1425", "code": "void main(String[] args) throws Exception {int threads ; int startoptions = Channel.DEFAULT; int channelOptions = Channel_DEFAULT; if (args= 0) { args = new String[] { \"-help\" }; } for (int i = 0;; i++) { if (\"-threads\") { threads = Integer.parseInt(args[++i]); } else if (\"-count\") { count = Integer.parseInt(args[++i]); System.out.println(\"Sending \" + count + \" messages.\"); } else if (\"-pause\".equals(args[i])) { pause = Long.parseLong(args[++i]) * 1000; } else if (\"-break\") { true; } else if (\"-shutdown\".equals(args[i])) { shutdown = true; } else if (\"-stats\".equals(args[i])) { Integer.parseInt(args[++i]); System.out.println(\"\" + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System(\"Setting to \" + channelOptions); } else if (equals(args[i])) { println(\"Message be:\" + (4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) ; } else if (\"-debug\".equals(args[i])) { ; } else if (\"-help\".equals(args[i])) { System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(); } ; if (DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000); }"}
{"time": "2021-01-20 08:49:33.207370", "n_pass": [837, 47, 47], "score": "0.9675", "loss": "0.0388", "code": "void main(String[] args) throws Exception {int threads ; int startoptions = Channel.DEFAULT; int channelOptions = Channel_DEFAULT; if (args= 0) { args = new String[] { \"-help\" }; } for (int i = 0;; i++) { if (\"-threads\") { Integer.parseInt(args[++i]); } else if (\"-count\") { count = Integer.parseInt(args[++i]); System.out.println(\"Sending \" + count + \" messages.\"); } else if (\"-pause\".equals(args[i])) { pause = Long.parseLong(args[++i]) * 1000; } else if (\"-break\") { true; } else if (\"-shutdown\".equals(args[i])) { shutdown = true; } else if (\"-stats\".equals(args[i])) { Integer.parseInt(args[++i]); System.out.println(\"\" + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System(\"Setting to \" + channelOptions); } else if (equals(args[i])) { println(\"Message be:\" + (4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) ; } else if (\"-debug\".equals(args[i])) { ; } else if (\"-help\".equals(args[i])) { System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(); } ; if (DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000); }"}
{"time": "2021-01-20 08:49:34.730145", "n_pass": [845, 48, 48], "score": "0.6861", "loss": "0.5218", "code": "void main(String[] args) throws Exception {int threads ; int startoptions = Channel.DEFAULT; int channelOptions = Channel_DEFAULT; if (args= 0) { args = new String[] { \"-help\" }; } for (int i = 0;; i++) { if (\"-threads\") { Integer.parseInt(args[++i]); } else if (\"-count\") { Integer.parseInt(args[++i]); System.out.println(\"Sending \" + count + \" messages.\"); } else if (\"-pause\".equals(args[i])) { pause = Long.parseLong(args[++i]) * 1000; } else if (\"-break\") { true; } else if (\"-shutdown\".equals(args[i])) { shutdown = true; } else if (\"-stats\".equals(args[i])) { Integer.parseInt(args[++i]); System.out.println(\"\" + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System(\"Setting to \" + channelOptions); } else if (equals(args[i])) { println(\"Message be:\" + (4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) ; } else if (\"-debug\".equals(args[i])) { ; } else if (\"-help\".equals(args[i])) { System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(); } ; if (DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000); }"}
{"time": "2021-01-20 08:49:36.226793", "n_pass": [852, 49, 49], "score": "0.8883", "loss": "0.1571", "code": "void main(String[] args) throws Exception {int threads ; int startoptions = Channel.DEFAULT; int channelOptions = Channel_DEFAULT; if (args= 0) { args = new String[] { \"-help\" }; } for (int i = 0;; i++) { if (\"-threads\") { Integer.parseInt(args[++i]); } else if (\"-count\") { Integer.parseInt(args[++i]); System.out.println(\"Sending \" + \" messages.\"); } else if (\"-pause\".equals(args[i])) { pause = Long.parseLong(args[++i]) * 1000; } else if (\"-break\") { true; } else if (\"-shutdown\".equals(args[i])) { shutdown = true; } else if (\"-stats\".equals(args[i])) { Integer.parseInt(args[++i]); System.out.println(\"\" + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System(\"Setting to \" + channelOptions); } else if (equals(args[i])) { println(\"Message be:\" + (4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) ; } else if (\"-debug\".equals(args[i])) { ; } else if (\"-help\".equals(args[i])) { System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(); } ; if (DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000); }"}
{"time": "2021-01-20 08:49:37.861149", "n_pass": [859, 50, 50], "score": "0.9099", "loss": "0.1159", "code": "void main(String[] args) throws Exception {int threads ; int startoptions = Channel.DEFAULT; int channelOptions = Channel_DEFAULT; if (args= 0) { args = new String[] { \"-help\" }; } for (int i = 0;; i++) { if (\"-threads\") { Integer.parseInt(args[++i]); } else if (\"-count\") { Integer.parseInt(args[++i]); System.out.println(\"Sending \" + \" messages.\"); } else if (\"-pause\".equals()) { pause = Long.parseLong(args[++i]) * 1000; } else if (\"-break\") { true; } else if (\"-shutdown\".equals(args[i])) { shutdown = true; } else if (\"-stats\".equals(args[i])) { Integer.parseInt(args[++i]); System.out.println(\"\" + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System(\"Setting to \" + channelOptions); } else if (equals(args[i])) { println(\"Message be:\" + (4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) ; } else if (\"-debug\".equals(args[i])) { ; } else if (\"-help\".equals(args[i])) { System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(); } ; if (DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000); }"}
{"time": "2021-01-20 08:49:39.741865", "n_pass": [862, 51, 51], "score": "0.8929", "loss": "0.1431", "code": "void main(String[] args) throws Exception {int threads ; int startoptions = Channel.DEFAULT; int channelOptions = Channel_DEFAULT; if (args= 0) { args = new String[] { \"-help\" }; } for (int i = 0;; i++) { if (\"-threads\") { Integer.parseInt(args[++i]); } else if (\"-count\") { Integer.parseInt(args[++i]); System.out.println(\"Sending \" + \" messages.\"); } else if (\"-pause\".equals()) { pause =(args[++i]) * 1000; } else if (\"-break\") { true; } else if (\"-shutdown\".equals(args[i])) { shutdown = true; } else if (\"-stats\".equals(args[i])) { Integer.parseInt(args[++i]); System.out.println(\"\" + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System(\"Setting to \" + channelOptions); } else if (equals(args[i])) { println(\"Message be:\" + (4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) ; } else if (\"-debug\".equals(args[i])) { ; } else if (\"-help\".equals(args[i])) { System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(); } ; if (DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000); }"}
{"time": "2021-01-20 08:49:41.650876", "n_pass": [962, 52, 52], "score": "0.7188", "loss": "0.4353", "code": "void main(String[] args) throws Exception {; int startoptions = Channel.DEFAULT; int channelOptions = Channel_DEFAULT; if (args= 0) { args = new String[] { \"-help\" }; } for (int i = 0;; i++) { if (\"-threads\") { Integer.parseInt(args[++i]); } else if (\"-count\") { Integer.parseInt(args[++i]); System.out.println(\"Sending \" + \" messages.\"); } else if (\"-pause\".equals()) { pause =(args[++i]) * 1000; } else if (\"-break\") { true; } else if (\"-shutdown\".equals(args[i])) { shutdown = true; } else if (\"-stats\".equals(args[i])) { Integer.parseInt(args[++i]); System.out.println(\"\" + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System(\"Setting to \" + channelOptions); } else if (equals(args[i])) { println(\"Message be:\" + (4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) ; } else if (\"-debug\".equals(args[i])) { ; } else if (\"-help\".equals(args[i])) { System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(); } ; if (DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000); }"}
{"time": "2021-01-20 08:49:43.120193", "n_pass": [963, 53, 53], "score": "0.9209", "loss": "0.1012", "code": "void main(String[] args) throws Exception {startoptions = Channel.DEFAULT; int channelOptions = Channel_DEFAULT; if (args= 0) { args = new String[] { \"-help\" }; } for (int i = 0;; i++) { if (\"-threads\") { Integer.parseInt(args[++i]); } else if (\"-count\") { Integer.parseInt(args[++i]); System.out.println(\"Sending \" + \" messages.\"); } else if (\"-pause\".equals()) { pause =(args[++i]) * 1000; } else if (\"-break\") { true; } else if (\"-shutdown\".equals(args[i])) { shutdown = true; } else if (\"-stats\".equals(args[i])) { Integer.parseInt(args[++i]); System.out.println(\"\" + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System(\"Setting to \" + channelOptions); } else if (equals(args[i])) { println(\"Message be:\" + (4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) ; } else if (\"-debug\".equals(args[i])) { ; } else if (\"-help\".equals(args[i])) { System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(); } ; if (DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000); }"}
{"time": "2021-01-20 08:49:44.609749", "n_pass": [964, 54, 54], "score": "0.9661", "loss": "0.0435", "code": "void main(String[] args) throws Exception {Channel.DEFAULT; int channelOptions = Channel_DEFAULT; if (args= 0) { args = new String[] { \"-help\" }; } for (int i = 0;; i++) { if (\"-threads\") { Integer.parseInt(args[++i]); } else if (\"-count\") { Integer.parseInt(args[++i]); System.out.println(\"Sending \" + \" messages.\"); } else if (\"-pause\".equals()) { pause =(args[++i]) * 1000; } else if (\"-break\") { true; } else if (\"-shutdown\".equals(args[i])) { shutdown = true; } else if (\"-stats\".equals(args[i])) { Integer.parseInt(args[++i]); System.out.println(\"\" + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System(\"Setting to \" + channelOptions); } else if (equals(args[i])) { println(\"Message be:\" + (4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) ; } else if (\"-debug\".equals(args[i])) { ; } else if (\"-help\".equals(args[i])) { System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(); } ; if (DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000); }"}
{"time": "2021-01-20 08:49:46.106910", "n_pass": [965, 55, 55], "score": "0.9421", "loss": "0.0768", "code": "void main(String[] args) throws Exception { int channelOptions = Channel_DEFAULT; if (args= 0) { args = new String[] { \"-help\" }; } for (int i = 0;; i++) { if (\"-threads\") { Integer.parseInt(args[++i]); } else if (\"-count\") { Integer.parseInt(args[++i]); System.out.println(\"Sending \" + \" messages.\"); } else if (\"-pause\".equals()) { pause =(args[++i]) * 1000; } else if (\"-break\") { true; } else if (\"-shutdown\".equals(args[i])) { shutdown = true; } else if (\"-stats\".equals(args[i])) { Integer.parseInt(args[++i]); System.out.println(\"\" + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System(\"Setting to \" + channelOptions); } else if (equals(args[i])) { println(\"Message be:\" + (4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) ; } else if (\"-debug\".equals(args[i])) { ; } else if (\"-help\".equals(args[i])) { System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(); } ; if (DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000); }"}
{"time": "2021-01-20 08:49:47.579486", "n_pass": [967, 56, 56], "score": "0.8846", "loss": "0.1526", "code": "void main(String[] args) throws Exception { int channelOptions_DEFAULT; if (args= 0) { args = new String[] { \"-help\" }; } for (int i = 0;; i++) { if (\"-threads\") { Integer.parseInt(args[++i]); } else if (\"-count\") { Integer.parseInt(args[++i]); System.out.println(\"Sending \" + \" messages.\"); } else if (\"-pause\".equals()) { pause =(args[++i]) * 1000; } else if (\"-break\") { true; } else if (\"-shutdown\".equals(args[i])) { shutdown = true; } else if (\"-stats\".equals(args[i])) { Integer.parseInt(args[++i]); System.out.println(\"\" + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System(\"Setting to \" + channelOptions); } else if (equals(args[i])) { println(\"Message be:\" + (4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) ; } else if (\"-debug\".equals(args[i])) { ; } else if (\"-help\".equals(args[i])) { System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(); } ; if (DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000); }"}
{"time": "2021-01-20 08:49:50.133516", "n_pass": [1105, 57, 57], "score": "0.9317", "loss": "0.0879", "code": "void main(String[] args) throws Exception {_DEFAULT; if (args= 0) { args = new String[] { \"-help\" }; } for (int i = 0;; i++) { if (\"-threads\") { Integer.parseInt(args[++i]); } else if (\"-count\") { Integer.parseInt(args[++i]); System.out.println(\"Sending \" + \" messages.\"); } else if (\"-pause\".equals()) { pause =(args[++i]) * 1000; } else if (\"-break\") { true; } else if (\"-shutdown\".equals(args[i])) { shutdown = true; } else if (\"-stats\".equals(args[i])) { Integer.parseInt(args[++i]); System.out.println(\"\" + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System(\"Setting to \" + channelOptions); } else if (equals(args[i])) { println(\"Message be:\" + (4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) ; } else if (\"-debug\".equals(args[i])) { ; } else if (\"-help\".equals(args[i])) { System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(); } ; if (DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000); }"}
{"time": "2021-01-20 08:49:51.597107", "n_pass": [1106, 58, 58], "score": "0.8392", "loss": "0.2458", "code": "void main(String[] args) throws Exception {if (args= 0) { args = new String[] { \"-help\" }; } for (int i = 0;; i++) { if (\"-threads\") { Integer.parseInt(args[++i]); } else if (\"-count\") { Integer.parseInt(args[++i]); System.out.println(\"Sending \" + \" messages.\"); } else if (\"-pause\".equals()) { pause =(args[++i]) * 1000; } else if (\"-break\") { true; } else if (\"-shutdown\".equals(args[i])) { shutdown = true; } else if (\"-stats\".equals(args[i])) { Integer.parseInt(args[++i]); System.out.println(\"\" + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System(\"Setting to \" + channelOptions); } else if (equals(args[i])) { println(\"Message be:\" + (4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) ; } else if (\"-debug\".equals(args[i])) { ; } else if (\"-help\".equals(args[i])) { System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(); } ; if (DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000); }"}
{"time": "2021-01-20 08:49:56.090273", "n_pass": [1517, 59, 59], "score": "0.8199", "loss": "0.2704", "code": "void main(String[] args) throws Exception {if (args0) { args = new String[] { \"-help\" }; } for (int i = 0;; i++) { if (\"-threads\") { Integer.parseInt(args[++i]); } else if (\"-count\") { Integer.parseInt(args[++i]); System.out.println(\"Sending \" + \" messages.\"); } else if (\"-pause\".equals()) { pause =(args[++i]) * 1000; } else if (\"-break\") { true; } else if (\"-shutdown\".equals(args[i])) { shutdown = true; } else if (\"-stats\".equals(args[i])) { Integer.parseInt(args[++i]); System.out.println(\"\" + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System(\"Setting to \" + channelOptions); } else if (equals(args[i])) { println(\"Message be:\" + (4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) ; } else if (\"-debug\".equals(args[i])) { ; } else if (\"-help\".equals(args[i])) { System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(); } ; if (DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000); }"}
{"time": "2021-01-20 08:49:57.619068", "n_pass": [1526, 60, 60], "score": "0.7281", "loss": "0.437", "code": "void main(String[] args) throws Exception {if (args0) { args = new String[] { \"\" }; } for (int i = 0;; i++) { if (\"-threads\") { Integer.parseInt(args[++i]); } else if (\"-count\") { Integer.parseInt(args[++i]); System.out.println(\"Sending \" + \" messages.\"); } else if (\"-pause\".equals()) { pause =(args[++i]) * 1000; } else if (\"-break\") { true; } else if (\"-shutdown\".equals(args[i])) { shutdown = true; } else if (\"-stats\".equals(args[i])) { Integer.parseInt(args[++i]); System.out.println(\"\" + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System(\"Setting to \" + channelOptions); } else if (equals(args[i])) { println(\"Message be:\" + (4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) ; } else if (\"-debug\".equals(args[i])) { ; } else if (\"-help\".equals(args[i])) { System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(); } ; if (DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000); }"}
{"time": "2021-01-20 08:49:59.126302", "n_pass": [1532, 61, 61], "score": "0.7394", "loss": "0.3632", "code": "void main(String[] args) throws Exception {if (args0) { args = new String[] { \"\" }; } for (i = 0;; i++) { if (\"-threads\") { Integer.parseInt(args[++i]); } else if (\"-count\") { Integer.parseInt(args[++i]); System.out.println(\"Sending \" + \" messages.\"); } else if (\"-pause\".equals()) { pause =(args[++i]) * 1000; } else if (\"-break\") { true; } else if (\"-shutdown\".equals(args[i])) { shutdown = true; } else if (\"-stats\".equals(args[i])) { Integer.parseInt(args[++i]); System.out.println(\"\" + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System(\"Setting to \" + channelOptions); } else if (equals(args[i])) { println(\"Message be:\" + (4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) ; } else if (\"-debug\".equals(args[i])) { ; } else if (\"-help\".equals(args[i])) { System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(); } ; if (DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000); }"}
{"time": "2021-01-20 08:50:00.636152", "n_pass": [1546, 62, 62], "score": "0.9099", "loss": "0.122", "code": "void main(String[] args) throws Exception {if (args0) { args = new String[] { \"\" }; } for (i = 0;; i++) { if (\"-threads\") { parseInt(args[++i]); } else if (\"-count\") { Integer.parseInt(args[++i]); System.out.println(\"Sending \" + \" messages.\"); } else if (\"-pause\".equals()) { pause =(args[++i]) * 1000; } else if (\"-break\") { true; } else if (\"-shutdown\".equals(args[i])) { shutdown = true; } else if (\"-stats\".equals(args[i])) { Integer.parseInt(args[++i]); System.out.println(\"\" + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System(\"Setting to \" + channelOptions); } else if (equals(args[i])) { println(\"Message be:\" + (4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) ; } else if (\"-debug\".equals(args[i])) { ; } else if (\"-help\".equals(args[i])) { System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(); } ; if (DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000); }"}
{"time": "2021-01-20 08:50:02.097306", "n_pass": [1549, 63, 63], "score": "0.918", "loss": "0.1089", "code": "void main(String[] args) throws Exception {if (args0) { args = new String[] { \"\" }; } for (i = 0;; i++) { if (\"-threads\") { parseInt(args[i]); } else if (\"-count\") { Integer.parseInt(args[++i]); System.out.println(\"Sending \" + \" messages.\"); } else if (\"-pause\".equals()) { pause =(args[++i]) * 1000; } else if (\"-break\") { true; } else if (\"-shutdown\".equals(args[i])) { shutdown = true; } else if (\"-stats\".equals(args[i])) { Integer.parseInt(args[++i]); System.out.println(\"\" + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System(\"Setting to \" + channelOptions); } else if (equals(args[i])) { println(\"Message be:\" + (4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) ; } else if (\"-debug\".equals(args[i])) { ; } else if (\"-help\".equals(args[i])) { System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(); } ; if (DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000); }"}
{"time": "2021-01-20 08:50:03.557424", "n_pass": [1553, 64, 64], "score": "0.9267", "loss": "0.0954", "code": "void main(String[] args) throws Exception {if (args0) { args = new String[] { \"\" }; } for (i = 0;; i++) { if (\"-threads\") { parseInt(args[i]); } if (\"-count\") { Integer.parseInt(args[++i]); System.out.println(\"Sending \" + \" messages.\"); } else if (\"-pause\".equals()) { pause =(args[++i]) * 1000; } else if (\"-break\") { true; } else if (\"-shutdown\".equals(args[i])) { shutdown = true; } else if (\"-stats\".equals(args[i])) { Integer.parseInt(args[++i]); System.out.println(\"\" + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System(\"Setting to \" + channelOptions); } else if (equals(args[i])) { println(\"Message be:\" + (4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) ; } else if (\"-debug\".equals(args[i])) { ; } else if (\"-help\".equals(args[i])) { System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(); } ; if (DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000); }"}
{"time": "2021-01-20 08:50:05.024973", "n_pass": [1560, 65, 65], "score": "0.7942", "loss": "0.3101", "code": "void main(String[] args) throws Exception {if (args0) { args = new String[] { \"\" }; } for (i = 0;; i++) { if (\"-threads\") { parseInt(args[i]); } if (\"-count\") { parseInt(args[++i]); System.out.println(\"Sending \" + \" messages.\"); } else if (\"-pause\".equals()) { pause =(args[++i]) * 1000; } else if (\"-break\") { true; } else if (\"-shutdown\".equals(args[i])) { shutdown = true; } else if (\"-stats\".equals(args[i])) { Integer.parseInt(args[++i]); System.out.println(\"\" + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System(\"Setting to \" + channelOptions); } else if (equals(args[i])) { println(\"Message be:\" + (4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) ; } else if (\"-debug\".equals(args[i])) { ; } else if (\"-help\".equals(args[i])) { System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(); } ; if (DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000); }"}
{"time": "2021-01-20 08:50:06.480486", "n_pass": [1563, 66, 66], "score": "0.8913", "loss": "0.1538", "code": "void main(String[] args) throws Exception {if (args0) { args = new String[] { \"\" }; } for (i = 0;; i++) { if (\"-threads\") { parseInt(args[i]); } if (\"-count\") { parseInt(args[i]); System.out.println(\"Sending \" + \" messages.\"); } else if (\"-pause\".equals()) { pause =(args[++i]) * 1000; } else if (\"-break\") { true; } else if (\"-shutdown\".equals(args[i])) { shutdown = true; } else if (\"-stats\".equals(args[i])) { Integer.parseInt(args[++i]); System.out.println(\"\" + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System(\"Setting to \" + channelOptions); } else if (equals(args[i])) { println(\"Message be:\" + (4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) ; } else if (\"-debug\".equals(args[i])) { ; } else if (\"-help\".equals(args[i])) { System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(); } ; if (DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000); }"}
{"time": "2021-01-20 08:50:07.939064", "n_pass": [1567, 67, 67], "score": "0.9368", "loss": "0.076", "code": "void main(String[] args) throws Exception {if (args0) { args = new String[] { \"\" }; } for (i = 0;; i++) { if (\"-threads\") { parseInt(args[i]); } if (\"-count\") { parseInt(args[i]); System.println(\"Sending \" + \" messages.\"); } else if (\"-pause\".equals()) { pause =(args[++i]) * 1000; } else if (\"-break\") { true; } else if (\"-shutdown\".equals(args[i])) { shutdown = true; } else if (\"-stats\".equals(args[i])) { Integer.parseInt(args[++i]); System.out.println(\"\" + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System(\"Setting to \" + channelOptions); } else if (equals(args[i])) { println(\"Message be:\" + (4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) ; } else if (\"-debug\".equals(args[i])) { ; } else if (\"-help\".equals(args[i])) { System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(); } ; if (DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000); }"}
{"time": "2021-01-20 08:50:09.388024", "n_pass": [1568, 68, 68], "score": "0.9228", "loss": "0.1027", "code": "void main(String[] args) throws Exception {if (args0) { args = new String[] { \"\" }; } for (i = 0;; i++) { if (\"-threads\") { parseInt(args[i]); } if (\"-count\") { parseInt(args[i]); System(\"Sending \" + \" messages.\"); } else if (\"-pause\".equals()) { pause =(args[++i]) * 1000; } else if (\"-break\") { true; } else if (\"-shutdown\".equals(args[i])) { shutdown = true; } else if (\"-stats\".equals(args[i])) { Integer.parseInt(args[++i]); System.out.println(\"\" + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System(\"Setting to \" + channelOptions); } else if (equals(args[i])) { println(\"Message be:\" + (4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) ; } else if (\"-debug\".equals(args[i])) { ; } else if (\"-help\".equals(args[i])) { System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(); } ; if (DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000); }"}
{"time": "2021-01-20 08:50:11.046448", "n_pass": [1570, 69, 69], "score": "0.6997", "loss": "0.479", "code": "void main(String[] args) throws Exception {if (args0) { args = new String[] { \"\" }; } for (i = 0;; i++) { if (\"-threads\") { parseInt(args[i]); } if (\"-count\") { parseInt(args[i]); System(\"\" + \" messages.\"); } else if (\"-pause\".equals()) { pause =(args[++i]) * 1000; } else if (\"-break\") { true; } else if (\"-shutdown\".equals(args[i])) { shutdown = true; } else if (\"-stats\".equals(args[i])) { Integer.parseInt(args[++i]); System.out.println(\"\" + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System(\"Setting to \" + channelOptions); } else if (equals(args[i])) { println(\"Message be:\" + (4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) ; } else if (\"-debug\".equals(args[i])) { ; } else if (\"-help\".equals(args[i])) { System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(); } ; if (DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000); }"}
{"time": "2021-01-20 08:50:12.516576", "n_pass": [1574, 70, 70], "score": "0.8886", "loss": "0.1426", "code": "void main(String[] args) throws Exception {if (args0) { args = new String[] { \"\" }; } for (i = 0;; i++) { if (\"-threads\") { parseInt(args[i]); } if (\"-count\") { parseInt(args[i]); System(\"\" + \" \"); } else if (\"-pause\".equals()) { pause =(args[++i]) * 1000; } else if (\"-break\") { true; } else if (\"-shutdown\".equals(args[i])) { shutdown = true; } else if (\"-stats\".equals(args[i])) { Integer.parseInt(args[++i]); System.out.println(\"\" + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System(\"Setting to \" + channelOptions); } else if (equals(args[i])) { println(\"Message be:\" + (4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) ; } else if (\"-debug\".equals(args[i])) { ; } else if (\"-help\".equals(args[i])) { System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(); } ; if (DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000); }"}
{"time": "2021-01-20 08:50:13.987054", "n_pass": [1578, 71, 71], "score": "0.8605", "loss": "0.2069", "code": "void main(String[] args) throws Exception {if (args0) { args = new String[] { \"\" }; } for (i = 0;; i++) { if (\"-threads\") { parseInt(args[i]); } if (\"-count\") { parseInt(args[i]); System(\"\" + \" \"); } if (\"-pause\".equals()) { pause =(args[++i]) * 1000; } else if (\"-break\") { true; } else if (\"-shutdown\".equals(args[i])) { shutdown = true; } else if (\"-stats\".equals(args[i])) { Integer.parseInt(args[++i]); System.out.println(\"\" + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System(\"Setting to \" + channelOptions); } else if (equals(args[i])) { println(\"Message be:\" + (4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) ; } else if (\"-debug\".equals(args[i])) { ; } else if (\"-help\".equals(args[i])) { System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(); } ; if (DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000); }"}
{"time": "2021-01-20 08:50:15.448163", "n_pass": [1581, 72, 72], "score": "0.9428", "loss": "0.0819", "code": "void main(String[] args) throws Exception {if (args0) { args = new String[] { \"\" }; } for (i = 0;; i++) { if (\"-threads\") { parseInt(args[i]); } if (\"-count\") { parseInt(args[i]); System(\"\" + \" \"); } if (\"\".equals()) { pause =(args[++i]) * 1000; } else if (\"-break\") { true; } else if (\"-shutdown\".equals(args[i])) { shutdown = true; } else if (\"-stats\".equals(args[i])) { Integer.parseInt(args[++i]); System.out.println(\"\" + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System(\"Setting to \" + channelOptions); } else if (equals(args[i])) { println(\"Message be:\" + (4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) ; } else if (\"-debug\".equals(args[i])) { ; } else if (\"-help\".equals(args[i])) { System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(); } ; if (DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000); }"}
{"time": "2021-01-20 08:50:17.358034", "n_pass": [1593, 73, 73], "score": "0.8634", "loss": "0.1875", "code": "void main(String[] args) throws Exception {if (args0) { args = new String[] { \"\" }; } for (i = 0;; i++) { if (\"-threads\") { parseInt(args[i]); } if (\"-count\") { parseInt(args[i]); System(\"\" + \" \"); } if (\"\".equals()) { pause =(args[++i]) *000; } else if (\"-break\") { true; } else if (\"-shutdown\".equals(args[i])) { shutdown = true; } else if (\"-stats\".equals(args[i])) { Integer.parseInt(args[++i]); System.out.println(\"\" + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System(\"Setting to \" + channelOptions); } else if (equals(args[i])) { println(\"Message be:\" + (4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) ; } else if (\"-debug\".equals(args[i])) { ; } else if (\"-help\".equals(args[i])) { System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(); } ; if (DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000); }"}
{"time": "2021-01-20 08:50:18.802121", "n_pass": [1594, 74, 74], "score": "0.88", "loss": "0.1593", "code": "void main(String[] args) throws Exception {if (args0) { args = new String[] { \"\" }; } for (i = 0;; i++) { if (\"-threads\") { parseInt(args[i]); } if (\"-count\") { parseInt(args[i]); System(\"\" + \" \"); } if (\"\".equals()) { pause =(args[++i]) *0; } else if (\"-break\") { true; } else if (\"-shutdown\".equals(args[i])) { shutdown = true; } else if (\"-stats\".equals(args[i])) { Integer.parseInt(args[++i]); System.out.println(\"\" + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System(\"Setting to \" + channelOptions); } else if (equals(args[i])) { println(\"Message be:\" + (4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) ; } else if (\"-debug\".equals(args[i])) { ; } else if (\"-help\".equals(args[i])) { System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(); } ; if (DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000); }"}
{"time": "2021-01-20 08:50:20.255869", "n_pass": [1597, 75, 75], "score": "0.8406", "loss": "0.2271", "code": "void main(String[] args) throws Exception {if (args0) { args = new String[] { \"\" }; } for (i = 0;; i++) { if (\"-threads\") { parseInt(args[i]); } if (\"-count\") { parseInt(args[i]); System(\"\" + \" \"); } if (\"\".equals()) { pause =(args[++i]) *0; } if (\"-break\") { true; } else if (\"-shutdown\".equals(args[i])) { shutdown = true; } else if (\"-stats\".equals(args[i])) { Integer.parseInt(args[++i]); System.out.println(\"\" + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System(\"Setting to \" + channelOptions); } else if (equals(args[i])) { println(\"Message be:\" + (4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) ; } else if (\"-debug\".equals(args[i])) { ; } else if (\"-help\".equals(args[i])) { System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(); } ; if (DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000); }"}
{"time": "2021-01-20 08:50:21.718590", "n_pass": [1604, 76, 76], "score": "0.9718", "loss": "0.0384", "code": "void main(String[] args) throws Exception {if (args0) { args = new String[] { \"\" }; } for (i = 0;; i++) { if (\"-threads\") { parseInt(args[i]); } if (\"-count\") { parseInt(args[i]); System(\"\" + \" \"); } if (\"\".equals()) { pause =(args[++i]) *0; } if (\"-break\") {  } else if (\"-shutdown\".equals(args[i])) { shutdown = true; } else if (\"-stats\".equals(args[i])) { Integer.parseInt(args[++i]); System.out.println(\"\" + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System(\"Setting to \" + channelOptions); } else if (equals(args[i])) { println(\"Message be:\" + (4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) ; } else if (\"-debug\".equals(args[i])) { ; } else if (\"-help\".equals(args[i])) { System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(); } ; if (DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000); }"}
{"time": "2021-01-20 08:50:23.168443", "n_pass": [1606, 77, 77], "score": "0.8049", "loss": "0.3012", "code": "void main(String[] args) throws Exception {if (args0) { args = new String[] { \"\" }; } for (i = 0;; i++) { if (\"-threads\") { parseInt(args[i]); } if (\"-count\") { parseInt(args[i]); System(\"\" + \" \"); } if (\"\".equals()) { pause =(args[++i]) *0; } if (\"-break\") {  } if (\"-shutdown\".equals(args[i])) { shutdown = true; } else if (\"-stats\".equals(args[i])) { Integer.parseInt(args[++i]); System.out.println(\"\" + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System(\"Setting to \" + channelOptions); } else if (equals(args[i])) { println(\"Message be:\" + (4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) ; } else if (\"-debug\".equals(args[i])) { ; } else if (\"-help\".equals(args[i])) { System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(); } ; if (DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000); }"}
{"time": "2021-01-20 08:50:24.655762", "n_pass": [1621, 78, 78], "score": "0.9119", "loss": "0.1146", "code": "void main(String[] args) throws Exception {if (args0) { args = new String[] { \"\" }; } for (i = 0;; i++) { if (\"-threads\") { parseInt(args[i]); } if (\"-count\") { parseInt(args[i]); System(\"\" + \" \"); } if (\"\".equals()) { pause =(args[++i]) *0; } if (\"-break\") {  } if (\"-shutdown\".equals(args[i])) { shutdown = true; } if (\"-stats\".equals(args[i])) { Integer.parseInt(args[++i]); System.out.println(\"\" + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System(\"Setting to \" + channelOptions); } else if (equals(args[i])) { println(\"Message be:\" + (4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) ; } else if (\"-debug\".equals(args[i])) { ; } else if (\"-help\".equals(args[i])) { System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(); } ; if (DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000); }"}
{"time": "2021-01-20 08:50:26.139791", "n_pass": [1632, 79, 79], "score": "0.935", "loss": "0.0858", "code": "void main(String[] args) throws Exception {if (args0) { args = new String[] { \"\" }; } for (i = 0;; i++) { if (\"-threads\") { parseInt(args[i]); } if (\"-count\") { parseInt(args[i]); System(\"\" + \" \"); } if (\"\".equals()) { pause =(args[++i]) *0; } if (\"-break\") {  } if (\"-shutdown\".equals(args[i])) { shutdown = true; } if (\"-stats\".equals(args[i])) { parseInt(args[++i]); System.out.println(\"\" + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System(\"Setting to \" + channelOptions); } else if (equals(args[i])) { println(\"Message be:\" + (4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) ; } else if (\"-debug\".equals(args[i])) { ; } else if (\"-help\".equals(args[i])) { System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(); } ; if (DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000); }"}
{"time": "2021-01-20 08:50:27.598509", "n_pass": [1635, 80, 80], "score": "0.8767", "loss": "0.1811", "code": "void main(String[] args) throws Exception {if (args0) { args = new String[] { \"\" }; } for (i = 0;; i++) { if (\"-threads\") { parseInt(args[i]); } if (\"-count\") { parseInt(args[i]); System(\"\" + \" \"); } if (\"\".equals()) { pause =(args[++i]) *0; } if (\"-break\") {  } if (\"-shutdown\".equals(args[i])) { shutdown = true; } if (\"-stats\".equals(args[i])) { parseInt(args[i]); System.out.println(\"\" + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System(\"Setting to \" + channelOptions); } else if (equals(args[i])) { println(\"Message be:\" + (4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) ; } else if (\"-debug\".equals(args[i])) { ; } else if (\"-help\".equals(args[i])) { System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(); } ; if (DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000); }"}
{"time": "2021-01-20 08:50:29.052426", "n_pass": [1639, 81, 81], "score": "0.7837", "loss": "0.299", "code": "void main(String[] args) throws Exception {if (args0) { args = new String[] { \"\" }; } for (i = 0;; i++) { if (\"-threads\") { parseInt(args[i]); } if (\"-count\") { parseInt(args[i]); System(\"\" + \" \"); } if (\"\".equals()) { pause =(args[++i]) *0; } if (\"-break\") {  } if (\"-shutdown\".equals(args[i])) { shutdown = true; } if (\"-stats\".equals(args[i])) { parseInt(args[i]); System.println(\"\" + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System(\"Setting to \" + channelOptions); } else if (equals(args[i])) { println(\"Message be:\" + (4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) ; } else if (\"-debug\".equals(args[i])) { ; } else if (\"-help\".equals(args[i])) { System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(); } ; if (DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000); }"}
{"time": "2021-01-20 08:50:30.498712", "n_pass": [1640, 82, 82], "score": "0.7781", "loss": "0.3259", "code": "void main(String[] args) throws Exception {if (args0) { args = new String[] { \"\" }; } for (i = 0;; i++) { if (\"-threads\") { parseInt(args[i]); } if (\"-count\") { parseInt(args[i]); System(\"\" + \" \"); } if (\"\".equals()) { pause =(args[++i]) *0; } if (\"-break\") {  } if (\"-shutdown\".equals(args[i])) { shutdown = true; } if (\"-stats\".equals(args[i])) { parseInt(args[i]); System(\"\" + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System(\"Setting to \" + channelOptions); } else if (equals(args[i])) { println(\"Message be:\" + (4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) ; } else if (\"-debug\".equals(args[i])) { ; } else if (\"-help\".equals(args[i])) { System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(); } ; if (DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000); }"}
{"time": "2021-01-20 08:50:31.960060", "n_pass": [1648, 83, 83], "score": "0.8776", "loss": "0.1653", "code": "void main(String[] args) throws Exception {if (args0) { args = new String[] { \"\" }; } for (i = 0;; i++) { if (\"-threads\") { parseInt(args[i]); } if (\"-count\") { parseInt(args[i]); System(\"\" + \" \"); } if (\"\".equals()) { pause =(args[++i]) *0; } if (\"-break\") {  } if (\"-shutdown\".equals(args[i])) { shutdown = true; } if (\"-stats\".equals(args[i])) { parseInt(args[i]); System(\"\" + \" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System(\"Setting to \" + channelOptions); } else if (equals(args[i])) { println(\"Message be:\" + (4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) ; } else if (\"-debug\".equals(args[i])) { ; } else if (\"-help\".equals(args[i])) { System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(); } ; if (DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000); }"}
{"time": "2021-01-20 08:50:33.444059", "n_pass": [1661, 84, 84], "score": "0.9532", "loss": "0.0628", "code": "void main(String[] args) throws Exception {if (args0) { args = new String[] { \"\" }; } for (i = 0;; i++) { if (\"-threads\") { parseInt(args[i]); } if (\"-count\") { parseInt(args[i]); System(\"\" + \" \"); } if (\"\".equals()) { pause =(args[++i]) *0; } if (\"-break\") {  } if (\"-shutdown\".equals(args[i])) { shutdown = true; } if (\"-stats\".equals(args[i])) { parseInt(args[i]); System(\"\" + \" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[++i]); System(\"Setting to \" + channelOptions); } else if (equals(args[i])) { println(\"Message be:\" + (4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) ; } else if (\"-debug\".equals(args[i])) { ; } else if (\"-help\".equals(args[i])) { System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(); } ; if (DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000); }"}
{"time": "2021-01-20 08:50:34.894566", "n_pass": [1664, 85, 85], "score": "0.978", "loss": "0.0276", "code": "void main(String[] args) throws Exception {if (args0) { args = new String[] { \"\" }; } for (i = 0;; i++) { if (\"-threads\") { parseInt(args[i]); } if (\"-count\") { parseInt(args[i]); System(\"\" + \" \"); } if (\"\".equals()) { pause =(args[++i]) *0; } if (\"-break\") {  } if (\"-shutdown\".equals(args[i])) { shutdown = true; } if (\"-stats\".equals(args[i])) { parseInt(args[i]); System(\"\" + \" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]); System(\"Setting to \" + channelOptions); } else if (equals(args[i])) { println(\"Message be:\" + (4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) ; } else if (\"-debug\".equals(args[i])) { ; } else if (\"-help\".equals(args[i])) { System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(); } ; if (DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000); }"}
{"time": "2021-01-20 08:50:36.370190", "n_pass": [1667, 86, 86], "score": "0.9429", "loss": "0.0809", "code": "void main(String[] args) throws Exception {if (args0) { args = new String[] { \"\" }; } for (i = 0;; i++) { if (\"-threads\") { parseInt(args[i]); } if (\"-count\") { parseInt(args[i]); System(\"\" + \" \"); } if (\"\".equals()) { pause =(args[++i]) *0; } if (\"-break\") {  } if (\"-shutdown\".equals(args[i])) { shutdown = true; } if (\"-stats\".equals(args[i])) { parseInt(args[i]); System(\"\" + \" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"Setting to \" + channelOptions); } else if (equals(args[i])) { println(\"Message be:\" + (4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) ; } else if (\"-debug\".equals(args[i])) { ; } else if (\"-help\".equals(args[i])) { System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(); } ; if (DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000); }"}
{"time": "2021-01-20 08:50:37.809658", "n_pass": [1669, 87, 87], "score": "0.8538", "loss": "0.2038", "code": "void main(String[] args) throws Exception {if (args0) { args = new String[] { \"\" }; } for (i = 0;; i++) { if (\"-threads\") { parseInt(args[i]); } if (\"-count\") { parseInt(args[i]); System(\"\" + \" \"); } if (\"\".equals()) { pause =(args[++i]) *0; } if (\"-break\") {  } if (\"-shutdown\".equals(args[i])) { shutdown = true; } if (\"-stats\".equals(args[i])) { parseInt(args[i]); System(\"\" + \" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"to \" + channelOptions); } else if (equals(args[i])) { println(\"Message be:\" + (4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) ; } else if (\"-debug\".equals(args[i])) { ; } else if (\"-help\".equals(args[i])) { System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(); } ; if (DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000); }"}
{"time": "2021-01-20 08:50:39.280756", "n_pass": [1670, 88, 88], "score": "0.7873", "loss": "0.3159", "code": "void main(String[] args) throws Exception {if (args0) { args = new String[] { \"\" }; } for (i = 0;; i++) { if (\"-threads\") { parseInt(args[i]); } if (\"-count\") { parseInt(args[i]); System(\"\" + \" \"); } if (\"\".equals()) { pause =(args[++i]) *0; } if (\"-break\") {  } if (\"-shutdown\".equals(args[i])) { shutdown = true; } if (\"-stats\".equals(args[i])) { parseInt(args[i]); System(\"\" + \" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" + channelOptions); } else if (equals(args[i])) { println(\"Message be:\" + (4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) ; } else if (\"-debug\".equals(args[i])) { ; } else if (\"-help\".equals(args[i])) { System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(); } ; if (DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000); }"}
{"time": "2021-01-20 08:50:40.761077", "n_pass": [1676, 89, 89], "score": "0.9085", "loss": "0.1309", "code": "void main(String[] args) throws Exception {if (args0) { args = new String[] { \"\" }; } for (i = 0;; i++) { if (\"-threads\") { parseInt(args[i]); } if (\"-count\") { parseInt(args[i]); System(\"\" + \" \"); } if (\"\".equals()) { pause =(args[++i]) *0; } if (\"-break\") {  } if (\"-shutdown\".equals(args[i])) { shutdown = true; } if (\"-stats\".equals(args[i])) { parseInt(args[i]); System(\"\" + \" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" + channelOptions); } if (equals(args[i])) { println(\"Message be:\" + (4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) ; } else if (\"-debug\".equals(args[i])) { ; } else if (\"-help\".equals(args[i])) { System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(); } ; if (DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000); }"}
{"time": "2021-01-20 08:50:42.233118", "n_pass": [1686, 90, 90], "score": "0.8125", "loss": "0.2868", "code": "void main(String[] args) throws Exception {if (args0) { args = new String[] { \"\" }; } for (i = 0;; i++) { if (\"-threads\") { parseInt(args[i]); } if (\"-count\") { parseInt(args[i]); System(\"\" + \" \"); } if (\"\".equals()) { pause =(args[++i]) *0; } if (\"-break\") {  } if (\"-shutdown\".equals(args[i])) { shutdown = true; } if (\"-stats\".equals(args[i])) { parseInt(args[i]); System(\"\" + \" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" + channelOptions); } if (equals(args[i])) { println(\"Message:\" + (4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) ; } else if (\"-debug\".equals(args[i])) { ; } else if (\"-help\".equals(args[i])) { System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(); } ; if (DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000); }"}
{"time": "2021-01-20 08:50:43.690084", "n_pass": [1693, 91, 91], "score": "0.8728", "loss": "0.1972", "code": "void main(String[] args) throws Exception {if (args0) { args = new String[] { \"\" }; } for (i = 0;; i++) { if (\"-threads\") { parseInt(args[i]); } if (\"-count\") { parseInt(args[i]); System(\"\" + \" \"); } if (\"\".equals()) { pause =(args[++i]) *0; } if (\"-break\") {  } if (\"-shutdown\".equals(args[i])) { shutdown = true; } if (\"-stats\".equals(args[i])) { parseInt(args[i]); System(\"\" + \" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" + channelOptions); } if (equals(args[i])) { println(\"Message:\" + (4) + \"\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) ; } else if (\"-debug\".equals(args[i])) { ; } else if (\"-help\".equals(args[i])) { System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(); } ; if (DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000); }"}
{"time": "2021-01-20 08:50:45.138122", "n_pass": [1697, 92, 92], "score": "0.8608", "loss": "0.2148", "code": "void main(String[] args) throws Exception {if (args0) { args = new String[] { \"\" }; } for (i = 0;; i++) { if (\"-threads\") { parseInt(args[i]); } if (\"-count\") { parseInt(args[i]); System(\"\" + \" \"); } if (\"\".equals()) { pause =(args[++i]) *0; } if (\"-break\") {  } if (\"-shutdown\".equals(args[i])) { shutdown = true; } if (\"-stats\".equals(args[i])) { parseInt(args[i]); System(\"\" + \" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" + channelOptions); } if (equals(args[i])) { println(\"Message:\" + (4) + \"\"); } if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) ; } else if (\"-debug\".equals(args[i])) { ; } else if (\"-help\".equals(args[i])) { System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(); } ; if (DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000); }"}
{"time": "2021-01-20 08:50:46.582907", "n_pass": [1700, 93, 93], "score": "0.8676", "loss": "0.1726", "code": "void main(String[] args) throws Exception {if (args0) { args = new String[] { \"\" }; } for (i = 0;; i++) { if (\"-threads\") { parseInt(args[i]); } if (\"-count\") { parseInt(args[i]); System(\"\" + \" \"); } if (\"\".equals()) { pause =(args[++i]) *0; } if (\"-break\") {  } if (\"-shutdown\".equals(args[i])) { shutdown = true; } if (\"-stats\".equals(args[i])) { parseInt(args[i]); System(\"\" + \" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" + channelOptions); } if (equals(args[i])) { println(\"Message:\" + (4) + \"\"); } if (\"\".equals(args[i])) { if (\"receive\".equals(args[++i])) ; } else if (\"-debug\".equals(args[i])) { ; } else if (\"-help\".equals(args[i])) { System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(); } ; if (DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000); }"}
{"time": "2021-01-20 08:50:48.045033", "n_pass": [1707, 94, 94], "score": "0.9595", "loss": "0.0522", "code": "void main(String[] args) throws Exception {if (args0) { args = new String[] { \"\" }; } for (i = 0;; i++) { if (\"-threads\") { parseInt(args[i]); } if (\"-count\") { parseInt(args[i]); System(\"\" + \" \"); } if (\"\".equals()) { pause =(args[++i]) *0; } if (\"-break\") {  } if (\"-shutdown\".equals(args[i])) { shutdown = true; } if (\"-stats\".equals(args[i])) { parseInt(args[i]); System(\"\" + \" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" + channelOptions); } if (equals(args[i])) { println(\"Message:\" + (4) + \"\"); } if (\"\".equals(args[i])) { (\"receive\".equals(args[++i])) ; } else if (\"-debug\".equals(args[i])) { ; } else if (\"-help\".equals(args[i])) { System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(); } ; if (DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000); }"}
{"time": "2021-01-20 08:50:49.528349", "n_pass": [1713, 95, 95], "score": "0.8441", "loss": "0.218", "code": "void main(String[] args) throws Exception {if (args0) { args = new String[] { \"\" }; } for (i = 0;; i++) { if (\"-threads\") { parseInt(args[i]); } if (\"-count\") { parseInt(args[i]); System(\"\" + \" \"); } if (\"\".equals()) { pause =(args[++i]) *0; } if (\"-break\") {  } if (\"-shutdown\".equals(args[i])) { shutdown = true; } if (\"-stats\".equals(args[i])) { parseInt(args[i]); System(\"\" + \" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" + channelOptions); } if (equals(args[i])) { println(\"Message:\" + (4) + \"\"); } if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } else if (\"-debug\".equals(args[i])) { ; } else if (\"-help\".equals(args[i])) { System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(); } ; if (DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000); }"}
{"time": "2021-01-20 08:50:51.009200", "n_pass": [1718, 96, 96], "score": "0.9047", "loss": "0.1391", "code": "void main(String[] args) throws Exception {if (args0) { args = new String[] { \"\" }; } for (i = 0;; i++) { if (\"-threads\") { parseInt(args[i]); } if (\"-count\") { parseInt(args[i]); System(\"\" + \" \"); } if (\"\".equals()) { pause =(args[++i]) *0; } if (\"-break\") {  } if (\"-shutdown\".equals(args[i])) { shutdown = true; } if (\"-stats\".equals(args[i])) { parseInt(args[i]); System(\"\" + \" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" + channelOptions); } if (equals(args[i])) { println(\"Message:\" + (4) + \"\"); } if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } if (\"-debug\".equals(args[i])) { ; } else if (\"-help\".equals(args[i])) { System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(); } ; if (DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000); }"}
{"time": "2021-01-20 08:50:52.486946", "n_pass": [1729, 97, 97], "score": "0.5543", "loss": "0.7724", "code": "void main(String[] args) throws Exception {if (args0) { args = new String[] { \"\" }; } for (i = 0;; i++) { if (\"-threads\") { parseInt(args[i]); } if (\"-count\") { parseInt(args[i]); System(\"\" + \" \"); } if (\"\".equals()) { pause =(args[++i]) *0; } if (\"-break\") {  } if (\"-shutdown\".equals(args[i])) { shutdown = true; } if (\"-stats\".equals(args[i])) { parseInt(args[i]); System(\"\" + \" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" + channelOptions); } if (equals(args[i])) { println(\"Message:\" + (4) + \"\"); } if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } if (\"-debug\".equals(args[i])) { } else if (\"-help\".equals(args[i])) { System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(); } ; if (DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000); }"}
{"time": "2021-01-20 08:50:53.930015", "n_pass": [1731, 98, 98], "score": "0.6843", "loss": "0.4912", "code": "void main(String[] args) throws Exception {if (args0) { args = new String[] { \"\" }; } for (i = 0;; i++) { if (\"-threads\") { parseInt(args[i]); } if (\"-count\") { parseInt(args[i]); System(\"\" + \" \"); } if (\"\".equals()) { pause =(args[++i]) *0; } if (\"-break\") {  } if (\"-shutdown\".equals(args[i])) { shutdown = true; } if (\"-stats\".equals(args[i])) { parseInt(args[i]); System(\"\" + \" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" + channelOptions); } if (equals(args[i])) { println(\"Message:\" + (4) + \"\"); } if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } if (\"-debug\".equals(args[i])) { } if (\"-help\".equals(args[i])) { System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(); } ; if (DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000); }"}
{"time": "2021-01-20 08:50:55.401439", "n_pass": [1734, 99, 99], "score": "0.8519", "loss": "0.2325", "code": "void main(String[] args) throws Exception {if (args0) { args = new String[] { \"\" }; } for (i = 0;; i++) { if (\"-threads\") { parseInt(args[i]); } if (\"-count\") { parseInt(args[i]); System(\"\" + \" \"); } if (\"\".equals()) { pause =(args[++i]) *0; } if (\"-break\") {  } if (\"-shutdown\".equals(args[i])) { shutdown = true; } if (\"-stats\".equals(args[i])) { parseInt(args[i]); System(\"\" + \" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" + channelOptions); } if (equals(args[i])) { println(\"Message:\" + (4) + \"\"); } if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) { System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(); } ; if (DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000); }"}
{"time": "2021-01-20 08:50:56.874657", "n_pass": [1742, 100, 100], "score": "0.7979", "loss": "0.3323", "code": "void main(String[] args) throws Exception {if (args0) { args = new String[] { \"\" }; } for (i = 0;; i++) { if (\"-threads\") { parseInt(args[i]); } if (\"-count\") { parseInt(args[i]); System(\"\" + \" \"); } if (\"\".equals()) { pause =(args[++i]) *0; } if (\"-break\") {  } if (\"-shutdown\".equals(args[i])) { shutdown = true; } if (\"-stats\".equals(args[i])) { parseInt(args[i]); System(\"\" + \" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" + channelOptions); } if (equals(args[i])) { println(\"Message:\" + (4) + \"\"); } if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) { System(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(); } ; if (DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000); }"}
{"time": "2021-01-20 08:50:58.344737", "n_pass": [1750, 101, 101], "score": "0.9756", "loss": "0.0295", "code": "void main(String[] args) throws Exception {if (args0) { args = new String[] { \"\" }; } for (i = 0;; i++) { if (\"-threads\") { parseInt(args[i]); } if (\"-count\") { parseInt(args[i]); System(\"\" + \" \"); } if (\"\".equals()) { pause =(args[++i]) *0; } if (\"-break\") {  } if (\"-shutdown\".equals(args[i])) { shutdown = true; } if (\"-stats\".equals(args[i])) { parseInt(args[i]); System(\"\" + \" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" + channelOptions); } if (equals(args[i])) { println(\"Message:\" + (4) + \"\"); } if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) { System(1); } } ManagedChannel(startoptions); Runtime.getRuntimeaddShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(); } ; if (DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000); }"}
{"time": "2021-01-20 08:50:59.820597", "n_pass": [1756, 102, 102], "score": "0.7752", "loss": "0.3487", "code": "void main(String[] args) throws Exception {if (args0) { args = new String[] { \"\" }; } for (i = 0;; i++) { if (\"-threads\") { parseInt(args[i]); } if (\"-count\") { parseInt(args[i]); System(\"\" + \" \"); } if (\"\".equals()) { pause =(args[++i]) *0; } if (\"-break\") {  } if (\"-shutdown\".equals(args[i])) { shutdown = true; } if (\"-stats\".equals(args[i])) { parseInt(args[i]); System(\"\" + \" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" + channelOptions); } if (equals(args[i])) { println(\"Message:\" + (4) + \"\"); } if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) { System(1); } } ManagedChannel(startoptions); Runtime.getRuntimeaddShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); } ; if (DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000); }"}
{"time": "2021-01-20 08:51:01.304563", "n_pass": [1763, 103, 103], "score": "0.858", "loss": "0.2415", "code": "void main(String[] args) throws Exception {if (args0) { args = new String[] { \"\" }; } for (i = 0;; i++) { if (\"-threads\") { parseInt(args[i]); } if (\"-count\") { parseInt(args[i]); System(\"\" + \" \"); } if (\"\".equals()) { pause =(args[++i]) *0; } if (\"-break\") {  } if (\"-shutdown\".equals(args[i])) { shutdown = true; } if (\"-stats\".equals(args[i])) { parseInt(args[i]); System(\"\" + \" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" + channelOptions); } if (equals(args[i])) { println(\"Message:\" + (4) + \"\"); } if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) { System(1); } } ManagedChannel(startoptions); Runtime.getRuntimeaddShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000); }"}
{"time": "2021-01-20 08:51:02.773189", "n_pass": [1769, 104, 104], "score": "0.9256", "loss": "0.1099", "code": "void main(String[] args) throws Exception {if (args0) { args = new String[] { \"\" }; } for (i = 0;; i++) { if (\"-threads\") { parseInt(args[i]); } if (\"-count\") { parseInt(args[i]); System(\"\" + \" \"); } if (\"\".equals()) { pause =(args[++i]) *0; } if (\"-break\") {  } if (\"-shutdown\".equals(args[i])) { shutdown = true; } if (\"-stats\".equals(args[i])) { parseInt(args[i]); System(\"\" + \" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" + channelOptions); } if (equals(args[i])) { println(\"Message:\" + (4) + \"\"); } if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) { System(1); } } ManagedChannel(startoptions); Runtime.getRuntimeaddShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System , .\"); Thread.sleep(60 * 1000); }"}
{"time": "2021-01-20 08:51:04.218250", "n_pass": [1770, 105, 105], "score": "0.9247", "loss": "0.0995", "code": "void main(String[] args) throws Exception {if (args0) { args = new String[] { \"\" }; } for (i = 0;; i++) { if (\"-threads\") { parseInt(args[i]); } if (\"-count\") { parseInt(args[i]); System(\"\" + \" \"); } if (\"\".equals()) { pause =(args[++i]) *0; } if (\"-break\") {  } if (\"-shutdown\".equals(args[i])) { shutdown = true; } if (\"-stats\".equals(args[i])) { parseInt(args[i]); System(\"\" + \" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" + channelOptions); } if (equals(args[i])) { println(\"Message:\" + (4) + \"\"); } if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) { System(1); } } ManagedChannel(startoptions); Runtime.getRuntimeaddShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \"); Thread.sleep(60 * 1000); }"}
{"time": "2021-01-20 08:51:05.651731", "n_pass": [1772, 106, 106], "score": "0.9704", "loss": "0.0453", "code": "void main(String[] args) throws Exception {if (args0) { args = new String[] { \"\" }; } for (i = 0;; i++) { if (\"-threads\") { parseInt(args[i]); } if (\"-count\") { parseInt(args[i]); System(\"\" + \" \"); } if (\"\".equals()) { pause =(args[++i]) *0; } if (\"-break\") {  } if (\"-shutdown\".equals(args[i])) { shutdown = true; } if (\"-stats\".equals(args[i])) { parseInt(args[i]); System(\"\" + \" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" + channelOptions); } if (equals(args[i])) { println(\"Message:\" + (4) + \"\"); } if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) { System(1); } } ManagedChannel(startoptions); Runtime.getRuntimeaddShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(60 * 1000); }"}
{"time": "2021-01-20 08:51:07.096202", "n_pass": [1775, 107, 107], "score": "0.9594", "loss": "0.0607", "code": "void main(String[] args) throws Exception {if (args0) { args = new String[] { \"\" }; } for (i = 0;; i++) { if (\"-threads\") { parseInt(args[i]); } if (\"-count\") { parseInt(args[i]); System(\"\" + \" \"); } if (\"\".equals()) { pause =(args[++i]) *0; } if (\"-break\") {  } if (\"-shutdown\".equals(args[i])) { shutdown = true; } if (\"-stats\".equals(args[i])) { parseInt(args[i]); System(\"\" + \" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" + channelOptions); } if (equals(args[i])) { println(\"Message:\" + (4) + \"\"); } if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) { System(1); } } ManagedChannel(startoptions); Runtime.getRuntimeaddShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(60 *00); }"}
{"time": "2021-01-20 08:51:09.089249", "n_pass": [1830, 108, 108], "score": "0.8408", "loss": "0.236", "code": "void main(String[] args) throws Exception {if (args0) { args = new String[] { \"\" }; } for (i = 0;; i++) { if (\"-threads\") { parseInt(args[i]); } if (\"-count\") { parseInt(args[i]);(\"\" + \" \"); } if (\"\".equals()) { pause =(args[++i]) *0; } if (\"-break\") {  } if (\"-shutdown\".equals(args[i])) { shutdown = true; } if (\"-stats\".equals(args[i])) { parseInt(args[i]); System(\"\" + \" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" + channelOptions); } if (equals(args[i])) { println(\"Message:\" + (4) + \"\"); } if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) { System(1); } } ManagedChannel(startoptions); Runtime.getRuntimeaddShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(60 *00); }"}
{"time": "2021-01-20 08:51:11.102027", "n_pass": [1888, 109, 109], "score": "0.3942", "loss": "1.1738", "code": "void main(String[] args) throws Exception {if (args0) { args = new String[] { \"\" }; } for (i = 0;; i++) { if (\"-threads\") { parseInt(args[i]); } if (\"-count\") { parseInt(args[i]);(\"\" + \" \"); } if (\"\".equals()) { pause =(args[++i]) *0; } if (\"-break\") {  } if (\"-shutdown\".equals(args[i])) { shutdown = true; } if (\"-stats\".equals(args[i])) { parseInt(args[i]);(\"\" + \" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" + channelOptions); } if (equals(args[i])) { println(\"Message:\" + (4) + \"\"); } if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) { System(1); } } ManagedChannel(startoptions); Runtime.getRuntimeaddShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(60 *00); }"}
{"time": "2021-01-20 08:51:13.052141", "n_pass": [1972, 110, 110], "score": "0.8168", "loss": "0.2853", "code": "void main(String[] args) throws Exception {if (args0) { args = new String[] { \"\" }; } for (i = 0;; i++) { if (\"-threads\") { parseInt(args[i]); } if (\"-count\") { parseInt(args[i]);(\"\" + \" \"); } if (\"\".equals()) { pause =(args[++i]) *0; } if (\"-break\") {  } if (\"-shutdown\".equals(args[i])) { shutdown = true; } if (\"-stats\".equals(args[i])) { parseInt(args[i]);(\"\" + \" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" + channelOptions); } if (equals(args[i])) { println(\"Message:\" + (4) + \"\"); } if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); Runtime.getRuntimeaddShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(60 *00); }"}
{"time": "2021-01-20 08:51:14.523482", "n_pass": [1979, 111, 111], "score": "0.7154", "loss": "0.4332", "code": "void main(String[] args) throws Exception {if (args0) { args = new String[] { \"\" }; } for (i = 0;; i++) { if (\"-threads\") { parseInt(args[i]); } if (\"-count\") { parseInt(args[i]);(\"\" + \" \"); } if (\"\".equals()) { pause =(args[++i]) *0; } if (\"-break\") {  } if (\"-shutdown\".equals(args[i])) { shutdown = true; } if (\"-stats\".equals(args[i])) { parseInt(args[i]);(\"\" + \" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" + channelOptions); } if (equals(args[i])) { println(\"Message:\" + (4) + \"\"); } if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); addShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(60 *00); }"}
{"time": "2021-01-20 08:51:16.074941", "n_pass": [1998, 112, 112], "score": "0.4333", "loss": "1.0762", "code": "void main(String[] args) throws Exception {if (args0) { args = new String[] { \"\" }; } for (i = 0;; i++) { if (\"-threads\") { parseInt(args[i]); } if (\"-count\") { parseInt(args[i]);(\"\" + \" \"); } if (\"\".equals()) { pause =(args[++i]) *0; } if (\"-break\") {  } if (\"-shutdown\".equals(args[i])) { shutdown = true; } if (\"-stats\".equals(args[i])) { parseInt(args[i]);(\"\" + \" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" + channelOptions); } if (equals(args[i])) { println(\"Message:\" + (4) + \"\"); } if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); addShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(600); }"}
{"time": "2021-01-20 08:51:59.337929", "n_pass": [2654, 113, 113], "score": "0.7792", "loss": "0.3271", "code": "void main(String[] args) throws Exception {if (args0) { args = new String[] { \"\" }; } for (i = 0;; i++) { if (\"-threads\") { parseInt(args[i]); } if (\"-count\") { parseInt(args[i]);(\"\" + \" \"); } if (\"\".equals()) { pause =(args[++i]) *0; } if (\"-break\") {  } if (\"-shutdown\".equals(args[i])) { shutdown = true; } if (\"-stats\".equals(args[i])) { parseInt(args[i]);(\"\" + \" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" + channelOptions); } if (equals(args[i])) { println(\"Message:\" + (4) + \"\"); } if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); addShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(6); }"}
{"time": "2021-01-20 08:52:01.617613", "n_pass": [2664, 114, 114], "score": "0.6998", "loss": "0.5143", "code": "void main(String[]args) throws Exception {if (args0) { args = new String[] { \"\" }; } for (i = 0;; i++) { if (\"-threads\") { parseInt(args[i]); } if (\"-count\") { parseInt(args[i]);(\"\" + \" \"); } if (\"\".equals()) { pause =(args[++i]) *0; } if (\"-break\") {  } if (\"-shutdown\".equals(args[i])) { shutdown = true; } if (\"-stats\".equals(args[i])) { parseInt(args[i]);(\"\" + \" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" + channelOptions); } if (equals(args[i])) { println(\"Message:\" + (4) + \"\"); } if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); addShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(6); }"}
{"time": "2021-01-20 08:52:03.060073", "n_pass": [2667, 115, 115], "score": "0.9395", "loss": "0.085", "code": "void main(String[]args)throws Exception {if (args0) { args = new String[] { \"\" }; } for (i = 0;; i++) { if (\"-threads\") { parseInt(args[i]); } if (\"-count\") { parseInt(args[i]);(\"\" + \" \"); } if (\"\".equals()) { pause =(args[++i]) *0; } if (\"-break\") {  } if (\"-shutdown\".equals(args[i])) { shutdown = true; } if (\"-stats\".equals(args[i])) { parseInt(args[i]);(\"\" + \" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" + channelOptions); } if (equals(args[i])) { println(\"Message:\" + (4) + \"\"); } if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); addShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(6); }"}
{"time": "2021-01-20 08:52:04.507625", "n_pass": [2671, 116, 116], "score": "0.9544", "loss": "0.0631", "code": "void main(String[]args)throws Exception{if (args0) { args = new String[] { \"\" }; } for (i = 0;; i++) { if (\"-threads\") { parseInt(args[i]); } if (\"-count\") { parseInt(args[i]);(\"\" + \" \"); } if (\"\".equals()) { pause =(args[++i]) *0; } if (\"-break\") {  } if (\"-shutdown\".equals(args[i])) { shutdown = true; } if (\"-stats\".equals(args[i])) { parseInt(args[i]);(\"\" + \" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" + channelOptions); } if (equals(args[i])) { println(\"Message:\" + (4) + \"\"); } if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); addShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(6); }"}
{"time": "2021-01-20 08:52:05.952547", "n_pass": [2674, 117, 117], "score": "0.4243", "loss": "0.9731", "code": "void main(String[]args)throws Exception{if(args0) { args = new String[] { \"\" }; } for (i = 0;; i++) { if (\"-threads\") { parseInt(args[i]); } if (\"-count\") { parseInt(args[i]);(\"\" + \" \"); } if (\"\".equals()) { pause =(args[++i]) *0; } if (\"-break\") {  } if (\"-shutdown\".equals(args[i])) { shutdown = true; } if (\"-stats\".equals(args[i])) { parseInt(args[i]);(\"\" + \" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" + channelOptions); } if (equals(args[i])) { println(\"Message:\" + (4) + \"\"); } if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); addShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(6); }"}
{"time": "2021-01-20 08:52:07.390633", "n_pass": [2676, 118, 118], "score": "0.849", "loss": "0.2361", "code": "void main(String[]args)throws Exception{if(0) { args = new String[] { \"\" }; } for (i = 0;; i++) { if (\"-threads\") { parseInt(args[i]); } if (\"-count\") { parseInt(args[i]);(\"\" + \" \"); } if (\"\".equals()) { pause =(args[++i]) *0; } if (\"-break\") {  } if (\"-shutdown\".equals(args[i])) { shutdown = true; } if (\"-stats\".equals(args[i])) { parseInt(args[i]);(\"\" + \" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" + channelOptions); } if (equals(args[i])) { println(\"Message:\" + (4) + \"\"); } if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); addShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(6); }"}
{"time": "2021-01-20 08:52:08.855898", "n_pass": [2679, 119, 119], "score": "0.8137", "loss": "0.2838", "code": "void main(String[]args)throws Exception{if(0){ args = new String[] { \"\" }; } for (i = 0;; i++) { if (\"-threads\") { parseInt(args[i]); } if (\"-count\") { parseInt(args[i]);(\"\" + \" \"); } if (\"\".equals()) { pause =(args[++i]) *0; } if (\"-break\") {  } if (\"-shutdown\".equals(args[i])) { shutdown = true; } if (\"-stats\".equals(args[i])) { parseInt(args[i]);(\"\" + \" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" + channelOptions); } if (equals(args[i])) { println(\"Message:\" + (4) + \"\"); } if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); addShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(6); }"}
{"time": "2021-01-20 08:52:10.308163", "n_pass": [2681, 120, 120], "score": "0.5991", "loss": "0.7133", "code": "void main(String[]args)throws Exception{if(0){args = new String[] { \"\" }; } for (i = 0;; i++) { if (\"-threads\") { parseInt(args[i]); } if (\"-count\") { parseInt(args[i]);(\"\" + \" \"); } if (\"\".equals()) { pause =(args[++i]) *0; } if (\"-break\") {  } if (\"-shutdown\".equals(args[i])) { shutdown = true; } if (\"-stats\".equals(args[i])) { parseInt(args[i]);(\"\" + \" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" + channelOptions); } if (equals(args[i])) { println(\"Message:\" + (4) + \"\"); } if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); addShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(6); }"}
{"time": "2021-01-20 08:52:11.780564", "n_pass": [2683, 121, 121], "score": "0.727", "loss": "0.412", "code": "void main(String[]args)throws Exception{if(0){args= new String[] { \"\" }; } for (i = 0;; i++) { if (\"-threads\") { parseInt(args[i]); } if (\"-count\") { parseInt(args[i]);(\"\" + \" \"); } if (\"\".equals()) { pause =(args[++i]) *0; } if (\"-break\") {  } if (\"-shutdown\".equals(args[i])) { shutdown = true; } if (\"-stats\".equals(args[i])) { parseInt(args[i]);(\"\" + \" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" + channelOptions); } if (equals(args[i])) { println(\"Message:\" + (4) + \"\"); } if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); addShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(6); }"}
{"time": "2021-01-20 08:52:13.231272", "n_pass": [2685, 122, 122], "score": "0.9462", "loss": "0.0684", "code": "void main(String[]args)throws Exception{if(0){args=new String[] { \"\" }; } for (i = 0;; i++) { if (\"-threads\") { parseInt(args[i]); } if (\"-count\") { parseInt(args[i]);(\"\" + \" \"); } if (\"\".equals()) { pause =(args[++i]) *0; } if (\"-break\") {  } if (\"-shutdown\".equals(args[i])) { shutdown = true; } if (\"-stats\".equals(args[i])) { parseInt(args[i]);(\"\" + \" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" + channelOptions); } if (equals(args[i])) { println(\"Message:\" + (4) + \"\"); } if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); addShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(6); }"}
{"time": "2021-01-20 08:52:14.681714", "n_pass": [2691, 123, 123], "score": "0.8266", "loss": "0.2369", "code": "void main(String[]args)throws Exception{if(0){args=new String[]{ \"\" }; } for (i = 0;; i++) { if (\"-threads\") { parseInt(args[i]); } if (\"-count\") { parseInt(args[i]);(\"\" + \" \"); } if (\"\".equals()) { pause =(args[++i]) *0; } if (\"-break\") {  } if (\"-shutdown\".equals(args[i])) { shutdown = true; } if (\"-stats\".equals(args[i])) { parseInt(args[i]);(\"\" + \" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" + channelOptions); } if (equals(args[i])) { println(\"Message:\" + (4) + \"\"); } if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); addShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(6); }"}
{"time": "2021-01-20 08:52:16.133049", "n_pass": [2693, 124, 124], "score": "0.9322", "loss": "0.0996", "code": "void main(String[]args)throws Exception{if(0){args=new String[]{\"\" }; } for (i = 0;; i++) { if (\"-threads\") { parseInt(args[i]); } if (\"-count\") { parseInt(args[i]);(\"\" + \" \"); } if (\"\".equals()) { pause =(args[++i]) *0; } if (\"-break\") {  } if (\"-shutdown\".equals(args[i])) { shutdown = true; } if (\"-stats\".equals(args[i])) { parseInt(args[i]);(\"\" + \" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" + channelOptions); } if (equals(args[i])) { println(\"Message:\" + (4) + \"\"); } if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); addShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(6); }"}
{"time": "2021-01-20 08:52:19.037944", "n_pass": [2699, 126, 125], "score": "0.9611", "loss": "0.0521", "code": "void main(String[]args)throws Exception{if(0){args=new String[]{\"\" };} for (i = 0;; i++) { if (\"-threads\") { parseInt(args[i]); } if (\"-count\") { parseInt(args[i]);(\"\" + \" \"); } if (\"\".equals()) { pause =(args[++i]) *0; } if (\"-break\") {  } if (\"-shutdown\".equals(args[i])) { shutdown = true; } if (\"-stats\".equals(args[i])) { parseInt(args[i]);(\"\" + \" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" + channelOptions); } if (equals(args[i])) { println(\"Message:\" + (4) + \"\"); } if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); addShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(6); }"}
{"time": "2021-01-20 08:52:20.502924", "n_pass": [2701, 127, 126], "score": "0.8995", "loss": "0.1506", "code": "void main(String[]args)throws Exception{if(0){args=new String[]{\"\" };}for (i = 0;; i++) { if (\"-threads\") { parseInt(args[i]); } if (\"-count\") { parseInt(args[i]);(\"\" + \" \"); } if (\"\".equals()) { pause =(args[++i]) *0; } if (\"-break\") {  } if (\"-shutdown\".equals(args[i])) { shutdown = true; } if (\"-stats\".equals(args[i])) { parseInt(args[i]);(\"\" + \" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" + channelOptions); } if (equals(args[i])) { println(\"Message:\" + (4) + \"\"); } if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); addShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(6); }"}
{"time": "2021-01-20 08:52:21.984769", "n_pass": [2703, 128, 127], "score": "0.7852", "loss": "0.3158", "code": "void main(String[]args)throws Exception{if(0){args=new String[]{\"\" };}for(i = 0;; i++) { if (\"-threads\") { parseInt(args[i]); } if (\"-count\") { parseInt(args[i]);(\"\" + \" \"); } if (\"\".equals()) { pause =(args[++i]) *0; } if (\"-break\") {  } if (\"-shutdown\".equals(args[i])) { shutdown = true; } if (\"-stats\".equals(args[i])) { parseInt(args[i]);(\"\" + \" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" + channelOptions); } if (equals(args[i])) { println(\"Message:\" + (4) + \"\"); } if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); addShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(6); }"}
{"time": "2021-01-20 08:52:23.438683", "n_pass": [2706, 129, 128], "score": "0.9143", "loss": "0.1151", "code": "void main(String[]args)throws Exception{if(0){args=new String[]{\"\" };}for(i= 0;; i++) { if (\"-threads\") { parseInt(args[i]); } if (\"-count\") { parseInt(args[i]);(\"\" + \" \"); } if (\"\".equals()) { pause =(args[++i]) *0; } if (\"-break\") {  } if (\"-shutdown\".equals(args[i])) { shutdown = true; } if (\"-stats\".equals(args[i])) { parseInt(args[i]);(\"\" + \" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" + channelOptions); } if (equals(args[i])) { println(\"Message:\" + (4) + \"\"); } if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); addShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(6); }"}
{"time": "2021-01-20 08:52:24.881930", "n_pass": [2708, 130, 129], "score": "0.8302", "loss": "0.238", "code": "void main(String[]args)throws Exception{if(0){args=new String[]{\"\" };}for(i=0;; i++) { if (\"-threads\") { parseInt(args[i]); } if (\"-count\") { parseInt(args[i]);(\"\" + \" \"); } if (\"\".equals()) { pause =(args[++i]) *0; } if (\"-break\") {  } if (\"-shutdown\".equals(args[i])) { shutdown = true; } if (\"-stats\".equals(args[i])) { parseInt(args[i]);(\"\" + \" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" + channelOptions); } if (equals(args[i])) { println(\"Message:\" + (4) + \"\"); } if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); addShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(6); }"}
{"time": "2021-01-20 08:52:26.336668", "n_pass": [2712, 131, 130], "score": "0.9163", "loss": "0.1116", "code": "void main(String[]args)throws Exception{if(0){args=new String[]{\"\" };}for(i=0;;i++) { if (\"-threads\") { parseInt(args[i]); } if (\"-count\") { parseInt(args[i]);(\"\" + \" \"); } if (\"\".equals()) { pause =(args[++i]) *0; } if (\"-break\") {  } if (\"-shutdown\".equals(args[i])) { shutdown = true; } if (\"-stats\".equals(args[i])) { parseInt(args[i]);(\"\" + \" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" + channelOptions); } if (equals(args[i])) { println(\"Message:\" + (4) + \"\"); } if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); addShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(6); }"}
{"time": "2021-01-20 08:52:27.803239", "n_pass": [2717, 132, 131], "score": "0.6627", "loss": "0.5226", "code": "void main(String[]args)throws Exception{if(0){args=new String[]{\"\" };}for(i=0;;i++){ if (\"-threads\") { parseInt(args[i]); } if (\"-count\") { parseInt(args[i]);(\"\" + \" \"); } if (\"\".equals()) { pause =(args[++i]) *0; } if (\"-break\") {  } if (\"-shutdown\".equals(args[i])) { shutdown = true; } if (\"-stats\".equals(args[i])) { parseInt(args[i]);(\"\" + \" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" + channelOptions); } if (equals(args[i])) { println(\"Message:\" + (4) + \"\"); } if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); addShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(6); }"}
{"time": "2021-01-20 08:52:29.244375", "n_pass": [2719, 133, 132], "score": "0.9542", "loss": "0.0582", "code": "void main(String[]args)throws Exception{if(0){args=new String[]{\"\" };}for(i=0;;i++){if (\"-threads\") { parseInt(args[i]); } if (\"-count\") { parseInt(args[i]);(\"\" + \" \"); } if (\"\".equals()) { pause =(args[++i]) *0; } if (\"-break\") {  } if (\"-shutdown\".equals(args[i])) { shutdown = true; } if (\"-stats\".equals(args[i])) { parseInt(args[i]);(\"\" + \" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" + channelOptions); } if (equals(args[i])) { println(\"Message:\" + (4) + \"\"); } if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); addShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(6); }"}
{"time": "2021-01-20 08:52:30.686663", "n_pass": [2721, 134, 133], "score": "0.8696", "loss": "0.1937", "code": "void main(String[]args)throws Exception{if(0){args=new String[]{\"\" };}for(i=0;;i++){if(\"-threads\") { parseInt(args[i]); } if (\"-count\") { parseInt(args[i]);(\"\" + \" \"); } if (\"\".equals()) { pause =(args[++i]) *0; } if (\"-break\") {  } if (\"-shutdown\".equals(args[i])) { shutdown = true; } if (\"-stats\".equals(args[i])) { parseInt(args[i]);(\"\" + \" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" + channelOptions); } if (equals(args[i])) { println(\"Message:\" + (4) + \"\"); } if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); addShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(6); }"}
{"time": "2021-01-20 08:52:32.143526", "n_pass": [2724, 135, 134], "score": "0.68", "loss": "0.5458", "code": "void main(String[]args)throws Exception{if(0){args=new String[]{\"\" };}for(i=0;;i++){if(\"threads\") { parseInt(args[i]); } if (\"-count\") { parseInt(args[i]);(\"\" + \" \"); } if (\"\".equals()) { pause =(args[++i]) *0; } if (\"-break\") {  } if (\"-shutdown\".equals(args[i])) { shutdown = true; } if (\"-stats\".equals(args[i])) { parseInt(args[i]);(\"\" + \" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" + channelOptions); } if (equals(args[i])) { println(\"Message:\" + (4) + \"\"); } if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); addShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(6); }"}
{"time": "2021-01-20 08:52:33.582367", "n_pass": [2725, 136, 135], "score": "0.8637", "loss": "0.1703", "code": "void main(String[]args)throws Exception{if(0){args=new String[]{\"\" };}for(i=0;;i++){if(\"\") { parseInt(args[i]); } if (\"-count\") { parseInt(args[i]);(\"\" + \" \"); } if (\"\".equals()) { pause =(args[++i]) *0; } if (\"-break\") {  } if (\"-shutdown\".equals(args[i])) { shutdown = true; } if (\"-stats\".equals(args[i])) { parseInt(args[i]);(\"\" + \" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" + channelOptions); } if (equals(args[i])) { println(\"Message:\" + (4) + \"\"); } if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); addShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(6); }"}
{"time": "2021-01-20 08:52:35.049147", "n_pass": [2728, 137, 136], "score": "0.804", "loss": "0.2969", "code": "void main(String[]args)throws Exception{if(0){args=new String[]{\"\" };}for(i=0;;i++){if(\"\"){ parseInt(args[i]); } if (\"-count\") { parseInt(args[i]);(\"\" + \" \"); } if (\"\".equals()) { pause =(args[++i]) *0; } if (\"-break\") {  } if (\"-shutdown\".equals(args[i])) { shutdown = true; } if (\"-stats\".equals(args[i])) { parseInt(args[i]);(\"\" + \" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" + channelOptions); } if (equals(args[i])) { println(\"Message:\" + (4) + \"\"); } if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); addShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(6); }"}
{"time": "2021-01-20 08:52:36.492774", "n_pass": [2730, 138, 137], "score": "0.8968", "loss": "0.1514", "code": "void main(String[]args)throws Exception{if(0){args=new String[]{\"\" };}for(i=0;;i++){if(\"\"){parseInt(args[i]); } if (\"-count\") { parseInt(args[i]);(\"\" + \" \"); } if (\"\".equals()) { pause =(args[++i]) *0; } if (\"-break\") {  } if (\"-shutdown\".equals(args[i])) { shutdown = true; } if (\"-stats\".equals(args[i])) { parseInt(args[i]);(\"\" + \" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" + channelOptions); } if (equals(args[i])) { println(\"Message:\" + (4) + \"\"); } if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); addShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(6); }"}
{"time": "2021-01-20 08:52:37.936831", "n_pass": [2731, 139, 138], "score": "0.5788", "loss": "0.7476", "code": "void main(String[]args)throws Exception{if(0){args=new String[]{\"\" };}for(i=0;;i++){if(\"\"){(args[i]); } if (\"-count\") { parseInt(args[i]);(\"\" + \" \"); } if (\"\".equals()) { pause =(args[++i]) *0; } if (\"-break\") {  } if (\"-shutdown\".equals(args[i])) { shutdown = true; } if (\"-stats\".equals(args[i])) { parseInt(args[i]);(\"\" + \" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" + channelOptions); } if (equals(args[i])) { println(\"Message:\" + (4) + \"\"); } if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); addShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(6); }"}
{"time": "2021-01-20 08:52:39.401872", "n_pass": [2739, 140, 139], "score": "0.9265", "loss": "0.1018", "code": "void main(String[]args)throws Exception{if(0){args=new String[]{\"\" };}for(i=0;;i++){if(\"\"){(args[i]);} if (\"-count\") { parseInt(args[i]);(\"\" + \" \"); } if (\"\".equals()) { pause =(args[++i]) *0; } if (\"-break\") {  } if (\"-shutdown\".equals(args[i])) { shutdown = true; } if (\"-stats\".equals(args[i])) { parseInt(args[i]);(\"\" + \" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" + channelOptions); } if (equals(args[i])) { println(\"Message:\" + (4) + \"\"); } if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); addShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(6); }"}
{"time": "2021-01-20 08:52:40.844869", "n_pass": [2741, 141, 140], "score": "0.8692", "loss": "0.2061", "code": "void main(String[]args)throws Exception{if(0){args=new String[]{\"\" };}for(i=0;;i++){if(\"\"){(args[i]);}if (\"-count\") { parseInt(args[i]);(\"\" + \" \"); } if (\"\".equals()) { pause =(args[++i]) *0; } if (\"-break\") {  } if (\"-shutdown\".equals(args[i])) { shutdown = true; } if (\"-stats\".equals(args[i])) { parseInt(args[i]);(\"\" + \" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" + channelOptions); } if (equals(args[i])) { println(\"Message:\" + (4) + \"\"); } if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); addShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(6); }"}
{"time": "2021-01-20 08:52:42.322963", "n_pass": [2743, 142, 141], "score": "0.8149", "loss": "0.2723", "code": "void main(String[]args)throws Exception{if(0){args=new String[]{\"\" };}for(i=0;;i++){if(\"\"){(args[i]);}if(\"-count\") { parseInt(args[i]);(\"\" + \" \"); } if (\"\".equals()) { pause =(args[++i]) *0; } if (\"-break\") {  } if (\"-shutdown\".equals(args[i])) { shutdown = true; } if (\"-stats\".equals(args[i])) { parseInt(args[i]);(\"\" + \" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" + channelOptions); } if (equals(args[i])) { println(\"Message:\" + (4) + \"\"); } if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); addShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(6); }"}
{"time": "2021-01-20 08:52:43.773504", "n_pass": [2746, 143, 142], "score": "0.8794", "loss": "0.198", "code": "void main(String[]args)throws Exception{if(0){args=new String[]{\"\" };}for(i=0;;i++){if(\"\"){(args[i]);}if(\"count\") { parseInt(args[i]);(\"\" + \" \"); } if (\"\".equals()) { pause =(args[++i]) *0; } if (\"-break\") {  } if (\"-shutdown\".equals(args[i])) { shutdown = true; } if (\"-stats\".equals(args[i])) { parseInt(args[i]);(\"\" + \" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" + channelOptions); } if (equals(args[i])) { println(\"Message:\" + (4) + \"\"); } if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); addShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(6); }"}
{"time": "2021-01-20 08:52:45.209434", "n_pass": [2747, 144, 143], "score": "0.9524", "loss": "0.0731", "code": "void main(String[]args)throws Exception{if(0){args=new String[]{\"\" };}for(i=0;;i++){if(\"\"){(args[i]);}if(\"\") { parseInt(args[i]);(\"\" + \" \"); } if (\"\".equals()) { pause =(args[++i]) *0; } if (\"-break\") {  } if (\"-shutdown\".equals(args[i])) { shutdown = true; } if (\"-stats\".equals(args[i])) { parseInt(args[i]);(\"\" + \" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" + channelOptions); } if (equals(args[i])) { println(\"Message:\" + (4) + \"\"); } if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); addShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(6); }"}
{"time": "2021-01-20 08:52:46.665717", "n_pass": [2750, 145, 144], "score": "0.8775", "loss": "0.1636", "code": "void main(String[]args)throws Exception{if(0){args=new String[]{\"\" };}for(i=0;;i++){if(\"\"){(args[i]);}if(\"\"){ parseInt(args[i]);(\"\" + \" \"); } if (\"\".equals()) { pause =(args[++i]) *0; } if (\"-break\") {  } if (\"-shutdown\".equals(args[i])) { shutdown = true; } if (\"-stats\".equals(args[i])) { parseInt(args[i]);(\"\" + \" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" + channelOptions); } if (equals(args[i])) { println(\"Message:\" + (4) + \"\"); } if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); addShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(6); }"}
{"time": "2021-01-20 08:52:48.116946", "n_pass": [2752, 146, 145], "score": "0.7647", "loss": "0.4054", "code": "void main(String[]args)throws Exception{if(0){args=new String[]{\"\" };}for(i=0;;i++){if(\"\"){(args[i]);}if(\"\"){parseInt(args[i]);(\"\" + \" \"); } if (\"\".equals()) { pause =(args[++i]) *0; } if (\"-break\") {  } if (\"-shutdown\".equals(args[i])) { shutdown = true; } if (\"-stats\".equals(args[i])) { parseInt(args[i]);(\"\" + \" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" + channelOptions); } if (equals(args[i])) { println(\"Message:\" + (4) + \"\"); } if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); addShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(6); }"}
{"time": "2021-01-20 08:52:49.562897", "n_pass": [2753, 147, 146], "score": "0.4636", "loss": "0.9361", "code": "void main(String[]args)throws Exception{if(0){args=new String[]{\"\" };}for(i=0;;i++){if(\"\"){(args[i]);}if(\"\"){(args[i]);(\"\" + \" \"); } if (\"\".equals()) { pause =(args[++i]) *0; } if (\"-break\") {  } if (\"-shutdown\".equals(args[i])) { shutdown = true; } if (\"-stats\".equals(args[i])) { parseInt(args[i]);(\"\" + \" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" + channelOptions); } if (equals(args[i])) { println(\"Message:\" + (4) + \"\"); } if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); addShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(6); }"}
{"time": "2021-01-20 08:52:51.027533", "n_pass": [2764, 148, 147], "score": "0.7438", "loss": "0.4846", "code": "void main(String[]args)throws Exception{if(0){args=new String[]{\"\" };}for(i=0;;i++){if(\"\"){(args[i]);}if(\"\"){(args[i]);(\"\"+ \" \"); } if (\"\".equals()) { pause =(args[++i]) *0; } if (\"-break\") {  } if (\"-shutdown\".equals(args[i])) { shutdown = true; } if (\"-stats\".equals(args[i])) { parseInt(args[i]);(\"\" + \" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" + channelOptions); } if (equals(args[i])) { println(\"Message:\" + (4) + \"\"); } if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); addShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(6); }"}
{"time": "2021-01-20 08:52:52.478039", "n_pass": [2766, 149, 148], "score": "0.8876", "loss": "0.1639", "code": "void main(String[]args)throws Exception{if(0){args=new String[]{\"\" };}for(i=0;;i++){if(\"\"){(args[i]);}if(\"\"){(args[i]);(\"\"+\" \"); } if (\"\".equals()) { pause =(args[++i]) *0; } if (\"-break\") {  } if (\"-shutdown\".equals(args[i])) { shutdown = true; } if (\"-stats\".equals(args[i])) { parseInt(args[i]);(\"\" + \" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" + channelOptions); } if (equals(args[i])) { println(\"Message:\" + (4) + \"\"); } if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); addShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(6); }"}
{"time": "2021-01-20 08:52:54.007809", "n_pass": [2768, 150, 149], "score": "0.8943", "loss": "0.1652", "code": "void main(String[]args)throws Exception{if(0){args=new String[]{\"\" };}for(i=0;;i++){if(\"\"){(args[i]);}if(\"\"){(args[i]);(\"\"+\"\"); } if (\"\".equals()) { pause =(args[++i]) *0; } if (\"-break\") {  } if (\"-shutdown\".equals(args[i])) { shutdown = true; } if (\"-stats\".equals(args[i])) { parseInt(args[i]);(\"\" + \" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" + channelOptions); } if (equals(args[i])) { println(\"Message:\" + (4) + \"\"); } if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); addShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(6); }"}
{"time": "2021-01-20 08:52:55.454350", "n_pass": [2772, 151, 150], "score": "0.8986", "loss": "0.1637", "code": "void main(String[]args)throws Exception{if(0){args=new String[]{\"\" };}for(i=0;;i++){if(\"\"){(args[i]);}if(\"\"){(args[i]);(\"\"+\"\");} if (\"\".equals()) { pause =(args[++i]) *0; } if (\"-break\") {  } if (\"-shutdown\".equals(args[i])) { shutdown = true; } if (\"-stats\".equals(args[i])) { parseInt(args[i]);(\"\" + \" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" + channelOptions); } if (equals(args[i])) { println(\"Message:\" + (4) + \"\"); } if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); addShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(6); }"}
{"time": "2021-01-20 08:52:56.929359", "n_pass": [2774, 152, 151], "score": "0.6727", "loss": "0.5405", "code": "void main(String[]args)throws Exception{if(0){args=new String[]{\"\" };}for(i=0;;i++){if(\"\"){(args[i]);}if(\"\"){(args[i]);(\"\"+\"\");}if (\"\".equals()) { pause =(args[++i]) *0; } if (\"-break\") {  } if (\"-shutdown\".equals(args[i])) { shutdown = true; } if (\"-stats\".equals(args[i])) { parseInt(args[i]);(\"\" + \" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" + channelOptions); } if (equals(args[i])) { println(\"Message:\" + (4) + \"\"); } if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); addShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(6); }"}
{"time": "2021-01-20 08:52:58.398490", "n_pass": [2776, 153, 152], "score": "0.5008", "loss": "0.9861", "code": "void main(String[]args)throws Exception{if(0){args=new String[]{\"\" };}for(i=0;;i++){if(\"\"){(args[i]);}if(\"\"){(args[i]);(\"\"+\"\");}if(\"\".equals()) { pause =(args[++i]) *0; } if (\"-break\") {  } if (\"-shutdown\".equals(args[i])) { shutdown = true; } if (\"-stats\".equals(args[i])) { parseInt(args[i]);(\"\" + \" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" + channelOptions); } if (equals(args[i])) { println(\"Message:\" + (4) + \"\"); } if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); addShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(6); }"}
{"time": "2021-01-20 08:52:59.854794", "n_pass": [2785, 154, 153], "score": "0.5212", "loss": "0.8899", "code": "void main(String[]args)throws Exception{if(0){args=new String[]{\"\" };}for(i=0;;i++){if(\"\"){(args[i]);}if(\"\"){(args[i]);(\"\"+\"\");}if(\"\".equals()){ pause =(args[++i]) *0; } if (\"-break\") {  } if (\"-shutdown\".equals(args[i])) { shutdown = true; } if (\"-stats\".equals(args[i])) { parseInt(args[i]);(\"\" + \" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" + channelOptions); } if (equals(args[i])) { println(\"Message:\" + (4) + \"\"); } if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); addShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(6); }"}
{"time": "2021-01-20 08:53:01.297406", "n_pass": [2787, 155, 154], "score": "0.7928", "loss": "0.3178", "code": "void main(String[]args)throws Exception{if(0){args=new String[]{\"\" };}for(i=0;;i++){if(\"\"){(args[i]);}if(\"\"){(args[i]);(\"\"+\"\");}if(\"\".equals()){pause =(args[++i]) *0; } if (\"-break\") {  } if (\"-shutdown\".equals(args[i])) { shutdown = true; } if (\"-stats\".equals(args[i])) { parseInt(args[i]);(\"\" + \" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" + channelOptions); } if (equals(args[i])) { println(\"Message:\" + (4) + \"\"); } if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); addShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(6); }"}
{"time": "2021-01-20 08:53:02.748328", "n_pass": [2789, 156, 155], "score": "0.5554", "loss": "0.8519", "code": "void main(String[]args)throws Exception{if(0){args=new String[]{\"\" };}for(i=0;;i++){if(\"\"){(args[i]);}if(\"\"){(args[i]);(\"\"+\"\");}if(\"\".equals()){pause=(args[++i]) *0; } if (\"-break\") {  } if (\"-shutdown\".equals(args[i])) { shutdown = true; } if (\"-stats\".equals(args[i])) { parseInt(args[i]);(\"\" + \" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" + channelOptions); } if (equals(args[i])) { println(\"Message:\" + (4) + \"\"); } if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); addShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(6); }"}
{"time": "2021-01-20 08:53:04.604019", "n_pass": [2794, 157, 156], "score": "0.779", "loss": "0.3553", "code": "void main(String[]args)throws Exception{if(0){args=new String[]{\"\" };}for(i=0;;i++){if(\"\"){(args[i]);}if(\"\"){(args[i]);(\"\"+\"\");}if(\"\".equals()){pause=(args[+i]) *0; } if (\"-break\") {  } if (\"-shutdown\".equals(args[i])) { shutdown = true; } if (\"-stats\".equals(args[i])) { parseInt(args[i]);(\"\" + \" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" + channelOptions); } if (equals(args[i])) { println(\"Message:\" + (4) + \"\"); } if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); addShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(6); }"}
{"time": "2021-01-20 08:53:06.063840", "n_pass": [2795, 158, 157], "score": "0.8692", "loss": "0.1861", "code": "void main(String[]args)throws Exception{if(0){args=new String[]{\"\" };}for(i=0;;i++){if(\"\"){(args[i]);}if(\"\"){(args[i]);(\"\"+\"\");}if(\"\".equals()){pause=(args[i]) *0; } if (\"-break\") {  } if (\"-shutdown\".equals(args[i])) { shutdown = true; } if (\"-stats\".equals(args[i])) { parseInt(args[i]);(\"\" + \" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" + channelOptions); } if (equals(args[i])) { println(\"Message:\" + (4) + \"\"); } if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); addShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(6); }"}
{"time": "2021-01-20 08:53:07.534861", "n_pass": [2799, 159, 158], "score": "0.9563", "loss": "0.0646", "code": "void main(String[]args)throws Exception{if(0){args=new String[]{\"\" };}for(i=0;;i++){if(\"\"){(args[i]);}if(\"\"){(args[i]);(\"\"+\"\");}if(\"\".equals()){pause=(args[i])*0; } if (\"-break\") {  } if (\"-shutdown\".equals(args[i])) { shutdown = true; } if (\"-stats\".equals(args[i])) { parseInt(args[i]);(\"\" + \" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" + channelOptions); } if (equals(args[i])) { println(\"Message:\" + (4) + \"\"); } if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); addShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(6); }"}
{"time": "2021-01-20 08:53:08.985632", "n_pass": [2803, 160, 159], "score": "0.7163", "loss": "0.472", "code": "void main(String[]args)throws Exception{if(0){args=new String[]{\"\" };}for(i=0;;i++){if(\"\"){(args[i]);}if(\"\"){(args[i]);(\"\"+\"\");}if(\"\".equals()){pause=(args[i])*0;} if (\"-break\") {  } if (\"-shutdown\".equals(args[i])) { shutdown = true; } if (\"-stats\".equals(args[i])) { parseInt(args[i]);(\"\" + \" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" + channelOptions); } if (equals(args[i])) { println(\"Message:\" + (4) + \"\"); } if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); addShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(6); }"}
{"time": "2021-01-20 08:53:10.436647", "n_pass": [2805, 161, 160], "score": "0.8541", "loss": "0.2312", "code": "void main(String[]args)throws Exception{if(0){args=new String[]{\"\" };}for(i=0;;i++){if(\"\"){(args[i]);}if(\"\"){(args[i]);(\"\"+\"\");}if(\"\".equals()){pause=(args[i])*0;}if (\"-break\") {  } if (\"-shutdown\".equals(args[i])) { shutdown = true; } if (\"-stats\".equals(args[i])) { parseInt(args[i]);(\"\" + \" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" + channelOptions); } if (equals(args[i])) { println(\"Message:\" + (4) + \"\"); } if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); addShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(6); }"}
{"time": "2021-01-20 08:53:12.130218", "n_pass": [2807, 162, 161], "score": "0.5555", "loss": "0.7981", "code": "void main(String[]args)throws Exception{if(0){args=new String[]{\"\" };}for(i=0;;i++){if(\"\"){(args[i]);}if(\"\"){(args[i]);(\"\"+\"\");}if(\"\".equals()){pause=(args[i])*0;}if(\"-break\") {  } if (\"-shutdown\".equals(args[i])) { shutdown = true; } if (\"-stats\".equals(args[i])) { parseInt(args[i]);(\"\" + \" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" + channelOptions); } if (equals(args[i])) { println(\"Message:\" + (4) + \"\"); } if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); addShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(6); }"}
{"time": "2021-01-20 08:53:13.572762", "n_pass": [2810, 163, 162], "score": "0.5399", "loss": "0.8722", "code": "void main(String[]args)throws Exception{if(0){args=new String[]{\"\" };}for(i=0;;i++){if(\"\"){(args[i]);}if(\"\"){(args[i]);(\"\"+\"\");}if(\"\".equals()){pause=(args[i])*0;}if(\"break\") {  } if (\"-shutdown\".equals(args[i])) { shutdown = true; } if (\"-stats\".equals(args[i])) { parseInt(args[i]);(\"\" + \" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" + channelOptions); } if (equals(args[i])) { println(\"Message:\" + (4) + \"\"); } if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); addShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(6); }"}
{"time": "2021-01-20 08:53:15.030302", "n_pass": [2811, 164, 163], "score": "0.8205", "loss": "0.315", "code": "void main(String[]args)throws Exception{if(0){args=new String[]{\"\" };}for(i=0;;i++){if(\"\"){(args[i]);}if(\"\"){(args[i]);(\"\"+\"\");}if(\"\".equals()){pause=(args[i])*0;}if(\"\") {  } if (\"-shutdown\".equals(args[i])) { shutdown = true; } if (\"-stats\".equals(args[i])) { parseInt(args[i]);(\"\" + \" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" + channelOptions); } if (equals(args[i])) { println(\"Message:\" + (4) + \"\"); } if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); addShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(6); }"}
{"time": "2021-01-20 08:53:16.477716", "n_pass": [2814, 165, 164], "score": "0.8743", "loss": "0.194", "code": "void main(String[]args)throws Exception{if(0){args=new String[]{\"\" };}for(i=0;;i++){if(\"\"){(args[i]);}if(\"\"){(args[i]);(\"\"+\"\");}if(\"\".equals()){pause=(args[i])*0;}if(\"\"){  } if (\"-shutdown\".equals(args[i])) { shutdown = true; } if (\"-stats\".equals(args[i])) { parseInt(args[i]);(\"\" + \" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" + channelOptions); } if (equals(args[i])) { println(\"Message:\" + (4) + \"\"); } if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); addShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(6); }"}
{"time": "2021-01-20 08:53:17.924598", "n_pass": [2816, 166, 165], "score": "0.8901", "loss": "0.161", "code": "void main(String[]args)throws Exception{if(0){args=new String[]{\"\" };}for(i=0;;i++){if(\"\"){(args[i]);}if(\"\"){(args[i]);(\"\"+\"\");}if(\"\".equals()){pause=(args[i])*0;}if(\"\"){ } if (\"-shutdown\".equals(args[i])) { shutdown = true; } if (\"-stats\".equals(args[i])) { parseInt(args[i]);(\"\" + \" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" + channelOptions); } if (equals(args[i])) { println(\"Message:\" + (4) + \"\"); } if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); addShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(6); }"}
{"time": "2021-01-20 08:53:19.389494", "n_pass": [2817, 167, 166], "score": "0.6348", "loss": "0.6775", "code": "void main(String[]args)throws Exception{if(0){args=new String[]{\"\" };}for(i=0;;i++){if(\"\"){(args[i]);}if(\"\"){(args[i]);(\"\"+\"\");}if(\"\".equals()){pause=(args[i])*0;}if(\"\"){} if (\"-shutdown\".equals(args[i])) { shutdown = true; } if (\"-stats\".equals(args[i])) { parseInt(args[i]);(\"\" + \" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" + channelOptions); } if (equals(args[i])) { println(\"Message:\" + (4) + \"\"); } if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); addShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(6); }"}
{"time": "2021-01-20 08:53:20.845868", "n_pass": [2819, 168, 167], "score": "0.9308", "loss": "0.1024", "code": "void main(String[]args)throws Exception{if(0){args=new String[]{\"\" };}for(i=0;;i++){if(\"\"){(args[i]);}if(\"\"){(args[i]);(\"\"+\"\");}if(\"\".equals()){pause=(args[i])*0;}if(\"\"){}if (\"-shutdown\".equals(args[i])) { shutdown = true; } if (\"-stats\".equals(args[i])) { parseInt(args[i]);(\"\" + \" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" + channelOptions); } if (equals(args[i])) { println(\"Message:\" + (4) + \"\"); } if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); addShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(6); }"}
{"time": "2021-01-20 08:53:22.320505", "n_pass": [2821, 169, 168], "score": "0.8724", "loss": "0.2089", "code": "void main(String[]args)throws Exception{if(0){args=new String[]{\"\" };}for(i=0;;i++){if(\"\"){(args[i]);}if(\"\"){(args[i]);(\"\"+\"\");}if(\"\".equals()){pause=(args[i])*0;}if(\"\"){}if(\"-shutdown\".equals(args[i])) { shutdown = true; } if (\"-stats\".equals(args[i])) { parseInt(args[i]);(\"\" + \" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" + channelOptions); } if (equals(args[i])) { println(\"Message:\" + (4) + \"\"); } if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); addShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(6); }"}
{"time": "2021-01-20 08:53:23.768309", "n_pass": [2824, 170, 169], "score": "0.8662", "loss": "0.202", "code": "void main(String[]args)throws Exception{if(0){args=new String[]{\"\" };}for(i=0;;i++){if(\"\"){(args[i]);}if(\"\"){(args[i]);(\"\"+\"\");}if(\"\".equals()){pause=(args[i])*0;}if(\"\"){}if(\"shutdown\".equals(args[i])) { shutdown = true; } if (\"-stats\".equals(args[i])) { parseInt(args[i]);(\"\" + \" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" + channelOptions); } if (equals(args[i])) { println(\"Message:\" + (4) + \"\"); } if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); addShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(6); }"}
{"time": "2021-01-20 08:53:25.219803", "n_pass": [2825, 171, 170], "score": "0.8131", "loss": "0.3296", "code": "void main(String[]args)throws Exception{if(0){args=new String[]{\"\" };}for(i=0;;i++){if(\"\"){(args[i]);}if(\"\"){(args[i]);(\"\"+\"\");}if(\"\".equals()){pause=(args[i])*0;}if(\"\"){}if(\"\".equals(args[i])) { shutdown = true; } if (\"-stats\".equals(args[i])) { parseInt(args[i]);(\"\" + \" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" + channelOptions); } if (equals(args[i])) { println(\"Message:\" + (4) + \"\"); } if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); addShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(6); }"}
{"time": "2021-01-20 08:53:26.686721", "n_pass": [2836, 172, 171], "score": "0.807", "loss": "0.3399", "code": "void main(String[]args)throws Exception{if(0){args=new String[]{\"\" };}for(i=0;;i++){if(\"\"){(args[i]);}if(\"\"){(args[i]);(\"\"+\"\");}if(\"\".equals()){pause=(args[i])*0;}if(\"\"){}if(\"\".equals(args[i])){ shutdown = true; } if (\"-stats\".equals(args[i])) { parseInt(args[i]);(\"\" + \" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" + channelOptions); } if (equals(args[i])) { println(\"Message:\" + (4) + \"\"); } if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); addShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(6); }"}
{"time": "2021-01-20 08:53:28.135136", "n_pass": [2838, 173, 172], "score": "0.8273", "loss": "0.2963", "code": "void main(String[]args)throws Exception{if(0){args=new String[]{\"\" };}for(i=0;;i++){if(\"\"){(args[i]);}if(\"\"){(args[i]);(\"\"+\"\");}if(\"\".equals()){pause=(args[i])*0;}if(\"\"){}if(\"\".equals(args[i])){shutdown = true; } if (\"-stats\".equals(args[i])) { parseInt(args[i]);(\"\" + \" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" + channelOptions); } if (equals(args[i])) { println(\"Message:\" + (4) + \"\"); } if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); addShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(6); }"}
{"time": "2021-01-20 08:53:29.587019", "n_pass": [2840, 174, 173], "score": "0.7351", "loss": "0.44", "code": "void main(String[]args)throws Exception{if(0){args=new String[]{\"\" };}for(i=0;;i++){if(\"\"){(args[i]);}if(\"\"){(args[i]);(\"\"+\"\");}if(\"\".equals()){pause=(args[i])*0;}if(\"\"){}if(\"\".equals(args[i])){shutdown= true; } if (\"-stats\".equals(args[i])) { parseInt(args[i]);(\"\" + \" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" + channelOptions); } if (equals(args[i])) { println(\"Message:\" + (4) + \"\"); } if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); addShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(6); }"}
{"time": "2021-01-20 08:53:31.027022", "n_pass": [2842, 175, 174], "score": "0.9346", "loss": "0.0976", "code": "void main(String[]args)throws Exception{if(0){args=new String[]{\"\" };}for(i=0;;i++){if(\"\"){(args[i]);}if(\"\"){(args[i]);(\"\"+\"\");}if(\"\".equals()){pause=(args[i])*0;}if(\"\"){}if(\"\".equals(args[i])){shutdown=true; } if (\"-stats\".equals(args[i])) { parseInt(args[i]);(\"\" + \" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" + channelOptions); } if (equals(args[i])) { println(\"Message:\" + (4) + \"\"); } if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); addShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(6); }"}
{"time": "2021-01-20 08:53:32.489600", "n_pass": [2845, 176, 175], "score": "0.8019", "loss": "0.3203", "code": "void main(String[]args)throws Exception{if(0){args=new String[]{\"\" };}for(i=0;;i++){if(\"\"){(args[i]);}if(\"\"){(args[i]);(\"\"+\"\");}if(\"\".equals()){pause=(args[i])*0;}if(\"\"){}if(\"\".equals(args[i])){shutdown=true;} if (\"-stats\".equals(args[i])) { parseInt(args[i]);(\"\" + \" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" + channelOptions); } if (equals(args[i])) { println(\"Message:\" + (4) + \"\"); } if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); addShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(6); }"}
{"time": "2021-01-20 08:53:33.956092", "n_pass": [2847, 177, 176], "score": "0.8005", "loss": "0.3232", "code": "void main(String[]args)throws Exception{if(0){args=new String[]{\"\" };}for(i=0;;i++){if(\"\"){(args[i]);}if(\"\"){(args[i]);(\"\"+\"\");}if(\"\".equals()){pause=(args[i])*0;}if(\"\"){}if(\"\".equals(args[i])){shutdown=true;}if (\"-stats\".equals(args[i])) { parseInt(args[i]);(\"\" + \" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" + channelOptions); } if (equals(args[i])) { println(\"Message:\" + (4) + \"\"); } if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); addShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(6); }"}
{"time": "2021-01-20 08:53:35.406716", "n_pass": [2849, 178, 177], "score": "0.8797", "loss": "0.1829", "code": "void main(String[]args)throws Exception{if(0){args=new String[]{\"\" };}for(i=0;;i++){if(\"\"){(args[i]);}if(\"\"){(args[i]);(\"\"+\"\");}if(\"\".equals()){pause=(args[i])*0;}if(\"\"){}if(\"\".equals(args[i])){shutdown=true;}if(\"-stats\".equals(args[i])) { parseInt(args[i]);(\"\" + \" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" + channelOptions); } if (equals(args[i])) { println(\"Message:\" + (4) + \"\"); } if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); addShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(6); }"}
{"time": "2021-01-20 08:53:36.869482", "n_pass": [2852, 179, 178], "score": "0.7202", "loss": "0.4713", "code": "void main(String[]args)throws Exception{if(0){args=new String[]{\"\" };}for(i=0;;i++){if(\"\"){(args[i]);}if(\"\"){(args[i]);(\"\"+\"\");}if(\"\".equals()){pause=(args[i])*0;}if(\"\"){}if(\"\".equals(args[i])){shutdown=true;}if(\"stats\".equals(args[i])) { parseInt(args[i]);(\"\" + \" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" + channelOptions); } if (equals(args[i])) { println(\"Message:\" + (4) + \"\"); } if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); addShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(6); }"}
{"time": "2021-01-20 08:53:38.307851", "n_pass": [2853, 180, 179], "score": "0.8104", "loss": "0.3192", "code": "void main(String[]args)throws Exception{if(0){args=new String[]{\"\" };}for(i=0;;i++){if(\"\"){(args[i]);}if(\"\"){(args[i]);(\"\"+\"\");}if(\"\".equals()){pause=(args[i])*0;}if(\"\"){}if(\"\".equals(args[i])){shutdown=true;}if(\"\".equals(args[i])) { parseInt(args[i]);(\"\" + \" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" + channelOptions); } if (equals(args[i])) { println(\"Message:\" + (4) + \"\"); } if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); addShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(6); }"}
{"time": "2021-01-20 08:53:39.816073", "n_pass": [2864, 181, 180], "score": "0.7307", "loss": "0.4666", "code": "void main(String[]args)throws Exception{if(0){args=new String[]{\"\" };}for(i=0;;i++){if(\"\"){(args[i]);}if(\"\"){(args[i]);(\"\"+\"\");}if(\"\".equals()){pause=(args[i])*0;}if(\"\"){}if(\"\".equals(args[i])){shutdown=true;}if(\"\".equals(args[i])){ parseInt(args[i]);(\"\" + \" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" + channelOptions); } if (equals(args[i])) { println(\"Message:\" + (4) + \"\"); } if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); addShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(6); }"}
{"time": "2021-01-20 08:53:41.267137", "n_pass": [2866, 182, 181], "score": "0.7453", "loss": "0.3977", "code": "void main(String[]args)throws Exception{if(0){args=new String[]{\"\" };}for(i=0;;i++){if(\"\"){(args[i]);}if(\"\"){(args[i]);(\"\"+\"\");}if(\"\".equals()){pause=(args[i])*0;}if(\"\"){}if(\"\".equals(args[i])){shutdown=true;}if(\"\".equals(args[i])){parseInt(args[i]);(\"\" + \" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" + channelOptions); } if (equals(args[i])) { println(\"Message:\" + (4) + \"\"); } if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); addShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(6); }"}
{"time": "2021-01-20 08:53:42.704629", "n_pass": [2867, 183, 182], "score": "0.8706", "loss": "0.2179", "code": "void main(String[]args)throws Exception{if(0){args=new String[]{\"\" };}for(i=0;;i++){if(\"\"){(args[i]);}if(\"\"){(args[i]);(\"\"+\"\");}if(\"\".equals()){pause=(args[i])*0;}if(\"\"){}if(\"\".equals(args[i])){shutdown=true;}if(\"\".equals(args[i])){(args[i]);(\"\" + \" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" + channelOptions); } if (equals(args[i])) { println(\"Message:\" + (4) + \"\"); } if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); addShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(6); }"}
{"time": "2021-01-20 08:53:44.186761", "n_pass": [2878, 184, 183], "score": "0.928", "loss": "0.1124", "code": "void main(String[]args)throws Exception{if(0){args=new String[]{\"\" };}for(i=0;;i++){if(\"\"){(args[i]);}if(\"\"){(args[i]);(\"\"+\"\");}if(\"\".equals()){pause=(args[i])*0;}if(\"\"){}if(\"\".equals(args[i])){shutdown=true;}if(\"\".equals(args[i])){(args[i]);(\"\"+ \" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" + channelOptions); } if (equals(args[i])) { println(\"Message:\" + (4) + \"\"); } if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); addShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(6); }"}
{"time": "2021-01-20 08:53:45.635476", "n_pass": [2880, 185, 184], "score": "0.9632", "loss": "0.0607", "code": "void main(String[]args)throws Exception{if(0){args=new String[]{\"\" };}for(i=0;;i++){if(\"\"){(args[i]);}if(\"\"){(args[i]);(\"\"+\"\");}if(\"\".equals()){pause=(args[i])*0;}if(\"\"){}if(\"\".equals(args[i])){shutdown=true;}if(\"\".equals(args[i])){(args[i]);(\"\"+\" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" + channelOptions); } if (equals(args[i])) { println(\"Message:\" + (4) + \"\"); } if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); addShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(6); }"}
{"time": "2021-01-20 08:53:47.092099", "n_pass": [2882, 186, 185], "score": "0.9166", "loss": "0.1413", "code": "void main(String[]args)throws Exception{if(0){args=new String[]{\"\" };}for(i=0;;i++){if(\"\"){(args[i]);}if(\"\"){(args[i]);(\"\"+\"\");}if(\"\".equals()){pause=(args[i])*0;}if(\"\"){}if(\"\".equals(args[i])){shutdown=true;}if(\"\".equals(args[i])){(args[i]);(\"\"+\"message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" + channelOptions); } if (equals(args[i])) { println(\"Message:\" + (4) + \"\"); } if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); addShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(6); }"}
{"time": "2021-01-20 08:53:48.535362", "n_pass": [2883, 187, 186], "score": "0.6601", "loss": "0.6173", "code": "void main(String[]args)throws Exception{if(0){args=new String[]{\"\" };}for(i=0;;i++){if(\"\"){(args[i]);}if(\"\"){(args[i]);(\"\"+\"\");}if(\"\".equals()){pause=(args[i])*0;}if(\"\"){}if(\"\".equals(args[i])){shutdown=true;}if(\"\".equals(args[i])){(args[i]);(\"\"+\"\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" + channelOptions); } if (equals(args[i])) { println(\"Message:\" + (4) + \"\"); } if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); addShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(6); }"}
{"time": "2021-01-20 08:53:50.005840", "n_pass": [2887, 188, 187], "score": "0.6907", "loss": "0.582", "code": "void main(String[]args)throws Exception{if(0){args=new String[]{\"\" };}for(i=0;;i++){if(\"\"){(args[i]);}if(\"\"){(args[i]);(\"\"+\"\");}if(\"\".equals()){pause=(args[i])*0;}if(\"\"){}if(\"\".equals(args[i])){shutdown=true;}if(\"\".equals(args[i])){(args[i]);(\"\"+\"\");} if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" + channelOptions); } if (equals(args[i])) { println(\"Message:\" + (4) + \"\"); } if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); addShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(6); }"}
{"time": "2021-01-20 08:53:51.457125", "n_pass": [2889, 189, 188], "score": "0.5658", "loss": "0.8445", "code": "void main(String[]args)throws Exception{if(0){args=new String[]{\"\" };}for(i=0;;i++){if(\"\"){(args[i]);}if(\"\"){(args[i]);(\"\"+\"\");}if(\"\".equals()){pause=(args[i])*0;}if(\"\"){}if(\"\".equals(args[i])){shutdown=true;}if(\"\".equals(args[i])){(args[i]);(\"\"+\"\");}if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" + channelOptions); } if (equals(args[i])) { println(\"Message:\" + (4) + \"\"); } if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); addShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(6); }"}
{"time": "2021-01-20 08:53:52.908311", "n_pass": [2891, 190, 189], "score": "0.7624", "loss": "0.4303", "code": "void main(String[]args)throws Exception{if(0){args=new String[]{\"\" };}for(i=0;;i++){if(\"\"){(args[i]);}if(\"\"){(args[i]);(\"\"+\"\");}if(\"\".equals()){pause=(args[i])*0;}if(\"\"){}if(\"\".equals(args[i])){shutdown=true;}if(\"\".equals(args[i])){(args[i]);(\"\"+\"\");}if(\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" + channelOptions); } if (equals(args[i])) { println(\"Message:\" + (4) + \"\"); } if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); addShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(6); }"}
{"time": "2021-01-20 08:53:54.347690", "n_pass": [2894, 191, 190], "score": "0.6171", "loss": "0.7393", "code": "void main(String[]args)throws Exception{if(0){args=new String[]{\"\" };}for(i=0;;i++){if(\"\"){(args[i]);}if(\"\"){(args[i]);(\"\"+\"\");}if(\"\".equals()){pause=(args[i])*0;}if(\"\"){}if(\"\".equals(args[i])){shutdown=true;}if(\"\".equals(args[i])){(args[i]);(\"\"+\"\");}if(\"sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" + channelOptions); } if (equals(args[i])) { println(\"Message:\" + (4) + \"\"); } if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); addShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(6); }"}
{"time": "2021-01-20 08:53:55.838373", "n_pass": [2895, 192, 191], "score": "0.7966", "loss": "0.3851", "code": "void main(String[]args)throws Exception{if(0){args=new String[]{\"\" };}for(i=0;;i++){if(\"\"){(args[i]);}if(\"\"){(args[i]);(\"\"+\"\");}if(\"\".equals()){pause=(args[i])*0;}if(\"\"){}if(\"\".equals(args[i])){shutdown=true;}if(\"\".equals(args[i])){(args[i]);(\"\"+\"\");}if(\"\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" + channelOptions); } if (equals(args[i])) { println(\"Message:\" + (4) + \"\"); } if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); addShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(6); }"}
{"time": "2021-01-20 08:53:57.313581", "n_pass": [2906, 193, 192], "score": "0.8721", "loss": "0.2359", "code": "void main(String[]args)throws Exception{if(0){args=new String[]{\"\" };}for(i=0;;i++){if(\"\"){(args[i]);}if(\"\"){(args[i]);(\"\"+\"\");}if(\"\".equals()){pause=(args[i])*0;}if(\"\"){}if(\"\".equals(args[i])){shutdown=true;}if(\"\".equals(args[i])){(args[i]);(\"\"+\"\");}if(\"\".equals(args[i])){ channelOptions = parseInt(args[i]);(\"\" + channelOptions); } if (equals(args[i])) { println(\"Message:\" + (4) + \"\"); } if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); addShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(6); }"}
{"time": "2021-01-20 08:53:58.762009", "n_pass": [2908, 194, 193], "score": "0.8707", "loss": "0.2162", "code": "void main(String[]args)throws Exception{if(0){args=new String[]{\"\" };}for(i=0;;i++){if(\"\"){(args[i]);}if(\"\"){(args[i]);(\"\"+\"\");}if(\"\".equals()){pause=(args[i])*0;}if(\"\"){}if(\"\".equals(args[i])){shutdown=true;}if(\"\".equals(args[i])){(args[i]);(\"\"+\"\");}if(\"\".equals(args[i])){channelOptions = parseInt(args[i]);(\"\" + channelOptions); } if (equals(args[i])) { println(\"Message:\" + (4) + \"\"); } if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); addShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(6); }"}
{"time": "2021-01-20 08:54:00.234124", "n_pass": [2910, 195, 194], "score": "0.5666", "loss": "0.9002", "code": "void main(String[]args)throws Exception{if(0){args=new String[]{\"\" };}for(i=0;;i++){if(\"\"){(args[i]);}if(\"\"){(args[i]);(\"\"+\"\");}if(\"\".equals()){pause=(args[i])*0;}if(\"\"){}if(\"\".equals(args[i])){shutdown=true;}if(\"\".equals(args[i])){(args[i]);(\"\"+\"\");}if(\"\".equals(args[i])){channelOptions= parseInt(args[i]);(\"\" + channelOptions); } if (equals(args[i])) { println(\"Message:\" + (4) + \"\"); } if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); addShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(6); }"}
{"time": "2021-01-20 08:54:01.686313", "n_pass": [2912, 196, 195], "score": "0.8442", "loss": "0.2903", "code": "void main(String[]args)throws Exception{if(0){args=new String[]{\"\" };}for(i=0;;i++){if(\"\"){(args[i]);}if(\"\"){(args[i]);(\"\"+\"\");}if(\"\".equals()){pause=(args[i])*0;}if(\"\"){}if(\"\".equals(args[i])){shutdown=true;}if(\"\".equals(args[i])){(args[i]);(\"\"+\"\");}if(\"\".equals(args[i])){channelOptions=parseInt(args[i]);(\"\" + channelOptions); } if (equals(args[i])) { println(\"Message:\" + (4) + \"\"); } if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); addShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(6); }"}
{"time": "2021-01-20 08:54:03.118387", "n_pass": [2913, 197, 196], "score": "0.7642", "loss": "0.415", "code": "void main(String[]args)throws Exception{if(0){args=new String[]{\"\" };}for(i=0;;i++){if(\"\"){(args[i]);}if(\"\"){(args[i]);(\"\"+\"\");}if(\"\".equals()){pause=(args[i])*0;}if(\"\"){}if(\"\".equals(args[i])){shutdown=true;}if(\"\".equals(args[i])){(args[i]);(\"\"+\"\");}if(\"\".equals(args[i])){channelOptions=(args[i]);(\"\" + channelOptions); } if (equals(args[i])) { println(\"Message:\" + (4) + \"\"); } if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); addShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(6); }"}
{"time": "2021-01-20 08:54:04.582846", "n_pass": [2924, 198, 197], "score": "0.3371", "loss": "1.531", "code": "void main(String[]args)throws Exception{if(0){args=new String[]{\"\" };}for(i=0;;i++){if(\"\"){(args[i]);}if(\"\"){(args[i]);(\"\"+\"\");}if(\"\".equals()){pause=(args[i])*0;}if(\"\"){}if(\"\".equals(args[i])){shutdown=true;}if(\"\".equals(args[i])){(args[i]);(\"\"+\"\");}if(\"\".equals(args[i])){channelOptions=(args[i]);(\"\"+ channelOptions); } if (equals(args[i])) { println(\"Message:\" + (4) + \"\"); } if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); addShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(6); }"}
{"time": "2021-01-20 08:54:06.063972", "n_pass": [2926, 199, 198], "score": "0.693", "loss": "0.5636", "code": "void main(String[]args)throws Exception{if(0){args=new String[]{\"\" };}for(i=0;;i++){if(\"\"){(args[i]);}if(\"\"){(args[i]);(\"\"+\"\");}if(\"\".equals()){pause=(args[i])*0;}if(\"\"){}if(\"\".equals(args[i])){shutdown=true;}if(\"\".equals(args[i])){(args[i]);(\"\"+\"\");}if(\"\".equals(args[i])){channelOptions=(args[i]);(\"\"+channelOptions); } if (equals(args[i])) { println(\"Message:\" + (4) + \"\"); } if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); addShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(6); }"}
{"time": "2021-01-20 08:54:07.517167", "n_pass": [2930, 200, 199], "score": "0.7489", "loss": "0.447", "code": "void main(String[]args)throws Exception{if(0){args=new String[]{\"\" };}for(i=0;;i++){if(\"\"){(args[i]);}if(\"\"){(args[i]);(\"\"+\"\");}if(\"\".equals()){pause=(args[i])*0;}if(\"\"){}if(\"\".equals(args[i])){shutdown=true;}if(\"\".equals(args[i])){(args[i]);(\"\"+\"\");}if(\"\".equals(args[i])){channelOptions=(args[i]);(\"\"+channelOptions);} if (equals(args[i])) { println(\"Message:\" + (4) + \"\"); } if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); addShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(6); }"}
{"time": "2021-01-20 08:54:08.965991", "n_pass": [2932, 201, 200], "score": "0.9159", "loss": "0.1467", "code": "void main(String[]args)throws Exception{if(0){args=new String[]{\"\" };}for(i=0;;i++){if(\"\"){(args[i]);}if(\"\"){(args[i]);(\"\"+\"\");}if(\"\".equals()){pause=(args[i])*0;}if(\"\"){}if(\"\".equals(args[i])){shutdown=true;}if(\"\".equals(args[i])){(args[i]);(\"\"+\"\");}if(\"\".equals(args[i])){channelOptions=(args[i]);(\"\"+channelOptions);}if (equals(args[i])) { println(\"Message:\" + (4) + \"\"); } if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); addShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(6); }"}
{"time": "2021-01-20 08:54:10.438309", "n_pass": [2934, 202, 201], "score": "0.3855", "loss": "1.3696", "code": "void main(String[]args)throws Exception{if(0){args=new String[]{\"\" };}for(i=0;;i++){if(\"\"){(args[i]);}if(\"\"){(args[i]);(\"\"+\"\");}if(\"\".equals()){pause=(args[i])*0;}if(\"\"){}if(\"\".equals(args[i])){shutdown=true;}if(\"\".equals(args[i])){(args[i]);(\"\"+\"\");}if(\"\".equals(args[i])){channelOptions=(args[i]);(\"\"+channelOptions);}if(equals(args[i])) { println(\"Message:\" + (4) + \"\"); } if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); addShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(6); }"}
{"time": "2021-01-20 08:54:11.872373", "n_pass": [2936, 203, 202], "score": "0.6723", "loss": "0.6291", "code": "void main(String[]args)throws Exception{if(0){args=new String[]{\"\" };}for(i=0;;i++){if(\"\"){(args[i]);}if(\"\"){(args[i]);(\"\"+\"\");}if(\"\".equals()){pause=(args[i])*0;}if(\"\"){}if(\"\".equals(args[i])){shutdown=true;}if(\"\".equals(args[i])){(args[i]);(\"\"+\"\");}if(\"\".equals(args[i])){channelOptions=(args[i]);(\"\"+channelOptions);}if((args[i])) { println(\"Message:\" + (4) + \"\"); } if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); addShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(6); }"}
{"time": "2021-01-20 08:54:13.345030", "n_pass": [2944, 204, 203], "score": "0.6958", "loss": "0.5332", "code": "void main(String[]args)throws Exception{if(0){args=new String[]{\"\" };}for(i=0;;i++){if(\"\"){(args[i]);}if(\"\"){(args[i]);(\"\"+\"\");}if(\"\".equals()){pause=(args[i])*0;}if(\"\"){}if(\"\".equals(args[i])){shutdown=true;}if(\"\".equals(args[i])){(args[i]);(\"\"+\"\");}if(\"\".equals(args[i])){channelOptions=(args[i]);(\"\"+channelOptions);}if((args[i])){ println(\"Message:\" + (4) + \"\"); } if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); addShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(6); }"}
{"time": "2021-01-20 08:54:14.796728", "n_pass": [2946, 205, 204], "score": "0.9476", "loss": "0.0879", "code": "void main(String[]args)throws Exception{if(0){args=new String[]{\"\" };}for(i=0;;i++){if(\"\"){(args[i]);}if(\"\"){(args[i]);(\"\"+\"\");}if(\"\".equals()){pause=(args[i])*0;}if(\"\"){}if(\"\".equals(args[i])){shutdown=true;}if(\"\".equals(args[i])){(args[i]);(\"\"+\"\");}if(\"\".equals(args[i])){channelOptions=(args[i]);(\"\"+channelOptions);}if((args[i])){println(\"Message:\" + (4) + \"\"); } if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); addShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(6); }"}
{"time": "2021-01-20 08:54:16.236251", "n_pass": [2947, 206, 205], "score": "0.5903", "loss": "0.7887", "code": "void main(String[]args)throws Exception{if(0){args=new String[]{\"\" };}for(i=0;;i++){if(\"\"){(args[i]);}if(\"\"){(args[i]);(\"\"+\"\");}if(\"\".equals()){pause=(args[i])*0;}if(\"\"){}if(\"\".equals(args[i])){shutdown=true;}if(\"\".equals(args[i])){(args[i]);(\"\"+\"\");}if(\"\".equals(args[i])){channelOptions=(args[i]);(\"\"+channelOptions);}if((args[i])){(\"Message:\" + (4) + \"\"); } if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); addShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(6); }"}
{"time": "2021-01-20 08:54:17.683302", "n_pass": [2950, 207, 206], "score": "0.9012", "loss": "0.1666", "code": "void main(String[]args)throws Exception{if(0){args=new String[]{\"\" };}for(i=0;;i++){if(\"\"){(args[i]);}if(\"\"){(args[i]);(\"\"+\"\");}if(\"\".equals()){pause=(args[i])*0;}if(\"\"){}if(\"\".equals(args[i])){shutdown=true;}if(\"\".equals(args[i])){(args[i]);(\"\"+\"\");}if(\"\".equals(args[i])){channelOptions=(args[i]);(\"\"+channelOptions);}if((args[i])){(\":\" + (4) + \"\"); } if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); addShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(6); }"}
{"time": "2021-01-20 08:54:19.129304", "n_pass": [2951, 208, 207], "score": "0.7748", "loss": "0.4223", "code": "void main(String[]args)throws Exception{if(0){args=new String[]{\"\" };}for(i=0;;i++){if(\"\"){(args[i]);}if(\"\"){(args[i]);(\"\"+\"\");}if(\"\".equals()){pause=(args[i])*0;}if(\"\"){}if(\"\".equals(args[i])){shutdown=true;}if(\"\".equals(args[i])){(args[i]);(\"\"+\"\");}if(\"\".equals(args[i])){channelOptions=(args[i]);(\"\"+channelOptions);}if((args[i])){(\"\" + (4) + \"\"); } if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); addShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(6); }"}
{"time": "2021-01-20 08:54:20.560681", "n_pass": [2953, 209, 208], "score": "0.3539", "loss": "1.5174", "code": "void main(String[]args)throws Exception{if(0){args=new String[]{\"\" };}for(i=0;;i++){if(\"\"){(args[i]);}if(\"\"){(args[i]);(\"\"+\"\");}if(\"\".equals()){pause=(args[i])*0;}if(\"\"){}if(\"\".equals(args[i])){shutdown=true;}if(\"\".equals(args[i])){(args[i]);(\"\"+\"\");}if(\"\".equals(args[i])){channelOptions=(args[i]);(\"\"+channelOptions);}if((args[i])){(\"\"+ (4) + \"\"); } if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); addShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(6); }"}
{"time": "2021-01-20 08:54:21.996819", "n_pass": [2955, 210, 209], "score": "0.6286", "loss": "0.7027", "code": "void main(String[]args)throws Exception{if(0){args=new String[]{\"\" };}for(i=0;;i++){if(\"\"){(args[i]);}if(\"\"){(args[i]);(\"\"+\"\");}if(\"\".equals()){pause=(args[i])*0;}if(\"\"){}if(\"\".equals(args[i])){shutdown=true;}if(\"\".equals(args[i])){(args[i]);(\"\"+\"\");}if(\"\".equals(args[i])){channelOptions=(args[i]);(\"\"+channelOptions);}if((args[i])){(\"\"+(4) + \"\"); } if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); addShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(6); }"}
{"time": "2021-01-20 08:54:23.437557", "n_pass": [2959, 211, 210], "score": "0.9159", "loss": "0.1202", "code": "void main(String[]args)throws Exception{if(0){args=new String[]{\"\" };}for(i=0;;i++){if(\"\"){(args[i]);}if(\"\"){(args[i]);(\"\"+\"\");}if(\"\".equals()){pause=(args[i])*0;}if(\"\"){}if(\"\".equals(args[i])){shutdown=true;}if(\"\".equals(args[i])){(args[i]);(\"\"+\"\");}if(\"\".equals(args[i])){channelOptions=(args[i]);(\"\"+channelOptions);}if((args[i])){(\"\"+(4)+ \"\"); } if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); addShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(6); }"}
{"time": "2021-01-20 08:54:24.873471", "n_pass": [2961, 212, 211], "score": "0.7118", "loss": "0.5179", "code": "void main(String[]args)throws Exception{if(0){args=new String[]{\"\" };}for(i=0;;i++){if(\"\"){(args[i]);}if(\"\"){(args[i]);(\"\"+\"\");}if(\"\".equals()){pause=(args[i])*0;}if(\"\"){}if(\"\".equals(args[i])){shutdown=true;}if(\"\".equals(args[i])){(args[i]);(\"\"+\"\");}if(\"\".equals(args[i])){channelOptions=(args[i]);(\"\"+channelOptions);}if((args[i])){(\"\"+(4)+\"\"); } if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); addShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(6); }"}
{"time": "2021-01-20 08:54:26.324543", "n_pass": [2966, 213, 212], "score": "0.7406", "loss": "0.4805", "code": "void main(String[]args)throws Exception{if(0){args=new String[]{\"\" };}for(i=0;;i++){if(\"\"){(args[i]);}if(\"\"){(args[i]);(\"\"+\"\");}if(\"\".equals()){pause=(args[i])*0;}if(\"\"){}if(\"\".equals(args[i])){shutdown=true;}if(\"\".equals(args[i])){(args[i]);(\"\"+\"\");}if(\"\".equals(args[i])){channelOptions=(args[i]);(\"\"+channelOptions);}if((args[i])){(\"\"+(4)+\"\");} if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); addShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(6); }"}
{"time": "2021-01-20 08:54:27.762380", "n_pass": [2968, 214, 213], "score": "0.8878", "loss": "0.1817", "code": "void main(String[]args)throws Exception{if(0){args=new String[]{\"\" };}for(i=0;;i++){if(\"\"){(args[i]);}if(\"\"){(args[i]);(\"\"+\"\");}if(\"\".equals()){pause=(args[i])*0;}if(\"\"){}if(\"\".equals(args[i])){shutdown=true;}if(\"\".equals(args[i])){(args[i]);(\"\"+\"\");}if(\"\".equals(args[i])){channelOptions=(args[i]);(\"\"+channelOptions);}if((args[i])){(\"\"+(4)+\"\");}if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); addShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(6); }"}
{"time": "2021-01-20 08:54:29.207208", "n_pass": [2970, 215, 214], "score": "0.9081", "loss": "0.1549", "code": "void main(String[]args)throws Exception{if(0){args=new String[]{\"\" };}for(i=0;;i++){if(\"\"){(args[i]);}if(\"\"){(args[i]);(\"\"+\"\");}if(\"\".equals()){pause=(args[i])*0;}if(\"\"){}if(\"\".equals(args[i])){shutdown=true;}if(\"\".equals(args[i])){(args[i]);(\"\"+\"\");}if(\"\".equals(args[i])){channelOptions=(args[i]);(\"\"+channelOptions);}if((args[i])){(\"\"+(4)+\"\");}if(\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); addShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(6); }"}
{"time": "2021-01-20 08:54:30.713697", "n_pass": [2983, 216, 215], "score": "0.7696", "loss": "0.4486", "code": "void main(String[]args)throws Exception{if(0){args=new String[]{\"\" };}for(i=0;;i++){if(\"\"){(args[i]);}if(\"\"){(args[i]);(\"\"+\"\");}if(\"\".equals()){pause=(args[i])*0;}if(\"\"){}if(\"\".equals(args[i])){shutdown=true;}if(\"\".equals(args[i])){(args[i]);(\"\"+\"\");}if(\"\".equals(args[i])){channelOptions=(args[i]);(\"\"+channelOptions);}if((args[i])){(\"\"+(4)+\"\");}if(\"\".equals(args[i])){ (\"receive\".equals(args[i])) ; } if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); addShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(6); }"}
{"time": "2021-01-20 08:54:32.162366", "n_pass": [2985, 217, 216], "score": "0.9532", "loss": "0.0684", "code": "void main(String[]args)throws Exception{if(0){args=new String[]{\"\" };}for(i=0;;i++){if(\"\"){(args[i]);}if(\"\"){(args[i]);(\"\"+\"\");}if(\"\".equals()){pause=(args[i])*0;}if(\"\"){}if(\"\".equals(args[i])){shutdown=true;}if(\"\".equals(args[i])){(args[i]);(\"\"+\"\");}if(\"\".equals(args[i])){channelOptions=(args[i]);(\"\"+channelOptions);}if((args[i])){(\"\"+(4)+\"\");}if(\"\".equals(args[i])){(\"receive\".equals(args[i])) ; } if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); addShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(6); }"}
{"time": "2021-01-20 08:54:33.626708", "n_pass": [2988, 218, 217], "score": "0.9329", "loss": "0.1138", "code": "void main(String[]args)throws Exception{if(0){args=new String[]{\"\" };}for(i=0;;i++){if(\"\"){(args[i]);}if(\"\"){(args[i]);(\"\"+\"\");}if(\"\".equals()){pause=(args[i])*0;}if(\"\"){}if(\"\".equals(args[i])){shutdown=true;}if(\"\".equals(args[i])){(args[i]);(\"\"+\"\");}if(\"\".equals(args[i])){channelOptions=(args[i]);(\"\"+channelOptions);}if((args[i])){(\"\"+(4)+\"\");}if(\"\".equals(args[i])){(\"\".equals(args[i])) ; } if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); addShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(6); }"}
{"time": "2021-01-20 08:54:35.121949", "n_pass": [2999, 219, 218], "score": "0.7488", "loss": "0.3788", "code": "void main(String[]args)throws Exception{if(0){args=new String[]{\"\" };}for(i=0;;i++){if(\"\"){(args[i]);}if(\"\"){(args[i]);(\"\"+\"\");}if(\"\".equals()){pause=(args[i])*0;}if(\"\"){}if(\"\".equals(args[i])){shutdown=true;}if(\"\".equals(args[i])){(args[i]);(\"\"+\"\");}if(\"\".equals(args[i])){channelOptions=(args[i]);(\"\"+channelOptions);}if((args[i])){(\"\"+(4)+\"\");}if(\"\".equals(args[i])){(\"\".equals(args[i])); } if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); addShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(6); }"}
{"time": "2021-01-20 08:54:36.564276", "n_pass": [3001, 220, 219], "score": "0.682", "loss": "0.6063", "code": "void main(String[]args)throws Exception{if(0){args=new String[]{\"\" };}for(i=0;;i++){if(\"\"){(args[i]);}if(\"\"){(args[i]);(\"\"+\"\");}if(\"\".equals()){pause=(args[i])*0;}if(\"\"){}if(\"\".equals(args[i])){shutdown=true;}if(\"\".equals(args[i])){(args[i]);(\"\"+\"\");}if(\"\".equals(args[i])){channelOptions=(args[i]);(\"\"+channelOptions);}if((args[i])){(\"\"+(4)+\"\");}if(\"\".equals(args[i])){(\"\".equals(args[i]));} if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); addShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(6); }"}
{"time": "2021-01-20 08:54:38.009796", "n_pass": [3003, 221, 220], "score": "0.9495", "loss": "0.0734", "code": "void main(String[]args)throws Exception{if(0){args=new String[]{\"\" };}for(i=0;;i++){if(\"\"){(args[i]);}if(\"\"){(args[i]);(\"\"+\"\");}if(\"\".equals()){pause=(args[i])*0;}if(\"\"){}if(\"\".equals(args[i])){shutdown=true;}if(\"\".equals(args[i])){(args[i]);(\"\"+\"\");}if(\"\".equals(args[i])){channelOptions=(args[i]);(\"\"+channelOptions);}if((args[i])){(\"\"+(4)+\"\");}if(\"\".equals(args[i])){(\"\".equals(args[i]));}if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); addShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(6); }"}
{"time": "2021-01-20 08:54:39.445589", "n_pass": [3005, 222, 221], "score": "0.6691", "loss": "0.6661", "code": "void main(String[]args)throws Exception{if(0){args=new String[]{\"\" };}for(i=0;;i++){if(\"\"){(args[i]);}if(\"\"){(args[i]);(\"\"+\"\");}if(\"\".equals()){pause=(args[i])*0;}if(\"\"){}if(\"\".equals(args[i])){shutdown=true;}if(\"\".equals(args[i])){(args[i]);(\"\"+\"\");}if(\"\".equals(args[i])){channelOptions=(args[i]);(\"\"+channelOptions);}if((args[i])){(\"\"+(4)+\"\");}if(\"\".equals(args[i])){(\"\".equals(args[i]));}if(\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); addShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(6); }"}
{"time": "2021-01-20 08:54:40.891464", "n_pass": [3008, 223, 222], "score": "0.675", "loss": "0.6205", "code": "void main(String[]args)throws Exception{if(0){args=new String[]{\"\" };}for(i=0;;i++){if(\"\"){(args[i]);}if(\"\"){(args[i]);(\"\"+\"\");}if(\"\".equals()){pause=(args[i])*0;}if(\"\"){}if(\"\".equals(args[i])){shutdown=true;}if(\"\".equals(args[i])){(args[i]);(\"\"+\"\");}if(\"\".equals(args[i])){channelOptions=(args[i]);(\"\"+channelOptions);}if((args[i])){(\"\"+(4)+\"\");}if(\"\".equals(args[i])){(\"\".equals(args[i]));}if(\"debug\".equals(args[i])) { } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); addShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(6); }"}
{"time": "2021-01-20 08:54:42.340859", "n_pass": [3009, 224, 223], "score": "0.652", "loss": "0.6971", "code": "void main(String[]args)throws Exception{if(0){args=new String[]{\"\" };}for(i=0;;i++){if(\"\"){(args[i]);}if(\"\"){(args[i]);(\"\"+\"\");}if(\"\".equals()){pause=(args[i])*0;}if(\"\"){}if(\"\".equals(args[i])){shutdown=true;}if(\"\".equals(args[i])){(args[i]);(\"\"+\"\");}if(\"\".equals(args[i])){channelOptions=(args[i]);(\"\"+channelOptions);}if((args[i])){(\"\"+(4)+\"\");}if(\"\".equals(args[i])){(\"\".equals(args[i]));}if(\"\".equals(args[i])) { } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); addShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(6); }"}
{"time": "2021-01-20 08:54:43.832467", "n_pass": [3020, 225, 224], "score": "0.7417", "loss": "0.5106", "code": "void main(String[]args)throws Exception{if(0){args=new String[]{\"\" };}for(i=0;;i++){if(\"\"){(args[i]);}if(\"\"){(args[i]);(\"\"+\"\");}if(\"\".equals()){pause=(args[i])*0;}if(\"\"){}if(\"\".equals(args[i])){shutdown=true;}if(\"\".equals(args[i])){(args[i]);(\"\"+\"\");}if(\"\".equals(args[i])){channelOptions=(args[i]);(\"\"+channelOptions);}if((args[i])){(\"\"+(4)+\"\");}if(\"\".equals(args[i])){(\"\".equals(args[i]));}if(\"\".equals(args[i])){ } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); addShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(6); }"}
{"time": "2021-01-20 08:54:45.266152", "n_pass": [3022, 226, 225], "score": "0.7595", "loss": "0.4722", "code": "void main(String[]args)throws Exception{if(0){args=new String[]{\"\" };}for(i=0;;i++){if(\"\"){(args[i]);}if(\"\"){(args[i]);(\"\"+\"\");}if(\"\".equals()){pause=(args[i])*0;}if(\"\"){}if(\"\".equals(args[i])){shutdown=true;}if(\"\".equals(args[i])){(args[i]);(\"\"+\"\");}if(\"\".equals(args[i])){channelOptions=(args[i]);(\"\"+channelOptions);}if((args[i])){(\"\"+(4)+\"\");}if(\"\".equals(args[i])){(\"\".equals(args[i]));}if(\"\".equals(args[i])){} if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); addShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(6); }"}
{"time": "2021-01-20 08:54:46.713473", "n_pass": [3024, 227, 226], "score": "0.8331", "loss": "0.3004", "code": "void main(String[]args)throws Exception{if(0){args=new String[]{\"\" };}for(i=0;;i++){if(\"\"){(args[i]);}if(\"\"){(args[i]);(\"\"+\"\");}if(\"\".equals()){pause=(args[i])*0;}if(\"\"){}if(\"\".equals(args[i])){shutdown=true;}if(\"\".equals(args[i])){(args[i]);(\"\"+\"\");}if(\"\".equals(args[i])){channelOptions=(args[i]);(\"\"+channelOptions);}if((args[i])){(\"\"+(4)+\"\");}if(\"\".equals(args[i])){(\"\".equals(args[i]));}if(\"\".equals(args[i])){}if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); addShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(6); }"}
{"time": "2021-01-20 08:54:48.183992", "n_pass": [3026, 228, 227], "score": "0.6119", "loss": "0.7861", "code": "void main(String[]args)throws Exception{if(0){args=new String[]{\"\" };}for(i=0;;i++){if(\"\"){(args[i]);}if(\"\"){(args[i]);(\"\"+\"\");}if(\"\".equals()){pause=(args[i])*0;}if(\"\"){}if(\"\".equals(args[i])){shutdown=true;}if(\"\".equals(args[i])){(args[i]);(\"\"+\"\");}if(\"\".equals(args[i])){channelOptions=(args[i]);(\"\"+channelOptions);}if((args[i])){(\"\"+(4)+\"\");}if(\"\".equals(args[i])){(\"\".equals(args[i]));}if(\"\".equals(args[i])){}if(\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); addShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(6); }"}
{"time": "2021-01-20 08:54:49.670706", "n_pass": [3039, 229, 228], "score": "0.3532", "loss": "1.5114", "code": "void main(String[]args)throws Exception{if(0){args=new String[]{\"\" };}for(i=0;;i++){if(\"\"){(args[i]);}if(\"\"){(args[i]);(\"\"+\"\");}if(\"\".equals()){pause=(args[i])*0;}if(\"\"){}if(\"\".equals(args[i])){shutdown=true;}if(\"\".equals(args[i])){(args[i]);(\"\"+\"\");}if(\"\".equals(args[i])){channelOptions=(args[i]);(\"\"+channelOptions);}if((args[i])){(\"\"+(4)+\"\");}if(\"\".equals(args[i])){(\"\".equals(args[i]));}if(\"\".equals(args[i])){}if(\"\".equals(args[i])){(1); } } ManagedChannel(startoptions); addShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(6); }"}
{"time": "2021-01-20 08:54:51.120817", "n_pass": [3045, 230, 229], "score": "0.887", "loss": "0.2077", "code": "void main(String[]args)throws Exception{if(0){args=new String[]{\"\" };}for(i=0;;i++){if(\"\"){(args[i]);}if(\"\"){(args[i]);(\"\"+\"\");}if(\"\".equals()){pause=(args[i])*0;}if(\"\"){}if(\"\".equals(args[i])){shutdown=true;}if(\"\".equals(args[i])){(args[i]);(\"\"+\"\");}if(\"\".equals(args[i])){channelOptions=(args[i]);(\"\"+channelOptions);}if((args[i])){(\"\"+(4)+\"\");}if(\"\".equals(args[i])){(\"\".equals(args[i]));}if(\"\".equals(args[i])){}if(\"\".equals(args[i])){(1);} } ManagedChannel(startoptions); addShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(6); }"}
{"time": "2021-01-20 08:54:52.587171", "n_pass": [3047, 231, 230], "score": "0.5529", "loss": "0.8588", "code": "void main(String[]args)throws Exception{if(0){args=new String[]{\"\" };}for(i=0;;i++){if(\"\"){(args[i]);}if(\"\"){(args[i]);(\"\"+\"\");}if(\"\".equals()){pause=(args[i])*0;}if(\"\"){}if(\"\".equals(args[i])){shutdown=true;}if(\"\".equals(args[i])){(args[i]);(\"\"+\"\");}if(\"\".equals(args[i])){channelOptions=(args[i]);(\"\"+channelOptions);}if((args[i])){(\"\"+(4)+\"\");}if(\"\".equals(args[i])){(\"\".equals(args[i]));}if(\"\".equals(args[i])){}if(\"\".equals(args[i])){(1);}} ManagedChannel(startoptions); addShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(6); }"}
{"time": "2021-01-20 08:54:54.022804", "n_pass": [3049, 232, 231], "score": "0.5531", "loss": "0.854", "code": "void main(String[]args)throws Exception{if(0){args=new String[]{\"\" };}for(i=0;;i++){if(\"\"){(args[i]);}if(\"\"){(args[i]);(\"\"+\"\");}if(\"\".equals()){pause=(args[i])*0;}if(\"\"){}if(\"\".equals(args[i])){shutdown=true;}if(\"\".equals(args[i])){(args[i]);(\"\"+\"\");}if(\"\".equals(args[i])){channelOptions=(args[i]);(\"\"+channelOptions);}if((args[i])){(\"\"+(4)+\"\");}if(\"\".equals(args[i])){(\"\".equals(args[i]));}if(\"\".equals(args[i])){}if(\"\".equals(args[i])){(1);}}ManagedChannel(startoptions); addShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(6); }"}
{"time": "2021-01-20 08:54:55.454191", "n_pass": [3050, 233, 232], "score": "0.3584", "loss": "1.4029", "code": "void main(String[]args)throws Exception{if(0){args=new String[]{\"\" };}for(i=0;;i++){if(\"\"){(args[i]);}if(\"\"){(args[i]);(\"\"+\"\");}if(\"\".equals()){pause=(args[i])*0;}if(\"\"){}if(\"\".equals(args[i])){shutdown=true;}if(\"\".equals(args[i])){(args[i]);(\"\"+\"\");}if(\"\".equals(args[i])){channelOptions=(args[i]);(\"\"+channelOptions);}if((args[i])){(\"\"+(4)+\"\");}if(\"\".equals(args[i])){(\"\".equals(args[i]));}if(\"\".equals(args[i])){}if(\"\".equals(args[i])){(1);}}(startoptions); addShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(6); }"}
{"time": "2021-01-20 08:54:57.293266", "n_pass": [3055, 234, 233], "score": "0.2337", "loss": "1.9621", "code": "void main(String[]args)throws Exception{if(0){args=new String[]{\"\" };}for(i=0;;i++){if(\"\"){(args[i]);}if(\"\"){(args[i]);(\"\"+\"\");}if(\"\".equals()){pause=(args[i])*0;}if(\"\"){}if(\"\".equals(args[i])){shutdown=true;}if(\"\".equals(args[i])){(args[i]);(\"\"+\"\");}if(\"\".equals(args[i])){channelOptions=(args[i]);(\"\"+channelOptions);}if((args[i])){(\"\"+(4)+\"\");}if(\"\".equals(args[i])){(\"\".equals(args[i]));}if(\"\".equals(args[i])){}if(\"\".equals(args[i])){(1);}}(startoptions);addShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(6); }"}
{"time": "2021-01-20 08:54:58.726399", "n_pass": [3056, 235, 234], "score": "0.4244", "loss": "1.2098", "code": "void main(String[]args)throws Exception{if(0){args=new String[]{\"\" };}for(i=0;;i++){if(\"\"){(args[i]);}if(\"\"){(args[i]);(\"\"+\"\");}if(\"\".equals()){pause=(args[i])*0;}if(\"\"){}if(\"\".equals(args[i])){shutdown=true;}if(\"\".equals(args[i])){(args[i]);(\"\"+\"\");}if(\"\".equals(args[i])){channelOptions=(args[i]);(\"\"+channelOptions);}if((args[i])){(\"\"+(4)+\"\");}if(\"\".equals(args[i])){(\"\".equals(args[i]));}if(\"\".equals(args[i])){}if(\"\".equals(args[i])){(1);}}(startoptions);(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(6); }"}
{"time": "2021-01-20 08:55:01.602963", "n_pass": [3059, 237, 235], "score": "0.5474", "loss": "0.8563", "code": "void main(String[]args)throws Exception{if(0){args=new String[]{\"\" };}for(i=0;;i++){if(\"\"){(args[i]);}if(\"\"){(args[i]);(\"\"+\"\");}if(\"\".equals()){pause=(args[i])*0;}if(\"\"){}if(\"\".equals(args[i])){shutdown=true;}if(\"\".equals(args[i])){(args[i]);(\"\"+\"\");}if(\"\".equals(args[i])){channelOptions=(args[i]);(\"\"+channelOptions);}if((args[i])){(\"\"+(4)+\"\");}if(\"\".equals(args[i])){(\"\".equals(args[i]));}if(\"\".equals(args[i])){}if(\"\".equals(args[i])){(1);}}(startoptions);(newShutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(6); }"}
{"time": "2021-01-20 08:55:03.050245", "n_pass": [3062, 238, 236], "score": "0.3875", "loss": "1.3532", "code": "void main(String[]args)throws Exception{if(0){args=new String[]{\"\" };}for(i=0;;i++){if(\"\"){(args[i]);}if(\"\"){(args[i]);(\"\"+\"\");}if(\"\".equals()){pause=(args[i])*0;}if(\"\"){}if(\"\".equals(args[i])){shutdown=true;}if(\"\".equals(args[i])){(args[i]);(\"\"+\"\");}if(\"\".equals(args[i])){channelOptions=(args[i]);(\"\"+channelOptions);}if((args[i])){(\"\"+(4)+\"\");}if(\"\".equals(args[i])){(\"\".equals(args[i]));}if(\"\".equals(args[i])){}if(\"\".equals(args[i])){(1);}}(startoptions);(newShutdown()); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(6); }"}
{"time": "2021-01-20 08:55:04.491137", "n_pass": [3066, 239, 237], "score": "0.5588", "loss": "0.9085", "code": "void main(String[]args)throws Exception{if(0){args=new String[]{\"\" };}for(i=0;;i++){if(\"\"){(args[i]);}if(\"\"){(args[i]);(\"\"+\"\");}if(\"\".equals()){pause=(args[i])*0;}if(\"\"){}if(\"\".equals(args[i])){shutdown=true;}if(\"\".equals(args[i])){(args[i]);(\"\"+\"\");}if(\"\".equals(args[i])){channelOptions=(args[i]);(\"\"+channelOptions);}if((args[i])){(\"\"+(4)+\"\");}if(\"\".equals(args[i])){(\"\".equals(args[i]));}if(\"\".equals(args[i])){}if(\"\".equals(args[i])){(1);}}(startoptions);(newShutdown());while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(6); }"}
{"time": "2021-01-20 08:55:05.924446", "n_pass": [3068, 240, 238], "score": "0.5304", "loss": "0.8431", "code": "void main(String[]args)throws Exception{if(0){args=new String[]{\"\" };}for(i=0;;i++){if(\"\"){(args[i]);}if(\"\"){(args[i]);(\"\"+\"\");}if(\"\".equals()){pause=(args[i])*0;}if(\"\"){}if(\"\".equals(args[i])){shutdown=true;}if(\"\".equals(args[i])){(args[i]);(\"\"+\"\");}if(\"\".equals(args[i])){channelOptions=(args[i]);(\"\"+channelOptions);}if((args[i])){(\"\"+(4)+\"\");}if(\"\".equals(args[i])){(\"\".equals(args[i]));}if(\"\".equals(args[i])){}if(\"\".equals(args[i])){(1);}}(startoptions);(newShutdown());while(threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(6); }"}
{"time": "2021-01-20 08:55:10.251580", "n_pass": [3083, 243, 239], "score": "0.5997", "loss": "0.7589", "code": "void main(String[]args)throws Exception{if(0){args=new String[]{\"\" };}for(i=0;;i++){if(\"\"){(args[i]);}if(\"\"){(args[i]);(\"\"+\"\");}if(\"\".equals()){pause=(args[i])*0;}if(\"\"){}if(\"\".equals(args[i])){shutdown=true;}if(\"\".equals(args[i])){(args[i]);(\"\"+\"\");}if(\"\".equals(args[i])){channelOptions=(args[i]);(\"\"+channelOptions);}if((args[i])){(\"\"+(4)+\"\");}if(\"\".equals(args[i])){(\"\".equals(args[i]));}if(\"\".equals(args[i])){}if(\"\".equals(args[i])){(1);}}(startoptions);(newShutdown());while(threads1) { test = new LoadTest(); }  (DEFAULT); System.println(\"System \");sleep(6); }"}
{"time": "2021-01-20 08:55:11.684629", "n_pass": [3084, 244, 240], "score": "0.739", "loss": "0.4348", "code": "void main(String[]args)throws Exception{if(0){args=new String[]{\"\" };}for(i=0;;i++){if(\"\"){(args[i]);}if(\"\"){(args[i]);(\"\"+\"\");}if(\"\".equals()){pause=(args[i])*0;}if(\"\"){}if(\"\".equals(args[i])){shutdown=true;}if(\"\".equals(args[i])){(args[i]);(\"\"+\"\");}if(\"\".equals(args[i])){channelOptions=(args[i]);(\"\"+channelOptions);}if((args[i])){(\"\"+(4)+\"\");}if(\"\".equals(args[i])){(\"\".equals(args[i]));}if(\"\".equals(args[i])){}if(\"\".equals(args[i])){(1);}}(startoptions);(newShutdown());while(threads1) { test = new LoadTest(); }  (DEFAULT); System(\"System \");sleep(6); }"}
{"time": "2021-01-20 08:55:16.841997", "n_pass": [3127, 247, 241], "score": "0.4458", "loss": "1.2585", "code": "void main(String[]args)throws Exception{if(0){args=new String[]{\"\" };}for(i0;;i++){if(\"\"){(args[i]);}if(\"\"){(args[i]);(\"\"+\"\");}if(\"\".equals()){pause=(args[i])*0;}if(\"\"){}if(\"\".equals(args[i])){shutdown=true;}if(\"\".equals(args[i])){(args[i]);(\"\"+\"\");}if(\"\".equals(args[i])){channelOptions=(args[i]);(\"\"+channelOptions);}if((args[i])){(\"\"+(4)+\"\");}if(\"\".equals(args[i])){(\"\".equals(args[i]));}if(\"\".equals(args[i])){}if(\"\".equals(args[i])){(1);}}(startoptions);(newShutdown());while(threads1) { test = new LoadTest(); }  (DEFAULT); System(\"System \");sleep(6); }"}
{"time": "2021-01-20 08:55:20.296487", "n_pass": [3216, 249, 242], "score": "0.2704", "loss": "1.7358", "code": "void main(String[]args)throws Exception{if(0){args=new String[]{\"\" };}for(i0;;i++){if(\"\"){(args[i]);}if(\"\"){(args[i]);(\"\"+\"\");}if(\"\".equals()){pause=(args[i])*0;}if(\"\"){}if(\"\".equals(args[i])){shutdowntrue;}if(\"\".equals(args[i])){(args[i]);(\"\"+\"\");}if(\"\".equals(args[i])){channelOptions=(args[i]);(\"\"+channelOptions);}if((args[i])){(\"\"+(4)+\"\");}if(\"\".equals(args[i])){(\"\".equals(args[i]));}if(\"\".equals(args[i])){}if(\"\".equals(args[i])){(1);}}(startoptions);(newShutdown());while(threads1) { test = new LoadTest(); }  (DEFAULT); System(\"System \");sleep(6); }"}
{"time": "2021-01-20 08:55:25.493361", "n_pass": [3372, 252, 243], "score": "0.6554", "loss": "0.5989", "code": "void main(String[]args)throws Exception{if(0){args=new String[]{\"\" };}for(i0;;i++){if(\"\"){(args[i]);}if(\"\"){(args[i]);(\"\"+\"\");}if(\"\".equals()){pause=(args[i])*0;}if(\"\"){}if(\"\".equals(args[i])){shutdowntrue;}if(\"\".equals(args[i])){(args[i]);(\"\"+\"\");}if(\"\".equals(args[i])){channelOptions=(args[i]);(\"\"+channelOptions);}if((args[i])){(\"\"+(4)+\"\");}if(\"\".equals(args[i])){(\"\".equals(args[i]));}if(\"\".equals(args[i])){}if(\"\".equals(args[i])){(1);}}(startoptions);(Shutdown());while(threads1) { test = new LoadTest(); }  (DEFAULT); System(\"System \");sleep(6); }"}
{"time": "2021-01-20 08:55:31.318289", "n_pass": [3394, 256, 244], "score": "0.2543", "loss": "1.8238", "code": "void main(String[]args)throws Exception{if(0){args=new String[]{\"\" };}for(i0;;i++){if(\"\"){(args[i]);}if(\"\"){(args[i]);(\"\"+\"\");}if(\"\".equals()){pause=(args[i])*0;}if(\"\"){}if(\"\".equals(args[i])){shutdowntrue;}if(\"\".equals(args[i])){(args[i]);(\"\"+\"\");}if(\"\".equals(args[i])){channelOptions=(args[i]);(\"\"+channelOptions);}if((args[i])){(\"\"+(4)+\"\");}if(\"\".equals(args[i])){(\"\".equals(args[i]));}if(\"\".equals(args[i])){}if(\"\".equals(args[i])){(1);}}(startoptions);(Shutdown());while(threads1) { test = new LoadTest(); }  (DEFAULT); System(\"\");sleep(6); }"}
{"time": "2021-01-20 08:55:33.614846", "n_pass": [3428, 257, 245], "score": "0.2225", "loss": "1.9806", "code": "void main(String[]args)throws Exception{if(0){args=new String[]{\"\"};}for(i0;;i++){if(\"\"){(args[i]);}if(\"\"){(args[i]);(\"\"+\"\");}if(\"\".equals()){pause=(args[i])*0;}if(\"\"){}if(\"\".equals(args[i])){shutdowntrue;}if(\"\".equals(args[i])){(args[i]);(\"\"+\"\");}if(\"\".equals(args[i])){channelOptions=(args[i]);(\"\"+channelOptions);}if((args[i])){(\"\"+(4)+\"\");}if(\"\".equals(args[i])){(\"\".equals(args[i]));}if(\"\".equals(args[i])){}if(\"\".equals(args[i])){(1);}}(startoptions);(Shutdown());while(threads1) { test = new LoadTest(); }  (DEFAULT); System(\"\");sleep(6); }"}
{"time": "2021-01-20 08:55:35.058262", "n_pass": [3434, 258, 246], "score": "0.3706", "loss": "1.3038", "code": "void main(String[]args)throws Exception{if(0){args=new String[]{\"\"};}for(0;;i++){if(\"\"){(args[i]);}if(\"\"){(args[i]);(\"\"+\"\");}if(\"\".equals()){pause=(args[i])*0;}if(\"\"){}if(\"\".equals(args[i])){shutdowntrue;}if(\"\".equals(args[i])){(args[i]);(\"\"+\"\");}if(\"\".equals(args[i])){channelOptions=(args[i]);(\"\"+channelOptions);}if((args[i])){(\"\"+(4)+\"\");}if(\"\".equals(args[i])){(\"\".equals(args[i]));}if(\"\".equals(args[i])){}if(\"\".equals(args[i])){(1);}}(startoptions);(Shutdown());while(threads1) { test = new LoadTest(); }  (DEFAULT); System(\"\");sleep(6); }"}
{"time": "2021-01-20 08:55:38.816509", "n_pass": [3522, 260, 247], "score": "0.554", "loss": "0.7446", "code": "void main(String[]args)throws Exception{if(0){args=new String[]{\"\"};}for(0;;i++){if(\"\"){(args[i]);}if(\"\"){(args[i]);(\"\"+\"\");}if(\"\".equals()){pause=(args[i])*0;}if(\"\"){}if(\"\".equals(args[i])){true;}if(\"\".equals(args[i])){(args[i]);(\"\"+\"\");}if(\"\".equals(args[i])){channelOptions=(args[i]);(\"\"+channelOptions);}if((args[i])){(\"\"+(4)+\"\");}if(\"\".equals(args[i])){(\"\".equals(args[i]));}if(\"\".equals(args[i])){}if(\"\".equals(args[i])){(1);}}(startoptions);(Shutdown());while(threads1) { test = new LoadTest(); }  (DEFAULT); System(\"\");sleep(6); }"}
{"time": "2021-01-20 08:55:44.058157", "n_pass": [3690, 263, 248], "score": "0.287", "loss": "1.6584", "code": "void main(String[]args)throws Exception{if(0){args=new String[]{\"\"};}for(0;;i++){if(\"\"){(args[i]);}if(\"\"){(args[i]);(\"\"+\"\");}if(\"\".equals()){pause=(args[i])*0;}if(\"\"){}if(\"\".equals(args[i])){true;}if(\"\".equals(args[i])){(args[i]);(\"\"+\"\");}if(\"\".equals(args[i])){channelOptions=(args[i]);(\"\"+channelOptions);}if((args[i])){(\"\"+(4)+\"\");}if(\"\".equals(args[i])){(\"\".equals(args[i]));}if(\"\".equals(args[i])){}if(\"\".equals(args[i])){(1);}}(startoptions);(Shutdown());while(threads1) { test = LoadTest(); }  (DEFAULT); System(\"\");sleep(6); }"}
{"time": "2021-01-20 08:55:45.523621", "n_pass": [3694, 264, 249], "score": "0.3021", "loss": "1.5787", "code": "void main(String[]args)throws Exception{if(0){args=new String[]{\"\"};}for(0;;i++){if(\"\"){(args[i]);}if(\"\"){(args[i]);(\"\"+\"\");}if(\"\".equals()){pause=(args[i])*0;}if(\"\"){}if(\"\".equals(args[i])){true;}if(\"\".equals(args[i])){(args[i]);(\"\"+\"\");}if(\"\".equals(args[i])){channelOptions=(args[i]);(\"\"+channelOptions);}if((args[i])){(\"\"+(4)+\"\");}if(\"\".equals(args[i])){(\"\".equals(args[i]));}if(\"\".equals(args[i])){}if(\"\".equals(args[i])){(1);}}(startoptions);(Shutdown());while(threads1) { test = LoadTest(); }(DEFAULT); System(\"\");sleep(6); }"}
{"time": "2021-01-20 08:55:49.305502", "n_pass": [3737, 266, 250], "score": "0.7148", "loss": "0.4876", "code": "void main(String[]args)throws Exception{if(0){args=new String[]{\"\"};}for(;;i++){if(\"\"){(args[i]);}if(\"\"){(args[i]);(\"\"+\"\");}if(\"\".equals()){pause=(args[i])*0;}if(\"\"){}if(\"\".equals(args[i])){true;}if(\"\".equals(args[i])){(args[i]);(\"\"+\"\");}if(\"\".equals(args[i])){channelOptions=(args[i]);(\"\"+channelOptions);}if((args[i])){(\"\"+(4)+\"\");}if(\"\".equals(args[i])){(\"\".equals(args[i]));}if(\"\".equals(args[i])){}if(\"\".equals(args[i])){(1);}}(startoptions);(Shutdown());while(threads1) { test = LoadTest(); }(DEFAULT); System(\"\");sleep(6); }"}
{"time": "2021-01-20 08:55:51.331007", "n_pass": [3824, 267, 251], "score": "0.2204", "loss": "1.9553", "code": "void main(String[]args)throws Exception{if(0){args=new String[]{\"\"};}for(;;i++){if(\"\"){(args[i]);}if(\"\"){(args[i]);(\"\"+\"\");}if(\"\".equals()){pause=(args[i])*0;}if(\"\"){}if(\"\".equals(args[i])){;}if(\"\".equals(args[i])){(args[i]);(\"\"+\"\");}if(\"\".equals(args[i])){channelOptions=(args[i]);(\"\"+channelOptions);}if((args[i])){(\"\"+(4)+\"\");}if(\"\".equals(args[i])){(\"\".equals(args[i]));}if(\"\".equals(args[i])){}if(\"\".equals(args[i])){(1);}}(startoptions);(Shutdown());while(threads1) { test = LoadTest(); }(DEFAULT); System(\"\");sleep(6); }"}
{"time": "2021-01-20 08:55:52.767865", "n_pass": [3825, 268, 252], "score": "0.291", "loss": "1.6518", "code": "void main(String[]args)throws Exception{if(0){args=new String[]{\"\"};}for(;;i++){if(\"\"){(args[i]);}if(\"\"){(args[i]);(\"\"+\"\");}if(\"\".equals()){pause=(args[i])*0;}if(\"\"){}if(\"\".equals(args[i])){}if(\"\".equals(args[i])){(args[i]);(\"\"+\"\");}if(\"\".equals(args[i])){channelOptions=(args[i]);(\"\"+channelOptions);}if((args[i])){(\"\"+(4)+\"\");}if(\"\".equals(args[i])){(\"\".equals(args[i]));}if(\"\".equals(args[i])){}if(\"\".equals(args[i])){(1);}}(startoptions);(Shutdown());while(threads1) { test = LoadTest(); }(DEFAULT); System(\"\");sleep(6); }"}
{"time": "2021-01-20 08:55:54.318517", "n_pass": [3872, 269, 253], "score": "0.3199", "loss": "1.5344", "code": "void main(String[]args)throws Exception{if(0){args=new String[]{\"\"};}for(;;i++){if(\"\"){(args[i]);}if(\"\"){(args[i]);(\"\"+\"\");}if(\"\".equals()){pause=(args[i])*0;}if(\"\"){}if(\"\".equals(args[i])){}if(\"\".equals(args[i])){(args[i]);(\"\"+\"\");}if(\"\".equals(args[i])){channelOptions(args[i]);(\"\"+channelOptions);}if((args[i])){(\"\"+(4)+\"\");}if(\"\".equals(args[i])){(\"\".equals(args[i]));}if(\"\".equals(args[i])){}if(\"\".equals(args[i])){(1);}}(startoptions);(Shutdown());while(threads1) { test = LoadTest(); }(DEFAULT); System(\"\");sleep(6); }"}
{"time": "2021-01-20 08:55:56.559560", "n_pass": [3996, 270, 254], "score": "0.271", "loss": "1.7471", "code": "void main(String[]args)throws Exception{if(0){args=new String[]{\"\"};}for(;;i++){if(\"\"){(args[i]);}if(\"\"){(args[i]);(\"\"+\"\");}if(\"\".equals()){pause=(args[i])*0;}if(\"\"){}if(\"\".equals(args[i])){}if(\"\".equals(args[i])){(args[i]);(\"\"+\"\");}if(\"\".equals(args[i])){channelOptions(args[i]);(\"\"+channelOptions);}if((args[i])){(\"\"+(4)+\"\");}if(\"\".equals(args[i])){(\"\".equals(args[i]));}if(\"\".equals(args[i])){}if(\"\".equals(args[i])){(1);}}(startoptions);(Shutdown());while(threads1) { test = LoadTest(); }(DEFAULT);(\"\");sleep(6); }"}
{"time": "2021-01-20 08:56:11.058186", "n_pass": [4331, 276, 255], "score": "0.3375", "loss": "1.4904", "code": "void main(String[]args)throws Exception{if(0){args=new String[]{\"\"};}for(;;i++){if(\"\"){(args[i]);}if(\"\"){(args[i]);(\"\"+\"\");}if(\"\".equals()){pause=(args[i])*0;}if(\"\"){}if(\"\".equals(args[i])){}if(\"\".equals(args[i])){(args[i]);(\"\"+\"\");}if(\"\".equals(args[i])){channelOptions(args[i]);(\"\"+channelOptions);}if((args[i])){(\"\"+(4)+\"\");}if(\"\".equals(args[i])){(\"\".equals(args[i]));}if(\"\".equals(args[i])){}if(\"\".equals(args[i])){(1);}}(startoptions);(Shutdown());while(threads) { test = LoadTest(); }(DEFAULT);(\"\");sleep(6); }"}
{"time": "2021-01-20 08:56:13.926524", "n_pass": [4335, 278, 256], "score": "0.3005", "loss": "1.6164", "code": "void main(String[]args)throws Exception{if(0){args=new String[]{\"\"};}for(;;i++){if(\"\"){(args[i]);}if(\"\"){(args[i]);(\"\"+\"\");}if(\"\".equals()){pause=(args[i])*0;}if(\"\"){}if(\"\".equals(args[i])){}if(\"\".equals(args[i])){(args[i]);(\"\"+\"\");}if(\"\".equals(args[i])){channelOptions(args[i]);(\"\"+channelOptions);}if((args[i])){(\"\"+(4)+\"\");}if(\"\".equals(args[i])){(\"\".equals(args[i]));}if(\"\".equals(args[i])){}if(\"\".equals(args[i])){(1);}}(startoptions);(Shutdown());while(threads) {test = LoadTest(); }(DEFAULT);(\"\");sleep(6); }"}
{"time": "2021-01-20 08:56:15.365662", "n_pass": [4337, 279, 257], "score": "0.4156", "loss": "1.1549", "code": "void main(String[]args)throws Exception{if(0){args=new String[]{\"\"};}for(;;i++){if(\"\"){(args[i]);}if(\"\"){(args[i]);(\"\"+\"\");}if(\"\".equals()){pause=(args[i])*0;}if(\"\"){}if(\"\".equals(args[i])){}if(\"\".equals(args[i])){(args[i]);(\"\"+\"\");}if(\"\".equals(args[i])){channelOptions(args[i]);(\"\"+channelOptions);}if((args[i])){(\"\"+(4)+\"\");}if(\"\".equals(args[i])){(\"\".equals(args[i]));}if(\"\".equals(args[i])){}if(\"\".equals(args[i])){(1);}}(startoptions);(Shutdown());while(threads) {test= LoadTest(); }(DEFAULT);(\"\");sleep(6); }"}
{"time": "2021-01-20 08:56:18.282921", "n_pass": [4344, 281, 258], "score": "0.3035", "loss": "1.601", "code": "void main(String[]args)throws Exception{if(0){args=new String[]{\"\"};}for(;;i++){if(\"\"){(args[i]);}if(\"\"){(args[i]);(\"\"+\"\");}if(\"\".equals()){pause=(args[i])*0;}if(\"\"){}if(\"\".equals(args[i])){}if(\"\".equals(args[i])){(args[i]);(\"\"+\"\");}if(\"\".equals(args[i])){channelOptions(args[i]);(\"\"+channelOptions);}if((args[i])){(\"\"+(4)+\"\");}if(\"\".equals(args[i])){(\"\".equals(args[i]));}if(\"\".equals(args[i])){}if(\"\".equals(args[i])){(1);}}(startoptions);(Shutdown());while(threads) {test= LoadTest();}(DEFAULT);(\"\");sleep(6); }"}
{"time": "2021-01-20 08:56:21.562238", "n_pass": [4357, 283, 259], "score": "0.5911", "loss": "0.7645", "code": "void main(String[]args)throws Exception{if(0){args=new String[]{\"\"};}for(;;i++){if(\"\"){(args[i]);}if(\"\"){(args[i]);(\"\"+\"\");}if(\"\".equals()){pause=(args[i])*0;}if(\"\"){}if(\"\".equals(args[i])){}if(\"\".equals(args[i])){(args[i]);(\"\"+\"\");}if(\"\".equals(args[i])){channelOptions(args[i]);(\"\"+channelOptions);}if((args[i])){(\"\"+(4)+\"\");}if(\"\".equals(args[i])){(\"\".equals(args[i]));}if(\"\".equals(args[i])){}if(\"\".equals(args[i])){(1);}}(startoptions);(Shutdown());while(threads) {test= LoadTest();}(DEFAULT);(\"\");sleep(); }"}
{"time": "2021-01-20 08:56:23.002753", "n_pass": [4360, 284, 260], "score": "0.5657", "loss": "0.813", "code": "void main(String[]args)throws Exception{if(0){args=new String[]{\"\"};}for(;;i++){if(\"\"){(args[i]);}if(\"\"){(args[i]);(\"\"+\"\");}if(\"\".equals()){pause=(args[i])*0;}if(\"\"){}if(\"\".equals(args[i])){}if(\"\".equals(args[i])){(args[i]);(\"\"+\"\");}if(\"\".equals(args[i])){channelOptions(args[i]);(\"\"+channelOptions);}if((args[i])){(\"\"+(4)+\"\");}if(\"\".equals(args[i])){(\"\".equals(args[i]));}if(\"\".equals(args[i])){}if(\"\".equals(args[i])){(1);}}(startoptions);(Shutdown());while(threads) {test= LoadTest();}(DEFAULT);(\"\");sleep();}"}

Minimal simplified code:
void main(String[]args)throws Exception{if(0){args=new String[]{""};}for(;;i++){if(""){(args[i]);}if(""){(args[i]);(""+"");}if("".equals()){pause=(args[i])*0;}if(""){}if("".equals(args[i])){}if("".equals(args[i])){(args[i]);(""+"");}if("".equals(args[i])){channelOptions(args[i]);(""+channelOptions);}if((args[i])){(""+(4)+"");}if("".equals(args[i])){("".equals(args[i]));}if("".equals(args[i])){}if("".equals(args[i])){(1);}}(startoptions);(Shutdown());while(threads) {test= LoadTest();}(DEFAULT);("");sleep();}

