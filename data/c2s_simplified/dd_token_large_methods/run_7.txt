
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/bluestreak01__questdb/core/src/main/java/com/questdb/net/ha/JournalClient_run.java
method_name = run
method_body = @Override public void run() { running = true; notifyCallback(JournalClientEvents.EVT_RUNNING); int event = JournalClientEvents.EVT_NONE; boolean connected = false; try { while (true) { if (!connected) { int retryCount = config.getReconnectPolicy().getRetryCount(); int loginRetryCount = config.getReconnectPolicy().getLoginRetryCount(); do { try { closeChannel(); try { openChannel(); counter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-- > 0) { continue; } else { break; } } sendProtocolVersion(); checkAuthAndSendCredential(); resubscribe(); sendReady(); connected = true; notifyCallback(JournalClientEvents.EVT_CONNECTED); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT_AUTH_ERROR); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) { closeChannel(); close0(); notifyCallback(JournalClientEvents.EVT_AUTH_CONFIG_ERROR); return; } catch (JournalNetworkException e) { LOG.info().$(e.getMessage()).$(); closeChannel(); } if (!connected && retryCount-- > 0 && loginRetryCount > 0) { LockSupport.parkNanos(TimeUnit.MILLISECONDS.toNanos(config.getReconnectPolicy().getSleepBetweenRetriesMillis())); LOG.info().$("Retrying reconnect ... [").$(retryCount + 1).$(']').$(); } else { break; } } while (true); if (!connected && (retryCount == 0 || loginRetryCount == 0)) { event = JournalClientEvents.EVT_SERVER_ERROR; } } try { if (connected && channel.isOpen() && isRunning()) { commandConsumer.read(channel); byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL_DELTA_CMD: statsChannel.setDelegate(channel); int index = intResponseConsumer.getValue(statsChannel); deltaConsumers.getQuick(index).read(statsChannel); statusSentList.set(index, 0); statsChannel.logStats(); break; case Command.SERVER_READY_CMD: sendState(); sendReady(); break; case Command.SERVER_HEARTBEAT: if (processSubscriptionQueue()) { sendReady(); } else { event = JournalClientEvents.EVT_CLIENT_HALT; } break; case Command.SERVER_SHUTDOWN: connected = false; break; default: LOG.info().$("Unknown command: ").$(cmd).$(); break; } } else if (event == JournalClientEvents.EVT_NONE) { event = JournalClientEvents.EVT_CLIENT_HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event = JournalClientEvents.EVT_INCOMPATIBLE_JOURNAL; } catch (JournalNetworkException e) { LOG.error().$("Network error. Server died?").$(); LOG.debug().$("Network error details: ").$(e).$(); notifyCallback(JournalClientEvents.EVT_SERVER_DIED); connected = false; } catch (Throwable e) { LOG.error().$("Unhandled exception in client").$(e).$(); event = JournalClientEvents.EVT_CLIENT_EXCEPTION; } if (event != JournalClientEvents.EVT_NONE) { if (channel != null && channel.isOpen()) { sendDisconnect(); } closeChannel(); close0(); notifyCallback(event); break; } } } catch (Throwable e) { LOG.error().$("Fatal exception when closing client").$(e).$(); closeChannel(); close0(); } finally { running = false; notifyCallback(JournalClientEvents.EVT_TERMINATED); haltLatch.countDown(); LOG.info().$("Terminated").$(); } }
predict, score, loss = run, 0.7319706, 0.46008956

Trace of simplified code(s):
{"time": "2021-01-20 11:58:46.089032", "n_pass": [1, 1, 1], "score": "0.8007", "loss": "0.3963", "code": "@Override public void run() { running = true; notifyCallback(JournalClientEvents.EVT_RUNNING); int event = JournalClientEvents.EVT_NONE; boolean connected = false; try { while (true) { if (!connected) { int retryCount = config.getReconnectPolicy().getRetryCount(); int loginRetryCount = config.getReconnectPolicy().getLoginRetryCount(); do { try { closeChannel(); try { openChannel(); counter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-- > 0) { continue; } else { break; } } sendProtocolVersion(); checkAuthAndSendCredential(); resubscribe(); sendReady(); connected = true; notifyCallback(JournalClientEvents.EVT_CONNECTED); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT_AUTH_ERROR); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) { closeChannel(); close0(); notifyCallback(JournalClientEvents.EVT_AUTH_CONFIG_ERROR); return; } catch (JournalNetworkException e) { LOG.info().$(e.getMessage()).$(); closeChannel(); } if (!connected && retryCount-- > 0 && loginRetryCount > 0) { LockSupport.parkNanos(TimeUnit.MILLISECONDS.toNanos(config.getReconnectPolicy().getSleepBetweenRetriesMillis())); LOG.info().$(\"Retrying reconnect ... [\").$(retryCount + 1).$(']').$(); } else { break; } } while (true); if (!connected && (retryCount == 0 || loginRetryCount == 0)) { event = JournalClientEvents.EVT_SERVER_ERROR; } } try { if (connected && channel.isOpen() && isRunning()) { commandConsumer.read(channel); byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL_DELTA_CMD: statsChannel.setDelegate(channel); int index = intResponseConsumer.getValue(statsChannel); deltaConsumers.getQuick(index).read(statsChannel); statusSentList.set(index, 0); statsChannel.logStats(); break; case Command.SERVER_READY_CMD: sendState(); sendReady(); break; case Command.SERVER_HEARTBEAT: if (processSubscriptionQueue()) { sendReady(); } else { event = JournalClientEvents.EVT_CLIENT_HALT; } break; case Command.SERVER_SHUTDOWN: connected = false; break; default: LOG.info().$(\"Unknown command: \").$(cmd).$(); break; } } else if (event == JournalClientEvents.EVT_NONE) { event = JournalClientEvents.EVT_CLIENT_HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event = JournalClientEvents.EVT_INCOMPATIBLE_JOURNAL; } catch (JournalNetworkException e) { LOG.error().$(\"Network error. Server died?\").$(); LOG.debug().$(\"Network error details: \").$(e).$(); notifyCallback(JournalClientEvents.EVT_SERVER_DIED); connected = false; } catch (Throwable e) { LOG.error().$(\"Unhandled exception in client\").$(e).$(); event = JournalClientEvents.EVT_CLIENT_EXCEPTION; } if (event != JournalClientEvents.EVT_NONE) { if (channel != null && channel.isOpen()) { sendDisconnect(); } closeChannel(); close0(); notifyCallback(event); break; } } } catch (Throwable e) { LOG.error().$(\"Fatal exception when closing client\").$(e).$(); closeChannel(); close0(); } finally { running = false; notifyCallback(JournalClientEvents.EVT_TERMINATED); haltLatch.countDown(); LOG.info().$(\"Terminated\").$(); } }"}
{"time": "2021-01-20 11:58:47.730215", "n_pass": [22, 2, 2], "score": "0.3657", "loss": "1.3152", "code": "@Override public void run() { running = true; notifyCallback(JournalClientEvents.EVT_RUNNING); int event = JournalClientEvents.EVT_NONE; boolean connected = false; try { while (true) { if (!connected) { int retryCount = config.getReconnectPolicy().getRetryCount(); int loginRetryCount = config.getReconnectPolicy().getLoginRetryCount(); do { try { closeChannel(); try { openChannel(); counter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-- > 0) { continue; } else { break; } } sendProtocolVersion(); checkAuthAndSendCredential(); resubscribe(); sendReady(); connected = true; notifyCallback(JournalClientEvents.EVT_CONNECTED); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT_AUTH_ERROR); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) { closeChannel(); close0(); notifyCallback(JournalClientEvents.EVT_AUTH_CONFIG_ERROR); break; } } while (true); if (!connected && (retryCount == 0 || loginRetryCount == 0)) { event = JournalClientEvents.EVT_SERVER_ERROR; } } try { if (connected && channel.isOpen() && isRunning()) { commandConsumer.read(channel); byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL_DELTA_CMD: statsChannel.setDelegate(channel); int index = intResponseConsumer.getValue(statsChannel); deltaConsumers.getQuick(index).read(statsChannel); statusSentList.set(index, 0); statsChannel.logStats(); break; case Command.SERVER_READY_CMD: sendState(); sendReady(); break; case Command.SERVER_HEARTBEAT: if (processSubscriptionQueue()) { sendReady(); } else { event = JournalClientEvents.EVT_CLIENT_HALT; } break; case Command.SERVER_SHUTDOWN: connected = false; break; default: LOG.info().$(\"Unknown command: \").$(cmd).$(); break; } } else if (event == JournalClientEvents.EVT_NONE) { event = JournalClientEvents.EVT_CLIENT_HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event = JournalClientEvents.EVT_INCOMPATIBLE_JOURNAL; } catch (JournalNetworkException e) { LOG.error().$(\"Network error. Server died?\").$(); LOG.debug().$(\"Network error details: \").$(e).$(); notifyCallback(JournalClientEvents.EVT_SERVER_DIED); connected = false; } catch (Throwable e) { LOG.error().$(\"Unhandled exception in client\").$(e).$(); event = JournalClientEvents.EVT_CLIENT_EXCEPTION; } if (event != JournalClientEvents.EVT_NONE) { if (channel != null && channel.isOpen()) { sendDisconnect(); } closeChannel(); close0(); notifyCallback(event); break; } } } catch (Throwable e) { LOG.error().$(\"Fatal exception when closing client\").$(e).$(); closeChannel(); close0(); } finally { running = false; notifyCallback(JournalClientEvents.EVT_TERMINATED); haltLatch.countDown(); LOG.info().$(\"Terminated\").$(); } }"}
{"time": "2021-01-20 11:58:49.381358", "n_pass": [49, 3, 3], "score": "0.9104", "loss": "0.1651", "code": "@Override public void run() { running = true; notifyCallback(JournalClientEvents.EVT_RUNNING); int event = JournalClientEvents.EVT_NONE; boolean connected = false; try { while (true) { if (!connected) { int retryCount = config.getReconnectPolicy().getRetryCount(); int loginRetryCount = config.getReconnectPolicy().getLoginRetryCount(); do { try { closeChannel(); try { openChannel(); counter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-- > 0) { continue; } else { break; } } sendProtocolVersion(); checkAuthAndSendCredential(); resubscribe(); sendReady(); connected = true; notifyCallback(JournalClientEvents.EVT_CONNECTED); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT_AUTH_ERROR); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) { closeChannel(); close0(); notifyCallback(JournalClientEvents.EVT_AUTH_CONFIG_ERROR); break; } } while (true); if (!connected && (retryCount == 0 || loginRetryCount == 0)) { event = JournalClientEvents.EVT_SERVER_ERROR; } } try { if (connected && channel.isOpen() && isRunning()) { commandConsumer.read(channel); byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL_DELTA_CMD: statsChannel.setDelegate(channel); int index = intResponseConsumer.getValue(statsChannel); deltaConsumers.getQuick(index).read(statsChannel); statusSentList.set(index, 0); statsChannel.logStats(); break; case Command.SERVER_READY_CMD: sendState(); sendReady(); break; case Command.SERVER_HEARTBEAT: if (processSubscriptionQueue()) { sendReady(); } else { event = JournalClientEvents.EVT_CLIENT_HALT; } break; case Command.SERVER_SHUTDOWN: connected = false; break; default: LOG.info().$(\"Unknown command: \").$(cmd).$(); break; } } else if (event == JournalClientEvents.EVT_NONE) { event = JournalClientEvents.EVT_CLIENT_HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event = JournalClientEvents.EVT_INCOMPATIBLE_JOURNAL; } catch (JournalNetworkException e) { LOG.error().$(\"Network error. Server died?\").$(\"Unhandled exception in client\").$(e).$(); event = JournalClientEvents.EVT_CLIENT_EXCEPTION; } if (event != JournalClientEvents.EVT_NONE) { if (channel != null && channel.isOpen()) { sendDisconnect(); } closeChannel(); close0(); notifyCallback(event); break; } } } catch (Throwable e) { LOG.error().$(\"Fatal exception when closing client\").$(e).$(); closeChannel(); close0(); } finally { running = false; notifyCallback(JournalClientEvents.EVT_TERMINATED); haltLatch.countDown(); LOG.info().$(\"Terminated\").$(); } }"}
{"time": "2021-01-20 11:58:51.315681", "n_pass": [173, 4, 4], "score": "0.8292", "loss": "0.2815", "code": "@Override public void run() { running = true; notifyCallback(JournalClientEvents.EVT_RUNNING); int event = JournalClientEvents.EVT_NONE; boolean connected = false; try { while (true) { if (!connected) { int retryCount = config.getReconnectPolicy().getRetryCount(); int loginRetryCount = config.getReconnectPolicy().getLoginRetryCount(); do { try { closeChannel(); try { openChannel(); counter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-- > 0) { continue; } else { break; } } sendProtocolVersion(); checkAuthAndSendCredential(); resubscribe(); sendReady(); connected = true; notifyCallback(JournalClientEvents.EVT_CONNECTED); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT_AUTH_ERROR); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) { closeChannel(); close0(); notifyCallback(JournalClientEvents.EVT_AUTH_CONFIG_ERROR); break; } } while (true); if (!connected && (retryCount == 0 || loginRetryCount == 0)) { event = JournalClientEvents.EVT_SERVER_ERROR; } } try { if (connected && channel.isOpen() && isRunning()) { commandConsumer.read(channel); byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL_DELTA_CMD: statsChannel.setDelegate(channel); int index = intResponseConsumer.getValue(statsChannel); deltaConsumers.getQuick(index).read(statsChannel); statusSentList.set(index, 0); statsChannel.logStats(); break; case Command.SERVER_READY_CMD: sendState(); sendReady(); break; case Command.SERVER_HEARTBEAT: if (processSubscriptionQueue()) { sendReady(); } else { event = JournalClientEvents.EVT_CLIENT_HALT; } break; case Command.SERVER_SHUTDOWN: connected = false; break; default: LOG.info().$(\"Unknown command: \").$(cmd).$(); break; } } else if (event == JournalClientEvents.EVT_NONE) { event = JournalClientEvents.EVT_CLIENT_HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event = JournalClientEvents.EVT_INCOMPATIBLE_JOURNAL; } catch (JournalNetworkException e) { LOG.error().$(\"Network error. Server died?\").$(\"Unhandled exception in client\").$(e).$(); event = JournalClientEvents.EVT_CLIENT_EXCEPTION; } if (event != JournalClientEvents.EVT_NONE) { if (channel != null && channel.isOpen()) { sendDisconnect(); } closeChannel(); close0(); notifyCallback(event); break; } } } catch (Throwable e) { LOG.error$(e).$(); closeChannel(); close0(); } finally { running = false; notifyCallback(JournalClientEvents.EVT_TERMINATED); haltLatch.countDown(); LOG.info().$(\"Terminated\").$(); } }"}
{"time": "2021-01-20 11:58:52.891771", "n_pass": [175, 5, 5], "score": "0.7321", "loss": "0.4619", "code": "@Override public void run() { running = true; notifyCallback(JournalClientEvents.EVT_RUNNING); int event = JournalClientEvents.EVT_NONE; boolean connected = false; try { while (true) { if (!connected) { int retryCount = config.getReconnectPolicy().getRetryCount(); int loginRetryCount = config.getReconnectPolicy().getLoginRetryCount(); do { try { closeChannel(); try { openChannel(); counter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-- > 0) { continue; } else { break; } } sendProtocolVersion(); checkAuthAndSendCredential(); resubscribe(); sendReady(); connected = true; notifyCallback(JournalClientEvents.EVT_CONNECTED); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT_AUTH_ERROR); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) { closeChannel(); close0(); notifyCallback(JournalClientEvents.EVT_AUTH_CONFIG_ERROR); break; } } while (true); if (!connected && (retryCount == 0 || loginRetryCount == 0)) { event = JournalClientEvents.EVT_SERVER_ERROR; } } try { if (connected && channel.isOpen() && isRunning()) { commandConsumer.read(channel); byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL_DELTA_CMD: statsChannel.setDelegate(channel); int index = intResponseConsumer.getValue(statsChannel); deltaConsumers.getQuick(index).read(statsChannel); statusSentList.set(index, 0); statsChannel.logStats(); break; case Command.SERVER_READY_CMD: sendState(); sendReady(); break; case Command.SERVER_HEARTBEAT: if (processSubscriptionQueue()) { sendReady(); } else { event = JournalClientEvents.EVT_CLIENT_HALT; } break; case Command.SERVER_SHUTDOWN: connected = false; break; default: LOG.info().$(\"Unknown command: \").$(cmd).$(); break; } } else if (event == JournalClientEvents.EVT_NONE) { event = JournalClientEvents.EVT_CLIENT_HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event = JournalClientEvents.EVT_INCOMPATIBLE_JOURNAL; } catch (JournalNetworkException e) { LOG.error().$(\"Network error. Server died?\").$(\"Unhandled exception in client\").$(e).$(); event = JournalClientEvents.EVT_CLIENT_EXCEPTION; } if (event != JournalClientEvents.EVT_NONE) { if (channel != null && channel.isOpen()) { sendDisconnect(); } closeChannel(); close0(); notifyCallback(event); break; } } } catch (Throwable e) { LOG.error$(e).$(); closeChannel(); close0(JournalClientEvents.EVT_TERMINATED); haltLatch.countDown(); LOG.info().$(\"Terminated\").$(); } }"}
{"time": "2021-01-20 11:58:54.486157", "n_pass": [183, 6, 6], "score": "0.678", "loss": "0.5286", "code": "@Override public void run() { running = true; notifyCallback(JournalClientEvents.EVT_RUNNING); int event = JournalClientEvents.EVT_NONE; boolean connected = false; try { while (true) { if (!connected) { int retryCount = config.getReconnectPolicy().getLoginRetryCount(); do { try { closeChannel(); try { openChannel(); counter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-- > 0) { continue; } else { break; } } sendProtocolVersion(); checkAuthAndSendCredential(); resubscribe(); sendReady(); connected = true; notifyCallback(JournalClientEvents.EVT_CONNECTED); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT_AUTH_ERROR); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) { closeChannel(); close0(); notifyCallback(JournalClientEvents.EVT_AUTH_CONFIG_ERROR); break; } } while (true); if (!connected && (retryCount == 0 || loginRetryCount == 0)) { event = JournalClientEvents.EVT_SERVER_ERROR; } } try { if (connected && channel.isOpen() && isRunning()) { commandConsumer.read(channel); byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL_DELTA_CMD: statsChannel.setDelegate(channel); int index = intResponseConsumer.getValue(statsChannel); deltaConsumers.getQuick(index).read(statsChannel); statusSentList.set(index, 0); statsChannel.logStats(); break; case Command.SERVER_READY_CMD: sendState(); sendReady(); break; case Command.SERVER_HEARTBEAT: if (processSubscriptionQueue()) { sendReady(); } else { event = JournalClientEvents.EVT_CLIENT_HALT; } break; case Command.SERVER_SHUTDOWN: connected = false; break; default: LOG.info().$(\"Unknown command: \").$(cmd).$(); break; } } else if (event == JournalClientEvents.EVT_NONE) { event = JournalClientEvents.EVT_CLIENT_HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event = JournalClientEvents.EVT_INCOMPATIBLE_JOURNAL; } catch (JournalNetworkException e) { LOG.error().$(\"Network error. Server died?\").$(\"Unhandled exception in client\").$(e).$(); event = JournalClientEvents.EVT_CLIENT_EXCEPTION; } if (event != JournalClientEvents.EVT_NONE) { if (channel != null && channel.isOpen()) { sendDisconnect(); } closeChannel(); close0(); notifyCallback(event); break; } } } catch (Throwable e) { LOG.error$(e).$(); closeChannel(); close0(JournalClientEvents.EVT_TERMINATED); haltLatch.countDown(); LOG.info().$(\"Terminated\").$(); } }"}
{"time": "2021-01-20 11:58:56.423458", "n_pass": [189, 7, 7], "score": "0.86", "loss": "0.2318", "code": "@Override public void run() { running = true; notifyCallback(JournalClientEvents.EVT_RUNNING); int event = JournalClientEvents.EVT_NONE; boolean connected = false; try { while (true) { if (!connected) { int retryCount = config.getReconnectPolicy().getLoginRetryCount(); do { try { closeChannel(); try { openChannel(); counter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-- > 0) { continue; } else { break; } } sendProtocolVersion(); checkAuthAndSendCredential(); notifyCallback(JournalClientEvents.EVT_CONNECTED); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT_AUTH_ERROR); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) { closeChannel(); close0(); notifyCallback(JournalClientEvents.EVT_AUTH_CONFIG_ERROR); break; } } while (true); if (!connected && (retryCount == 0 || loginRetryCount == 0)) { event = JournalClientEvents.EVT_SERVER_ERROR; } } try { if (connected && channel.isOpen() && isRunning()) { commandConsumer.read(channel); byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL_DELTA_CMD: statsChannel.setDelegate(channel); int index = intResponseConsumer.getValue(statsChannel); deltaConsumers.getQuick(index).read(statsChannel); statusSentList.set(index, 0); statsChannel.logStats(); break; case Command.SERVER_READY_CMD: sendState(); sendReady(); break; case Command.SERVER_HEARTBEAT: if (processSubscriptionQueue()) { sendReady(); } else { event = JournalClientEvents.EVT_CLIENT_HALT; } break; case Command.SERVER_SHUTDOWN: connected = false; break; default: LOG.info().$(\"Unknown command: \").$(cmd).$(); break; } } else if (event == JournalClientEvents.EVT_NONE) { event = JournalClientEvents.EVT_CLIENT_HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event = JournalClientEvents.EVT_INCOMPATIBLE_JOURNAL; } catch (JournalNetworkException e) { LOG.error().$(\"Network error. Server died?\").$(\"Unhandled exception in client\").$(e).$(); event = JournalClientEvents.EVT_CLIENT_EXCEPTION; } if (event != JournalClientEvents.EVT_NONE) { if (channel != null && channel.isOpen()) { sendDisconnect(); } closeChannel(); close0(); notifyCallback(event); break; } } } catch (Throwable e) { LOG.error$(e).$(); closeChannel(); close0(JournalClientEvents.EVT_TERMINATED); haltLatch.countDown(); LOG.info().$(\"Terminated\").$(); } }"}
{"time": "2021-01-20 11:58:58.095274", "n_pass": [210, 8, 8], "score": "0.9676", "loss": "0.0503", "code": "@Override public void run() { running = true; notifyCallback(JournalClientEvents.EVT_RUNNING); int event = JournalClientEvents.EVT_NONE; boolean connected = false; try { while (true) { if (!connected) { int retryCount = config.getReconnectPolicy().getLoginRetryCount(); do { try { closeChannel(); try { openChannel(); counter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-- > 0) { continue; } else { break; } } sendProtocolVersion(); checkAuthAndSendCredential(); notifyCallback(JournalClientEvents.EVT_CONNECTED); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT_AUTH_ERROR); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) { closeChannel(); close0(); notifyCallback(JournalClientEvents.EVT_AUTH_CONFIG_ERROR); break; } } while (true); if (!connected && (retryCount == 0 || loginRetryCount == 0)) { event = JournalClientEvents.EVT_SERVER_ERROR; } } try { if (connected && channel.isOpen() && isRunning()) { commandConsumer.read(channel); byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL_DELTA_CMD: statsChannel.setDelegate(channel); int index = intResponseConsumer.getValue(statsChannel); deltaConsumers.getQuick(index).read(statsChannel); statusSentList.set(index, 0); statsChannel.logStats(); break; case Command.SERVER_READY_CMD: sendState(); sendReady(); break; case Command.SERVER_HEARTBEAT: if (processSubscriptionQueue()) { sendReady(); } else { event = JournalClientEvents.EVT_CLIENT_HALT; } break; case Command.SERVER_SHUTDOWN: connected = false; break; default:$(cmd).$(); break; } } else if (event == JournalClientEvents.EVT_NONE) { event = JournalClientEvents.EVT_CLIENT_HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event = JournalClientEvents.EVT_INCOMPATIBLE_JOURNAL; } catch (JournalNetworkException e) { LOG.error().$(\"Network error. Server died?\").$(\"Unhandled exception in client\").$(e).$(); event = JournalClientEvents.EVT_CLIENT_EXCEPTION; } if (event != JournalClientEvents.EVT_NONE) { if (channel != null && channel.isOpen()) { sendDisconnect(); } closeChannel(); close0(); notifyCallback(event); break; } } } catch (Throwable e) { LOG.error$(e).$(); closeChannel(); close0(JournalClientEvents.EVT_TERMINATED); haltLatch.countDown(); LOG.info().$(\"Terminated\").$(); } }"}
{"time": "2021-01-20 11:58:59.689731", "n_pass": [216, 9, 9], "score": "0.8642", "loss": "0.2467", "code": "@Override public void run() { running = true; notifyCallback(JournalClientEvents.EVT_RUNNING); int event = JournalClientEvents.EVT_NONE; boolean connected = false; try { while (true) { if (!connected) { int retryCount = config.getReconnectPolicy().getLoginRetryCount(); do { try { closeChannel(); try { openChannel(); counter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-- > 0) { continue; } else { break; } } sendProtocolVersion(); checkAuthAndSendCredential(); notifyCallback(JournalClientEvents.EVT_CONNECTED); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT_AUTH_ERROR); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) { closeChannel(); close0(); notifyCallback(JournalClientEvents.EVT_AUTH_CONFIG_ERROR); break; } } while (true); if (!connected && (retryCount == 0 || loginRetryCount == 0)) { event = JournalClientEvents.EVT_SERVER_ERROR; } } try { if (connected && channel.isOpen() && isRunning()) { commandConsumer.read(channel); byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL_DELTA_CMD: statsChannel.setDelegate(channel); int index = intResponseConsumer.getValue(statsChannel); deltaConsumers.getQuick(index).read(statsChannel); statusSentList.set(index, 0); statsChannel.logStats(); break; case Command.SERVER_READY_CMD: sendState(); sendReady(); break; case Command.SERVER_HEARTBEAT: if (processSubscriptionQueue()) { sendReady(); } else { event = JournalClientEvents.EVT_CLIENT_HALT; } break; case Command.SERVER_SHUTDOWN: connected = false; break; default:$(cmd).$(); break; } } else if (event == JournalClientEvents.EVT_NONE) { event = JournalClientEvents.EVT_CLIENT_HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event = JournalClientEvents.EVTLOG.error().$(\"Network error. Server died?\").$(\"Unhandled exception in client\").$(e).$(); event = JournalClientEvents.EVT_CLIENT_EXCEPTION; } if (event != JournalClientEvents.EVT_NONE) { if (channel != null && channel.isOpen()) { sendDisconnect(); } closeChannel(); close0(); notifyCallback(event); break; } } } catch (Throwable e) { LOG.error$(e).$(); closeChannel(); close0(JournalClientEvents.EVT_TERMINATED); haltLatch.countDown(); LOG.info().$(\"Terminated\").$(); } }"}
{"time": "2021-01-20 11:59:01.670312", "n_pass": [356, 10, 10], "score": "0.8876", "loss": "0.1972", "code": "@Override public void run() { running = true; notifyCallback(JournalClientEvents.EVT_RUNNING); int event = JournalClientEvents.EVT_NONE; boolean connected = false; try { while (true) { if (!connected) { int retryCount = config.getReconnectPolicy().getLoginRetryCount(); do { try { closeChannel(); try { openChannel(); counter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-- > 0) { continue; } else { break; } } sendProtocolVersion(); checkAuthAndSendCredential(); notifyCallback(JournalClientEvents.EVT_CONNECTED); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT_AUTH_ERROR); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) { closeChannel(); close0(); notifyCallback(JournalClientEvents.EVT_AUTH_CONFIG_ERROR); break; } } while (true); if (!connected && (retryCount == 0 || loginRetryCount == 0)) { event = JournalClientEvents.EVT_SERVER_ERROR; } } try { if (connected && channel.isOpen() && isRunning()) { commandConsumer.read(channel); byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL_DELTA_CMD: statsChannel.setDelegate(channel); int index = intResponseConsumer.getValue(statsChannel); deltaConsumers.getQuick(index).read(statsChannel); statusSentList.set(index, 0); statsChannel.logStats(); break; case Command.SERVER_READY_CMD: sendState(); sendReady(); break; case Command.SERVER_HEARTBEAT: if (processSubscriptionQueue()) { sendReady(); } else { event = JournalClientEvents.EVT_CLIENT_HALT; } break; case Command.SERVER_SHUTDOWN: connected = false; break; default:$(cmd).$(); break; } } else if (event == JournalClientEvents.EVT_NONE) { event = JournalClientEvents.EVT_CLIENT_HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event = JournalClientEvents.EVTLOG.error().$(\"\").$(\"Unhandled exception in client\").$(e).$(); event = JournalClientEvents.EVT_CLIENT_EXCEPTION; } if (event != JournalClientEvents.EVT_NONE) { if (channel != null && channel.isOpen()) { sendDisconnect(); } closeChannel(); close0(); notifyCallback(event); break; } } } catch (Throwable e) { LOG.error$(e).$(); closeChannel(); close0(JournalClientEvents.EVT_TERMINATED); haltLatch.countDown(); LOG.info().$(\"Terminated\").$(); } }"}
{"time": "2021-01-20 11:59:03.235609", "n_pass": [357, 11, 11], "score": "0.8569", "loss": "0.2502", "code": "@Override public void run() { running = true; notifyCallback(JournalClientEvents.EVT_RUNNING); int event = JournalClientEvents.EVT_NONE; boolean connected = false; try { while (true) { if (!connected) { int retryCount = config.getReconnectPolicy().getLoginRetryCount(); do { try { closeChannel(); try { openChannel(); counter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-- > 0) { continue; } else { break; } } sendProtocolVersion(); checkAuthAndSendCredential(); notifyCallback(JournalClientEvents.EVT_CONNECTED); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT_AUTH_ERROR); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) { closeChannel(); close0(); notifyCallback(JournalClientEvents.EVT_AUTH_CONFIG_ERROR); break; } } while (true); if (!connected && (retryCount == 0 || loginRetryCount == 0)) { event = JournalClientEvents.EVT_SERVER_ERROR; } } try { if (connected && channel.isOpen() && isRunning()) { commandConsumer.read(channel); byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL_DELTA_CMD: statsChannel.setDelegate(channel); int index = intResponseConsumer.getValue(statsChannel); deltaConsumers.getQuick(index).read(statsChannel); statusSentList.set(index, 0); statsChannel.logStats(); break; case Command.SERVER_READY_CMD: sendState(); sendReady(); break; case Command.SERVER_HEARTBEAT: if (processSubscriptionQueue()) { sendReady(); } else { event = JournalClientEvents.EVT_CLIENT_HALT; } break; case Command.SERVER_SHUTDOWN: connected = false; break; default:$(cmd).$(); break; } } else if (event == JournalClientEvents.EVT_NONE) { event = JournalClientEvents.EVT_CLIENT_HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event = JournalClientEvents.EVTLOG.error().$(\" in client\").$(e).$(); event = JournalClientEvents.EVT_CLIENT_EXCEPTION; } if (event != JournalClientEvents.EVT_NONE) { if (channel != null && channel.isOpen()) { sendDisconnect(); } closeChannel(); close0(); notifyCallback(event); break; } } } catch (Throwable e) { LOG.error$(e).$(); closeChannel(); close0(JournalClientEvents.EVT_TERMINATED); haltLatch.countDown(); LOG.info().$(\"Terminated\").$(); } }"}
{"time": "2021-01-20 11:59:04.790749", "n_pass": [360, 12, 12], "score": "0.5666", "loss": "0.8037", "code": "@Override public void run() { running = true; notifyCallback(JournalClientEvents.EVT_RUNNING); int event = JournalClientEvents.EVT_NONE; boolean connected = false; try { while (true) { if (!connected) { int retryCount = config.getReconnectPolicy().getLoginRetryCount(); do { try { closeChannel(); try { openChannel(); counter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-- > 0) { continue; } else { break; } } sendProtocolVersion(); checkAuthAndSendCredential(); notifyCallback(JournalClientEvents.EVT_CONNECTED); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT_AUTH_ERROR); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) { closeChannel(); close0(); notifyCallback(JournalClientEvents.EVT_AUTH_CONFIG_ERROR); break; } } while (true); if (!connected && (retryCount == 0 || loginRetryCount == 0)) { event = JournalClientEvents.EVT_SERVER_ERROR; } } try { if (connected && channel.isOpen() && isRunning()) { commandConsumer.read(channel); byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL_DELTA_CMD: statsChannel.setDelegate(channel); int index = intResponseConsumer.getValue(statsChannel); deltaConsumers.getQuick(index).read(statsChannel); statusSentList.set(index, 0); statsChannel.logStats(); break; case Command.SERVER_READY_CMD: sendState(); sendReady(); break; case Command.SERVER_HEARTBEAT: if (processSubscriptionQueue()) { sendReady(); } else { event = JournalClientEvents.EVT_CLIENT_HALT; } break; case Command.SERVER_SHUTDOWN: connected = false; break; default:$(cmd).$(); break; } } else if (event == JournalClientEvents.EVT_NONE) { event = JournalClientEvents.EVT_CLIENT_HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event = JournalClientEvents.EVTLOG.error().$(\" in client\").$(e).$(); eventEXCEPTION; } if (event != JournalClientEvents.EVT_NONE) { if (channel != null && channel.isOpen()) { sendDisconnect(); } closeChannel(); close0(); notifyCallback(event); break; } } } catch (Throwable e) { LOG.error$(e).$(); closeChannel(); close0(JournalClientEvents.EVT_TERMINATED); haltLatch.countDown(); LOG.info().$(\"Terminated\").$(); } }"}
{"time": "2021-01-20 11:59:06.329320", "n_pass": [362, 13, 13], "score": "0.768", "loss": "0.4078", "code": "@Override public void run() { running = true; notifyCallback(JournalClientEvents.EVT_RUNNING); int event = JournalClientEvents.EVT_NONE; boolean connected = false; try { while (true) { if (!connected) { int retryCount = config.getReconnectPolicy().getLoginRetryCount(); do { try { closeChannel(); try { openChannel(); counter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-- > 0) { continue; } else { break; } } sendProtocolVersion(); checkAuthAndSendCredential(); notifyCallback(JournalClientEvents.EVT_CONNECTED); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT_AUTH_ERROR); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) { closeChannel(); close0(); notifyCallback(JournalClientEvents.EVT_AUTH_CONFIG_ERROR); break; } } while (true); if (!connected && (retryCount == 0 || loginRetryCount == 0)) { event = JournalClientEvents.EVT_SERVER_ERROR; } } try { if (connected && channel.isOpen() && isRunning()) { commandConsumer.read(channel); byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL_DELTA_CMD: statsChannel.setDelegate(channel); int index = intResponseConsumer.getValue(statsChannel); deltaConsumers.getQuick(index).read(statsChannel); statusSentList.set(index, 0); statsChannel.logStats(); break; case Command.SERVER_READY_CMD: sendState(); sendReady(); break; case Command.SERVER_HEARTBEAT: if (processSubscriptionQueue()) { sendReady(); } else { event = JournalClientEvents.EVT_CLIENT_HALT; } break; case Command.SERVER_SHUTDOWN: connected = false; break; default:$(cmd).$(); break; } } else if (event == JournalClientEvents.EVT_NONE) { event = JournalClientEvents.EVT_CLIENT_HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event = JournalClientEvents.EVTLOG.error().$(\" in client\").$(e).$(); eventEXCEPTION; } if (event) { if (channel != null && channel.isOpen()) { sendDisconnect(); } closeChannel(); close0(); notifyCallback(event); break; } } } catch (Throwable e) { LOG.error$(e).$(); closeChannel(); close0(JournalClientEvents.EVT_TERMINATED); haltLatch.countDown(); LOG.info().$(\"Terminated\").$(); } }"}
{"time": "2021-01-20 11:59:07.878319", "n_pass": [364, 14, 14], "score": "0.8421", "loss": "0.2667", "code": "@Override public void run() { running = true; notifyCallback(JournalClientEvents.EVT_RUNNING); int event = JournalClientEvents.EVT_NONE; boolean connected = false; try { while (true) { if (!connected) { int retryCount = config.getReconnectPolicy().getLoginRetryCount(); do { try { closeChannel(); try { openChannel(); counter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-- > 0) { continue; } else { break; } } sendProtocolVersion(); checkAuthAndSendCredential(); notifyCallback(JournalClientEvents.EVT_CONNECTED); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT_AUTH_ERROR); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) { closeChannel(); close0(); notifyCallback(JournalClientEvents.EVT_AUTH_CONFIG_ERROR); break; } } while (true); if (!connected && (retryCount == 0 || loginRetryCount == 0)) { event = JournalClientEvents.EVT_SERVER_ERROR; } } try { if (connected && channel.isOpen() && isRunning()) { commandConsumer.read(channel); byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL_DELTA_CMD: statsChannel.setDelegate(channel); int index = intResponseConsumer.getValue(statsChannel); deltaConsumers.getQuick(index).read(statsChannel); statusSentList.set(index, 0); statsChannel.logStats(); break; case Command.SERVER_READY_CMD: sendState(); sendReady(); break; case Command.SERVER_HEARTBEAT: if (processSubscriptionQueue()) { sendReady(); } else { event = JournalClientEvents.EVT_CLIENT_HALT; } break; case Command.SERVER_SHUTDOWN: connected = false; break; default:$(cmd).$(); break; } } else if (event == JournalClientEvents.EVT_NONE) { event = JournalClientEvents.EVT_CLIENT_HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event = JournalClientEvents.EVTLOG.error().$(\" in client\").$(e).$(); eventEXCEPTION; } if (event) { if (channel .isOpen()) { sendDisconnect(); } closeChannel(); close0(); notifyCallback(event); break; } } } catch (Throwable e) { LOG.error$(e).$(); closeChannel(); close0(JournalClientEvents.EVT_TERMINATED); haltLatch.countDown(); LOG.info().$(\"Terminated\").$(); } }"}
{"time": "2021-01-20 11:59:09.482475", "n_pass": [374, 15, 15], "score": "0.797", "loss": "0.3731", "code": "@Override public void run() { running = true; notifyCallback(JournalClientEvents.EVT_RUNNING); int event = JournalClientEvents.EVT_NONE; boolean connected = false; try { while (true) { if (!connected) { int retryCount = config.getReconnectPolicy().getLoginRetryCount(); do { try { closeChannel(); try { openChannel(); counter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-- > 0) { continue; } else { break; } } sendProtocolVersion(); checkAuthAndSendCredential(); notifyCallback(JournalClientEvents.EVT_CONNECTED); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT_AUTH_ERROR); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) { closeChannel(); close0(); notifyCallback(JournalClientEvents.EVT_AUTH_CONFIG_ERROR); break; } } while (true); if (!connected && (retryCount == 0 || loginRetryCount == 0)) { event = JournalClientEvents.EVT_SERVER_ERROR; } } try { if (connected && channel.isOpen() && isRunning()) { commandConsumer.read(channel); byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL_DELTA_CMD: statsChannel.setDelegate(channel); int index = intResponseConsumer.getValue(statsChannel); deltaConsumers.getQuick(index).read(statsChannel); statusSentList.set(index, 0); statsChannel.logStats(); break; case Command.SERVER_READY_CMD: sendState(); sendReady(); break; case Command.SERVER_HEARTBEAT: if (processSubscriptionQueue()) { sendReady(); } else { event = JournalClientEvents.EVT_CLIENT_HALT; } break; case Command.SERVER_SHUTDOWN: connected = false; break; default:$(cmd).$(); break; } } else if (event == JournalClientEvents.EVT_NONE) { event = JournalClientEvents.EVT_CLIENT_HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event = JournalClientEvents.EVTLOG.error().$(\" in client\").$(e).$(); eventEXCEPTION; } if (event) { if (channel .isOpen()) { sendDisconnect(); } closeChannel(); close0(); notifyCallback(event); break; } } } catch (Throwable e) { LOG.error$(e).$(); closeChannel(); close0(JournalClientEvents.EVT_TERMINATED); haltLatch().$(\"Terminated\").$(); } }"}
{"time": "2021-01-20 11:59:11.029585", "n_pass": [375, 16, 16], "score": "0.7158", "loss": "0.4746", "code": "@Override public void run() { running = true; notifyCallback(JournalClientEvents.EVT_RUNNING); int event = JournalClientEvents.EVT_NONE; boolean connected = false; try { while (true) { if (!connected) { int retryCount = config.getReconnectPolicy().getLoginRetryCount(); do { try { closeChannel(); try { openChannel(); counter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-- > 0) { continue; } else { break; } } sendProtocolVersion(); checkAuthAndSendCredential(); notifyCallback(JournalClientEvents.EVT_CONNECTED); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT_AUTH_ERROR); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) { closeChannel(); close0(); notifyCallback(JournalClientEvents.EVT_AUTH_CONFIG_ERROR); break; } } while (true); if (!connected && (retryCount == 0 || loginRetryCount == 0)) { event = JournalClientEvents.EVT_SERVER_ERROR; } } try { if (connected && channel.isOpen() && isRunning()) { commandConsumer.read(channel); byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL_DELTA_CMD: statsChannel.setDelegate(channel); int index = intResponseConsumer.getValue(statsChannel); deltaConsumers.getQuick(index).read(statsChannel); statusSentList.set(index, 0); statsChannel.logStats(); break; case Command.SERVER_READY_CMD: sendState(); sendReady(); break; case Command.SERVER_HEARTBEAT: if (processSubscriptionQueue()) { sendReady(); } else { event = JournalClientEvents.EVT_CLIENT_HALT; } break; case Command.SERVER_SHUTDOWN: connected = false; break; default:$(cmd).$(); break; } } else if (event == JournalClientEvents.EVT_NONE) { event = JournalClientEvents.EVT_CLIENT_HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event = JournalClientEvents.EVTLOG.error().$(\" in client\").$(e).$(); eventEXCEPTION; } if (event) { if (channel .isOpen()) { sendDisconnect(); } closeChannel(); close0(); notifyCallback(event); break; } } } catch (Throwable e) { LOG.error$(e).$(); closeChannel(); close0(JournalClientEvents.EVT_TERMINATED); haltLatch.$(); } }"}
{"time": "2021-01-20 11:59:12.580265", "n_pass": [381, 17, 17], "score": "0.9438", "loss": "0.1075", "code": "@Override public void run() { running = true; notifyCallback(JournalClientEvents.EVT_RUNNING); int NONE; boolean connected = false; try { while (true) { if (!connected) { int retryCount = config.getReconnectPolicy().getLoginRetryCount(); do { try { closeChannel(); try { openChannel(); counter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-- > 0) { continue; } else { break; } } sendProtocolVersion(); checkAuthAndSendCredential(); notifyCallback(JournalClientEvents.EVT_CONNECTED); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT_AUTH_ERROR); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) { closeChannel(); close0(); notifyCallback(JournalClientEvents.EVT_AUTH_CONFIG_ERROR); break; } } while (true); if (!connected && (retryCount == 0 || loginRetryCount == 0)) { event = JournalClientEvents.EVT_SERVER_ERROR; } } try { if (connected && channel.isOpen() && isRunning()) { commandConsumer.read(channel); byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL_DELTA_CMD: statsChannel.setDelegate(channel); int index = intResponseConsumer.getValue(statsChannel); deltaConsumers.getQuick(index).read(statsChannel); statusSentList.set(index, 0); statsChannel.logStats(); break; case Command.SERVER_READY_CMD: sendState(); sendReady(); break; case Command.SERVER_HEARTBEAT: if (processSubscriptionQueue()) { sendReady(); } else { event = JournalClientEvents.EVT_CLIENT_HALT; } break; case Command.SERVER_SHUTDOWN: connected = false; break; default:$(cmd).$(); break; } } else if (event == JournalClientEvents.EVT_NONE) { event = JournalClientEvents.EVT_CLIENT_HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event = JournalClientEvents.EVTLOG.error().$(\" in client\").$(e).$(); eventEXCEPTION; } if (event) { if (channel .isOpen()) { sendDisconnect(); } closeChannel(); close0(); notifyCallback(event); break; } } } catch (Throwable e) { LOG.error$(e).$(); closeChannel(); close0(JournalClientEvents.EVT_TERMINATED); haltLatch.$(); } }"}
{"time": "2021-01-20 11:59:14.131695", "n_pass": [387, 18, 18], "score": "0.614", "loss": "0.7336", "code": "@Override public void run() { running = true; notifyCallback(JournalClientEvents.EVT_RUNNING); int NONE; boolean connected = false; try { while (true) { if (!connected) { int retryCount = config; do { try { closeChannel(); try { openChannel(); counter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-- > 0) { continue; } else { break; } } sendProtocolVersion(); checkAuthAndSendCredential(); notifyCallback(JournalClientEvents.EVT_CONNECTED); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT_AUTH_ERROR); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) { closeChannel(); close0(); notifyCallback(JournalClientEvents.EVT_AUTH_CONFIG_ERROR); break; } } while (true); if (!connected && (retryCount == 0 || loginRetryCount == 0)) { event = JournalClientEvents.EVT_SERVER_ERROR; } } try { if (connected && channel.isOpen() && isRunning()) { commandConsumer.read(channel); byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL_DELTA_CMD: statsChannel.setDelegate(channel); int index = intResponseConsumer.getValue(statsChannel); deltaConsumers.getQuick(index).read(statsChannel); statusSentList.set(index, 0); statsChannel.logStats(); break; case Command.SERVER_READY_CMD: sendState(); sendReady(); break; case Command.SERVER_HEARTBEAT: if (processSubscriptionQueue()) { sendReady(); } else { event = JournalClientEvents.EVT_CLIENT_HALT; } break; case Command.SERVER_SHUTDOWN: connected = false; break; default:$(cmd).$(); break; } } else if (event == JournalClientEvents.EVT_NONE) { event = JournalClientEvents.EVT_CLIENT_HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event = JournalClientEvents.EVTLOG.error().$(\" in client\").$(e).$(); eventEXCEPTION; } if (event) { if (channel .isOpen()) { sendDisconnect(); } closeChannel(); close0(); notifyCallback(event); break; } } } catch (Throwable e) { LOG.error$(e).$(); closeChannel(); close0(JournalClientEvents.EVT_TERMINATED); haltLatch.$(); } }"}
{"time": "2021-01-20 11:59:15.722909", "n_pass": [394, 19, 19], "score": "0.8597", "loss": "0.2564", "code": "@Override public void run() { running = true; notifyCallback(JournalClientEvents.EVT_RUNNING); int NONE; boolean connected = false; try { while (true) { if (!connected) { int retryCount = config; do { try { closeChannel(); try { openChannel(); counter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-- > 0) { break; } } sendProtocolVersion(); checkAuthAndSendCredential(); notifyCallback(JournalClientEvents.EVT_CONNECTED); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT_AUTH_ERROR); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) { closeChannel(); close0(); notifyCallback(JournalClientEvents.EVT_AUTH_CONFIG_ERROR); break; } } while (true); if (!connected && (retryCount == 0 || loginRetryCount == 0)) { event = JournalClientEvents.EVT_SERVER_ERROR; } } try { if (connected && channel.isOpen() && isRunning()) { commandConsumer.read(channel); byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL_DELTA_CMD: statsChannel.setDelegate(channel); int index = intResponseConsumer.getValue(statsChannel); deltaConsumers.getQuick(index).read(statsChannel); statusSentList.set(index, 0); statsChannel.logStats(); break; case Command.SERVER_READY_CMD: sendState(); sendReady(); break; case Command.SERVER_HEARTBEAT: if (processSubscriptionQueue()) { sendReady(); } else { event = JournalClientEvents.EVT_CLIENT_HALT; } break; case Command.SERVER_SHUTDOWN: connected = false; break; default:$(cmd).$(); break; } } else if (event == JournalClientEvents.EVT_NONE) { event = JournalClientEvents.EVT_CLIENT_HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event = JournalClientEvents.EVTLOG.error().$(\" in client\").$(e).$(); eventEXCEPTION; } if (event) { if (channel .isOpen()) { sendDisconnect(); } closeChannel(); close0(); notifyCallback(event); break; } } } catch (Throwable e) { LOG.error$(e).$(); closeChannel(); close0(JournalClientEvents.EVT_TERMINATED); haltLatch.$(); } }"}
{"time": "2021-01-20 11:59:17.267825", "n_pass": [396, 20, 20], "score": "0.4894", "loss": "0.9589", "code": "@Override public void run() { running = true; notifyCallback(JournalClientEvents.EVT_RUNNING); int NONE; boolean connected = false; try { while (true) { if (!connected) { int retryCount = config; do { try { closeChannel(); try { openChannel(); counter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-- > 0) { break; } }; notifyCallback(JournalClientEvents.EVT_CONNECTED); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT_AUTH_ERROR); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) { closeChannel(); close0(); notifyCallback(JournalClientEvents.EVT_AUTH_CONFIG_ERROR); break; } } while (true); if (!connected && (retryCount == 0 || loginRetryCount == 0)) { event = JournalClientEvents.EVT_SERVER_ERROR; } } try { if (connected && channel.isOpen() && isRunning()) { commandConsumer.read(channel); byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL_DELTA_CMD: statsChannel.setDelegate(channel); int index = intResponseConsumer.getValue(statsChannel); deltaConsumers.getQuick(index).read(statsChannel); statusSentList.set(index, 0); statsChannel.logStats(); break; case Command.SERVER_READY_CMD: sendState(); sendReady(); break; case Command.SERVER_HEARTBEAT: if (processSubscriptionQueue()) { sendReady(); } else { event = JournalClientEvents.EVT_CLIENT_HALT; } break; case Command.SERVER_SHUTDOWN: connected = false; break; default:$(cmd).$(); break; } } else if (event == JournalClientEvents.EVT_NONE) { event = JournalClientEvents.EVT_CLIENT_HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event = JournalClientEvents.EVTLOG.error().$(\" in client\").$(e).$(); eventEXCEPTION; } if (event) { if (channel .isOpen()) { sendDisconnect(); } closeChannel(); close0(); notifyCallback(event); break; } } } catch (Throwable e) { LOG.error$(e).$(); closeChannel(); close0(JournalClientEvents.EVT_TERMINATED); haltLatch.$(); } }"}
{"time": "2021-01-20 11:59:18.846415", "n_pass": [409, 21, 21], "score": "0.7084", "loss": "0.5183", "code": "@Override public void run() { running = true; notifyCallback(JournalClientEvents.EVT_RUNNING); int NONE; boolean connected = false; try { while (true) { if (!connected) { int retryCount = config; do { try { closeChannel(); try { openChannel(); counter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-- > 0) { break; } }; notifyCallback(JournalClientEvents.EVT_CONNECTED); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT_AUTH_ERROR); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) { closeChannel(); close0(); notifyCallback(JournalClientEvents.EVT_AUTH_CONFIG_ERROR); break; } } while (true); if (!connected && (retryCount  == 0)) { event = JournalClientEvents.EVT_SERVER_ERROR; } } try { if (connected && channel.isOpen() && isRunning()) { commandConsumer.read(channel); byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL_DELTA_CMD: statsChannel.setDelegate(channel); int index = intResponseConsumer.getValue(statsChannel); deltaConsumers.getQuick(index).read(statsChannel); statusSentList.set(index, 0); statsChannel.logStats(); break; case Command.SERVER_READY_CMD: sendState(); sendReady(); break; case Command.SERVER_HEARTBEAT: if (processSubscriptionQueue()) { sendReady(); } else { event = JournalClientEvents.EVT_CLIENT_HALT; } break; case Command.SERVER_SHUTDOWN: connected = false; break; default:$(cmd).$(); break; } } else if (event == JournalClientEvents.EVT_NONE) { event = JournalClientEvents.EVT_CLIENT_HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event = JournalClientEvents.EVTLOG.error().$(\" in client\").$(e).$(); eventEXCEPTION; } if (event) { if (channel .isOpen()) { sendDisconnect(); } closeChannel(); close0(); notifyCallback(event); break; } } } catch (Throwable e) { LOG.error$(e).$(); closeChannel(); close0(JournalClientEvents.EVT_TERMINATED); haltLatch.$(); } }"}
{"time": "2021-01-20 11:59:20.374525", "n_pass": [411, 22, 22], "score": "0.8101", "loss": "0.3495", "code": "@Override public void run() { running = true; notifyCallback(JournalClientEvents.EVT_RUNNING); int NONE; boolean connected = false; try { while (true) { if (!connected) { int retryCount = config; do { try { closeChannel(); try { openChannel(); counter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-- > 0) { break; } }; notifyCallback(JournalClientEvents.EVT_CONNECTED); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT_AUTH_ERROR); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) { closeChannel(); close0(); notifyCallback(JournalClientEvents.EVT_AUTH_CONFIG_ERROR); break; } } while (true); if (!connected && (retryCount  == 0)) {SERVER_ERROR; } } try { if (connected && channel.isOpen() && isRunning()) { commandConsumer.read(channel); byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL_DELTA_CMD: statsChannel.setDelegate(channel); int index = intResponseConsumer.getValue(statsChannel); deltaConsumers.getQuick(index).read(statsChannel); statusSentList.set(index, 0); statsChannel.logStats(); break; case Command.SERVER_READY_CMD: sendState(); sendReady(); break; case Command.SERVER_HEARTBEAT: if (processSubscriptionQueue()) { sendReady(); } else { event = JournalClientEvents.EVT_CLIENT_HALT; } break; case Command.SERVER_SHUTDOWN: connected = false; break; default:$(cmd).$(); break; } } else if (event == JournalClientEvents.EVT_NONE) { event = JournalClientEvents.EVT_CLIENT_HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event = JournalClientEvents.EVTLOG.error().$(\" in client\").$(e).$(); eventEXCEPTION; } if (event) { if (channel .isOpen()) { sendDisconnect(); } closeChannel(); close0(); notifyCallback(event); break; } } } catch (Throwable e) { LOG.error$(e).$(); closeChannel(); close0(JournalClientEvents.EVT_TERMINATED); haltLatch.$(); } }"}
{"time": "2021-01-20 11:59:21.929584", "n_pass": [414, 23, 23], "score": "0.8403", "loss": "0.2811", "code": "@Override public void run() { running = true; notifyCallback(JournalClientEvents.EVT_RUNNING); int NONE; boolean connected = false; try { while (true) { if (!connected) { int retryCount = config; do { try { closeChannel(); try { openChannel(); counter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-- > 0) { break; } }; notifyCallback(JournalClientEvents.EVT_CONNECTED); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT_AUTH_ERROR); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) { closeChannel(); close0(); notifyCallback(JournalClientEvents.EVT_AUTH_CONFIG_ERROR); break; } } while (true); if (!connected && (retryCount  == 0)) {SERVER_ERROR; } } try { if (connected && isRunning()) { commandConsumer.read(channel); byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL_DELTA_CMD: statsChannel.setDelegate(channel); int index = intResponseConsumer.getValue(statsChannel); deltaConsumers.getQuick(index).read(statsChannel); statusSentList.set(index, 0); statsChannel.logStats(); break; case Command.SERVER_READY_CMD: sendState(); sendReady(); break; case Command.SERVER_HEARTBEAT: if (processSubscriptionQueue()) { sendReady(); } else { event = JournalClientEvents.EVT_CLIENT_HALT; } break; case Command.SERVER_SHUTDOWN: connected = false; break; default:$(cmd).$(); break; } } else if (event == JournalClientEvents.EVT_NONE) { event = JournalClientEvents.EVT_CLIENT_HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event = JournalClientEvents.EVTLOG.error().$(\" in client\").$(e).$(); eventEXCEPTION; } if (event) { if (channel .isOpen()) { sendDisconnect(); } closeChannel(); close0(); notifyCallback(event); break; } } } catch (Throwable e) { LOG.error$(e).$(); closeChannel(); close0(JournalClientEvents.EVT_TERMINATED); haltLatch.$(); } }"}
{"time": "2021-01-20 11:59:23.443579", "n_pass": [416, 24, 24], "score": "0.9599", "loss": "0.0788", "code": "@Override public void run() { running = true; notifyCallback(JournalClientEvents.EVT_RUNNING); int NONE; boolean connected = false; try { while (true) { if (!connected) { int retryCount = config; do { try { closeChannel(); try { openChannel(); counter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-- > 0) { break; } }; notifyCallback(JournalClientEvents.EVT_CONNECTED); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT_AUTH_ERROR); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) { closeChannel(); close0(); notifyCallback(JournalClientEvents.EVT_AUTH_CONFIG_ERROR); break; } } while (true); if (!connected && (retryCount  == 0)) {SERVER_ERROR; } } try { if (connected && isRunning()) {byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL_DELTA_CMD: statsChannel.setDelegate(channel); int index = intResponseConsumer.getValue(statsChannel); deltaConsumers.getQuick(index).read(statsChannel); statusSentList.set(index, 0); statsChannel.logStats(); break; case Command.SERVER_READY_CMD: sendState(); sendReady(); break; case Command.SERVER_HEARTBEAT: if (processSubscriptionQueue()) { sendReady(); } else { event = JournalClientEvents.EVT_CLIENT_HALT; } break; case Command.SERVER_SHUTDOWN: connected = false; break; default:$(cmd).$(); break; } } else if (event == JournalClientEvents.EVT_NONE) { event = JournalClientEvents.EVT_CLIENT_HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event = JournalClientEvents.EVTLOG.error().$(\" in client\").$(e).$(); eventEXCEPTION; } if (event) { if (channel .isOpen()) { sendDisconnect(); } closeChannel(); close0(); notifyCallback(event); break; } } } catch (Throwable e) { LOG.error$(e).$(); closeChannel(); close0(JournalClientEvents.EVT_TERMINATED); haltLatch.$(); } }"}
{"time": "2021-01-20 11:59:25.130259", "n_pass": [428, 25, 25], "score": "0.9792", "loss": "0.051", "code": "@Override public void run() { running = true; notifyCallback(JournalClientEvents.EVT_RUNNING); int NONE; boolean connected = false; try { while (true) { if (!connected) { int retryCount = config; do { try { closeChannel(); try { openChannel(); counter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-- > 0) { break; } }; notifyCallback(JournalClientEvents.EVT_CONNECTED); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT_AUTH_ERROR); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) { closeChannel(); close0(); notifyCallback(JournalClientEvents.EVT_AUTH_CONFIG_ERROR); break; } } while (true); if (!connected && (retryCount  == 0)) {SERVER_ERROR; } } try { if (connected && isRunning()) {byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL_DELTA_CMD: statsChannel.setDelegate(channel); int index = intResponseConsumer.getValue(statsChannel); deltaConsumers.getQuick(index).read(statsChannel); statusSentList.set(index, 0); statsChannel.logStats(); break; case Command.SERVER_READY_CMD: sendStatebreak; case Command.SERVER_HEARTBEAT: if (processSubscriptionQueue()) { sendReady(); } else { event = JournalClientEvents.EVT_CLIENT_HALT; } break; case Command.SERVER_SHUTDOWN: connected = false; break; default:$(cmd).$(); break; } } else if (event == JournalClientEvents.EVT_NONE) { event = JournalClientEvents.EVT_CLIENT_HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event = JournalClientEvents.EVTLOG.error().$(\" in client\").$(e).$(); eventEXCEPTION; } if (event) { if (channel .isOpen()) { sendDisconnect(); } closeChannel(); close0(); notifyCallback(event); break; } } } catch (Throwable e) { LOG.error$(e).$(); closeChannel(); close0(JournalClientEvents.EVT_TERMINATED); haltLatch.$(); } }"}
{"time": "2021-01-20 11:59:26.642343", "n_pass": [429, 26, 26], "score": "0.8934", "loss": "0.1581", "code": "@Override public void run() { running = true; notifyCallback(JournalClientEvents.EVT_RUNNING); int NONE; boolean connected = false; try { while (true) { if (!connected) { int retryCount = config; do { try { closeChannel(); try { openChannel(); counter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-- > 0) { break; } }; notifyCallback(JournalClientEvents.EVT_CONNECTED); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT_AUTH_ERROR); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) { closeChannel(); close0(); notifyCallback(JournalClientEvents.EVT_AUTH_CONFIG_ERROR); break; } } while (true); if (!connected && (retryCount  == 0)) {SERVER_ERROR; } } try { if (connected && isRunning()) {byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL_DELTA_CMD: statsChannel.setDelegate(channel); int index = intResponseConsumer.getValue(statsChannel); deltaConsumers.getQuick(index).read(statsChannel); statusSentList.set(index, 0); statsChannel.logStats(); break; case Command.SERVER_READY_CMD: sendStateHEARTBEAT: if (processSubscriptionQueue()) { sendReady(); } else { event = JournalClientEvents.EVT_CLIENT_HALT; } break; case Command.SERVER_SHUTDOWN: connected = false; break; default:$(cmd).$(); break; } } else if (event == JournalClientEvents.EVT_NONE) { event = JournalClientEvents.EVT_CLIENT_HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event = JournalClientEvents.EVTLOG.error().$(\" in client\").$(e).$(); eventEXCEPTION; } if (event) { if (channel .isOpen()) { sendDisconnect(); } closeChannel(); close0(); notifyCallback(event); break; } } } catch (Throwable e) { LOG.error$(e).$(); closeChannel(); close0(JournalClientEvents.EVT_TERMINATED); haltLatch.$(); } }"}
{"time": "2021-01-20 11:59:28.162969", "n_pass": [432, 27, 27], "score": "0.7975", "loss": "0.3399", "code": "@Override public void run() { running = true; notifyCallback(JournalClientEvents.EVT_RUNNING); int NONE; boolean connected = false; try { while (true) { if (!connected) { int retryCount = config; do { try { closeChannel(); try { openChannel(); counter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-- > 0) { break; } }; notifyCallback(JournalClientEvents.EVT_CONNECTED); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT_AUTH_ERROR); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) { closeChannel(); close0(); notifyCallback(JournalClientEvents.EVT_AUTH_CONFIG_ERROR); break; } } while (true); if (!connected && (retryCount  == 0)) {SERVER_ERROR; } } try { if (connected && isRunning()) {byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL_DELTA_CMD: statsChannel.setDelegate(channel); int index = intResponseConsumer.getValue(statsChannel); deltaConsumers.getQuick(index).read(statsChannel); statusSentList.set(index, 0); statsChannel.logStats(); break; case Command.SERVER_READY_CMD: sendStateHEARTBEAT: if (processSubscriptionQueue()) { sendReady();  JournalClientEvents.EVT_CLIENT_HALT; } break; case Command.SERVER_SHUTDOWN: connected = false; break; default:$(cmd).$(); break; } } else if (event == JournalClientEvents.EVT_NONE) { event = JournalClientEvents.EVT_CLIENT_HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event = JournalClientEvents.EVTLOG.error().$(\" in client\").$(e).$(); eventEXCEPTION; } if (event) { if (channel .isOpen()) { sendDisconnect(); } closeChannel(); close0(); notifyCallback(event); break; } } } catch (Throwable e) { LOG.error$(e).$(); closeChannel(); close0(JournalClientEvents.EVT_TERMINATED); haltLatch.$(); } }"}
{"time": "2021-01-20 11:59:29.691826", "n_pass": [433, 28, 28], "score": "0.9614", "loss": "0.0714", "code": "@Override public void run() { running = true; notifyCallback(JournalClientEvents.EVT_RUNNING); int NONE; boolean connected = false; try { while (true) { if (!connected) { int retryCount = config; do { try { closeChannel(); try { openChannel(); counter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-- > 0) { break; } }; notifyCallback(JournalClientEvents.EVT_CONNECTED); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT_AUTH_ERROR); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) { closeChannel(); close0(); notifyCallback(JournalClientEvents.EVT_AUTH_CONFIG_ERROR); break; } } while (true); if (!connected && (retryCount  == 0)) {SERVER_ERROR; } } try { if (connected && isRunning()) {byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL_DELTA_CMD: statsChannel.setDelegate(channel); int index = intResponseConsumer.getValue(statsChannel); deltaConsumers.getQuick(index).read(statsChannel); statusSentList.set(index, 0); statsChannel.logStats(); break; case Command.SERVER_READY_CMD: sendStateHEARTBEAT: if (processSubscriptionQueue()) { sendReady();  } break; case Command.SERVER_SHUTDOWN: connected = false; break; default:$(cmd).$(); break; } } else if (event == JournalClientEvents.EVT_NONE) { event = JournalClientEvents.EVT_CLIENT_HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event = JournalClientEvents.EVTLOG.error().$(\" in client\").$(e).$(); eventEXCEPTION; } if (event) { if (channel .isOpen()) { sendDisconnect(); } closeChannel(); close0(); notifyCallback(event); break; } } } catch (Throwable e) { LOG.error$(e).$(); closeChannel(); close0(JournalClientEvents.EVT_TERMINATED); haltLatch.$(); } }"}
{"time": "2021-01-20 11:59:31.215953", "n_pass": [436, 29, 29], "score": "0.9446", "loss": "0.0992", "code": "@Override public void run() { running = true; notifyCallback(JournalClientEvents.EVT_RUNNING); int NONE; boolean connected = false; try { while (true) { if (!connected) { int retryCount = config; do { try { closeChannel(); try { openChannel(); counter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-- > 0) { break; } }; notifyCallback(JournalClientEvents.EVT_CONNECTED); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT_AUTH_ERROR); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) { closeChannel(); close0(); notifyCallback(JournalClientEvents.EVT_AUTH_CONFIG_ERROR); break; } } while (true); if (!connected && (retryCount  == 0)) {SERVER_ERROR; } } try { if (connected && isRunning()) {byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL_DELTA_CMD: statsChannel.setDelegate(channel); int index = intResponseConsumer.getValue(statsChannel); deltaConsumers.getQuick(index).read(statsChannel); statusSentList.set(index, 0); statsChannel.logStats(); break; case Command.SERVER_READY_CMD: sendStateHEARTBEAT: if (processSubscriptionQueue()) { sendReady();  } break; case Command.SERVER_SHUTDOWN: connected =$(cmd).$(); break; } } else if (event == JournalClientEvents.EVT_NONE) { event = JournalClientEvents.EVT_CLIENT_HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event = JournalClientEvents.EVTLOG.error().$(\" in client\").$(e).$(); eventEXCEPTION; } if (event) { if (channel .isOpen()) { sendDisconnect(); } closeChannel(); close0(); notifyCallback(event); break; } } } catch (Throwable e) { LOG.error$(e).$(); closeChannel(); close0(JournalClientEvents.EVT_TERMINATED); haltLatch.$(); } }"}
{"time": "2021-01-20 11:59:32.742004", "n_pass": [441, 30, 30], "score": "0.7395", "loss": "0.4708", "code": "@Override public void run() { running = true; notifyCallback(JournalClientEvents.EVT_RUNNING); int NONE; boolean connected = false; try { while (true) { if (!connected) { int retryCount = config; do { try { closeChannel(); try { openChannel(); counter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-- > 0) { break; } }; notifyCallback(JournalClientEvents.EVT_CONNECTED); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT_AUTH_ERROR); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) { closeChannel(); close0(); notifyCallback(JournalClientEvents.EVT_AUTH_CONFIG_ERROR); break; } } while (true); if (!connected && (retryCount  == 0)) {SERVER_ERROR; } } try { if (connected && isRunning()) {byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL_DELTA_CMD: statsChannel.setDelegate(channel); int index = intResponseConsumer.getValue(statsChannel); deltaConsumers.getQuick(index).read(statsChannel); statusSentList.set(index, 0); statsChannel.logStats(); break; case Command.SERVER_READY_CMD: sendStateHEARTBEAT: if (processSubscriptionQueue()) { sendReady();  } break; case Command.SERVER_SHUTDOWN: connected =$(cmd).$(); break; } } else if (event == JournalClientEvents.EVT_NONE) { _HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event = JournalClientEvents.EVTLOG.error().$(\" in client\").$(e).$(); eventEXCEPTION; } if (event) { if (channel .isOpen()) { sendDisconnect(); } closeChannel(); close0(); notifyCallback(event); break; } } } catch (Throwable e) { LOG.error$(e).$(); closeChannel(); close0(JournalClientEvents.EVT_TERMINATED); haltLatch.$(); } }"}
{"time": "2021-01-20 11:59:34.396871", "n_pass": [470, 31, 31], "score": "0.4926", "loss": "1.0235", "code": "@Override public void run() { running = true; notifyCallback(JournalClientEvents.EVT_RUNNING); int NONE; boolean connected = false; try { while (true) { if (!connected) {; do { try { closeChannel(); try { openChannel(); counter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-- > 0) { break; } }; notifyCallback(JournalClientEvents.EVT_CONNECTED); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT_AUTH_ERROR); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) { closeChannel(); close0(); notifyCallback(JournalClientEvents.EVT_AUTH_CONFIG_ERROR); break; } } while (true); if (!connected && (retryCount  == 0)) {SERVER_ERROR; } } try { if (connected && isRunning()) {byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL_DELTA_CMD: statsChannel.setDelegate(channel); int index = intResponseConsumer.getValue(statsChannel); deltaConsumers.getQuick(index).read(statsChannel); statusSentList.set(index, 0); statsChannel.logStats(); break; case Command.SERVER_READY_CMD: sendStateHEARTBEAT: if (processSubscriptionQueue()) { sendReady();  } break; case Command.SERVER_SHUTDOWN: connected =$(cmd).$(); break; } } else if (event == JournalClientEvents.EVT_NONE) { _HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event = JournalClientEvents.EVTLOG.error().$(\" in client\").$(e).$(); eventEXCEPTION; } if (event) { if (channel .isOpen()) { sendDisconnect(); } closeChannel(); close0(); notifyCallback(event); break; } } } catch (Throwable e) { LOG.error$(e).$(); closeChannel(); close0(JournalClientEvents.EVT_TERMINATED); haltLatch.$(); } }"}
{"time": "2021-01-20 11:59:36.076056", "n_pass": [504, 32, 32], "score": "0.9926", "loss": "0.0189", "code": "@Override public void run() { running = true; notifyCallback(JournalClientEvents.EVT_RUNNING); int NONE; boolean connected = false; try { while (true) { if (!connected) {; do { try { closeChannel(); try { openChannel(); counter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-- > 0) { break; } }; notifyCallback(JournalClientEvents.EVT_CONNECTED); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT_AUTH_ERROR); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) { closeChannel(); close0(); notifyCallback(JournalClientEvents.EVT_AUTH_CONFIG_ERROR); break; } } while (true); if (!connected && (retryCount  == 0)) {SERVER_ERROR; } } try { if (connected && isRunning()) {byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL_DELTA_CMD: statsChannel.setDelegate(channel); int index = intResponseConsumer.getValue(statsChannel); deltaConsumers.getQuick(index).read(statsChannel); statusSentList.set(index, 0); statsChannel.logStats(); break; case CommandHEARTBEAT: if (processSubscriptionQueue()) { sendReady();  } break; case Command.SERVER_SHUTDOWN: connected =$(cmd).$(); break; } } else if (event == JournalClientEvents.EVT_NONE) { _HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event = JournalClientEvents.EVTLOG.error().$(\" in client\").$(e).$(); eventEXCEPTION; } if (event) { if (channel .isOpen()) { sendDisconnect(); } closeChannel(); close0(); notifyCallback(event); break; } } } catch (Throwable e) { LOG.error$(e).$(); closeChannel(); close0(JournalClientEvents.EVT_TERMINATED); haltLatch.$(); } }"}
{"time": "2021-01-20 11:59:38.098326", "n_pass": [715, 33, 33], "score": "0.8471", "loss": "0.2721", "code": "@Override public void run() { running = true; notifyCallback(JournalClientEvents.EVT_RUNNING); int NONE; boolean connected = false; try { while (true) { if (!connected) {; do { try { closeChannel(); try { openChannel(); counter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-- > 0) { break; } }; notifyCallback(JournalClientEvents.EVT_CONNECTED); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT_AUTH_ERROR); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) { closeChannel(); close0(); notifyCallback(JournalClientEvents.EVT_AUTH_CONFIG_ERROR); break; } } while (true); if (!connected && (retryCount  == 0)) {SERVER_ERROR; } } try { if (connected && isRunning()) {byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL_DELTA_CMD: statsChannel.setDelegate(channel); int index = intResponseConsumer.getValue(statsChannel); deltaConsumers.getQuick(index).read(statsChannel); statusSentList.set(index, 0); ; break; case CommandHEARTBEAT: if (processSubscriptionQueue()) { sendReady();  } break; case Command.SERVER_SHUTDOWN: connected =$(cmd).$(); break; } } else if (event == JournalClientEvents.EVT_NONE) { _HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event = JournalClientEvents.EVTLOG.error().$(\" in client\").$(e).$(); eventEXCEPTION; } if (event) { if (channel .isOpen()) { sendDisconnect(); } closeChannel(); close0(); notifyCallback(event); break; } } } catch (Throwable e) { LOG.error$(e).$(); closeChannel(); close0(JournalClientEvents.EVT_TERMINATED); haltLatch.$(); } }"}
{"time": "2021-01-20 11:59:39.636591", "n_pass": [716, 34, 34], "score": "0.9471", "loss": "0.0975", "code": "@Override public void run() { running = true; notifyCallback(JournalClientEvents.EVT_RUNNING); int NONE; boolean connected = false; try { while (true) { if (!connected) {; do { try { closeChannel(); try { openChannel(); counter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-- > 0) { break; } }; notifyCallback(JournalClientEvents.EVT_CONNECTED); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT_AUTH_ERROR); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) { closeChannel(); close0(); notifyCallback(JournalClientEvents.EVT_AUTH_CONFIG_ERROR); break; } } while (true); if (!connected && (retryCount  == 0)) {SERVER_ERROR; } } try { if (connected && isRunning()) {byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL_DELTA_CMD: statsChannel.setDelegate(channel); int index = intResponseConsumer.getValue(statsChannel); deltaConsumers.getQuick(index).read(statsChannel); statusSentList.set(index, 0); case CommandHEARTBEAT: if (processSubscriptionQueue()) { sendReady();  } break; case Command.SERVER_SHUTDOWN: connected =$(cmd).$(); break; } } else if (event == JournalClientEvents.EVT_NONE) { _HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event = JournalClientEvents.EVTLOG.error().$(\" in client\").$(e).$(); eventEXCEPTION; } if (event) { if (channel .isOpen()) { sendDisconnect(); } closeChannel(); close0(); notifyCallback(event); break; } } } catch (Throwable e) { LOG.error$(e).$(); closeChannel(); close0(JournalClientEvents.EVT_TERMINATED); haltLatch.$(); } }"}
{"time": "2021-01-20 11:59:41.166158", "n_pass": [717, 35, 35], "score": "0.9585", "loss": "0.0881", "code": "@Override public void run() { running = true; notifyCallback(JournalClientEvents.EVT_RUNNING); int NONE; boolean connected = false; try { while (true) { if (!connected) {; do { try { closeChannel(); try { openChannel(); counter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-- > 0) { break; } }; notifyCallback(JournalClientEvents.EVT_CONNECTED); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT_AUTH_ERROR); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) { closeChannel(); close0(); notifyCallback(JournalClientEvents.EVT_AUTH_CONFIG_ERROR); break; } } while (true); if (!connected && (retryCount  == 0)) {SERVER_ERROR; } } try { if (connected && isRunning()) {byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL_DELTA_CMD: statsChannel.setDelegate(channel); int index = intResponseConsumer.getValue(statsChannel); deltaConsumers.getQuick(index).read(statsChannel); statusSentList.set(index, 0);  if (processSubscriptionQueue()) { sendReady();  } break; case Command.SERVER_SHUTDOWN: connected =$(cmd).$(); break; } } else if (event == JournalClientEvents.EVT_NONE) { _HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event = JournalClientEvents.EVTLOG.error().$(\" in client\").$(e).$(); eventEXCEPTION; } if (event) { if (channel .isOpen()) { sendDisconnect(); } closeChannel(); close0(); notifyCallback(event); break; } } } catch (Throwable e) { LOG.error$(e).$(); closeChannel(); close0(JournalClientEvents.EVT_TERMINATED); haltLatch.$(); } }"}
{"time": "2021-01-20 11:59:42.666491", "n_pass": [720, 36, 36], "score": "0.9067", "loss": "0.1669", "code": "@Override public void run() { running = true; notifyCallback(JournalClientEvents.EVT_RUNNING); int NONE; boolean connected = false; try { while (true) { if (!connected) {; do { try { closeChannel(); try { openChannel(); counter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-- > 0) { break; } }; notifyCallback(JournalClientEvents.EVT_CONNECTED); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT_AUTH_ERROR); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) { closeChannel(); close0(); notifyCallback(JournalClientEvents.EVT_AUTH_CONFIG_ERROR); break; } } while (true); if (!connected && (retryCount  == 0)) {SERVER_ERROR; } } try { if (connected && isRunning()) {byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL_DELTA_CMD: statsChannel.setDelegate(channel); int index = intResponseConsumer.getValue(statsChannel); deltaConsumers.getQuick(index).read(statsChannel); statusSentList.set(index, 0);  if (processSubscriptionQueue()) {  } break; case Command.SERVER_SHUTDOWN: connected =$(cmd).$(); break; } } else if (event == JournalClientEvents.EVT_NONE) { _HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event = JournalClientEvents.EVTLOG.error().$(\" in client\").$(e).$(); eventEXCEPTION; } if (event) { if (channel .isOpen()) { sendDisconnect(); } closeChannel(); close0(); notifyCallback(event); break; } } } catch (Throwable e) { LOG.error$(e).$(); closeChannel(); close0(JournalClientEvents.EVT_TERMINATED); haltLatch.$(); } }"}
{"time": "2021-01-20 11:59:44.180041", "n_pass": [724, 37, 37], "score": "0.9822", "loss": "0.0314", "code": "@Override public void run() { running = true; notifyCallback(JournalClientEvents.EVT_RUNNING); int NONE; boolean connected = false; try { while (true) { if (!connected) {; do { try { closeChannel(); try { openChannel(); counter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-- > 0) { break; } }; notifyCallback(JournalClientEvents.EVT_CONNECTED); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT_AUTH_ERROR); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) { closeChannel(); close0(); notifyCallback(JournalClientEvents.EVT_AUTH_CONFIG_ERROR); break; } } while (true); if (!connected && (retryCount  == 0)) {SERVER_ERROR; } } try { if (connected && isRunning()) {byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL_DELTA_CMD: statsChannel.setDelegate(channel); int index = intResponseConsumer.getValue(statsChannel); deltaConsumers.getQuick(index).read(statsChannel); statusSentList.set(index, 0);  if (processSubscriptionQueue()) {  } break; case Command.SERVER_SHUTDOWN:(cmd).$(); break; } } else if (event == JournalClientEvents.EVT_NONE) { _HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event = JournalClientEvents.EVTLOG.error().$(\" in client\").$(e).$(); eventEXCEPTION; } if (event) { if (channel .isOpen()) { sendDisconnect(); } closeChannel(); close0(); notifyCallback(event); break; } } } catch (Throwable e) { LOG.error$(e).$(); closeChannel(); close0(JournalClientEvents.EVT_TERMINATED); haltLatch.$(); } }"}
{"time": "2021-01-20 11:59:45.679955", "n_pass": [726, 38, 38], "score": "0.8166", "loss": "0.3573", "code": "@Override public void run() { running = true; notifyCallback(JournalClientEvents.EVT_RUNNING); int NONE; boolean connected = false; try { while (true) { if (!connected) {; do { try { closeChannel(); try { openChannel(); counter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-- > 0) { break; } }; notifyCallback(JournalClientEvents.EVT_CONNECTED); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT_AUTH_ERROR); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) { closeChannel(); close0(); notifyCallback(JournalClientEvents.EVT_AUTH_CONFIG_ERROR); break; } } while (true); if (!connected && (retryCount  == 0)) {SERVER_ERROR; } } try { if (connected && isRunning()) {byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL_DELTA_CMD: statsChannel.setDelegate(channel); int index = intResponseConsumer.getValue(statsChannel); deltaConsumers.getQuick(index).read(statsChannel); statusSentList.set(index, 0);  if (processSubscriptionQueue()) {  } break; case Command.SERVER_SHUTDOWN:(cmd).$; } } else if (event == JournalClientEvents.EVT_NONE) { _HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event = JournalClientEvents.EVTLOG.error().$(\" in client\").$(e).$(); eventEXCEPTION; } if (event) { if (channel .isOpen()) { sendDisconnect(); } closeChannel(); close0(); notifyCallback(event); break; } } } catch (Throwable e) { LOG.error$(e).$(); closeChannel(); close0(JournalClientEvents.EVT_TERMINATED); haltLatch.$(); } }"}
{"time": "2021-01-20 11:59:47.188531", "n_pass": [730, 39, 39], "score": "0.7192", "loss": "0.5056", "code": "@Override public void run() { running = true; notifyCallback(JournalClientEvents.EVT_RUNNING); int NONE; boolean connected = false; try { while (true) { if (!connected) {; do { try { closeChannel(); try { openChannel(); counter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-- > 0) { break; } }; notifyCallback(JournalClientEvents.EVT_CONNECTED); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT_AUTH_ERROR); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) { closeChannel(); close0(); notifyCallback(JournalClientEvents.EVT_AUTH_CONFIG_ERROR); break; } } while (true); if (!connected && (retryCount  == 0)) {SERVER_ERROR; } } try { if (connected && isRunning()) {byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL_DELTA_CMD: statsChannel.setDelegate(channel); int index = intResponseConsumer.getValue(statsChannel); deltaConsumers.getQuick(index).read(statsChannel); statusSentList.set(index, 0);  if (processSubscriptionQueue()) {  } break; case Command.SERVER_SHUTDOWN:(cmd).$; } } else if (event ==NONE) { _HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event = JournalClientEvents.EVTLOG.error().$(\" in client\").$(e).$(); eventEXCEPTION; } if (event) { if (channel .isOpen()) { sendDisconnect(); } closeChannel(); close0(); notifyCallback(event); break; } } } catch (Throwable e) { LOG.error$(e).$(); closeChannel(); close0(JournalClientEvents.EVT_TERMINATED); haltLatch.$(); } }"}
{"time": "2021-01-20 11:59:48.743112", "n_pass": [741, 40, 40], "score": "0.7477", "loss": "0.4943", "code": "@Override public void run() { running = true; notifyCallback(JournalClientEvents.EVT_RUNNING); int NONE; boolean connected = false; try { while (true) { if (!connected) {; do { try { closeChannel(); try { openChannel(); counter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-- > 0) { break; } }; notifyCallback(JournalClientEvents.EVT_CONNECTED); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT_AUTH_ERROR); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) { closeChannel(); close0(); notifyCallback(JournalClientEvents.EVT_AUTH_CONFIG_ERROR); break; } } while (true); if (!connected && (retryCount  == 0)) {SERVER_ERROR; } } try { if (connected && isRunning()) {byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL_DELTA_CMD: statsChannel.setDelegate(channel); int index = intResponseConsumer.getValue(statsChannel); deltaConsumers.getQuick(index).read(statsChannel); statusSentList.set(index, 0);  if (processSubscriptionQueue()) {  } break; case Command.SERVER_SHUTDOWN:(cmd).$; } } else if (event ==NONE) { _HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event = JournalClientEvents.EVT.$(\" in client\").$(e).$(); eventEXCEPTION; } if (event) { if (channel .isOpen()) { sendDisconnect(); } closeChannel(); close0(); notifyCallback(event); break; } } } catch (Throwable e) { LOG.error$(e).$(); closeChannel(); close0(JournalClientEvents.EVT_TERMINATED); haltLatch.$(); } }"}
{"time": "2021-01-20 11:59:50.271023", "n_pass": [744, 41, 41], "score": "0.9562", "loss": "0.0909", "code": "@Override public void run() { running = true; notifyCallback(JournalClientEvents.EVT_RUNNING); int NONE; boolean connected = false; try { while (true) { if (!connected) {; do { try { closeChannel(); try { openChannel(); counter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-- > 0) { break; } }; notifyCallback(JournalClientEvents.EVT_CONNECTED); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT_AUTH_ERROR); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) { closeChannel(); close0(); notifyCallback(JournalClientEvents.EVT_AUTH_CONFIG_ERROR); break; } } while (true); if (!connected && (retryCount  == 0)) {SERVER_ERROR; } } try { if (connected && isRunning()) {byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL_DELTA_CMD: statsChannel.setDelegate(channel); int index = intResponseConsumer.getValue(statsChannel); deltaConsumers.getQuick(index).read(statsChannel); statusSentList.set(index, 0);  if (processSubscriptionQueue()) {  } break; case Command.SERVER_SHUTDOWN:(cmd).$; } } else if (event ==NONE) { _HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event = JournalClientEvents.EVT.$(\" in client\").$(); eventEXCEPTION; } if (event) { if (channel .isOpen()) { sendDisconnect(); } closeChannel(); close0(); notifyCallback(event); break; } } } catch (Throwable e) { LOG.error$(e).$(); closeChannel(); close0(JournalClientEvents.EVT_TERMINATED); haltLatch.$(); } }"}
{"time": "2021-01-20 11:59:51.791909", "n_pass": [746, 42, 42], "score": "0.944", "loss": "0.1139", "code": "@Override public void run() { running = true; notifyCallback(JournalClientEvents.EVT_RUNNING); int NONE; boolean connected = false; try { while (true) { if (!connected) {; do { try { closeChannel(); try { openChannel(); counter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-- > 0) { break; } }; notifyCallback(JournalClientEvents.EVT_CONNECTED); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT_AUTH_ERROR); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) { closeChannel(); close0(); notifyCallback(JournalClientEvents.EVT_AUTH_CONFIG_ERROR); break; } } while (true); if (!connected && (retryCount  == 0)) {SERVER_ERROR; } } try { if (connected && isRunning()) {byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL_DELTA_CMD: statsChannel.setDelegate(channel); int index = intResponseConsumer.getValue(statsChannel); deltaConsumers.getQuick(index).read(statsChannel); statusSentList.set(index, 0);  if (processSubscriptionQueue()) {  } break; case Command.SERVER_SHUTDOWN:(cmd).$; } } else if (event ==NONE) { _HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event = JournalClientEvents.EVT.$(\" in client\").$();} if (event) { if (channel .isOpen()) { sendDisconnect(); } closeChannel(); close0(); notifyCallback(event); break; } } } catch (Throwable e) { LOG.error$(e).$(); closeChannel(); close0(JournalClientEvents.EVT_TERMINATED); haltLatch.$(); } }"}
{"time": "2021-01-20 11:59:53.337189", "n_pass": [753, 43, 43], "score": "0.967", "loss": "0.0656", "code": "@Override public void run() { running = true; notifyCallback(JournalClientEvents.EVT_RUNNING); int NONE; boolean connected = false; try { while (true) { if (!connected) {; do { try { closeChannel(); try { openChannel(); counter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-- > 0) { break; } }; notifyCallback(JournalClientEvents.EVT_CONNECTED); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT_AUTH_ERROR); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) { closeChannel(); close0(); notifyCallback(JournalClientEvents.EVT_AUTH_CONFIG_ERROR); break; } } while (true); if (!connected && (retryCount  == 0)) {SERVER_ERROR; } } try { if (connected && isRunning()) {byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL_DELTA_CMD: statsChannel.setDelegate(channel); int index = intResponseConsumer.getValue(statsChannel); deltaConsumers.getQuick(index).read(statsChannel); statusSentList.set(index, 0);  if (processSubscriptionQueue()) {  } break; case Command.SERVER_SHUTDOWN:(cmd).$; } } else if (event ==NONE) { _HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event = JournalClientEvents.EVT.$(\" in client\").$();} if (event) { if (channel .isOpen()) { sendDisconnect(); } close0(); notifyCallback(event); break; } } } catch (Throwable e) { LOG.error$(e).$(); closeChannel(); close0(JournalClientEvents.EVT_TERMINATED); haltLatch.$(); } }"}
{"time": "2021-01-20 11:59:54.828371", "n_pass": [754, 44, 44], "score": "0.8898", "loss": "0.2142", "code": "@Override public void run() { running = true; notifyCallback(JournalClientEvents.EVT_RUNNING); int NONE; boolean connected = false; try { while (true) { if (!connected) {; do { try { closeChannel(); try { openChannel(); counter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-- > 0) { break; } }; notifyCallback(JournalClientEvents.EVT_CONNECTED); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT_AUTH_ERROR); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) { closeChannel(); close0(); notifyCallback(JournalClientEvents.EVT_AUTH_CONFIG_ERROR); break; } } while (true); if (!connected && (retryCount  == 0)) {SERVER_ERROR; } } try { if (connected && isRunning()) {byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL_DELTA_CMD: statsChannel.setDelegate(channel); int index = intResponseConsumer.getValue(statsChannel); deltaConsumers.getQuick(index).read(statsChannel); statusSentList.set(index, 0);  if (processSubscriptionQueue()) {  } break; case Command.SERVER_SHUTDOWN:(cmd).$; } } else if (event ==NONE) { _HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event = JournalClientEvents.EVT.$(\" in client\").$();} if (event) { if (channel .isOpen()) { sendDisconnect(); }  notifyCallback(event); break; } } } catch (Throwable e) { LOG.error$(e).$(); closeChannel(); close0(JournalClientEvents.EVT_TERMINATED); haltLatch.$(); } }"}
{"time": "2021-01-20 11:59:56.307568", "n_pass": [755, 45, 45], "score": "0.9664", "loss": "0.0686", "code": "@Override public void run() { running = true; notifyCallback(JournalClientEvents.EVT_RUNNING); int NONE; boolean connected = false; try { while (true) { if (!connected) {; do { try { closeChannel(); try { openChannel(); counter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-- > 0) { break; } }; notifyCallback(JournalClientEvents.EVT_CONNECTED); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT_AUTH_ERROR); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) { closeChannel(); close0(); notifyCallback(JournalClientEvents.EVT_AUTH_CONFIG_ERROR); break; } } while (true); if (!connected && (retryCount  == 0)) {SERVER_ERROR; } } try { if (connected && isRunning()) {byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL_DELTA_CMD: statsChannel.setDelegate(channel); int index = intResponseConsumer.getValue(statsChannel); deltaConsumers.getQuick(index).read(statsChannel); statusSentList.set(index, 0);  if (processSubscriptionQueue()) {  } break; case Command.SERVER_SHUTDOWN:(cmd).$; } } else if (event ==NONE) { _HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event = JournalClientEvents.EVT.$(\" in client\").$();} if (event) { if (channel .isOpen()) { sendDisconnect(); } ; break; } } } catch (Throwable e) { LOG.error$(e).$(); closeChannel(); close0(JournalClientEvents.EVT_TERMINATED); haltLatch.$(); } }"}
{"time": "2021-01-20 11:59:57.787115", "n_pass": [756, 46, 46], "score": "0.9774", "loss": "0.0477", "code": "@Override public void run() { running = true; notifyCallback(JournalClientEvents.EVT_RUNNING); int NONE; boolean connected = false; try { while (true) { if (!connected) {; do { try { closeChannel(); try { openChannel(); counter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-- > 0) { break; } }; notifyCallback(JournalClientEvents.EVT_CONNECTED); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT_AUTH_ERROR); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) { closeChannel(); close0(); notifyCallback(JournalClientEvents.EVT_AUTH_CONFIG_ERROR); break; } } while (true); if (!connected && (retryCount  == 0)) {SERVER_ERROR; } } try { if (connected && isRunning()) {byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL_DELTA_CMD: statsChannel.setDelegate(channel); int index = intResponseConsumer.getValue(statsChannel); deltaConsumers.getQuick(index).read(statsChannel); statusSentList.set(index, 0);  if (processSubscriptionQueue()) {  } break; case Command.SERVER_SHUTDOWN:(cmd).$; } } else if (event ==NONE) { _HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event = JournalClientEvents.EVT.$(\" in client\").$();} if (event) { if (channel .isOpen()) { sendDisconnect(); } } } } catch (Throwable e) { LOG.error$(e).$(); closeChannel(); close0(JournalClientEvents.EVT_TERMINATED); haltLatch.$(); } }"}
{"time": "2021-01-20 11:59:59.280344", "n_pass": [760, 47, 47], "score": "0.881", "loss": "0.2291", "code": "@Override public void run() { running = true; notifyCallback(JournalClientEvents.EVT_RUNNING); int NONE; boolean connected = false; try { while (true) { if (!connected) {; do { try { closeChannel(); try { openChannel(); counter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-- > 0) { break; } }; notifyCallback(JournalClientEvents.EVT_CONNECTED); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT_AUTH_ERROR); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) { closeChannel(); close0(); notifyCallback(JournalClientEvents.EVT_AUTH_CONFIG_ERROR); break; } } while (true); if (!connected && (retryCount  == 0)) {SERVER_ERROR; } } try { if (connected && isRunning()) {byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL_DELTA_CMD: statsChannel.setDelegate(channel); int index = intResponseConsumer.getValue(statsChannel); deltaConsumers.getQuick(index).read(statsChannel); statusSentList.set(index, 0);  if (processSubscriptionQueue()) {  } break; case Command.SERVER_SHUTDOWN:(cmd).$; } } else if (event ==NONE) { _HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event = JournalClientEvents.EVT.$(\" in client\").$();} if (event) { if (channel .isOpen()) { sendDisconnect(); } } } } catch (Throwable e) {(e).$(); closeChannel(); close0(JournalClientEvents.EVT_TERMINATED); haltLatch.$(); } }"}
{"time": "2021-01-20 12:00:00.765379", "n_pass": [762, 48, 48], "score": "0.9542", "loss": "0.0785", "code": "@Override public void run() { running = true; notifyCallback(JournalClientEvents.EVT_RUNNING); int NONE; boolean connected = false; try { while (true) { if (!connected) {; do { try { closeChannel(); try { openChannel(); counter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-- > 0) { break; } }; notifyCallback(JournalClientEvents.EVT_CONNECTED); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT_AUTH_ERROR); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) { closeChannel(); close0(); notifyCallback(JournalClientEvents.EVT_AUTH_CONFIG_ERROR); break; } } while (true); if (!connected && (retryCount  == 0)) {SERVER_ERROR; } } try { if (connected && isRunning()) {byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL_DELTA_CMD: statsChannel.setDelegate(channel); int index = intResponseConsumer.getValue(statsChannel); deltaConsumers.getQuick(index).read(statsChannel); statusSentList.set(index, 0);  if (processSubscriptionQueue()) {  } break; case Command.SERVER_SHUTDOWN:(cmd).$; } } else if (event ==NONE) { _HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event = JournalClientEvents.EVT.$(\" in client\").$();} if (event) { if (channel .isOpen()) { sendDisconnect(); } } } } catch (Throwable e) {(e).$(); close0(JournalClientEvents.EVT_TERMINATED); haltLatch.$(); } }"}
{"time": "2021-01-20 12:00:02.278555", "n_pass": [763, 49, 49], "score": "0.9204", "loss": "0.1856", "code": "@Override public void run() { running = true; notifyCallback(JournalClientEvents.EVT_RUNNING); int NONE; boolean connected = false; try { while (true) { if (!connected) {; do { try { closeChannel(); try { openChannel(); counter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-- > 0) { break; } }; notifyCallback(JournalClientEvents.EVT_CONNECTED); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT_AUTH_ERROR); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) { closeChannel(); close0(); notifyCallback(JournalClientEvents.EVT_AUTH_CONFIG_ERROR); break; } } while (true); if (!connected && (retryCount  == 0)) {SERVER_ERROR; } } try { if (connected && isRunning()) {byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL_DELTA_CMD: statsChannel.setDelegate(channel); int index = intResponseConsumer.getValue(statsChannel); deltaConsumers.getQuick(index).read(statsChannel); statusSentList.set(index, 0);  if (processSubscriptionQueue()) {  } break; case Command.SERVER_SHUTDOWN:(cmd).$; } } else if (event ==NONE) { _HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event = JournalClientEvents.EVT.$(\" in client\").$();} if (event) { if (channel .isOpen()) { sendDisconnect(); } } } } catch (Throwable e) {(e).$0(JournalClientEvents.EVT_TERMINATED); haltLatch.$(); } }"}
{"time": "2021-01-20 12:00:03.764885", "n_pass": [766, 50, 50], "score": "0.9312", "loss": "0.1311", "code": "@Override public void run() { running = true; notifyCallback(JournalClientEvents.EVT_RUNNING); int NONE; boolean connected = false; try { while (true) { if (!connected) {; do { try { closeChannel(); try { openChannel(); counter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-- > 0) { break; } }; notifyCallback(JournalClientEvents.EVT_CONNECTED); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT_AUTH_ERROR); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) { closeChannel(); close0(); notifyCallback(JournalClientEvents.EVT_AUTH_CONFIG_ERROR); break; } } while (true); if (!connected && (retryCount  == 0)) {SERVER_ERROR; } } try { if (connected && isRunning()) {byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL_DELTA_CMD: statsChannel.setDelegate(channel); int index = intResponseConsumer.getValue(statsChannel); deltaConsumers.getQuick(index).read(statsChannel); statusSentList.set(index, 0);  if (processSubscriptionQueue()) {  } break; case Command.SERVER_SHUTDOWN:(cmd).$; } } else if (event ==NONE) { _HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event = JournalClientEvents.EVT.$(\" in client\").$();} if (event) { if (channel .isOpen()) { sendDisconnect(); } } } } catch (Throwable e) {(e).$0(JournalClientEvents.EVT_TERMINATED); ; } }"}
{"time": "2021-01-20 12:00:05.239279", "n_pass": [768, 51, 51], "score": "0.7043", "loss": "0.7349", "code": " void run() { running = true; notifyCallback(JournalClientEvents.EVT_RUNNING); int NONE; boolean connected = false; try { while (true) { if (!connected) {; do { try { closeChannel(); try { openChannel(); counter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-- > 0) { break; } }; notifyCallback(JournalClientEvents.EVT_CONNECTED); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT_AUTH_ERROR); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) { closeChannel(); close0(); notifyCallback(JournalClientEvents.EVT_AUTH_CONFIG_ERROR); break; } } while (true); if (!connected && (retryCount  == 0)) {SERVER_ERROR; } } try { if (connected && isRunning()) {byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL_DELTA_CMD: statsChannel.setDelegate(channel); int index = intResponseConsumer.getValue(statsChannel); deltaConsumers.getQuick(index).read(statsChannel); statusSentList.set(index, 0);  if (processSubscriptionQueue()) {  } break; case Command.SERVER_SHUTDOWN:(cmd).$; } } else if (event ==NONE) { _HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event = JournalClientEvents.EVT.$(\" in client\").$();} if (event) { if (channel .isOpen()) { sendDisconnect(); } } } } catch (Throwable e) {(e).$0(JournalClientEvents.EVT_TERMINATED); ; } }"}
{"time": "2021-01-20 12:00:06.714585", "n_pass": [771, 52, 52], "score": "0.7697", "loss": "0.5241", "code": " void run() { true; notifyCallback(JournalClientEvents.EVT_RUNNING); int NONE; boolean connected = false; try { while (true) { if (!connected) {; do { try { closeChannel(); try { openChannel(); counter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-- > 0) { break; } }; notifyCallback(JournalClientEvents.EVT_CONNECTED); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT_AUTH_ERROR); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) { closeChannel(); close0(); notifyCallback(JournalClientEvents.EVT_AUTH_CONFIG_ERROR); break; } } while (true); if (!connected && (retryCount  == 0)) {SERVER_ERROR; } } try { if (connected && isRunning()) {byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL_DELTA_CMD: statsChannel.setDelegate(channel); int index = intResponseConsumer.getValue(statsChannel); deltaConsumers.getQuick(index).read(statsChannel); statusSentList.set(index, 0);  if (processSubscriptionQueue()) {  } break; case Command.SERVER_SHUTDOWN:(cmd).$; } } else if (event ==NONE) { _HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event = JournalClientEvents.EVT.$(\" in client\").$();} if (event) { if (channel .isOpen()) { sendDisconnect(); } } } } catch (Throwable e) {(e).$0(JournalClientEvents.EVT_TERMINATED); ; } }"}
{"time": "2021-01-20 12:00:08.183666", "n_pass": [772, 53, 53], "score": "0.866", "loss": "0.3707", "code": " void run() {notifyCallback(JournalClientEvents.EVT_RUNNING); int NONE; boolean connected = false; try { while (true) { if (!connected) {; do { try { closeChannel(); try { openChannel(); counter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-- > 0) { break; } }; notifyCallback(JournalClientEvents.EVT_CONNECTED); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT_AUTH_ERROR); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) { closeChannel(); close0(); notifyCallback(JournalClientEvents.EVT_AUTH_CONFIG_ERROR); break; } } while (true); if (!connected && (retryCount  == 0)) {SERVER_ERROR; } } try { if (connected && isRunning()) {byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL_DELTA_CMD: statsChannel.setDelegate(channel); int index = intResponseConsumer.getValue(statsChannel); deltaConsumers.getQuick(index).read(statsChannel); statusSentList.set(index, 0);  if (processSubscriptionQueue()) {  } break; case Command.SERVER_SHUTDOWN:(cmd).$; } } else if (event ==NONE) { _HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event = JournalClientEvents.EVT.$(\" in client\").$();} if (event) { if (channel .isOpen()) { sendDisconnect(); } } } } catch (Throwable e) {(e).$0(JournalClientEvents.EVT_TERMINATED); ; } }"}
{"time": "2021-01-20 12:00:09.657022", "n_pass": [776, 54, 54], "score": "0.8195", "loss": "0.3884", "code": " void run() {notifyCallback(JournalClientEvents.EVT_RUNNING); int  connected = false; try { while (true) { if (!connected) {; do { try { closeChannel(); try { openChannel(); counter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-- > 0) { break; } }; notifyCallback(JournalClientEvents.EVT_CONNECTED); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT_AUTH_ERROR); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) { closeChannel(); close0(); notifyCallback(JournalClientEvents.EVT_AUTH_CONFIG_ERROR); break; } } while (true); if (!connected && (retryCount  == 0)) {SERVER_ERROR; } } try { if (connected && isRunning()) {byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL_DELTA_CMD: statsChannel.setDelegate(channel); int index = intResponseConsumer.getValue(statsChannel); deltaConsumers.getQuick(index).read(statsChannel); statusSentList.set(index, 0);  if (processSubscriptionQueue()) {  } break; case Command.SERVER_SHUTDOWN:(cmd).$; } } else if (event ==NONE) { _HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event = JournalClientEvents.EVT.$(\" in client\").$();} if (event) { if (channel .isOpen()) { sendDisconnect(); } } } } catch (Throwable e) {(e).$0(JournalClientEvents.EVT_TERMINATED); ; } }"}
{"time": "2021-01-20 12:00:11.143940", "n_pass": [784, 55, 55], "score": "0.7699", "loss": "0.5581", "code": " void run() {notifyCallback(JournalClientEvents.EVT_RUNNING); int  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try { openChannel(); counter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-- > 0) { break; } }; notifyCallback(JournalClientEvents.EVT_CONNECTED); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT_AUTH_ERROR); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) { closeChannel(); close0(); notifyCallback(JournalClientEvents.EVT_AUTH_CONFIG_ERROR); break; } } while (true); if (!connected && (retryCount  == 0)) {SERVER_ERROR; } } try { if (connected && isRunning()) {byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL_DELTA_CMD: statsChannel.setDelegate(channel); int index = intResponseConsumer.getValue(statsChannel); deltaConsumers.getQuick(index).read(statsChannel); statusSentList.set(index, 0);  if (processSubscriptionQueue()) {  } break; case Command.SERVER_SHUTDOWN:(cmd).$; } } else if (event ==NONE) { _HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event = JournalClientEvents.EVT.$(\" in client\").$();} if (event) { if (channel .isOpen()) { sendDisconnect(); } } } } catch (Throwable e) {(e).$0(JournalClientEvents.EVT_TERMINATED); ; } }"}
{"time": "2021-01-20 12:00:12.650068", "n_pass": [789, 56, 56], "score": "0.5169", "loss": "1.1775", "code": " void run() {notifyCallback(JournalClientEvents.EVT_RUNNING); int  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try { openChannelcounter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-- > 0) { break; } }; notifyCallback(JournalClientEvents.EVT_CONNECTED); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT_AUTH_ERROR); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) { closeChannel(); close0(); notifyCallback(JournalClientEvents.EVT_AUTH_CONFIG_ERROR); break; } } while (true); if (!connected && (retryCount  == 0)) {SERVER_ERROR; } } try { if (connected && isRunning()) {byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL_DELTA_CMD: statsChannel.setDelegate(channel); int index = intResponseConsumer.getValue(statsChannel); deltaConsumers.getQuick(index).read(statsChannel); statusSentList.set(index, 0);  if (processSubscriptionQueue()) {  } break; case Command.SERVER_SHUTDOWN:(cmd).$; } } else if (event ==NONE) { _HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event = JournalClientEvents.EVT.$(\" in client\").$();} if (event) { if (channel .isOpen()) { sendDisconnect(); } } } } catch (Throwable e) {(e).$0(JournalClientEvents.EVT_TERMINATED); ; } }"}
{"time": "2021-01-20 12:00:14.149515", "n_pass": [796, 57, 57], "score": "0.7409", "loss": "0.6", "code": " void run() {notifyCallback(JournalClientEvents.EVT_RUNNING); int  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try { openChannelcounter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-0) { break; } }; notifyCallback(JournalClientEvents.EVT_CONNECTED); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT_AUTH_ERROR); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) { closeChannel(); close0(); notifyCallback(JournalClientEvents.EVT_AUTH_CONFIG_ERROR); break; } } while (true); if (!connected && (retryCount  == 0)) {SERVER_ERROR; } } try { if (connected && isRunning()) {byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL_DELTA_CMD: statsChannel.setDelegate(channel); int index = intResponseConsumer.getValue(statsChannel); deltaConsumers.getQuick(index).read(statsChannel); statusSentList.set(index, 0);  if (processSubscriptionQueue()) {  } break; case Command.SERVER_SHUTDOWN:(cmd).$; } } else if (event ==NONE) { _HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event = JournalClientEvents.EVT.$(\" in client\").$();} if (event) { if (channel .isOpen()) { sendDisconnect(); } } } } catch (Throwable e) {(e).$0(JournalClientEvents.EVT_TERMINATED); ; } }"}
{"time": "2021-01-20 12:00:15.617587", "n_pass": [798, 58, 58], "score": "0.6349", "loss": "0.9158", "code": " void run() {notifyCallback(JournalClientEvents.EVT_RUNNING); int  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try { openChannelcounter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-0) {} }; notifyCallback(JournalClientEvents.EVT_CONNECTED); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT_AUTH_ERROR); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) { closeChannel(); close0(); notifyCallback(JournalClientEvents.EVT_AUTH_CONFIG_ERROR); break; } } while (true); if (!connected && (retryCount  == 0)) {SERVER_ERROR; } } try { if (connected && isRunning()) {byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL_DELTA_CMD: statsChannel.setDelegate(channel); int index = intResponseConsumer.getValue(statsChannel); deltaConsumers.getQuick(index).read(statsChannel); statusSentList.set(index, 0);  if (processSubscriptionQueue()) {  } break; case Command.SERVER_SHUTDOWN:(cmd).$; } } else if (event ==NONE) { _HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event = JournalClientEvents.EVT.$(\" in client\").$();} if (event) { if (channel .isOpen()) { sendDisconnect(); } } } } catch (Throwable e) {(e).$0(JournalClientEvents.EVT_TERMINATED); ; } }"}
{"time": "2021-01-20 12:00:17.100560", "n_pass": [801, 59, 59], "score": "0.7666", "loss": "0.5401", "code": " void run() {notifyCallback(JournalClientEvents.EVT_RUNNING); int  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try { openChannelcounter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-0) {} }; notifyCallback(JournalClientEvents); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT_AUTH_ERROR); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) { closeChannel(); close0(); notifyCallback(JournalClientEvents.EVT_AUTH_CONFIG_ERROR); break; } } while (true); if (!connected && (retryCount  == 0)) {SERVER_ERROR; } } try { if (connected && isRunning()) {byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL_DELTA_CMD: statsChannel.setDelegate(channel); int index = intResponseConsumer.getValue(statsChannel); deltaConsumers.getQuick(index).read(statsChannel); statusSentList.set(index, 0);  if (processSubscriptionQueue()) {  } break; case Command.SERVER_SHUTDOWN:(cmd).$; } } else if (event ==NONE) { _HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event = JournalClientEvents.EVT.$(\" in client\").$();} if (event) { if (channel .isOpen()) { sendDisconnect(); } } } } catch (Throwable e) {(e).$0(JournalClientEvents.EVT_TERMINATED); ; } }"}
{"time": "2021-01-20 12:00:18.587266", "n_pass": [807, 60, 60], "score": "0.6873", "loss": "0.7747", "code": " void run() {notifyCallback(JournalClientEvents.EVT_RUNNING); int  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try { openChannelcounter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-0) {} }; notifyCallback(JournalClientEvents); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) { closeChannel(); close0(); notifyCallback(JournalClientEvents.EVT_AUTH_CONFIG_ERROR); break; } } while (true); if (!connected && (retryCount  == 0)) {SERVER_ERROR; } } try { if (connected && isRunning()) {byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL_DELTA_CMD: statsChannel.setDelegate(channel); int index = intResponseConsumer.getValue(statsChannel); deltaConsumers.getQuick(index).read(statsChannel); statusSentList.set(index, 0);  if (processSubscriptionQueue()) {  } break; case Command.SERVER_SHUTDOWN:(cmd).$; } } else if (event ==NONE) { _HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event = JournalClientEvents.EVT.$(\" in client\").$();} if (event) { if (channel .isOpen()) { sendDisconnect(); } } } } catch (Throwable e) {(e).$0(JournalClientEvents.EVT_TERMINATED); ; } }"}
{"time": "2021-01-20 12:00:20.069230", "n_pass": [814, 61, 61], "score": "0.7082", "loss": "0.6712", "code": " void run() {notifyCallback(JournalClientEvents.EVT_RUNNING); int  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try { openChannelcounter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-0) {} }; notifyCallback(JournalClientEvents); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0(); notifyCallback(JournalClientEvents.EVT_AUTH_CONFIG_ERROR); break; } } while (true); if (!connected && (retryCount  == 0)) {SERVER_ERROR; } } try { if (connected && isRunning()) {byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL_DELTA_CMD: statsChannel.setDelegate(channel); int index = intResponseConsumer.getValue(statsChannel); deltaConsumers.getQuick(index).read(statsChannel); statusSentList.set(index, 0);  if (processSubscriptionQueue()) {  } break; case Command.SERVER_SHUTDOWN:(cmd).$; } } else if (event ==NONE) { _HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event = JournalClientEvents.EVT.$(\" in client\").$();} if (event) { if (channel .isOpen()) { sendDisconnect(); } } } } catch (Throwable e) {(e).$0(JournalClientEvents.EVT_TERMINATED); ; } }"}
{"time": "2021-01-20 12:00:21.542089", "n_pass": [818, 62, 62], "score": "0.517", "loss": "1.0862", "code": " void run() {notifyCallback(JournalClientEvents.EVT_RUNNING); int  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try { openChannelcounter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-0) {} }; notifyCallback(JournalClientEvents); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0(); notifyCallback(JournalClientEvents.EVT_ERROR); break; } } while (true); if (!connected && (retryCount  == 0)) {SERVER_ERROR; } } try { if (connected && isRunning()) {byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL_DELTA_CMD: statsChannel.setDelegate(channel); int index = intResponseConsumer.getValue(statsChannel); deltaConsumers.getQuick(index).read(statsChannel); statusSentList.set(index, 0);  if (processSubscriptionQueue()) {  } break; case Command.SERVER_SHUTDOWN:(cmd).$; } } else if (event ==NONE) { _HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event = JournalClientEvents.EVT.$(\" in client\").$();} if (event) { if (channel .isOpen()) { sendDisconnect(); } } } } catch (Throwable e) {(e).$0(JournalClientEvents.EVT_TERMINATED); ; } }"}
{"time": "2021-01-20 12:00:23.021773", "n_pass": [820, 63, 63], "score": "0.4763", "loss": "1.3623", "code": " void run() {notifyCallback(JournalClientEvents.EVT_RUNNING); int  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try { openChannelcounter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-0) {} }; notifyCallback(JournalClientEvents); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0(); notifyCallback(JournalClientEvents.EVT_ERROR);} } while (true); if (!connected && (retryCount  == 0)) {SERVER_ERROR; } } try { if (connected && isRunning()) {byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL_DELTA_CMD: statsChannel.setDelegate(channel); int index = intResponseConsumer.getValue(statsChannel); deltaConsumers.getQuick(index).read(statsChannel); statusSentList.set(index, 0);  if (processSubscriptionQueue()) {  } break; case Command.SERVER_SHUTDOWN:(cmd).$; } } else if (event ==NONE) { _HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event = JournalClientEvents.EVT.$(\" in client\").$();} if (event) { if (channel .isOpen()) { sendDisconnect(); } } } } catch (Throwable e) {(e).$0(JournalClientEvents.EVT_TERMINATED); ; } }"}
{"time": "2021-01-20 12:00:24.498701", "n_pass": [825, 64, 64], "score": "0.6784", "loss": "0.7403", "code": " void run() {notifyCallback(JournalClientEvents.EVT_RUNNING); int  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try { openChannelcounter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-0) {} }; notifyCallback(JournalClientEvents); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0(); notifyCallback(JournalClientEvents.EVT_ERROR);} } while (true); if (!connected(retryCount  == 0)) {SERVER_ERROR; } } try { if (connected && isRunning()) {byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL_DELTA_CMD: statsChannel.setDelegate(channel); int index = intResponseConsumer.getValue(statsChannel); deltaConsumers.getQuick(index).read(statsChannel); statusSentList.set(index, 0);  if (processSubscriptionQueue()) {  } break; case Command.SERVER_SHUTDOWN:(cmd).$; } } else if (event ==NONE) { _HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event = JournalClientEvents.EVT.$(\" in client\").$();} if (event) { if (channel .isOpen()) { sendDisconnect(); } } } } catch (Throwable e) {(e).$0(JournalClientEvents.EVT_TERMINATED); ; } }"}
{"time": "2021-01-20 12:00:25.961764", "n_pass": [827, 65, 65], "score": "0.7484", "loss": "0.603", "code": " void run() {notifyCallback(JournalClientEvents.EVT_RUNNING); int  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try { openChannelcounter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-0) {} }; notifyCallback(JournalClientEvents); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0(); notifyCallback(JournalClientEvents.EVT_ERROR);} } while (true); if (!connected(retryCount  )) {SERVER_ERROR; } } try { if (connected && isRunning()) {byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL_DELTA_CMD: statsChannel.setDelegate(channel); int index = intResponseConsumer.getValue(statsChannel); deltaConsumers.getQuick(index).read(statsChannel); statusSentList.set(index, 0);  if (processSubscriptionQueue()) {  } break; case Command.SERVER_SHUTDOWN:(cmd).$; } } else if (event ==NONE) { _HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event = JournalClientEvents.EVT.$(\" in client\").$();} if (event) { if (channel .isOpen()) { sendDisconnect(); } } } } catch (Throwable e) {(e).$0(JournalClientEvents.EVT_TERMINATED); ; } }"}
{"time": "2021-01-20 12:00:27.426114", "n_pass": [829, 66, 66], "score": "0.8949", "loss": "0.2256", "code": " void run() {notifyCallback(JournalClientEvents.EVT_RUNNING); int  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try { openChannelcounter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-0) {} }; notifyCallback(JournalClientEvents); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0(); notifyCallback(JournalClientEvents.EVT_ERROR);} } while (true); if (!connected(retryCount  )) { } } try { if (connected && isRunning()) {byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL_DELTA_CMD: statsChannel.setDelegate(channel); int index = intResponseConsumer.getValue(statsChannel); deltaConsumers.getQuick(index).read(statsChannel); statusSentList.set(index, 0);  if (processSubscriptionQueue()) {  } break; case Command.SERVER_SHUTDOWN:(cmd).$; } } else if (event ==NONE) { _HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event = JournalClientEvents.EVT.$(\" in client\").$();} if (event) { if (channel .isOpen()) { sendDisconnect(); } } } } catch (Throwable e) {(e).$0(JournalClientEvents.EVT_TERMINATED); ; } }"}
{"time": "2021-01-20 12:00:28.899623", "n_pass": [833, 67, 67], "score": "0.7693", "loss": "0.5767", "code": " void run() {notifyCallback(JournalClientEvents.EVT_RUNNING); int  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try { openChannelcounter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-0) {} }; notifyCallback(JournalClientEvents); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0(); notifyCallback(JournalClientEvents.EVT_ERROR);} } while (true); if (!connected(retryCount  )) { } } try { if ( isRunning()) {byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL_DELTA_CMD: statsChannel.setDelegate(channel); int index = intResponseConsumer.getValue(statsChannel); deltaConsumers.getQuick(index).read(statsChannel); statusSentList.set(index, 0);  if (processSubscriptionQueue()) {  } break; case Command.SERVER_SHUTDOWN:(cmd).$; } } else if (event ==NONE) { _HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event = JournalClientEvents.EVT.$(\" in client\").$();} if (event) { if (channel .isOpen()) { sendDisconnect(); } } } } catch (Throwable e) {(e).$0(JournalClientEvents.EVT_TERMINATED); ; } }"}
{"time": "2021-01-20 12:00:30.433732", "n_pass": [842, 68, 68], "score": "0.8806", "loss": "0.3163", "code": " void run() {notifyCallback(JournalClientEvents.EVT_RUNNING); int  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try { openChannelcounter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-0) {} }; notifyCallback(JournalClientEvents); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0(); notifyCallback(JournalClientEvents.EVT_ERROR);} } while (true); if (!connected(retryCount  )) { } } try { if ( isRunning()) {byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL: statsChannel.setDelegate(channel); int index = intResponseConsumer.getValue(statsChannel); deltaConsumers.getQuick(index).read(statsChannel); statusSentList.set(index, 0);  if (processSubscriptionQueue()) {  } break; case Command.SERVER_SHUTDOWN:(cmd).$; } } else if (event ==NONE) { _HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event = JournalClientEvents.EVT.$(\" in client\").$();} if (event) { if (channel .isOpen()) { sendDisconnect(); } } } } catch (Throwable e) {(e).$0(JournalClientEvents.EVT_TERMINATED); ; } }"}
{"time": "2021-01-20 12:00:32.297509", "n_pass": [847, 69, 69], "score": "0.6281", "loss": "0.9418", "code": " void run() {notifyCallback(JournalClientEvents.EVT_RUNNING); int  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try { openChannelcounter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-0) {} }; notifyCallback(JournalClientEvents); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0(); notifyCallback(JournalClientEvents.EVT_ERROR);} } while (true); if (!connected(retryCount  )) { } } try { if ( isRunning()) {byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL: statsChannel.setDelegate(channel); int index = intResponseConsumer. deltaConsumers.getQuick(index).read(statsChannel); statusSentList.set(index, 0);  if (processSubscriptionQueue()) {  } break; case Command.SERVER_SHUTDOWN:(cmd).$; } } else if (event ==NONE) { _HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event = JournalClientEvents.EVT.$(\" in client\").$();} if (event) { if (channel .isOpen()) { sendDisconnect(); } } } } catch (Throwable e) {(e).$0(JournalClientEvents.EVT_TERMINATED); ; } }"}
{"time": "2021-01-20 12:00:33.776866", "n_pass": [849, 70, 70], "score": "0.5881", "loss": "0.9919", "code": " void run() {notifyCallback(JournalClientEvents.EVT_RUNNING); int  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try { openChannelcounter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-0) {} }; notifyCallback(JournalClientEvents); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0(); notifyCallback(JournalClientEvents.EVT_ERROR);} } while (true); if (!connected(retryCount  )) { } } try { if ( isRunning()) {byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL: statsChannel.setDelegate(channel); int index = intResponseConsumer. deltaConsumers.getQuick(statsChannel); statusSentList.set(index, 0);  if (processSubscriptionQueue()) {  } break; case Command.SERVER_SHUTDOWN:(cmd).$; } } else if (event ==NONE) { _HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event = JournalClientEvents.EVT.$(\" in client\").$();} if (event) { if (channel .isOpen()) { sendDisconnect(); } } } } catch (Throwable e) {(e).$0(JournalClientEvents.EVT_TERMINATED); ; } }"}
{"time": "2021-01-20 12:00:35.266467", "n_pass": [858, 71, 71], "score": "0.7093", "loss": "0.6929", "code": " void run() {notifyCallback(JournalClientEvents.EVT_RUNNING); int  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try { openChannelcounter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-0) {} }; notifyCallback(JournalClientEvents); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0(); notifyCallback(JournalClientEvents.EVT_ERROR);} } while (true); if (!connected(retryCount  )) { } } try { if ( isRunning()) {byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL: statsChannel.setDelegate(channel); int index = intResponseConsumer. deltaConsumers.getQuick(statsChannel); statusSentList.set(index, 0);  if (processSubscriptionQueue()) {  } break; case Command.SERVER_SHUTDOWN:; } } else if (event ==NONE) { _HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event = JournalClientEvents.EVT.$(\" in client\").$();} if (event) { if (channel .isOpen()) { sendDisconnect(); } } } } catch (Throwable e) {(e).$0(JournalClientEvents.EVT_TERMINATED); ; } }"}
{"time": "2021-01-20 12:00:36.762425", "n_pass": [871, 72, 72], "score": "0.9317", "loss": "0.1868", "code": " void run() {notifyCallback(JournalClientEvents.EVT_RUNNING); int  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try { openChannelcounter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-0) {} }; notifyCallback(JournalClientEvents); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0(); notifyCallback(JournalClientEvents.EVT_ERROR);} } while (true); if (!connected(retryCount  )) { } } try { if ( isRunning()) {byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL: statsChannel.setDelegate(channel); int index = intResponseConsumer. deltaConsumers.getQuick(statsChannel); statusSentList.set(index, 0);  if (processSubscriptionQueue()) {  } break; case Command.SERVER_SHUTDOWN:; } } else if (event ==NONE) { _HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event .$(\" in client\").$();} if (event) { if (channel .isOpen()) { sendDisconnect(); } } } } catch (Throwable e) {(e).$0(JournalClientEvents.EVT_TERMINATED); ; } }"}
{"time": "2021-01-20 12:00:42.233735", "n_pass": [1170, 73, 73], "score": "0.821", "loss": "0.4778", "code": " void run() {notifyCallback(JournalClientEvents.EVT_RUNNING); int  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try { openChannelcounter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-0) {} }; notifyCallback(JournalClientEvents); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0(); notifyCallback(JournalClientEvents.EVT_ERROR);} } while (true); if (!connected(retryCount  )) { } } try { if ( isRunning()) {byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL: statsChannel.setDelegate(channel); int index = intResponseConsumer. deltaConsumers.getQuick(statsChannel); statusSentList.set(index, 0);  if (processSubscriptionQueue()) {  } break; case Command.SERVER_SHUTDOWN:; } } else if (event ==NONE) { _HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$() .$(\" in client\").$();} if (event) { if (channel .isOpen()) { sendDisconnect(); } } } } catch (Throwable e) {(e).$0(JournalClientEvents.EVT_TERMINATED); ; } }"}
{"time": "2021-01-20 12:00:43.699759", "n_pass": [1173, 74, 74], "score": "0.8151", "loss": "0.4702", "code": " void run() {notifyCallback(JournalClientEvents.EVT_RUNNING); int  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try { openChannelcounter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-0) {} }; notifyCallback(JournalClientEvents); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0(); notifyCallback(JournalClientEvents.EVT_ERROR);} } while (true); if (!connected(retryCount  )) { } } try { if ( isRunning()) {byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL: statsChannel.setDelegate(channel); int index = intResponseConsumer. deltaConsumers.getQuick(statsChannel); statusSentList.set(index, 0);  if (processSubscriptionQueue()) {  } break; case Command.SERVER_SHUTDOWN:; } } else if (event ==NONE) { _HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$() .$(\" \").$();} if (event) { if (channel .isOpen()) { sendDisconnect(); } } } } catch (Throwable e) {(e).$0(JournalClientEvents.EVT_TERMINATED); ; } }"}
{"time": "2021-01-20 12:00:45.176401", "n_pass": [1181, 75, 75], "score": "0.664", "loss": "0.8086", "code": " void run() {notifyCallback(JournalClientEvents.EVT_RUNNING); int  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try { openChannelcounter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-0) {} }; notifyCallback(JournalClientEvents); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0(); notifyCallback(JournalClientEvents.EVT_ERROR);} } while (true); if (!connected(retryCount  )) { } } try { if ( isRunning()) {byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL: statsChannel.setDelegate(channel); int index = intResponseConsumer. deltaConsumers.getQuick(statsChannel); statusSentList.set(index, 0);  if (processSubscriptionQueue()) {  } break; case Command.SERVER_SHUTDOWN:; } } else if (event ==NONE) { _HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$() .$(\" \").$();} if (event) { if (channel()) { sendDisconnect(); } } } } catch (Throwable e) {(e).$0(JournalClientEvents.EVT_TERMINATED); ; } }"}
{"time": "2021-01-20 12:00:46.632770", "n_pass": [1184, 76, 76], "score": "0.9041", "loss": "0.2528", "code": " void run() {notifyCallback(JournalClientEvents.EVT_RUNNING); int  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try { openChannelcounter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-0) {} }; notifyCallback(JournalClientEvents); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0(); notifyCallback(JournalClientEvents.EVT_ERROR);} } while (true); if (!connected(retryCount  )) { } } try { if ( isRunning()) {byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL: statsChannel.setDelegate(channel); int index = intResponseConsumer. deltaConsumers.getQuick(statsChannel); statusSentList.set(index, 0);  if (processSubscriptionQueue()) {  } break; case Command.SERVER_SHUTDOWN:; } } else if (event ==NONE) { _HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$() .$(\" \").$();} if (event) { if (channel()) { ; } } } } catch (Throwable e) {(e).$0(JournalClientEvents.EVT_TERMINATED); ; } }"}
{"time": "2021-01-20 12:00:48.143246", "n_pass": [1194, 77, 77], "score": "0.8263", "loss": "0.493", "code": " void run() {notifyCallback(JournalClientEvents.EVT_RUNNING); int  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try { openChannelcounter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-0) {} }; notifyCallback(JournalClientEvents); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0(); notifyCallback(JournalClientEvents.EVT_ERROR);} } while (true); if (!connected(retryCount  )) { } } try { if ( isRunning()) {byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL: statsChannel.setDelegate(channel); int index = intResponseConsumer. deltaConsumers.getQuick(statsChannel); statusSentList.set(index, 0);  if (processSubscriptionQueue()) {  } break; case Command.SERVER_SHUTDOWN:; } } else if (event ==NONE) { _HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$() .$(\" \").$();} if (event) { if (channel()) { ; } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED); ; } }"}
{"time": "2021-01-20 12:00:49.628794", "n_pass": [1196, 78, 78], "score": "0.896", "loss": "0.2875", "code": " void run() {notifyCallback(JournalClientEvents.EVT_RUNNING); int  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try { openChannelcounter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-0) {} }; notifyCallback(JournalClientEvents); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0(); notifyCallback(JournalClientEvents.EVT_ERROR);} } while (true); if (!connected(retryCount  )) { } } try { if ( isRunning()) {byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL: statsChannel.setDelegate(channel); int index = intResponseConsumer. deltaConsumers.getQuick(statsChannel); statusSentList.set(index, 0);  if (processSubscriptionQueue()) {  } break; case Command.SERVER_SHUTDOWN:; } } else if (event ==NONE) { _HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$() .$(\" \").$();} if (event) { if (channel()) { ; } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:00:51.482990", "n_pass": [1203, 79, 79], "score": "0.7652", "loss": "0.5856", "code": " void run() {notifyCallback(EVT_RUNNING); int  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try { openChannelcounter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-0) {} }; notifyCallback(JournalClientEvents); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0(); notifyCallback(JournalClientEvents.EVT_ERROR);} } while (true); if (!connected(retryCount  )) { } } try { if ( isRunning()) {byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL: statsChannel.setDelegate(channel); int index = intResponseConsumer. deltaConsumers.getQuick(statsChannel); statusSentList.set(index, 0);  if (processSubscriptionQueue()) {  } break; case Command.SERVER_SHUTDOWN:; } } else if (event ==NONE) { _HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$() .$(\" \").$();} if (event) { if (channel()) { ; } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:00:52.931896", "n_pass": [1204, 80, 80], "score": "0.9229", "loss": "0.2084", "code": " void run() {notifyCallback(RUNNING); int  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try { openChannelcounter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-0) {} }; notifyCallback(JournalClientEvents); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0(); notifyCallback(JournalClientEvents.EVT_ERROR);} } while (true); if (!connected(retryCount  )) { } } try { if ( isRunning()) {byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL: statsChannel.setDelegate(channel); int index = intResponseConsumer. deltaConsumers.getQuick(statsChannel); statusSentList.set(index, 0);  if (processSubscriptionQueue()) {  } break; case Command.SERVER_SHUTDOWN:; } } else if (event ==NONE) { _HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$() .$(\" \").$();} if (event) { if (channel()) { ; } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:00:54.388202", "n_pass": [1207, 81, 81], "score": "0.7512", "loss": "0.5707", "code": " void run() {notifyCallback(RUNNING);  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try { openChannelcounter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-0) {} }; notifyCallback(JournalClientEvents); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0(); notifyCallback(JournalClientEvents.EVT_ERROR);} } while (true); if (!connected(retryCount  )) { } } try { if ( isRunning()) {byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL: statsChannel.setDelegate(channel); int index = intResponseConsumer. deltaConsumers.getQuick(statsChannel); statusSentList.set(index, 0);  if (processSubscriptionQueue()) {  } break; case Command.SERVER_SHUTDOWN:; } } else if (event ==NONE) { _HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$() .$(\" \").$();} if (event) { if (channel()) { ; } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:00:55.899949", "n_pass": [1229, 82, 82], "score": "0.8476", "loss": "0.34", "code": " void run() {notifyCallback(RUNNING);  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try {counter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-0) {} }; notifyCallback(JournalClientEvents); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0(); notifyCallback(JournalClientEvents.EVT_ERROR);} } while (true); if (!connected(retryCount  )) { } } try { if ( isRunning()) {byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL: statsChannel.setDelegate(channel); int index = intResponseConsumer. deltaConsumers.getQuick(statsChannel); statusSentList.set(index, 0);  if (processSubscriptionQueue()) {  } break; case Command.SERVER_SHUTDOWN:; } } else if (event ==NONE) { _HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$() .$(\" \").$();} if (event) { if (channel()) { ; } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:00:57.345356", "n_pass": [1230, 83, 83], "score": "0.7077", "loss": "0.6119", "code": " void run() {notifyCallback(RUNNING);  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try {incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-0) {} }; notifyCallback(JournalClientEvents); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0(); notifyCallback(JournalClientEvents.EVT_ERROR);} } while (true); if (!connected(retryCount  )) { } } try { if ( isRunning()) {byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL: statsChannel.setDelegate(channel); int index = intResponseConsumer. deltaConsumers.getQuick(statsChannel); statusSentList.set(index, 0);  if (processSubscriptionQueue()) {  } break; case Command.SERVER_SHUTDOWN:; } } else if (event ==NONE) { _HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$() .$(\" \").$();} if (event) { if (channel()) { ; } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:00:58.825080", "n_pass": [1241, 84, 84], "score": "0.8637", "loss": "0.3337", "code": " void run() {notifyCallback(RUNNING);  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try {incrementAndGet(); } catch (JournalNetworkException e) { if (0) {} }; notifyCallback(JournalClientEvents); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0(); notifyCallback(JournalClientEvents.EVT_ERROR);} } while (true); if (!connected(retryCount  )) { } } try { if ( isRunning()) {byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL: statsChannel.setDelegate(channel); int index = intResponseConsumer. deltaConsumers.getQuick(statsChannel); statusSentList.set(index, 0);  if (processSubscriptionQueue()) {  } break; case Command.SERVER_SHUTDOWN:; } } else if (event ==NONE) { _HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$() .$(\" \").$();} if (event) { if (channel()) { ; } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:01:00.315830", "n_pass": [1246, 85, 85], "score": "0.9136", "loss": "0.2033", "code": " void run() {notifyCallback(RUNNING);  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try {incrementAndGet(); } catch (JournalNetworkException e) { if (0) {} };(JournalClientEvents); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0(); notifyCallback(JournalClientEvents.EVT_ERROR);} } while (true); if (!connected(retryCount  )) { } } try { if ( isRunning()) {byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL: statsChannel.setDelegate(channel); int index = intResponseConsumer. deltaConsumers.getQuick(statsChannel); statusSentList.set(index, 0);  if (processSubscriptionQueue()) {  } break; case Command.SERVER_SHUTDOWN:; } } else if (event ==NONE) { _HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$() .$(\" \").$();} if (event) { if (channel()) { ; } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:01:01.786031", "n_pass": [1255, 86, 86], "score": "0.6605", "loss": "0.7717", "code": " void run() {notifyCallback(RUNNING);  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try {incrementAndGet(); } catch (JournalNetworkException e) { if (0) {} };(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents.EVT); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0(); notifyCallback(JournalClientEvents.EVT_ERROR);} } while (true); if (!connected(retryCount  )) { } } try { if ( isRunning()) {byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL: statsChannel.setDelegate(channel); int index = intResponseConsumer. deltaConsumers.getQuick(statsChannel); statusSentList.set(index, 0);  if (processSubscriptionQueue()) {  } break; case Command.SERVER_SHUTDOWN:; } } else if (event ==NONE) { _HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$() .$(\" \").$();} if (event) { if (channel()) { ; } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:01:03.231772", "n_pass": [1257, 87, 87], "score": "0.6941", "loss": "0.7244", "code": " void run() {notifyCallback(RUNNING);  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try {incrementAndGet(); } catch (JournalNetworkException e) { if (0) {} };(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0(); notifyCallback(JournalClientEvents.EVT_ERROR);} } while (true); if (!connected(retryCount  )) { } } try { if ( isRunning()) {byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL: statsChannel.setDelegate(channel); int index = intResponseConsumer. deltaConsumers.getQuick(statsChannel); statusSentList.set(index, 0);  if (processSubscriptionQueue()) {  } break; case Command.SERVER_SHUTDOWN:; } } else if (event ==NONE) { _HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$() .$(\" \").$();} if (event) { if (channel()) { ; } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:01:04.699255", "n_pass": [1260, 88, 88], "score": "0.7852", "loss": "0.5041", "code": " void run() {notifyCallback(RUNNING);  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try {incrementAndGet(); } catch (JournalNetworkException e) { if (0) {} };(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents); loginRetryCount; } catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0(); notifyCallback(JournalClientEvents.EVT_ERROR);} } while (true); if (!connected(retryCount  )) { } } try { if ( isRunning()) {byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL: statsChannel.setDelegate(channel); int index = intResponseConsumer. deltaConsumers.getQuick(statsChannel); statusSentList.set(index, 0);  if (processSubscriptionQueue()) {  } break; case Command.SERVER_SHUTDOWN:; } } else if (event ==NONE) { _HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$() .$(\" \").$();} if (event) { if (channel()) { ; } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:01:06.197394", "n_pass": [1273, 89, 89], "score": "0.7129", "loss": "0.6426", "code": " void run() {notifyCallback(RUNNING);  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try {incrementAndGet(); } catch (JournalNetworkException e) { if (0) {} };(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents); loginRetryCount; } catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents.EVT_ERROR);} } while (true); if (!connected(retryCount  )) { } } try { if ( isRunning()) {byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL: statsChannel.setDelegate(channel); int index = intResponseConsumer. deltaConsumers.getQuick(statsChannel); statusSentList.set(index, 0);  if (processSubscriptionQueue()) {  } break; case Command.SERVER_SHUTDOWN:; } } else if (event ==NONE) { _HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$() .$(\" \").$();} if (event) { if (channel()) { ; } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:01:07.645141", "n_pass": [1275, 90, 90], "score": "0.7425", "loss": "0.5834", "code": " void run() {notifyCallback(RUNNING);  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try {incrementAndGet(); } catch (JournalNetworkException e) { if (0) {} };(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents); loginRetryCount; } catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents_ERROR);} } while (true); if (!connected(retryCount  )) { } } try { if ( isRunning()) {byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL: statsChannel.setDelegate(channel); int index = intResponseConsumer. deltaConsumers.getQuick(statsChannel); statusSentList.set(index, 0);  if (processSubscriptionQueue()) {  } break; case Command.SERVER_SHUTDOWN:; } } else if (event ==NONE) { _HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$() .$(\" \").$();} if (event) { if (channel()) { ; } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:01:09.089286", "n_pass": [1276, 91, 91], "score": "0.8631", "loss": "0.2975", "code": " void run() {notifyCallback(RUNNING);  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try {incrementAndGet(); } catch (JournalNetworkException e) { if (0) {} };(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents); loginRetryCount; } catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } while (true); if (!connected(retryCount  )) { } } try { if ( isRunning()) {byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL: statsChannel.setDelegate(channel); int index = intResponseConsumer. deltaConsumers.getQuick(statsChannel); statusSentList.set(index, 0);  if (processSubscriptionQueue()) {  } break; case Command.SERVER_SHUTDOWN:; } } else if (event ==NONE) { _HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$() .$(\" \").$();} if (event) { if (channel()) { ; } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:01:10.554317", "n_pass": [1280, 92, 92], "score": "0.4645", "loss": "1.1933", "code": " void run() {notifyCallback(RUNNING);  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try {incrementAndGet(); } catch (JournalNetworkException e) { if (0) {} };(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents); loginRetryCount; } catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if (!connected(retryCount  )) { } } try { if ( isRunning()) {byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL: statsChannel.setDelegate(channel); int index = intResponseConsumer. deltaConsumers.getQuick(statsChannel); statusSentList.set(index, 0);  if (processSubscriptionQueue()) {  } break; case Command.SERVER_SHUTDOWN:; } } else if (event ==NONE) { _HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$() .$(\" \").$();} if (event) { if (channel()) { ; } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:01:12.019464", "n_pass": [1285, 93, 93], "score": "0.887", "loss": "0.2487", "code": " void run() {notifyCallback(RUNNING);  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try {incrementAndGet(); } catch (JournalNetworkException e) { if (0) {} };(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents); loginRetryCount; } catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount  )) { } } try { if ( isRunning()) {byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL: statsChannel.setDelegate(channel); int index = intResponseConsumer. deltaConsumers.getQuick(statsChannel); statusSentList.set(index, 0);  if (processSubscriptionQueue()) {  } break; case Command.SERVER_SHUTDOWN:; } } else if (event ==NONE) { _HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$() .$(\" \").$();} if (event) { if (channel()) { ; } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:01:13.464765", "n_pass": [1287, 94, 94], "score": "0.6357", "loss": "0.8691", "code": " void run() {notifyCallback(RUNNING);  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try {incrementAndGet(); } catch (JournalNetworkException e) { if (0) {} };(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents); loginRetryCount; } catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning()) {byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL: statsChannel.setDelegate(channel); int index = intResponseConsumer. deltaConsumers.getQuick(statsChannel); statusSentList.set(index, 0);  if (processSubscriptionQueue()) {  } break; case Command.SERVER_SHUTDOWN:; } } else if (event ==NONE) { _HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$() .$(\" \").$();} if (event) { if (channel()) { ; } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:01:14.938285", "n_pass": [1297, 95, 95], "score": "0.8454", "loss": "0.3448", "code": " void run() {notifyCallback(RUNNING);  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try {incrementAndGet(); } catch (JournalNetworkException e) { if (0) {} };(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents); loginRetryCount; } catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL: statsChannel.setDelegate(channel); int index = intResponseConsumer. deltaConsumers.getQuick(statsChannel); statusSentList.set(index, 0);  if (processSubscriptionQueue()) {  } break; case Command.SERVER_SHUTDOWN:; } } else if (event ==NONE) { _HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$() .$(\" \").$();} if (event) { if (channel()) { ; } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:01:16.425198", "n_pass": [1303, 96, 96], "score": "0.8853", "loss": "0.2866", "code": " void run() {notifyCallback(RUNNING);  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try {incrementAndGet(); } catch (JournalNetworkException e) { if (0) {} };(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents); loginRetryCount; } catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer(); switch(cmd) { case Command.JOURNAL: statsChannel.setDelegate(channel); int index = intResponseConsumer. deltaConsumers.getQuick(statsChannel); statusSentList.set(index, 0);  if (processSubscriptionQueue()) {  } break; case Command.SERVER_SHUTDOWN:; } } else if (event ==NONE) { _HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$() .$(\" \").$();} if (event) { if (channel()) { ; } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:01:17.866558", "n_pass": [1304, 97, 97], "score": "0.7351", "loss": "0.5896", "code": " void run() {notifyCallback(RUNNING);  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try {incrementAndGet(); } catch (JournalNetworkException e) { if (0) {} };(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents); loginRetryCount; } catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command.JOURNAL: statsChannel.setDelegate(channel); int index = intResponseConsumer. deltaConsumers.getQuick(statsChannel); statusSentList.set(index, 0);  if (processSubscriptionQueue()) {  } break; case Command.SERVER_SHUTDOWN:; } } else if (event ==NONE) { _HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$() .$(\" \").$();} if (event) { if (channel()) { ; } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:01:19.324517", "n_pass": [1311, 98, 98], "score": "0.805", "loss": "0.4199", "code": " void run() {notifyCallback(RUNNING);  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try {incrementAndGet(); } catch (JournalNetworkException e) { if (0) {} };(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents); loginRetryCount; } catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: statsChannel.setDelegate(channel); int index = intResponseConsumer. deltaConsumers.getQuick(statsChannel); statusSentList.set(index, 0);  if (processSubscriptionQueue()) {  } break; case Command.SERVER_SHUTDOWN:; } } else if (event ==NONE) { _HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$() .$(\" \").$();} if (event) { if (channel()) { ; } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:01:20.771204", "n_pass": [1313, 99, 99], "score": "0.5903", "loss": "0.946", "code": " void run() {notifyCallback(RUNNING);  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try {incrementAndGet(); } catch (JournalNetworkException e) { if (0) {} };(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents); loginRetryCount; } catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); int index = intResponseConsumer. deltaConsumers.getQuick(statsChannel); statusSentList.set(index, 0);  if (processSubscriptionQueue()) {  } break; case Command.SERVER_SHUTDOWN:; } } else if (event ==NONE) { _HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$() .$(\" \").$();} if (event) { if (channel()) { ; } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:01:22.218879", "n_pass": [1317, 100, 100], "score": "0.8463", "loss": "0.338", "code": " void run() {notifyCallback(RUNNING);  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try {incrementAndGet(); } catch (JournalNetworkException e) { if (0) {} };(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents); loginRetryCount; } catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); index = intResponseConsumer. deltaConsumers.getQuick(statsChannel); statusSentList.set(index, 0);  if (processSubscriptionQueue()) {  } break; case Command.SERVER_SHUTDOWN:; } } else if (event ==NONE) { _HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$() .$(\" \").$();} if (event) { if (channel()) { ; } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:01:23.659552", "n_pass": [1320, 101, 101], "score": "0.8029", "loss": "0.4151", "code": " void run() {notifyCallback(RUNNING);  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try {incrementAndGet(); } catch (JournalNetworkException e) { if (0) {} };(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents); loginRetryCount; } catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); index =  deltaConsumers.getQuick(statsChannel); statusSentList.set(index, 0);  if (processSubscriptionQueue()) {  } break; case Command.SERVER_SHUTDOWN:; } } else if (event ==NONE) { _HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$() .$(\" \").$();} if (event) { if (channel()) { ; } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:01:25.104257", "n_pass": [1322, 102, 102], "score": "0.6887", "loss": "0.7035", "code": " void run() {notifyCallback(RUNNING);  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try {incrementAndGet(); } catch (JournalNetworkException e) { if (0) {} };(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents); loginRetryCount; } catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); index =  deltaConsumers(statsChannel); statusSentList.set(index, 0);  if (processSubscriptionQueue()) {  } break; case Command.SERVER_SHUTDOWN:; } } else if (event ==NONE) { _HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$() .$(\" \").$();} if (event) { if (channel()) { ; } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:01:26.569599", "n_pass": [1326, 103, 103], "score": "0.8605", "loss": "0.314", "code": " void run() {notifyCallback(RUNNING);  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try {incrementAndGet(); } catch (JournalNetworkException e) { if (0) {} };(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents); loginRetryCount; } catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); index =  deltaConsumers(statsChannel); statusSentList(index, 0);  if (processSubscriptionQueue()) {  } break; case Command.SERVER_SHUTDOWN:; } } else if (event ==NONE) { _HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$() .$(\" \").$();} if (event) { if (channel()) { ; } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:01:28.016185", "n_pass": [1328, 104, 104], "score": "0.7932", "loss": "0.4345", "code": " void run() {notifyCallback(RUNNING);  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try {incrementAndGet(); } catch (JournalNetworkException e) { if (0) {} };(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents); loginRetryCount; } catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); index =  deltaConsumers(statsChannel); statusSentList(index0);  if (processSubscriptionQueue()) {  } break; case Command.SERVER_SHUTDOWN:; } } else if (event ==NONE) { _HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$() .$(\" \").$();} if (event) { if (channel()) { ; } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:01:29.477442", "n_pass": [1336, 105, 105], "score": "0.8395", "loss": "0.3487", "code": " void run() {notifyCallback(RUNNING);  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try {incrementAndGet(); } catch (JournalNetworkException e) { if (0) {} };(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents); loginRetryCount; } catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); index =  deltaConsumers(statsChannel); statusSentList(index0);  if (processSubscriptionQueue()) {} break; case Command.SERVER_SHUTDOWN:; } } else if (event ==NONE) { _HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$() .$(\" \").$();} if (event) { if (channel()) { ; } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:01:30.921778", "n_pass": [1338, 106, 106], "score": "0.9037", "loss": "0.2195", "code": " void run() {notifyCallback(RUNNING);  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try {incrementAndGet(); } catch (JournalNetworkException e) { if (0) {} };(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents); loginRetryCount; } catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); index =  deltaConsumers(statsChannel); statusSentList(index0);  if (processSubscriptionQueue()) {}  case Command.SERVER_SHUTDOWN:; } } else if (event ==NONE) { _HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$() .$(\" \").$();} if (event) { if (channel()) { ; } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:01:32.351409", "n_pass": [1341, 107, 107], "score": "0.8348", "loss": "0.4004", "code": " void run() {notifyCallback(RUNNING);  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try {incrementAndGet(); } catch (JournalNetworkException e) { if (0) {} };(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents); loginRetryCount; } catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); index =  deltaConsumers(statsChannel); statusSentList(index0);  if (processSubscriptionQueue()) {}  case Command_SHUTDOWN:; } } else if (event ==NONE) { _HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$() .$(\" \").$();} if (event) { if (channel()) { ; } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:01:33.778406", "n_pass": [1342, 108, 108], "score": "0.7345", "loss": "0.5664", "code": " void run() {notifyCallback(RUNNING);  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try {incrementAndGet(); } catch (JournalNetworkException e) { if (0) {} };(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents); loginRetryCount; } catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); index =  deltaConsumers(statsChannel); statusSentList(index0);  if (processSubscriptionQueue()) {}  case Command:; } } else if (event ==NONE) { _HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$() .$(\" \").$();} if (event) { if (channel()) { ; } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:01:35.240013", "n_pass": [1346, 109, 109], "score": "0.8402", "loss": "0.3823", "code": " void run() {notifyCallback(RUNNING);  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try {incrementAndGet(); } catch (JournalNetworkException e) { if (0) {} };(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents); loginRetryCount; } catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); index =  deltaConsumers(statsChannel); statusSentList(index0);  if (processSubscriptionQueue()) {}  case Command:; } } if (event ==NONE) { _HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$() .$(\" \").$();} if (event) { if (channel()) { ; } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:01:36.672774", "n_pass": [1353, 110, 110], "score": "0.7692", "loss": "0.5435", "code": " void run() {notifyCallback(RUNNING);  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try {incrementAndGet(); } catch (JournalNetworkException e) { if (0) {} };(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents); loginRetryCount; } catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); index =  deltaConsumers(statsChannel); statusSentList(index0);  if (processSubscriptionQueue()) {}  case Command:; } } if (event ==NONE) {HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$() .$(\" \").$();} if (event) { if (channel()) { ; } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:01:38.122315", "n_pass": [1354, 111, 111], "score": "0.802", "loss": "0.4475", "code": " void run() {notifyCallback(RUNNING);  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try {incrementAndGet(); } catch (JournalNetworkException e) { if (0) {} };(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents); loginRetryCount; } catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); index =  deltaConsumers(statsChannel); statusSentList(index0);  if (processSubscriptionQueue()) {}  case Command:; } } if (event ==NONE) { } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$() .$(\" \").$();} if (event) { if (channel()) { ; } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:01:39.562823", "n_pass": [1361, 112, 112], "score": "0.8181", "loss": "0.41", "code": " void run() {notifyCallback(RUNNING);  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try {incrementAndGet(); } catch (JournalNetworkException e) { if (0) {} };(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents); loginRetryCount; } catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); index =  deltaConsumers(statsChannel); statusSentList(index0);  if (processSubscriptionQueue()) {}  case Command:; } } if (event ==NONE) { } } catch (IncompatibleJournalException e) { LOG.error$(e.getMessage()).$() .$(\" \").$();} if (event) { if (channel()) { ; } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:01:41.753230", "n_pass": [1440, 113, 113], "score": "0.8613", "loss": "0.3046", "code": " void run() {notifyCallback(RUNNING);  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try {incrementAndGet(); } catch (JournalNetworkException e) { if (0) {} };(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents);; } catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); index =  deltaConsumers(statsChannel); statusSentList(index0);  if (processSubscriptionQueue()) {}  case Command:; } } if (event ==NONE) { } } catch (IncompatibleJournalException e) { LOG.error$(e.getMessage()).$() .$(\" \").$();} if (event) { if (channel()) { ; } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:01:43.170163", "n_pass": [1441, 114, 114], "score": "0.8303", "loss": "0.3883", "code": " void run() {notifyCallback(RUNNING);  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try {incrementAndGet(); } catch (JournalNetworkException e) { if (0) {} };(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents);} catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); index =  deltaConsumers(statsChannel); statusSentList(index0);  if (processSubscriptionQueue()) {}  case Command:; } } if (event ==NONE) { } } catch (IncompatibleJournalException e) { LOG.error$(e.getMessage()).$() .$(\" \").$();} if (event) { if (channel()) { ; } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:01:44.735762", "n_pass": [1488, 115, 115], "score": "0.7904", "loss": "0.4865", "code": " void run() {notifyCallback(RUNNING);  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try {incrementAndGet(); } catch (JournalNetworkException e) { if (0) {} };(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents);} catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); index = (statsChannel); statusSentList(index0);  if (processSubscriptionQueue()) {}  case Command:; } } if (event ==NONE) { } } catch (IncompatibleJournalException e) { LOG.error$(e.getMessage()).$() .$(\" \").$();} if (event) { if (channel()) { ; } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:01:46.183761", "n_pass": [1491, 116, 116], "score": "0.7904", "loss": "0.458", "code": " void run() {notifyCallback(RUNNING);  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try {incrementAndGet(); } catch (JournalNetworkException e) { if (0) {} };(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents);} catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); index = (statsChannel);(index0);  if (processSubscriptionQueue()) {}  case Command:; } } if (event ==NONE) { } } catch (IncompatibleJournalException e) { LOG.error$(e.getMessage()).$() .$(\" \").$();} if (event) { if (channel()) { ; } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:01:47.626952", "n_pass": [1501, 117, 117], "score": "0.7954", "loss": "0.4961", "code": " void run() {notifyCallback(RUNNING);  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try {incrementAndGet(); } catch (JournalNetworkException e) { if (0) {} };(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents);} catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); index = (statsChannel);(index0);  if (processSubscriptionQueue()) {}  Command:; } } if (event ==NONE) { } } catch (IncompatibleJournalException e) { LOG.error$(e.getMessage()).$() .$(\" \").$();} if (event) { if (channel()) { ; } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:01:49.107264", "n_pass": [1517, 118, 118], "score": "0.734", "loss": "0.6729", "code": " void run() {notifyCallback(RUNNING);  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try {incrementAndGet(); } catch (JournalNetworkException e) { if (0) {} };(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents);} catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); index = (statsChannel);(index0);  if (processSubscriptionQueue()) {}  Command:; } } if (event ==NONE) { } } catch (IncompatibleJournalException e) { $(e.getMessage()).$() .$(\" \").$();} if (event) { if (channel()) { ; } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:01:51.250300", "n_pass": [1641, 119, 119], "score": "0.8497", "loss": "0.3653", "code": " void run() {notifyCallback(RUNNING);  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try {incrementAndGet(); } catch (JournalNetworkException e) { if (0) {} };(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents);} catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); index (statsChannel);(index0);  if (processSubscriptionQueue()) {}  Command:; } } if (event ==NONE) { } } catch (IncompatibleJournalException e) { $(e.getMessage()).$() .$(\" \").$();} if (event) { if (channel()) { ; } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:01:53.486952", "n_pass": [1790, 120, 120], "score": "0.816", "loss": "0.4404", "code": " void run() {notifyCallback(RUNNING);  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try {incrementAndGet(); } catch (JournalNetworkException e) { if (0) {} };(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents);} catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(index0);  if (processSubscriptionQueue()) {}  Command:; } } if (event ==NONE) { } } catch (IncompatibleJournalException e) { $(e.getMessage()).$() .$(\" \").$();} if (event) { if (channel()) { ; } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:02:30.416681", "n_pass": [2240, 121, 121], "score": "0.6361", "loss": "0.8261", "code": " void run() {notifyCallback(RUNNING);  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try {incrementAndGet(); } catch (JournalNetworkException e) { if (0) {} };(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents);} catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);  if (processSubscriptionQueue()) {}  Command:; } } if (event ==NONE) { } } catch (IncompatibleJournalException e) { $(e.getMessage()).$() .$(\" \").$();} if (event) { if (channel()) { ; } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:02:31.872295", "n_pass": [2244, 122, 122], "score": "0.8323", "loss": "0.3952", "code": " void run() {notifyCallback(RUNNING);  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try {incrementAndGet(); } catch (JournalNetworkException e) { if (0) {} };(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents);} catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0); if (processSubscriptionQueue()) {}  Command:; } } if (event ==NONE) { } } catch (IncompatibleJournalException e) { $(e.getMessage()).$() .$(\" \").$();} if (event) { if (channel()) { ; } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:02:33.279978", "n_pass": [2245, 123, 123], "score": "0.8831", "loss": "0.2865", "code": " void run() {notifyCallback(RUNNING);  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try {incrementAndGet(); } catch (JournalNetworkException e) { if (0) {} };(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents);} catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if (processSubscriptionQueue()) {}  Command:; } } if (event ==NONE) { } } catch (IncompatibleJournalException e) { $(e.getMessage()).$() .$(\" \").$();} if (event) { if (channel()) { ; } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:02:34.749434", "n_pass": [2247, 124, 124], "score": "0.8884", "loss": "0.2726", "code": " void run() {notifyCallback(RUNNING);  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try {incrementAndGet(); } catch (JournalNetworkException e) { if (0) {} };(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents);} catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()) {}  Command:; } } if (event ==NONE) { } } catch (IncompatibleJournalException e) { $(e.getMessage()).$() .$(\" \").$();} if (event) { if (channel()) { ; } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:02:36.203095", "n_pass": [2253, 125, 125], "score": "0.7583", "loss": "0.5778", "code": " void run() {notifyCallback(RUNNING);  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try {incrementAndGet(); } catch (JournalNetworkException e) { if (0) {} };(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents);} catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}  Command:; } } if (event ==NONE) { } } catch (IncompatibleJournalException e) { $(e.getMessage()).$() .$(\" \").$();} if (event) { if (channel()) { ; } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:02:37.657107", "n_pass": [2256, 126, 126], "score": "0.8692", "loss": "0.3573", "code": " void run() {notifyCallback(RUNNING);  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try {incrementAndGet(); } catch (JournalNetworkException e) { if (0) {} };(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents);} catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){} Command:; } } if (event ==NONE) { } } catch (IncompatibleJournalException e) { $(e.getMessage()).$() .$(\" \").$();} if (event) { if (channel()) { ; } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:02:39.106042", "n_pass": [2257, 127, 127], "score": "0.7641", "loss": "0.5749", "code": " void run() {notifyCallback(RUNNING);  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try {incrementAndGet(); } catch (JournalNetworkException e) { if (0) {} };(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents);} catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command:; } } if (event ==NONE) { } } catch (IncompatibleJournalException e) { $(e.getMessage()).$() .$(\" \").$();} if (event) { if (channel()) { ; } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:02:40.526362", "n_pass": [2259, 128, 128], "score": "0.8429", "loss": "0.3831", "code": " void run() {notifyCallback(RUNNING);  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try {incrementAndGet(); } catch (JournalNetworkException e) { if (0) {} };(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents);} catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command; } } if (event ==NONE) { } } catch (IncompatibleJournalException e) { $(e.getMessage()).$() .$(\" \").$();} if (event) { if (channel()) { ; } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:02:41.945589", "n_pass": [2261, 129, 129], "score": "0.6919", "loss": "0.7712", "code": " void run() {notifyCallback(RUNNING);  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try {incrementAndGet(); } catch (JournalNetworkException e) { if (0) {} };(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents);} catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command;} } if (event ==NONE) { } } catch (IncompatibleJournalException e) { $(e.getMessage()).$() .$(\" \").$();} if (event) { if (channel()) { ; } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:02:43.368328", "n_pass": [2263, 130, 130], "score": "0.7442", "loss": "0.5959", "code": " void run() {notifyCallback(RUNNING);  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try {incrementAndGet(); } catch (JournalNetworkException e) { if (0) {} };(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents);} catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command;}} if (event ==NONE) { } } catch (IncompatibleJournalException e) { $(e.getMessage()).$() .$(\" \").$();} if (event) { if (channel()) { ; } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:02:44.790908", "n_pass": [2265, 131, 131], "score": "0.8095", "loss": "0.4558", "code": " void run() {notifyCallback(RUNNING);  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try {incrementAndGet(); } catch (JournalNetworkException e) { if (0) {} };(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents);} catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command;}}if (event ==NONE) { } } catch (IncompatibleJournalException e) { $(e.getMessage()).$() .$(\" \").$();} if (event) { if (channel()) { ; } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:02:46.215344", "n_pass": [2267, 132, 132], "score": "0.8332", "loss": "0.3997", "code": " void run() {notifyCallback(RUNNING);  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try {incrementAndGet(); } catch (JournalNetworkException e) { if (0) {} };(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents);} catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command;}}if(event ==NONE) { } } catch (IncompatibleJournalException e) { $(e.getMessage()).$() .$(\" \").$();} if (event) { if (channel()) { ; } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:02:47.669598", "n_pass": [2270, 133, 133], "score": "0.9062", "loss": "0.2216", "code": " void run() {notifyCallback(RUNNING);  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try {incrementAndGet(); } catch (JournalNetworkException e) { if (0) {} };(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents);} catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command;}}if(event==NONE) { } } catch (IncompatibleJournalException e) { $(e.getMessage()).$() .$(\" \").$();} if (event) { if (channel()) { ; } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:02:49.089871", "n_pass": [2271, 134, 134], "score": "0.8121", "loss": "0.454", "code": " void run() {notifyCallback(RUNNING);  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try {incrementAndGet(); } catch (JournalNetworkException e) { if (0) {} };(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents);} catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command;}}if(event=NONE) { } } catch (IncompatibleJournalException e) { $(e.getMessage()).$() .$(\" \").$();} if (event) { if (channel()) { ; } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:02:50.508126", "n_pass": [2272, 135, 135], "score": "0.8394", "loss": "0.385", "code": " void run() {notifyCallback(RUNNING);  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try {incrementAndGet(); } catch (JournalNetworkException e) { if (0) {} };(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents);} catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command;}}if(eventNONE) { } } catch (IncompatibleJournalException e) { $(e.getMessage()).$() .$(\" \").$();} if (event) { if (channel()) { ; } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:02:51.927524", "n_pass": [2273, 136, 136], "score": "0.7362", "loss": "0.6316", "code": " void run() {notifyCallback(RUNNING);  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try {incrementAndGet(); } catch (JournalNetworkException e) { if (0) {} };(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents);} catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command;}}if(event) { } } catch (IncompatibleJournalException e) { $(e.getMessage()).$() .$(\" \").$();} if (event) { if (channel()) { ; } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:02:53.348588", "n_pass": [2275, 137, 137], "score": "0.8405", "loss": "0.3572", "code": " void run() {notifyCallback(RUNNING);  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try {incrementAndGet(); } catch (JournalNetworkException e) { if (0) {} };(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents);} catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command;}}if(event){ } } catch (IncompatibleJournalException e) { $(e.getMessage()).$() .$(\" \").$();} if (event) { if (channel()) { ; } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:02:54.959679", "n_pass": [2277, 138, 138], "score": "0.8252", "loss": "0.4171", "code": " void run() {notifyCallback(RUNNING);  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try {incrementAndGet(); } catch (JournalNetworkException e) { if (0) {} };(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents);} catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command;}}if(event){} } catch (IncompatibleJournalException e) { $(e.getMessage()).$() .$(\" \").$();} if (event) { if (channel()) { ; } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:02:56.396802", "n_pass": [2279, 139, 139], "score": "0.8193", "loss": "0.4053", "code": " void run() {notifyCallback(RUNNING);  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try {incrementAndGet(); } catch (JournalNetworkException e) { if (0) {} };(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents);} catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command;}}if(event){}} catch (IncompatibleJournalException e) { $(e.getMessage()).$() .$(\" \").$();} if (event) { if (channel()) { ; } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:02:57.839364", "n_pass": [2281, 140, 140], "score": "0.8358", "loss": "0.3925", "code": " void run() {notifyCallback(RUNNING);  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try {incrementAndGet(); } catch (JournalNetworkException e) { if (0) {} };(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents);} catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command;}}if(event){}}catch (IncompatibleJournalException e) { $(e.getMessage()).$() .$(\" \").$();} if (event) { if (channel()) { ; } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:02:59.260345", "n_pass": [2283, 141, 141], "score": "0.8399", "loss": "0.378", "code": " void run() {notifyCallback(RUNNING);  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try {incrementAndGet(); } catch (JournalNetworkException e) { if (0) {} };(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents);} catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command;}}if(event){}}catch(IncompatibleJournalException e) { $(e.getMessage()).$() .$(\" \").$();} if (event) { if (channel()) { ; } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:03:00.718009", "n_pass": [2289, 142, 142], "score": "0.8672", "loss": "0.3278", "code": " void run() {notifyCallback(RUNNING);  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try {incrementAndGet(); } catch (JournalNetworkException e) { if (0) {} };(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents);} catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command;}}if(event){}}catch(IncompatibleJournalException e){ $(e.getMessage()).$() .$(\" \").$();} if (event) { if (channel()) { ; } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:03:02.137955", "n_pass": [2291, 143, 143], "score": "0.8385", "loss": "0.3674", "code": " void run() {notifyCallback(RUNNING);  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try {incrementAndGet(); } catch (JournalNetworkException e) { if (0) {} };(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents);} catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command;}}if(event){}}catch(IncompatibleJournalException e){$(e.getMessage()).$() .$(\" \").$();} if (event) { if (channel()) { ; } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:03:03.573292", "n_pass": [2292, 144, 144], "score": "0.8123", "loss": "0.4411", "code": " void run() {notifyCallback(RUNNING);  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try {incrementAndGet(); } catch (JournalNetworkException e) { if (0) {} };(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents);} catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command;}}if(event){}}catch(IncompatibleJournalException e){(e.getMessage()).$() .$(\" \").$();} if (event) { if (channel()) { ; } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:03:04.998761", "n_pass": [2295, 145, 145], "score": "0.8293", "loss": "0.4086", "code": " void run() {notifyCallback(RUNNING);  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try {incrementAndGet(); } catch (JournalNetworkException e) { if (0) {} };(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents);} catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command;}}if(event){}}catch(IncompatibleJournalException e){(egetMessage()).$() .$(\" \").$();} if (event) { if (channel()) { ; } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:03:06.413811", "n_pass": [2296, 146, 146], "score": "0.8816", "loss": "0.2908", "code": " void run() {notifyCallback(RUNNING);  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try {incrementAndGet(); } catch (JournalNetworkException e) { if (0) {} };(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents);} catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command;}}if(event){}}catch(IncompatibleJournalException e){(e()).$() .$(\" \").$();} if (event) { if (channel()) { ; } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:03:07.854909", "n_pass": [2304, 147, 147], "score": "0.8815", "loss": "0.288", "code": " void run() {notifyCallback(RUNNING);  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try {incrementAndGet(); } catch (JournalNetworkException e) { if (0) {} };(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents);} catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command;}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\" \").$();} if (event) { if (channel()) { ; } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:03:09.291109", "n_pass": [2311, 148, 148], "score": "0.8437", "loss": "0.3713", "code": " void run() {notifyCallback(RUNNING);  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try {incrementAndGet(); } catch (JournalNetworkException e) { if (0) {} };(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents);} catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command;}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\" \").$;} if (event) { if (channel()) { ; } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:03:10.740231", "n_pass": [2322, 149, 149], "score": "0.8126", "loss": "0.4374", "code": " void run() {notifyCallback(RUNNING);  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try {incrementAndGet(); } catch (JournalNetworkException e) { if (0) {} };(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents);} catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command;}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\" \").$;} if (event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:03:12.233744", "n_pass": [2339, 150, 150], "score": "0.7629", "loss": "0.5389", "code": "void run() {notifyCallback(RUNNING);  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try {incrementAndGet(); } catch (JournalNetworkException e) { if (0) {} };(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents);} catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command;}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\" \").$;} if (event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:03:14.485680", "n_pass": [2345, 151, 151], "score": "0.8764", "loss": "0.2922", "code": "void run(){notifyCallback(RUNNING);  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try {incrementAndGet(); } catch (JournalNetworkException e) { if (0) {} };(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents);} catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command;}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\" \").$;} if (event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:03:15.931170", "n_pass": [2347, 152, 152], "score": "0.7197", "loss": "0.6677", "code": "void run(){(RUNNING);  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try {incrementAndGet(); } catch (JournalNetworkException e) { if (0) {} };(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents);} catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command;}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\" \").$;} if (event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:03:17.748497", "n_pass": [2352, 153, 153], "score": "0.7837", "loss": "0.5351", "code": "void run(){(RUNNING); connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try {incrementAndGet(); } catch (JournalNetworkException e) { if (0) {} };(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents);} catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command;}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\" \").$;} if (event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:03:19.194455", "n_pass": [2353, 154, 154], "score": "0.7769", "loss": "0.5344", "code": "void run(){(RUNNING);connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try {incrementAndGet(); } catch (JournalNetworkException e) { if (0) {} };(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents);} catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command;}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\" \").$;} if (event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:03:20.614017", "n_pass": [2355, 155, 155], "score": "0.7946", "loss": "0.5066", "code": "void run(){(RUNNING);connected= false; try { while (true) { if (!connected) {{ try { closeChannel(); try {incrementAndGet(); } catch (JournalNetworkException e) { if (0) {} };(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents);} catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command;}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\" \").$;} if (event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:03:22.063845", "n_pass": [2357, 156, 156], "score": "0.6635", "loss": "0.8087", "code": "void run(){(RUNNING);connected=false; try { while (true) { if (!connected) {{ try { closeChannel(); try {incrementAndGet(); } catch (JournalNetworkException e) { if (0) {} };(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents);} catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command;}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\" \").$;} if (event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:03:23.483783", "n_pass": [2360, 157, 157], "score": "0.7068", "loss": "0.7156", "code": "void run(){(RUNNING);connected=false;try { while (true) { if (!connected) {{ try { closeChannel(); try {incrementAndGet(); } catch (JournalNetworkException e) { if (0) {} };(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents);} catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command;}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\" \").$;} if (event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:03:24.937279", "n_pass": [2362, 158, 158], "score": "0.7886", "loss": "0.5088", "code": "void run(){(RUNNING);connected=false;try{ while (true) { if (!connected) {{ try { closeChannel(); try {incrementAndGet(); } catch (JournalNetworkException e) { if (0) {} };(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents);} catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command;}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\" \").$;} if (event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:03:26.355639", "n_pass": [2364, 159, 159], "score": "0.7575", "loss": "0.6219", "code": "void run(){(RUNNING);connected=false;try{while (true) { if (!connected) {{ try { closeChannel(); try {incrementAndGet(); } catch (JournalNetworkException e) { if (0) {} };(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents);} catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command;}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\" \").$;} if (event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:03:27.786739", "n_pass": [2366, 160, 160], "score": "0.7754", "loss": "0.5364", "code": "void run(){(RUNNING);connected=false;try{while(true) { if (!connected) {{ try { closeChannel(); try {incrementAndGet(); } catch (JournalNetworkException e) { if (0) {} };(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents);} catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command;}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\" \").$;} if (event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:03:29.210323", "n_pass": [2370, 161, 161], "score": "0.7534", "loss": "0.5941", "code": "void run(){(RUNNING);connected=false;try{while(true){ if (!connected) {{ try { closeChannel(); try {incrementAndGet(); } catch (JournalNetworkException e) { if (0) {} };(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents);} catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command;}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\" \").$;} if (event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:03:30.626234", "n_pass": [2372, 162, 162], "score": "0.8513", "loss": "0.3849", "code": "void run(){(RUNNING);connected=false;try{while(true){if (!connected) {{ try { closeChannel(); try {incrementAndGet(); } catch (JournalNetworkException e) { if (0) {} };(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents);} catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command;}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\" \").$;} if (event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:03:32.042391", "n_pass": [2374, 163, 163], "score": "0.7139", "loss": "0.6745", "code": "void run(){(RUNNING);connected=false;try{while(true){if(!connected) {{ try { closeChannel(); try {incrementAndGet(); } catch (JournalNetworkException e) { if (0) {} };(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents);} catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command;}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\" \").$;} if (event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:03:33.458618", "n_pass": [2376, 164, 164], "score": "0.8444", "loss": "0.4032", "code": "void run(){(RUNNING);connected=false;try{while(true){if(connected) {{ try { closeChannel(); try {incrementAndGet(); } catch (JournalNetworkException e) { if (0) {} };(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents);} catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command;}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\" \").$;} if (event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:03:34.877331", "n_pass": [2379, 165, 165], "score": "0.7974", "loss": "0.5027", "code": "void run(){(RUNNING);connected=false;try{while(true){if(connected){{ try { closeChannel(); try {incrementAndGet(); } catch (JournalNetworkException e) { if (0) {} };(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents);} catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command;}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\" \").$;} if (event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:03:36.298552", "n_pass": [2382, 166, 166], "score": "0.7674", "loss": "0.5662", "code": "void run(){(RUNNING);connected=false;try{while(true){if(connected){{try { closeChannel(); try {incrementAndGet(); } catch (JournalNetworkException e) { if (0) {} };(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents);} catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command;}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\" \").$;} if (event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:03:37.730365", "n_pass": [2384, 167, 167], "score": "0.8352", "loss": "0.4145", "code": "void run(){(RUNNING);connected=false;try{while(true){if(connected){{try{ closeChannel(); try {incrementAndGet(); } catch (JournalNetworkException e) { if (0) {} };(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents);} catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command;}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\" \").$;} if (event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:03:39.148776", "n_pass": [2386, 168, 168], "score": "0.8089", "loss": "0.4545", "code": "void run(){(RUNNING);connected=false;try{while(true){if(connected){{try{closeChannel(); try {incrementAndGet(); } catch (JournalNetworkException e) { if (0) {} };(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents);} catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command;}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\" \").$;} if (event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:03:40.575089", "n_pass": [2391, 169, 169], "score": "0.8821", "loss": "0.3043", "code": "void run(){(RUNNING);connected=false;try{while(true){if(connected){{try{closeChannel();try {incrementAndGet(); } catch (JournalNetworkException e) { if (0) {} };(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents);} catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command;}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\" \").$;} if (event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:03:42.034283", "n_pass": [2393, 170, 170], "score": "0.8418", "loss": "0.3902", "code": "void run(){(RUNNING);connected=false;try{while(true){if(connected){{try{closeChannel();try{incrementAndGet(); } catch (JournalNetworkException e) { if (0) {} };(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents);} catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command;}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\" \").$;} if (event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:03:43.472690", "n_pass": [2399, 171, 171], "score": "0.8471", "loss": "0.3832", "code": "void run(){(RUNNING);connected=false;try{while(true){if(connected){{try{closeChannel();try{incrementAndGet();} catch (JournalNetworkException e) { if (0) {} };(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents);} catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command;}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\" \").$;} if (event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:03:44.889658", "n_pass": [2401, 172, 172], "score": "0.8274", "loss": "0.4272", "code": "void run(){(RUNNING);connected=false;try{while(true){if(connected){{try{closeChannel();try{incrementAndGet();}catch (JournalNetworkException e) { if (0) {} };(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents);} catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command;}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\" \").$;} if (event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:03:46.315673", "n_pass": [2403, 173, 173], "score": "0.8691", "loss": "0.3207", "code": "void run(){(RUNNING);connected=false;try{while(true){if(connected){{try{closeChannel();try{incrementAndGet();}catch(JournalNetworkException e) { if (0) {} };(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents);} catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command;}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\" \").$;} if (event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:03:47.754968", "n_pass": [2409, 174, 174], "score": "0.8066", "loss": "0.4818", "code": "void run(){(RUNNING);connected=false;try{while(true){if(connected){{try{closeChannel();try{incrementAndGet();}catch(JournalNetworkException e){ if (0) {} };(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents);} catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command;}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\" \").$;} if (event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:03:49.173115", "n_pass": [2411, 175, 175], "score": "0.8444", "loss": "0.3675", "code": "void run(){(RUNNING);connected=false;try{while(true){if(connected){{try{closeChannel();try{incrementAndGet();}catch(JournalNetworkException e){if (0) {} };(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents);} catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command;}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\" \").$;} if (event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:03:50.591920", "n_pass": [2413, 176, 176], "score": "0.8779", "loss": "0.3086", "code": "void run(){(RUNNING);connected=false;try{while(true){if(connected){{try{closeChannel();try{incrementAndGet();}catch(JournalNetworkException e){if(0) {} };(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents);} catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command;}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\" \").$;} if (event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:03:52.020900", "n_pass": [2417, 177, 177], "score": "0.8238", "loss": "0.4376", "code": "void run(){(RUNNING);connected=false;try{while(true){if(connected){{try{closeChannel();try{incrementAndGet();}catch(JournalNetworkException e){if(0){} };(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents);} catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command;}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\" \").$;} if (event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:03:53.437036", "n_pass": [2420, 178, 178], "score": "0.7424", "loss": "0.5878", "code": "void run(){(RUNNING);connected=false;try{while(true){if(connected){{try{closeChannel();try{incrementAndGet();}catch(JournalNetworkException e){if(0){}};(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents);} catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command;}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\" \").$;} if (event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:03:54.852719", "n_pass": [2422, 179, 179], "score": "0.792", "loss": "0.4981", "code": "void run(){(RUNNING);connected=false;try{while(true){if(connected){{try{closeChannel();try{incrementAndGet();}catch(JournalNetworkException e){if(0){}}(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents);} catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command;}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\" \").$;} if (event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:03:56.272183", "n_pass": [2427, 180, 180], "score": "0.7283", "loss": "0.6347", "code": "void run(){(RUNNING);connected=false;try{while(true){if(connected){{try{closeChannel();try{incrementAndGet();}catch(JournalNetworkException e){if(0){}}(JournalClientEvents);} catch (UnauthorizedException e) {(JournalClientEvents);} catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command;}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\" \").$;} if (event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:03:57.690714", "n_pass": [2429, 181, 181], "score": "0.6717", "loss": "0.7769", "code": "void run(){(RUNNING);connected=false;try{while(true){if(connected){{try{closeChannel();try{incrementAndGet();}catch(JournalNetworkException e){if(0){}}(JournalClientEvents);}catch (UnauthorizedException e) {(JournalClientEvents);} catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command;}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\" \").$;} if (event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:03:59.104963", "n_pass": [2431, 182, 182], "score": "0.6581", "loss": "0.7759", "code": "void run(){(RUNNING);connected=false;try{while(true){if(connected){{try{closeChannel();try{incrementAndGet();}catch(JournalNetworkException e){if(0){}}(JournalClientEvents);}catch(UnauthorizedException e) {(JournalClientEvents);} catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command;}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\" \").$;} if (event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:04:00.524751", "n_pass": [2437, 183, 183], "score": "0.84", "loss": "0.3803", "code": "void run(){(RUNNING);connected=false;try{while(true){if(connected){{try{closeChannel();try{incrementAndGet();}catch(JournalNetworkException e){if(0){}}(JournalClientEvents);}catch(UnauthorizedException e){(JournalClientEvents);} catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command;}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\" \").$;} if (event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:04:01.943508", "n_pass": [2444, 184, 184], "score": "0.798", "loss": "0.4837", "code": "void run(){(RUNNING);connected=false;try{while(true){if(connected){{try{closeChannel();try{incrementAndGet();}catch(JournalNetworkException e){if(0){}}(JournalClientEvents);}catch(UnauthorizedException e){(JournalClientEvents);}catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command;}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\" \").$;} if (event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:04:03.380082", "n_pass": [2446, 185, 185], "score": "0.8776", "loss": "0.3031", "code": "void run(){(RUNNING);connected=false;try{while(true){if(connected){{try{closeChannel();try{incrementAndGet();}catch(JournalNetworkException e){if(0){}}(JournalClientEvents);}catch(UnauthorizedException e){(JournalClientEvents);}catch(AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command;}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\" \").$;} if (event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:04:04.798553", "n_pass": [2449, 186, 186], "score": "0.8045", "loss": "0.4939", "code": "void run(){(RUNNING);connected=false;try{while(true){if(connected){{try{closeChannel();try{incrementAndGet();}catch(JournalNetworkException e){if(0){}}(JournalClientEvents);}catch(UnauthorizedException e){(JournalClientEvents);}catch(AuthenticationConfigException| AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command;}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\" \").$;} if (event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:04:06.219522", "n_pass": [2451, 187, 187], "score": "0.8053", "loss": "0.467", "code": "void run(){(RUNNING);connected=false;try{while(true){if(connected){{try{closeChannel();try{incrementAndGet();}catch(JournalNetworkException e){if(0){}}(JournalClientEvents);}catch(UnauthorizedException e){(JournalClientEvents);}catch(AuthenticationConfigException|AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command;}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\" \").$;} if (event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:04:07.662238", "n_pass": [2456, 188, 188], "score": "0.7852", "loss": "0.545", "code": "void run(){(RUNNING);connected=false;try{while(true){if(connected){{try{closeChannel();try{incrementAndGet();}catch(JournalNetworkException e){if(0){}}(JournalClientEvents);}catch(UnauthorizedException e){(JournalClientEvents);}catch(AuthenticationConfigException|AuthenticationProviderException e){  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command;}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\" \").$;} if (event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:04:09.078333", "n_pass": [2458, 189, 189], "score": "0.842", "loss": "0.3793", "code": "void run(){(RUNNING);connected=false;try{while(true){if(connected){{try{closeChannel();try{incrementAndGet();}catch(JournalNetworkException e){if(0){}}(JournalClientEvents);}catch(UnauthorizedException e){(JournalClientEvents);}catch(AuthenticationConfigException|AuthenticationProviderException e){ close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command;}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\" \").$;} if (event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:04:10.489985", "n_pass": [2459, 190, 190], "score": "0.8373", "loss": "0.3862", "code": "void run(){(RUNNING);connected=false;try{while(true){if(connected){{try{closeChannel();try{incrementAndGet();}catch(JournalNetworkException e){if(0){}}(JournalClientEvents);}catch(UnauthorizedException e){(JournalClientEvents);}catch(AuthenticationConfigException|AuthenticationProviderException e){close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command;}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\" \").$;} if (event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:04:11.895144", "n_pass": [2461, 191, 191], "score": "0.8078", "loss": "0.4635", "code": "void run(){(RUNNING);connected=false;try{while(true){if(connected){{try{closeChannel();try{incrementAndGet();}catch(JournalNetworkException e){if(0){}}(JournalClientEvents);}catch(UnauthorizedException e){(JournalClientEvents);}catch(AuthenticationConfigException|AuthenticationProviderException e){close();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command;}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\" \").$;} if (event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:04:13.341362", "n_pass": [2470, 192, 192], "score": "0.864", "loss": "0.3591", "code": "void run(){(RUNNING);connected=false;try{while(true){if(connected){{try{closeChannel();try{incrementAndGet();}catch(JournalNetworkException e){if(0){}}(JournalClientEvents);}catch(UnauthorizedException e){(JournalClientEvents);}catch(AuthenticationConfigException|AuthenticationProviderException e){close();(JournalClientEvents);}} (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command;}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\" \").$;} if (event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:04:14.756382", "n_pass": [2472, 193, 193], "score": "0.8198", "loss": "0.4341", "code": "void run(){(RUNNING);connected=false;try{while(true){if(connected){{try{closeChannel();try{incrementAndGet();}catch(JournalNetworkException e){if(0){}}(JournalClientEvents);}catch(UnauthorizedException e){(JournalClientEvents);}catch(AuthenticationConfigException|AuthenticationProviderException e){close();(JournalClientEvents);}}(true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command;}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\" \").$;} if (event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:04:16.223126", "n_pass": [2477, 194, 194], "score": "0.671", "loss": "0.7616", "code": "void run(){(RUNNING);connected=false;try{while(true){if(connected){{try{closeChannel();try{incrementAndGet();}catch(JournalNetworkException e){if(0){}}(JournalClientEvents);}catch(UnauthorizedException e){(JournalClientEvents);}catch(AuthenticationConfigException|AuthenticationProviderException e){close();(JournalClientEvents);}}(true);if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command;}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\" \").$;} if (event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:04:17.639138", "n_pass": [2479, 195, 195], "score": "0.7278", "loss": "0.6601", "code": "void run(){(RUNNING);connected=false;try{while(true){if(connected){{try{closeChannel();try{incrementAndGet();}catch(JournalNetworkException e){if(0){}}(JournalClientEvents);}catch(UnauthorizedException e){(JournalClientEvents);}catch(AuthenticationConfigException|AuthenticationProviderException e){close();(JournalClientEvents);}}(true);if((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command;}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\" \").$;} if (event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:04:19.066259", "n_pass": [2485, 196, 196], "score": "0.8298", "loss": "0.4174", "code": "void run(){(RUNNING);connected=false;try{while(true){if(connected){{try{closeChannel();try{incrementAndGet();}catch(JournalNetworkException e){if(0){}}(JournalClientEvents);}catch(UnauthorizedException e){(JournalClientEvents);}catch(AuthenticationConfigException|AuthenticationProviderException e){close();(JournalClientEvents);}}(true);if((retryCount)){ } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command;}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\" \").$;} if (event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:04:20.480455", "n_pass": [2487, 197, 197], "score": "0.7919", "loss": "0.544", "code": "void run(){(RUNNING);connected=false;try{while(true){if(connected){{try{closeChannel();try{incrementAndGet();}catch(JournalNetworkException e){if(0){}}(JournalClientEvents);}catch(UnauthorizedException e){(JournalClientEvents);}catch(AuthenticationConfigException|AuthenticationProviderException e){close();(JournalClientEvents);}}(true);if((retryCount)){} } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command;}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\" \").$;} if (event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:04:21.898532", "n_pass": [2489, 198, 198], "score": "0.884", "loss": "0.3078", "code": "void run(){(RUNNING);connected=false;try{while(true){if(connected){{try{closeChannel();try{incrementAndGet();}catch(JournalNetworkException e){if(0){}}(JournalClientEvents);}catch(UnauthorizedException e){(JournalClientEvents);}catch(AuthenticationConfigException|AuthenticationProviderException e){close();(JournalClientEvents);}}(true);if((retryCount)){}} try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command;}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\" \").$;} if (event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:04:23.313531", "n_pass": [2491, 199, 199], "score": "0.6994", "loss": "0.706", "code": "void run(){(RUNNING);connected=false;try{while(true){if(connected){{try{closeChannel();try{incrementAndGet();}catch(JournalNetworkException e){if(0){}}(JournalClientEvents);}catch(UnauthorizedException e){(JournalClientEvents);}catch(AuthenticationConfigException|AuthenticationProviderException e){close();(JournalClientEvents);}}(true);if((retryCount)){}}try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command;}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\" \").$;} if (event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:04:24.728989", "n_pass": [2493, 200, 200], "score": "0.8102", "loss": "0.4577", "code": "void run(){(RUNNING);connected=false;try{while(true){if(connected){{try{closeChannel();try{incrementAndGet();}catch(JournalNetworkException e){if(0){}}(JournalClientEvents);}catch(UnauthorizedException e){(JournalClientEvents);}catch(AuthenticationConfigException|AuthenticationProviderException e){close();(JournalClientEvents);}}(true);if((retryCount)){}}try{ if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command;}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\" \").$;} if (event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:04:26.164324", "n_pass": [2495, 201, 201], "score": "0.8751", "loss": "0.3271", "code": "void run(){(RUNNING);connected=false;try{while(true){if(connected){{try{closeChannel();try{incrementAndGet();}catch(JournalNetworkException e){if(0){}}(JournalClientEvents);}catch(UnauthorizedException e){(JournalClientEvents);}catch(AuthenticationConfigException|AuthenticationProviderException e){close();(JournalClientEvents);}}(true);if((retryCount)){}}try{if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command;}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\" \").$;} if (event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:04:27.577930", "n_pass": [2497, 202, 202], "score": "0.8005", "loss": "0.4763", "code": "void run(){(RUNNING);connected=false;try{while(true){if(connected){{try{closeChannel();try{incrementAndGet();}catch(JournalNetworkException e){if(0){}}(JournalClientEvents);}catch(UnauthorizedException e){(JournalClientEvents);}catch(AuthenticationConfigException|AuthenticationProviderException e){close();(JournalClientEvents);}}(true);if((retryCount)){}}try{if( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command;}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\" \").$;} if (event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:04:29.018452", "n_pass": [2499, 203, 203], "score": "0.8362", "loss": "0.3829", "code": "void run(){(RUNNING);connected=false;try{while(true){if(connected){{try{closeChannel();try{incrementAndGet();}catch(JournalNetworkException e){if(0){}}(JournalClientEvents);}catch(UnauthorizedException e){(JournalClientEvents);}catch(AuthenticationConfigException|AuthenticationProviderException e){close();(JournalClientEvents);}}(true);if((retryCount)){}}try{if(isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command;}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\" \").$;} if (event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:04:30.433369", "n_pass": [2502, 204, 204], "score": "0.7105", "loss": "0.6528", "code": "void run(){(RUNNING);connected=false;try{while(true){if(connected){{try{closeChannel();try{incrementAndGet();}catch(JournalNetworkException e){if(0){}}(JournalClientEvents);}catch(UnauthorizedException e){(JournalClientEvents);}catch(AuthenticationConfigException|AuthenticationProviderException e){close();(JournalClientEvents);}}(true);if((retryCount)){}}try{if(isRunning){byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command;}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\" \").$;} if (event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:04:31.874878", "n_pass": [2504, 205, 205], "score": "0.7233", "loss": "0.5894", "code": "void run(){(RUNNING);connected=false;try{while(true){if(connected){{try{closeChannel();try{incrementAndGet();}catch(JournalNetworkException e){if(0){}}(JournalClientEvents);}catch(UnauthorizedException e){(JournalClientEvents);}catch(AuthenticationConfigException|AuthenticationProviderException e){close();(JournalClientEvents);}}(true);if((retryCount)){}}try{if(isRunning){ cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command;}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\" \").$;} if (event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:04:33.305104", "n_pass": [2505, 206, 206], "score": "0.8533", "loss": "0.3773", "code": "void run(){(RUNNING);connected=false;try{while(true){if(connected){{try{closeChannel();try{incrementAndGet();}catch(JournalNetworkException e){if(0){}}(JournalClientEvents);}catch(UnauthorizedException e){(JournalClientEvents);}catch(AuthenticationConfigException|AuthenticationProviderException e){close();(JournalClientEvents);}}(true);if((retryCount)){}}try{if(isRunning){cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command;}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\" \").$;} if (event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:04:34.745269", "n_pass": [2507, 207, 207], "score": "0.7676", "loss": "0.5224", "code": "void run(){(RUNNING);connected=false;try{while(true){if(connected){{try{closeChannel();try{incrementAndGet();}catch(JournalNetworkException e){if(0){}}(JournalClientEvents);}catch(UnauthorizedException e){(JournalClientEvents);}catch(AuthenticationConfigException|AuthenticationProviderException e){close();(JournalClientEvents);}}(true);if((retryCount)){}}try{if(isRunning){cmd= commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command;}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\" \").$;} if (event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:04:36.187979", "n_pass": [2508, 208, 208], "score": "0.7311", "loss": "0.6535", "code": "void run(){(RUNNING);connected=false;try{while(true){if(connected){{try{closeChannel();try{incrementAndGet();}catch(JournalNetworkException e){if(0){}}(JournalClientEvents);}catch(UnauthorizedException e){(JournalClientEvents);}catch(AuthenticationConfigException|AuthenticationProviderException e){close();(JournalClientEvents);}}(true);if((retryCount)){}}try{if(isRunning){cmd commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command;}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\" \").$;} if (event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:04:37.594161", "n_pass": [2509, 209, 209], "score": "0.8319", "loss": "0.423", "code": "void run(){(RUNNING);connected=false;try{while(true){if(connected){{try{closeChannel();try{incrementAndGet();}catch(JournalNetworkException e){if(0){}}(JournalClientEvents);}catch(UnauthorizedException e){(JournalClientEvents);}catch(AuthenticationConfigException|AuthenticationProviderException e){close();(JournalClientEvents);}}(true);if((retryCount)){}}try{if(isRunning){cmdcommandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command;}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\" \").$;} if (event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:04:39.000849", "n_pass": [2510, 210, 210], "score": "0.8114", "loss": "0.4748", "code": "void run(){(RUNNING);connected=false;try{while(true){if(connected){{try{closeChannel();try{incrementAndGet();}catch(JournalNetworkException e){if(0){}}(JournalClientEvents);}catch(UnauthorizedException e){(JournalClientEvents);}catch(AuthenticationConfigException|AuthenticationProviderException e){close();(JournalClientEvents);}}(true);if((retryCount)){}}try{if(isRunning){cmd; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command;}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\" \").$;} if (event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:04:40.408196", "n_pass": [2512, 211, 211], "score": "0.7832", "loss": "0.5018", "code": "void run(){(RUNNING);connected=false;try{while(true){if(connected){{try{closeChannel();try{incrementAndGet();}catch(JournalNetworkException e){if(0){}}(JournalClientEvents);}catch(UnauthorizedException e){(JournalClientEvents);}catch(AuthenticationConfigException|AuthenticationProviderException e){close();(JournalClientEvents);}}(true);if((retryCount)){}}try{if(isRunning){cmd;switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command;}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\" \").$;} if (event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:04:41.818202", "n_pass": [2517, 212, 212], "score": "0.7255", "loss": "0.6337", "code": "void run(){(RUNNING);connected=false;try{while(true){if(connected){{try{closeChannel();try{incrementAndGet();}catch(JournalNetworkException e){if(0){}}(JournalClientEvents);}catch(UnauthorizedException e){(JournalClientEvents);}catch(AuthenticationConfigException|AuthenticationProviderException e){close();(JournalClientEvents);}}(true);if((retryCount)){}}try{if(isRunning){cmd;switch(cmd){ case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command;}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\" \").$;} if (event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:04:43.251432", "n_pass": [2519, 213, 213], "score": "0.746", "loss": "0.6034", "code": "void run(){(RUNNING);connected=false;try{while(true){if(connected){{try{closeChannel();try{incrementAndGet();}catch(JournalNetworkException e){if(0){}}(JournalClientEvents);}catch(UnauthorizedException e){(JournalClientEvents);}catch(AuthenticationConfigException|AuthenticationProviderException e){close();(JournalClientEvents);}}(true);if((retryCount)){}}try{if(isRunning){cmd;switch(cmd){case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command;}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\" \").$;} if (event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:04:44.669431", "n_pass": [2524, 214, 214], "score": "0.8264", "loss": "0.4204", "code": "void run(){(RUNNING);connected=false;try{while(true){if(connected){{try{closeChannel();try{incrementAndGet();}catch(JournalNetworkException e){if(0){}}(JournalClientEvents);}catch(UnauthorizedException e){(JournalClientEvents);}catch(AuthenticationConfigException|AuthenticationProviderException e){close();(JournalClientEvents);}}(true);if((retryCount)){}}try{if(isRunning){cmd;switch(cmd){case Command:setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command;}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\" \").$;} if (event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:04:46.095850", "n_pass": [2525, 215, 215], "score": "0.8302", "loss": "0.4403", "code": "void run(){(RUNNING);connected=false;try{while(true){if(connected){{try{closeChannel();try{incrementAndGet();}catch(JournalNetworkException e){if(0){}}(JournalClientEvents);}catch(UnauthorizedException e){(JournalClientEvents);}catch(AuthenticationConfigException|AuthenticationProviderException e){close();(JournalClientEvents);}}(true);if((retryCount)){}}try{if(isRunning){cmd;switch(cmd){case Command:(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command;}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\" \").$;} if (event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:04:47.921621", "n_pass": [2530, 216, 216], "score": "0.7804", "loss": "0.5593", "code": "void run(){(RUNNING);connected=false;try{while(true){if(connected){{try{closeChannel();try{incrementAndGet();}catch(JournalNetworkException e){if(0){}}(JournalClientEvents);}catch(UnauthorizedException e){(JournalClientEvents);}catch(AuthenticationConfigException|AuthenticationProviderException e){close();(JournalClientEvents);}}(true);if((retryCount)){}}try{if(isRunning){cmd;switch(cmd){case Command:(channel);(statsChannel);(0);if(processSubscriptionQueue()){}Command;}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\" \").$;} if (event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:04:49.760775", "n_pass": [2547, 217, 217], "score": "0.7787", "loss": "0.5741", "code": "void run(){(RUNNING);connected=false;try{while(true){if(connected){{try{closeChannel();try{incrementAndGet();}catch(JournalNetworkException e){if(0){}}(JournalClientEvents);}catch(UnauthorizedException e){(JournalClientEvents);}catch(AuthenticationConfigException|AuthenticationProviderException e){close();(JournalClientEvents);}}(true);if((retryCount)){}}try{if(isRunning){cmd;switch(cmd){case Command:(channel);(statsChannel);(0);if(processSubscriptionQueue()){};}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\" \").$;} if (event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:04:51.166775", "n_pass": [2548, 218, 218], "score": "0.8016", "loss": "0.5096", "code": "void run(){(RUNNING);connected=false;try{while(true){if(connected){{try{closeChannel();try{incrementAndGet();}catch(JournalNetworkException e){if(0){}}(JournalClientEvents);}catch(UnauthorizedException e){(JournalClientEvents);}catch(AuthenticationConfigException|AuthenticationProviderException e){close();(JournalClientEvents);}}(true);if((retryCount)){}}try{if(isRunning){cmd;switch(cmd){case Command:(channel);(statsChannel);(0);if(processSubscriptionQueue()){}}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\" \").$;} if (event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:04:52.670721", "n_pass": [2579, 219, 219], "score": "0.7862", "loss": "0.5494", "code": "void run(){(RUNNING);connected=false;try{while(true){if(connected){{try{closeChannel();try{incrementAndGet();}catch(JournalNetworkException e){if(0){}}(JournalClientEvents);}catch(UnauthorizedException e){(JournalClientEvents);}catch(AuthenticationConfigException|AuthenticationProviderException e){close();(JournalClientEvents);}}(true);if((retryCount)){}}try{if(isRunning){cmd;switch(cmd){case Command:(channel);(statsChannel);(0);if(processSubscriptionQueue()){}}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\" \");} if (event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:04:55.334420", "n_pass": [2617, 220, 220], "score": "0.9063", "loss": "0.2757", "code": "void run(){(RUNNING);connectedfalse;try{while(true){if(connected){{try{closeChannel();try{incrementAndGet();}catch(JournalNetworkException e){if(0){}}(JournalClientEvents);}catch(UnauthorizedException e){(JournalClientEvents);}catch(AuthenticationConfigException|AuthenticationProviderException e){close();(JournalClientEvents);}}(true);if((retryCount)){}}try{if(isRunning){cmd;switch(cmd){case Command:(channel);(statsChannel);(0);if(processSubscriptionQueue()){}}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\" \");} if (event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:04:56.734057", "n_pass": [2618, 221, 221], "score": "0.8836", "loss": "0.3248", "code": "void run(){(RUNNING);connected;try{while(true){if(connected){{try{closeChannel();try{incrementAndGet();}catch(JournalNetworkException e){if(0){}}(JournalClientEvents);}catch(UnauthorizedException e){(JournalClientEvents);}catch(AuthenticationConfigException|AuthenticationProviderException e){close();(JournalClientEvents);}}(true);if((retryCount)){}}try{if(isRunning){cmd;switch(cmd){case Command:(channel);(statsChannel);(0);if(processSubscriptionQueue()){}}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\" \");} if (event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:04:58.254702", "n_pass": [2680, 222, 222], "score": "0.8869", "loss": "0.3003", "code": "void run(){(RUNNING);connected;try{while(true){if(connected){{try{closeChannel();try{incrementAndGet();}catch(JournalNetworkException e){if(0){}}(JournalClientEvents);}catch(UnauthorizedException e){(JournalClientEvents);}catch(AuthenticationConfigExceptionAuthenticationProviderException e){close();(JournalClientEvents);}}(true);if((retryCount)){}}try{if(isRunning){cmd;switch(cmd){case Command:(channel);(statsChannel);(0);if(processSubscriptionQueue()){}}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\" \");} if (event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:04:59.654334", "n_pass": [2681, 223, 223], "score": "0.9009", "loss": "0.2689", "code": "void run(){(RUNNING);connected;try{while(true){if(connected){{try{closeChannel();try{incrementAndGet();}catch(JournalNetworkException e){if(0){}}(JournalClientEvents);}catch(UnauthorizedException e){(JournalClientEvents);}catch(AuthenticationConfigException e){close();(JournalClientEvents);}}(true);if((retryCount)){}}try{if(isRunning){cmd;switch(cmd){case Command:(channel);(statsChannel);(0);if(processSubscriptionQueue()){}}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\" \");} if (event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:05:01.132902", "n_pass": [2716, 224, 224], "score": "0.9094", "loss": "0.2489", "code": "void run(){(RUNNING);connected;try{while(true){if(connected){{try{closeChannel();try{incrementAndGet();}catch(JournalNetworkException e){if(0){}}(JournalClientEvents);}catch(UnauthorizedException e){(JournalClientEvents);}catch(AuthenticationConfigException e){close();(JournalClientEvents);}}(true);if((retryCount)){}}try{if(isRunning){;switch(cmd){case Command:(channel);(statsChannel);(0);if(processSubscriptionQueue()){}}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\" \");} if (event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:05:02.532487", "n_pass": [2717, 225, 225], "score": "0.9094", "loss": "0.2489", "code": "void run(){(RUNNING);connected;try{while(true){if(connected){{try{closeChannel();try{incrementAndGet();}catch(JournalNetworkException e){if(0){}}(JournalClientEvents);}catch(UnauthorizedException e){(JournalClientEvents);}catch(AuthenticationConfigException e){close();(JournalClientEvents);}}(true);if((retryCount)){}}try{if(isRunning){switch(cmd){case Command:(channel);(statsChannel);(0);if(processSubscriptionQueue()){}}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\" \");} if (event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:05:06.090583", "n_pass": [2813, 226, 226], "score": "0.9455", "loss": "0.1585", "code": "void run(){(RUNNING);;try{while(true){if(connected){{try{closeChannel();try{incrementAndGet();}catch(JournalNetworkException e){if(0){}}(JournalClientEvents);}catch(UnauthorizedException e){(JournalClientEvents);}catch(AuthenticationConfigException e){close();(JournalClientEvents);}}(true);if((retryCount)){}}try{if(isRunning){switch(cmd){case Command:(channel);(statsChannel);(0);if(processSubscriptionQueue()){}}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\" \");} if (event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:05:07.483220", "n_pass": [2814, 227, 227], "score": "0.9455", "loss": "0.1585", "code": "void run(){(RUNNING);try{while(true){if(connected){{try{closeChannel();try{incrementAndGet();}catch(JournalNetworkException e){if(0){}}(JournalClientEvents);}catch(UnauthorizedException e){(JournalClientEvents);}catch(AuthenticationConfigException e){close();(JournalClientEvents);}}(true);if((retryCount)){}}try{if(isRunning){switch(cmd){case Command:(channel);(statsChannel);(0);if(processSubscriptionQueue()){}}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\" \");} if (event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:05:17.294684", "n_pass": [3061, 228, 228], "score": "0.9481", "loss": "0.1511", "code": "void run(){(RUNNING);try{while(true){if(connected){{try{closeChannel();try{incrementAndGet();}catch(JournalNetworkException e){if(0){}}(JournalClientEvents);}catch(UnauthorizedException e){(JournalClientEvents);}catch(AuthenticationConfigException e){close();(JournalClientEvents);}}(true);if((retryCount)){}}try{if(isRunning){switch(cmd){case Command:(channel);(statsChannel);(0);if(processSubscriptionQueue()){}}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\"\");} if (event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:05:18.698596", "n_pass": [3066, 229, 229], "score": "0.9481", "loss": "0.1511", "code": "void run(){(RUNNING);try{while(true){if(connected){{try{closeChannel();try{incrementAndGet();}catch(JournalNetworkException e){if(0){}}(JournalClientEvents);}catch(UnauthorizedException e){(JournalClientEvents);}catch(AuthenticationConfigException e){close();(JournalClientEvents);}}(true);if((retryCount)){}}try{if(isRunning){switch(cmd){case Command:(channel);(statsChannel);(0);if(processSubscriptionQueue()){}}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\"\");}if (event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:05:20.093517", "n_pass": [3068, 230, 230], "score": "0.9481", "loss": "0.1511", "code": "void run(){(RUNNING);try{while(true){if(connected){{try{closeChannel();try{incrementAndGet();}catch(JournalNetworkException e){if(0){}}(JournalClientEvents);}catch(UnauthorizedException e){(JournalClientEvents);}catch(AuthenticationConfigException e){close();(JournalClientEvents);}}(true);if((retryCount)){}}try{if(isRunning){switch(cmd){case Command:(channel);(statsChannel);(0);if(processSubscriptionQueue()){}}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\"\");}if(event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:05:21.502990", "n_pass": [3072, 231, 231], "score": "0.9481", "loss": "0.1511", "code": "void run(){(RUNNING);try{while(true){if(connected){{try{closeChannel();try{incrementAndGet();}catch(JournalNetworkException e){if(0){}}(JournalClientEvents);}catch(UnauthorizedException e){(JournalClientEvents);}catch(AuthenticationConfigException e){close();(JournalClientEvents);}}(true);if((retryCount)){}}try{if(isRunning){switch(cmd){case Command:(channel);(statsChannel);(0);if(processSubscriptionQueue()){}}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\"\");}if(event){ if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:05:22.899525", "n_pass": [3074, 232, 232], "score": "0.9481", "loss": "0.1511", "code": "void run(){(RUNNING);try{while(true){if(connected){{try{closeChannel();try{incrementAndGet();}catch(JournalNetworkException e){if(0){}}(JournalClientEvents);}catch(UnauthorizedException e){(JournalClientEvents);}catch(AuthenticationConfigException e){close();(JournalClientEvents);}}(true);if((retryCount)){}}try{if(isRunning){switch(cmd){case Command:(channel);(statsChannel);(0);if(processSubscriptionQueue()){}}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\"\");}if(event){if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:05:24.298288", "n_pass": [3076, 233, 233], "score": "0.9481", "loss": "0.1511", "code": "void run(){(RUNNING);try{while(true){if(connected){{try{closeChannel();try{incrementAndGet();}catch(JournalNetworkException e){if(0){}}(JournalClientEvents);}catch(UnauthorizedException e){(JournalClientEvents);}catch(AuthenticationConfigException e){close();(JournalClientEvents);}}(true);if((retryCount)){}}try{if(isRunning){switch(cmd){case Command:(channel);(statsChannel);(0);if(processSubscriptionQueue()){}}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\"\");}if(event){if(channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:05:25.708033", "n_pass": [3082, 234, 234], "score": "0.9481", "loss": "0.1511", "code": "void run(){(RUNNING);try{while(true){if(connected){{try{closeChannel();try{incrementAndGet();}catch(JournalNetworkException e){if(0){}}(JournalClientEvents);}catch(UnauthorizedException e){(JournalClientEvents);}catch(AuthenticationConfigException e){close();(JournalClientEvents);}}(true);if((retryCount)){}}try{if(isRunning){switch(cmd){case Command:(channel);(statsChannel);(0);if(processSubscriptionQueue()){}}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\"\");}if(event){if(channel()){ } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:05:27.130657", "n_pass": [3084, 235, 235], "score": "0.9481", "loss": "0.1511", "code": "void run(){(RUNNING);try{while(true){if(connected){{try{closeChannel();try{incrementAndGet();}catch(JournalNetworkException e){if(0){}}(JournalClientEvents);}catch(UnauthorizedException e){(JournalClientEvents);}catch(AuthenticationConfigException e){close();(JournalClientEvents);}}(true);if((retryCount)){}}try{if(isRunning){switch(cmd){case Command:(channel);(statsChannel);(0);if(processSubscriptionQueue()){}}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\"\");}if(event){if(channel()){} } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:05:28.543274", "n_pass": [3086, 236, 236], "score": "0.9481", "loss": "0.1511", "code": "void run(){(RUNNING);try{while(true){if(connected){{try{closeChannel();try{incrementAndGet();}catch(JournalNetworkException e){if(0){}}(JournalClientEvents);}catch(UnauthorizedException e){(JournalClientEvents);}catch(AuthenticationConfigException e){close();(JournalClientEvents);}}(true);if((retryCount)){}}try{if(isRunning){switch(cmd){case Command:(channel);(statsChannel);(0);if(processSubscriptionQueue()){}}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\"\");}if(event){if(channel()){}} } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:05:29.942603", "n_pass": [3088, 237, 237], "score": "0.9481", "loss": "0.1511", "code": "void run(){(RUNNING);try{while(true){if(connected){{try{closeChannel();try{incrementAndGet();}catch(JournalNetworkException e){if(0){}}(JournalClientEvents);}catch(UnauthorizedException e){(JournalClientEvents);}catch(AuthenticationConfigException e){close();(JournalClientEvents);}}(true);if((retryCount)){}}try{if(isRunning){switch(cmd){case Command:(channel);(statsChannel);(0);if(processSubscriptionQueue()){}}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\"\");}if(event){if(channel()){}}} } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:05:31.342705", "n_pass": [3090, 238, 238], "score": "0.9481", "loss": "0.1511", "code": "void run(){(RUNNING);try{while(true){if(connected){{try{closeChannel();try{incrementAndGet();}catch(JournalNetworkException e){if(0){}}(JournalClientEvents);}catch(UnauthorizedException e){(JournalClientEvents);}catch(AuthenticationConfigException e){close();(JournalClientEvents);}}(true);if((retryCount)){}}try{if(isRunning){switch(cmd){case Command:(channel);(statsChannel);(0);if(processSubscriptionQueue()){}}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\"\");}if(event){if(channel()){}}}} catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:05:32.764285", "n_pass": [3092, 239, 239], "score": "0.9481", "loss": "0.1511", "code": "void run(){(RUNNING);try{while(true){if(connected){{try{closeChannel();try{incrementAndGet();}catch(JournalNetworkException e){if(0){}}(JournalClientEvents);}catch(UnauthorizedException e){(JournalClientEvents);}catch(AuthenticationConfigException e){close();(JournalClientEvents);}}(true);if((retryCount)){}}try{if(isRunning){switch(cmd){case Command:(channel);(statsChannel);(0);if(processSubscriptionQueue()){}}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\"\");}if(event){if(channel()){}}}}catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:05:34.163543", "n_pass": [3094, 240, 240], "score": "0.9481", "loss": "0.1511", "code": "void run(){(RUNNING);try{while(true){if(connected){{try{closeChannel();try{incrementAndGet();}catch(JournalNetworkException e){if(0){}}(JournalClientEvents);}catch(UnauthorizedException e){(JournalClientEvents);}catch(AuthenticationConfigException e){close();(JournalClientEvents);}}(true);if((retryCount)){}}try{if(isRunning){switch(cmd){case Command:(channel);(statsChannel);(0);if(processSubscriptionQueue()){}}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\"\");}if(event){if(channel()){}}}}catch(Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:05:35.579861", "n_pass": [3100, 241, 241], "score": "0.9481", "loss": "0.1511", "code": "void run(){(RUNNING);try{while(true){if(connected){{try{closeChannel();try{incrementAndGet();}catch(JournalNetworkException e){if(0){}}(JournalClientEvents);}catch(UnauthorizedException e){(JournalClientEvents);}catch(AuthenticationConfigException e){close();(JournalClientEvents);}}(true);if((retryCount)){}}try{if(isRunning){switch(cmd){case Command:(channel);(statsChannel);(0);if(processSubscriptionQueue()){}}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\"\");}if(event){if(channel()){}}}}catch(Throwable e){(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:05:37.388248", "n_pass": [3107, 242, 242], "score": "0.9481", "loss": "0.1511", "code": "void run(){(RUNNING);try{while(true){if(connected){{try{closeChannel();try{incrementAndGet();}catch(JournalNetworkException e){if(0){}}(JournalClientEvents);}catch(UnauthorizedException e){(JournalClientEvents);}catch(AuthenticationConfigException e){close();(JournalClientEvents);}}(true);if((retryCount)){}}try{if(isRunning){switch(cmd){case Command:(channel);(statsChannel);(0);if(processSubscriptionQueue()){}}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\"\");}if(event){if(channel()){}}}}catch(Throwable e){(e).$(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 12:05:38.801562", "n_pass": [3109, 243, 243], "score": "0.9542", "loss": "0.1302", "code": "void run(){(RUNNING);try{while(true){if(connected){{try{closeChannel();try{incrementAndGet();}catch(JournalNetworkException e){if(0){}}(JournalClientEvents);}catch(UnauthorizedException e){(JournalClientEvents);}catch(AuthenticationConfigException e){close();(JournalClientEvents);}}(true);if((retryCount)){}}try{if(isRunning){switch(cmd){case Command:(channel);(statsChannel);(0);if(processSubscriptionQueue()){}}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\"\");}if(event){if(channel()){}}}}catch(Throwable e){(e).$(TERMINATED);} }"}
{"time": "2021-01-20 12:05:40.227176", "n_pass": [3110, 244, 244], "score": "0.9489", "loss": "0.1462", "code": "void run(){(RUNNING);try{while(true){if(connected){{try{closeChannel();try{incrementAndGet();}catch(JournalNetworkException e){if(0){}}(JournalClientEvents);}catch(UnauthorizedException e){(JournalClientEvents);}catch(AuthenticationConfigException e){close();(JournalClientEvents);}}(true);if((retryCount)){}}try{if(isRunning){switch(cmd){case Command:(channel);(statsChannel);(0);if(processSubscriptionQueue()){}}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\"\");}if(event){if(channel()){}}}}catch(Throwable e){(e).$();} }"}
{"time": "2021-01-20 12:05:41.630881", "n_pass": [3114, 245, 245], "score": "0.9489", "loss": "0.1462", "code": "void run(){(RUNNING);try{while(true){if(connected){{try{closeChannel();try{incrementAndGet();}catch(JournalNetworkException e){if(0){}}(JournalClientEvents);}catch(UnauthorizedException e){(JournalClientEvents);}catch(AuthenticationConfigException e){close();(JournalClientEvents);}}(true);if((retryCount)){}}try{if(isRunning){switch(cmd){case Command:(channel);(statsChannel);(0);if(processSubscriptionQueue()){}}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\"\");}if(event){if(channel()){}}}}catch(Throwable e){(e).$();}}"}

Minimal simplified code:
void run(){(RUNNING);try{while(true){if(connected){{try{closeChannel();try{incrementAndGet();}catch(JournalNetworkException e){if(0){}}(JournalClientEvents);}catch(UnauthorizedException e){(JournalClientEvents);}catch(AuthenticationConfigException e){close();(JournalClientEvents);}}(true);if((retryCount)){}}try{if(isRunning){switch(cmd){case Command:(channel);(statsChannel);(0);if(processSubscriptionQueue()){}}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$("");}if(event){if(channel()){}}}}catch(Throwable e){(e).$();}}

