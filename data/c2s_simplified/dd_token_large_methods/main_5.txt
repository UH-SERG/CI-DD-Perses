
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/Treeptik__cloudunit/cu-cli/src/main/java/fr/treeptik/cloudunit/cli/utils/InstallCert_main.java
method_name = main
method_body = public static void main(String[] args) throws Exception { String host; int port; char[] passphrase; if ((args.length == 1) || (args.length == 2)) { String[] c = args[0].split(":"); host = c[0]; port = (c.length == 1) ? 443 : Integer.parseInt(c[1]); String p = (args.length == 1) ? "changeit" : args[1]; passphrase = p.toCharArray(); } else { System.out.println("Usage: java InstallCert <host>[:port] [passphrase]"); return; } File file = new File("jssecacerts"); if (file.isFile() == false) { char SEP = File.separatorChar; File dir = new File(System.getProperty("java.home") + SEP + "lib" + SEP + "security"); file = new File(dir, "jssecacerts"); if (file.isFile() == false) { file = new File(dir, "cacerts"); } } System.out.println("Loading KeyStore " + file + "..."); InputStream in = new FileInputStream(file); KeyStore ks = KeyStore.getInstance(KeyStore.getDefaultType()); ks.load(in, passphrase); in.close(); SSLContext context = SSLContext.getInstance("TLS"); TrustManagerFactory tmf = TrustManagerFactory.getInstance(TrustManagerFactory.getDefaultAlgorithm()); tmf.init(ks); X509TrustManager defaultTrustManager = (X509TrustManager) tmf.getTrustManagers()[0]; SavingTrustManager tm = new SavingTrustManager(defaultTrustManager); context.init(null, new TrustManager[] { tm }, null); SSLSocketFactory factory = context.getSocketFactory(); System.out.println("Opening connection to " + host + ":" + port + "..."); SSLSocket socket = (SSLSocket) factory.createSocket(host, port); socket.setSoTimeout(10000); try { System.out.println("Starting SSL handshake..."); socket.startHandshake(); socket.close(); System.out.println(); System.out.println("No errors, certificate is already trusted"); } catch (SSLException e) { System.out.println(); e.printStackTrace(System.out); } X509Certificate[] chain = tm.chain; if (chain == null) { System.out.println("Could not obtain server certificate chain"); return; } BufferedReader reader = new BufferedReader(new InputStreamReader(System.in)); System.out.println(); System.out.println("Server sent " + chain.length + " certificate(s):"); System.out.println(); MessageDigest sha1 = MessageDigest.getInstance("SHA1"); MessageDigest md5 = MessageDigest.getInstance("MD5"); for (int i = 0; i < chain.length; i++) { X509Certificate cert = chain[i]; System.out.println(" " + (i + 1) + " Subject " + cert.getSubjectDN()); System.out.println(" Issuer " + cert.getIssuerDN()); sha1.update(cert.getEncoded()); System.out.println(" sha1 " + toHexString(sha1.digest())); md5.update(cert.getEncoded()); System.out.println(" md5 " + toHexString(md5.digest())); System.out.println(); } System.out.println("Enter certificate to add to trusted keystore or 'q' to quit: [1]"); String line = reader.readLine().trim(); int k; try { k = (line.length() == 0) ? 0 : Integer.parseInt(line) - 1; } catch (NumberFormatException e) { System.out.println("KeyStore not changed"); return; } X509Certificate cert = chain[k]; String alias = host + "-" + (k + 1); ks.setCertificateEntry(alias, cert); OutputStream out = new FileOutputStream("jssecacerts"); ks.store(out, passphrase); out.close(); System.out.println(); System.out.println(cert); System.out.println(); System.out.println("Added certificate to keystore 'jssecacerts' using alias '" + alias + "'"); }
predict, score, loss = main, 0.97627604, 0.02649489

Trace of simplified code(s):
{"time": "2021-01-20 10:51:58.584217", "n_pass": [1, 1, 1], "score": "0.9759", "loss": "0.0282", "code": "public static void main(String[] args) throws Exception { String host; int port; char[] passphrase; if ((args.length == 1) || (args.length == 2)) { String[] c = args[0].split(\":\"); host = c[0]; port = (c.length == 1) ? 443 : Integer.parseInt(c[1]); String p = (args.length == 1) ? \"changeit\" : args[1]; passphrase = p.toCharArray(); } else { System.out.println(\"Usage: java InstallCert <host>[:port] [passphrase]\"); return; } File file = new File(\"jssecacerts\"); if (file.isFile() == false) { char SEP = File.separatorChar; File dir = new File(System.getProperty(\"java.home\") + SEP + \"lib\" + SEP + \"security\"); file = new File(dir, \"jssecacerts\"); if (file.isFile() == false) { file = new File(dir, \"cacerts\"); } } System.out.println(\"Loading KeyStore \" + file + \"...\"); InputStream in = new FileInputStream(file); KeyStore ks = KeyStore.getInstance(KeyStore.getDefaultType()); ks.load(in, passphrase); in.close(); SSLContext context = SSLContext.getInstance(\"TLS\"); TrustManagerFactory tmf = TrustManagerFactory.getInstance(TrustManagerFactory.getDefaultAlgorithm()); tmf.init(ks); X509TrustManager defaultTrustManager = (X509TrustManager) tmf.getTrustManagers()[0]; SavingTrustManager tm = new SavingTrustManager(defaultTrustManager); context.init(null, new TrustManager[] { tm }, null); SSLSocketFactory factory = context.getSocketFactory(); System.out.println(\"Opening connection to \" + host + \":\" + port + \"...\"); SSLSocket socket = (SSLSocket) factory.createSocket(host, port); socket.setSoTimeout(10000); try { System.out.println(\"Starting SSL handshake...\"); socket.startHandshake(); socket.close(); System.out.println(); System.out.println(\"No errors, certificate is already trusted\"); } catch (SSLException e) { System.out.println(); e.printStackTrace(System.out); } X509Certificate[] chain = tm.chain; if (chain == null) { System.out.println(\"Could not obtain server certificate chain\"); return; } BufferedReader reader = new BufferedReader(new InputStreamReader(System.in)); System.out.println(); System.out.println(\"Server sent \" + chain.length + \" certificate(s):\"); System.out.println(); MessageDigest sha1 = MessageDigest.getInstance(\"SHA1\"); MessageDigest md5 = MessageDigest.getInstance(\"MD5\"); for (int i = 0; i < chain.length; i++) { X509Certificate cert = chain[i]; System.out.println(\" \" + (i + 1) + \" Subject \" + cert.getSubjectDN()); System.out.println(\" Issuer \" + cert.getIssuerDN()); sha1.update(cert.getEncoded()); System.out.println(\" sha1 \" + toHexString(sha1.digest())); md5.update(cert.getEncoded()); System.out.println(\" md5 \" + toHexString(md5.digest())); System.out.println(); } System.out.println(\"Enter certificate to add to trusted keystore or 'q' to quit: [1]\"); String line = reader.readLine().trim(); int k; try { k = (line.length() == 0) ? 0 : Integer.parseInt(line) - 1; } catch (NumberFormatException e) { System.out.println(\"KeyStore not changed\"); return; } X509Certificate cert = chain[k]; String alias = host + \"-\" + (k + 1); ks.setCertificateEntry(alias, cert); OutputStream out = new FileOutputStream(\"jssecacerts\"); ks.store(out, passphrase); out.close(); System.out.println(); System.out.println(cert); System.out.println(); System.out.println(\"Added certificate to keystore 'jssecacerts' using alias '\" + alias + \"'\"); }"}
{"time": "2021-01-20 10:52:00.371760", "n_pass": [46, 2, 2], "score": "0.9923", "loss": "0.0085", "code": "public static void main(String[] args) throws Exception { String host; int port; char[] passphrase; if ((args.length == 1) || (args.length == 2)) { String[] c = args[0].split(\":\"); host = c[0]; port = (c.length == 1) ? 443 : Integer.parseInt(c[1]); String p = (args.length == 1) ? \"changeit\" : args[1]; passphrase = p.separatorChar; File dir = new File(System.getProperty(\"java.home\") + SEP + \"lib\" + SEP + \"security\"); file = new File(dir, \"jssecacerts\"); if (file.isFile() == false) { file = new File(dir, \"cacerts\"); } } System.out.println(\"Loading KeyStore \" + file + \"...\"); InputStream in = new FileInputStream(file); KeyStore ks = KeyStore.getInstance(KeyStore.getDefaultType()); ks.load(in, passphrase); in.close(); SSLContext context = SSLContext.getInstance(\"TLS\"); TrustManagerFactory tmf = TrustManagerFactory.getInstance(TrustManagerFactory.getDefaultAlgorithm()); tmf.init(ks); X509TrustManager defaultTrustManager = (X509TrustManager) tmf.getTrustManagers()[0]; SavingTrustManager tm = new SavingTrustManager(defaultTrustManager); context.init(null, new TrustManager[] { tm }, null); SSLSocketFactory factory = context.getSocketFactory(); System.out.println(\"Opening connection to \" + host + \":\" + port + \"...\"); SSLSocket socket = (SSLSocket) factory.createSocket(host, port); socket.setSoTimeout(10000); try { System.out.println(\"Starting SSL handshake...\"); socket.startHandshake(); socket.close(); System.out.println(); System.out.println(\"No errors, certificate is already trusted\"); } catch (SSLException e) { System.out.println(); e.printStackTrace(System.out); } X509Certificate[] chain = tm.chain; if (chain == null) { System.out.println(\"Could not obtain server certificate chain\"); return; } BufferedReader reader = new BufferedReader(new InputStreamReader(System.in)); System.out.println(); System.out.println(\"Server sent \" + chain.length + \" certificate(s):\"); System.out.println(); MessageDigest sha1 = MessageDigest.getInstance(\"SHA1\"); MessageDigest md5 = MessageDigest.getInstance(\"MD5\"); for (int i = 0; i < chain.length; i++) { X509Certificate cert = chain[i]; System.out.println(\" \" + (i + 1) + \" Subject \" + cert.getSubjectDN()); System.out.println(\" Issuer \" + cert.getIssuerDN()); sha1.update(cert.getEncoded()); System.out.println(\" sha1 \" + toHexString(sha1.digest())); md5.update(cert.getEncoded()); System.out.println(\" md5 \" + toHexString(md5.digest())); System.out.println(); } System.out.println(\"Enter certificate to add to trusted keystore or 'q' to quit: [1]\"); String line = reader.readLine().trim(); int k; try { k = (line.length() == 0) ? 0 : Integer.parseInt(line) - 1; } catch (NumberFormatException e) { System.out.println(\"KeyStore not changed\"); return; } X509Certificate cert = chain[k]; String alias = host + \"-\" + (k + 1); ks.setCertificateEntry(alias, cert); OutputStream out = new FileOutputStream(\"jssecacerts\"); ks.store(out, passphrase); out.close(); System.out.println(); System.out.println(cert); System.out.println(); System.out.println(\"Added certificate to keystore 'jssecacerts' using alias '\" + alias + \"'\"); }"}
{"time": "2021-01-20 10:52:02.559096", "n_pass": [94, 3, 3], "score": "0.9959", "loss": "0.0044", "code": "public static void main(String[] args) throws Exception { String host; int port; char[] passphrase; if ((args.length == 1) || (args.length == 2)) { String[] c = args[0].split(\":\"); host = c[0]; port = (c.length == 1) ? 443 : Integer.parseInt(c[1]); String p = (args.length == 1) ? \"changeit\" : args[1]; passphrase = p.separatorChar; File dir = new File(System.getProperty(\"java.home\") + SEP + \"lib\" + SEP + \"security\"); file = new File(dir, \"jssecacerts\"); if (file.isFile() == false) { file = new File(dir, \"cacerts\"); } } System.out.println(\"Loading KeyStore \" + file + \"...\"); InputStream.close(); SSLContext context = SSLContext.getInstance(\"TLS\"); TrustManagerFactory tmf = TrustManagerFactory.getInstance(TrustManagerFactory.getDefaultAlgorithm()); tmf.init(ks); X509TrustManager defaultTrustManager = (X509TrustManager) tmf.getTrustManagers()[0]; SavingTrustManager tm = new SavingTrustManager(defaultTrustManager); context.init(null, new TrustManager[] { tm }, null); SSLSocketFactory factory = context.getSocketFactory(); System.out.println(\"Opening connection to \" + host + \":\" + port + \"...\"); SSLSocket socket = (SSLSocket) factory.createSocket(host, port); socket.setSoTimeout(10000); try { System.out.println(\"Starting SSL handshake...\"); socket.startHandshake(); socket.close(); System.out.println(); System.out.println(\"No errors, certificate is already trusted\"); } catch (SSLException e) { System.out.println(); e.printStackTrace(System.out); } X509Certificate[] chain = tm.chain; if (chain == null) { System.out.println(\"Could not obtain server certificate chain\"); return; } BufferedReader reader = new BufferedReader(new InputStreamReader(System.in)); System.out.println(); System.out.println(\"Server sent \" + chain.length + \" certificate(s):\"); System.out.println(); MessageDigest sha1 = MessageDigest.getInstance(\"SHA1\"); MessageDigest md5 = MessageDigest.getInstance(\"MD5\"); for (int i = 0; i < chain.length; i++) { X509Certificate cert = chain[i]; System.out.println(\" \" + (i + 1) + \" Subject \" + cert.getSubjectDN()); System.out.println(\" Issuer \" + cert.getIssuerDN()); sha1.update(cert.getEncoded()); System.out.println(\" sha1 \" + toHexString(sha1.digest())); md5.update(cert.getEncoded()); System.out.println(\" md5 \" + toHexString(md5.digest())); System.out.println(); } System.out.println(\"Enter certificate to add to trusted keystore or 'q' to quit: [1]\"); String line = reader.readLine().trim(); int k; try { k = (line.length() == 0) ? 0 : Integer.parseInt(line) - 1; } catch (NumberFormatException e) { System.out.println(\"KeyStore not changed\"); return; } X509Certificate cert = chain[k]; String alias = host + \"-\" + (k + 1); ks.setCertificateEntry(alias, cert); OutputStream out = new FileOutputStream(\"jssecacerts\"); ks.store(out, passphrase); out.close(); System.out.println(); System.out.println(cert); System.out.println(); System.out.println(\"Added certificate to keystore 'jssecacerts' using alias '\" + alias + \"'\"); }"}
{"time": "2021-01-20 10:52:04.188380", "n_pass": [95, 4, 4], "score": "0.9763", "loss": "0.0261", "code": "public static void main(String[] args) throws Exception { String host; int port; char[] passphrase; if ((args.length == 1) || (args.length == 2)) { String[] c = args[0].split(\":\"); host = c[0]; port = (c.length == 1) ? 443 : Integer.parseInt(c[1]); String p = (args.length == 1) ? \"changeit\" : args[1]; passphrase = p.separatorChar; File dir = new File(System.getProperty(\"java.home\") + SEP + \"lib\" + SEP + \"security\"); file = new File(dir, \"jssecacerts\"); if (file.isFile() == false) { file = new File(dir, \"cacerts\"); } } System.out.println(\"Loading KeyStore \" + file + \"...\"); InputStream(ks); X509TrustManager defaultTrustManager = (X509TrustManager) tmf.getTrustManagers()[0]; SavingTrustManager tm = new SavingTrustManager(defaultTrustManager); context.init(null, new TrustManager[] { tm }, null); SSLSocketFactory factory = context.getSocketFactory(); System.out.println(\"Opening connection to \" + host + \":\" + port + \"...\"); SSLSocket socket = (SSLSocket) factory.createSocket(host, port); socket.setSoTimeout(10000); try { System.out.println(\"Starting SSL handshake...\"); socket.startHandshake(); socket.close(); System.out.println(); System.out.println(\"No errors, certificate is already trusted\"); } catch (SSLException e) { System.out.println(); e.printStackTrace(System.out); } X509Certificate[] chain = tm.chain; if (chain == null) { System.out.println(\"Could not obtain server certificate chain\"); return; } BufferedReader reader = new BufferedReader(new InputStreamReader(System.in)); System.out.println(); System.out.println(\"Server sent \" + chain.length + \" certificate(s):\"); System.out.println(); MessageDigest sha1 = MessageDigest.getInstance(\"SHA1\"); MessageDigest md5 = MessageDigest.getInstance(\"MD5\"); for (int i = 0; i < chain.length; i++) { X509Certificate cert = chain[i]; System.out.println(\" \" + (i + 1) + \" Subject \" + cert.getSubjectDN()); System.out.println(\" Issuer \" + cert.getIssuerDN()); sha1.update(cert.getEncoded()); System.out.println(\" sha1 \" + toHexString(sha1.digest())); md5.update(cert.getEncoded()); System.out.println(\" md5 \" + toHexString(md5.digest())); System.out.println(); } System.out.println(\"Enter certificate to add to trusted keystore or 'q' to quit: [1]\"); String line = reader.readLine().trim(); int k; try { k = (line.length() == 0) ? 0 : Integer.parseInt(line) - 1; } catch (NumberFormatException e) { System.out.println(\"KeyStore not changed\"); return; } X509Certificate cert = chain[k]; String alias = host + \"-\" + (k + 1); ks.setCertificateEntry(alias, cert); OutputStream out = new FileOutputStream(\"jssecacerts\"); ks.store(out, passphrase); out.close(); System.out.println(); System.out.println(cert); System.out.println(); System.out.println(\"Added certificate to keystore 'jssecacerts' using alias '\" + alias + \"'\"); }"}
{"time": "2021-01-20 10:52:05.826792", "n_pass": [100, 5, 5], "score": "0.9294", "loss": "0.0897", "code": "public static void main(String[] args) throws Exception { String host; int port; char[] passphrase; if ((args.length == 1) || (args.length == 2)) { String[] c = args[0].split(\":\"); host = c[0]; port = (c.length == 1) ? 443 : Integer.parseInt(c[1]); String p = (args.length == 1) ? \"changeit\" : args[1]; passphrase = p.separatorChar; File dir = new File(System.getProperty(\"java.home\") + SEP + \"lib\" + SEP + \"security\"); file = new File(dir, \"jssecacerts\"); if (file.isFile() == false) { file = new File(dir, \"cacerts\"); } } System.out.println(\"Loading KeyStore \" + file + \"...\"); InputStream(ks); X509TrustManager defaultTrustManager = (X509TrustManager) tmf.getTrustManagers()[0]; SavingTrustManager tm = new SavingTrustManager(defaultTrustManager); context.init(null, new TrustManager[] { tm }, null); SSLSocketFactory factory = context.getSocketFactory(); System.out.println(\"Opening connection to \" + host + \":\" + port + \"...\"); SSLSocket socket = (SSLSocket) factory.createSocket(host, port); socket.setSoTimeout(10000); try { System.out.println(\"Starting SSL handshake is already trusted\"); } catch (SSLException e) { System.out.println(); e.printStackTrace(System.out); } X509Certificate[] chain = tm.chain; if (chain == null) { System.out.println(\"Could not obtain server certificate chain\"); return; } BufferedReader reader = new BufferedReader(new InputStreamReader(System.in)); System.out.println(); System.out.println(\"Server sent \" + chain.length + \" certificate(s):\"); System.out.println(); MessageDigest sha1 = MessageDigest.getInstance(\"SHA1\"); MessageDigest md5 = MessageDigest.getInstance(\"MD5\"); for (int i = 0; i < chain.length; i++) { X509Certificate cert = chain[i]; System.out.println(\" \" + (i + 1) + \" Subject \" + cert.getSubjectDN()); System.out.println(\" Issuer \" + cert.getIssuerDN()); sha1.update(cert.getEncoded()); System.out.println(\" sha1 \" + toHexString(sha1.digest())); md5.update(cert.getEncoded()); System.out.println(\" md5 \" + toHexString(md5.digest())); System.out.println(); } System.out.println(\"Enter certificate to add to trusted keystore or 'q' to quit: [1]\"); String line = reader.readLine().trim(); int k; try { k = (line.length() == 0) ? 0 : Integer.parseInt(line) - 1; } catch (NumberFormatException e) { System.out.println(\"KeyStore not changed\"); return; } X509Certificate cert = chain[k]; String alias = host + \"-\" + (k + 1); ks.setCertificateEntry(alias, cert); OutputStream out = new FileOutputStream(\"jssecacerts\"); ks.store(out, passphrase); out.close(); System.out.println(); System.out.println(cert); System.out.println(); System.out.println(\"Added certificate to keystore 'jssecacerts' using alias '\" + alias + \"'\"); }"}
{"time": "2021-01-20 10:52:07.457517", "n_pass": [104, 6, 6], "score": "0.9853", "loss": "0.0182", "code": "public static void main(String[] args) throws Exception { String host; int port; char[] passphrase; if ((args.length == 1) || (args.length == 2)) { String[] c = args[0].split(\":\"); host = c[0]; port = (c.length == 1) ? 443 : Integer.parseInt(c[1]); String p = (args.length == 1) ? \"changeit\" : args[1]; passphrase = p.separatorChar; File dir = new File(System.getProperty(\"java.home\") + SEP + \"lib\" + SEP + \"security\"); file = new File(dir, \"jssecacerts\"); if (file.isFile() == false) { file = new File(dir, \"cacerts\"); } } System.out.println(\"Loading KeyStore \" + file + \"...\"); InputStream(ks); X509TrustManager defaultTrustManager = (X509TrustManager) tmf.getTrustManagers()[0]; SavingTrustManager tm = new SavingTrustManager(defaultTrustManager); context.init(null, new TrustManager[] { tm }, null); SSLSocketFactory factory = context.getSocketFactory(); System.out.println(\"Opening connection to \" + host + \":\" + port + \"...\"); SSLSocket socket = (SSLSocket) factory.createSocket(host, port); socket.setSoTimeout(10000); try { System.out.println(\"Starting SSL handshake is already trusted\"); } catch (SSLException e) { System.out.println(); e.printStackTrace(System.out); } X509Certificate[] chain = tm.chain; if (chain == null) { System.out.println(\"Could not obtain server certificate chain\"); return; } BufferedReader reader = new BufferedReader(new InputStreamReader(System.in)); System.out.println(); sha1 = MessageDigest.getInstance(\"SHA1\"); MessageDigest md5 = MessageDigest.getInstance(\"MD5\"); for (int i = 0; i < chain.length; i++) { X509Certificate cert = chain[i]; System.out.println(\" \" + (i + 1) + \" Subject \" + cert.getSubjectDN()); System.out.println(\" Issuer \" + cert.getIssuerDN()); sha1.update(cert.getEncoded()); System.out.println(\" sha1 \" + toHexString(sha1.digest())); md5.update(cert.getEncoded()); System.out.println(\" md5 \" + toHexString(md5.digest())); System.out.println(); } System.out.println(\"Enter certificate to add to trusted keystore or 'q' to quit: [1]\"); String line = reader.readLine().trim(); int k; try { k = (line.length() == 0) ? 0 : Integer.parseInt(line) - 1; } catch (NumberFormatException e) { System.out.println(\"KeyStore not changed\"); return; } X509Certificate cert = chain[k]; String alias = host + \"-\" + (k + 1); ks.setCertificateEntry(alias, cert); OutputStream out = new FileOutputStream(\"jssecacerts\"); ks.store(out, passphrase); out.close(); System.out.println(); System.out.println(cert); System.out.println(); System.out.println(\"Added certificate to keystore 'jssecacerts' using alias '\" + alias + \"'\"); }"}
{"time": "2021-01-20 10:52:09.629163", "n_pass": [184, 7, 7], "score": "0.9873", "loss": "0.0154", "code": "public static void main(String[] args) throws Exception { String host; int port; char[] passphrase; if ((args.length == 1) || (args.length == 2)) { String[] c = args[0].split(\":\"); host = c[0]; port = (c.length == 1) ? 443 : Integer.parseInt(c[1]); String p = (args.length == 1) ? \"changeit\" : args[1]; passphrase = p.separatorChar; File dir = new File(System.getProperty(\"java.home\") + SEP + \"lib\" + SEP + \"security\"); file = new File(dir, \"jssecacerts\"); if (file.isFile() == false) { file = new File(dir, \"cacerts\"); } } System.out.println(\"Loading KeyStore \" + file + \"...\"); InputStream(ks); X509TrustManager defaultTrustManager = (X509TrustManager) tmf.getTrustManagers()[0]; SavingTrustManager tm = new SavingTrustManager(defaultTrustManager); context.init(null, new TrustManager[] { tm }, null); SSLSocketFactory factory = context.getSocketFactory(); System.out.println(\"Opening connection to \" + host + \":\" + port + \"...\"); SSLSocket socket = (SSLSocket) factory.createSocket(host, port); socket.setSoTimeout(10000); try { System.out.println(\"Starting SSL handshake is already trusted\"); } catch (SSLException e) { System.out.println(); e.printStackTrace(System.out); } X509Certificate[] chain = tm.chain; if (chain == null) { System.out.println(\"Could not obtain server certificate chain\"); return; } BufferedReader reader = new BufferedReader(new InputStreamReader(System.in)); System.out.println(); sha1 = MessageDigest.getInstance(); for (int i = 0; i < chain.length; i++) { X509Certificate cert = chain[i]; System.out.println(\" \" + (i + 1) + \" Subject \" + cert.getSubjectDN()); System.out.println(\" Issuer \" + cert.getIssuerDN()); sha1.update(cert.getEncoded()); System.out.println(\" sha1 \" + toHexString(sha1.digest())); md5.update(cert.getEncoded()); System.out.println(\" md5 \" + toHexString(md5.digest())); System.out.println(); } System.out.println(\"Enter certificate to add to trusted keystore or 'q' to quit: [1]\"); String line = reader.readLine().trim(); int k; try { k = (line.length() == 0) ? 0 : Integer.parseInt(line) - 1; } catch (NumberFormatException e) { System.out.println(\"KeyStore not changed\"); return; } X509Certificate cert = chain[k]; String alias = host + \"-\" + (k + 1); ks.setCertificateEntry(alias, cert); OutputStream out = new FileOutputStream(\"jssecacerts\"); ks.store(out, passphrase); out.close(); System.out.println(); System.out.println(cert); System.out.println(); System.out.println(\"Added certificate to keystore 'jssecacerts' using alias '\" + alias + \"'\"); }"}
{"time": "2021-01-20 10:52:11.278091", "n_pass": [189, 8, 8], "score": "0.9871", "loss": "0.0149", "code": "public static void main(String[] args) throws Exception { String host; int port; char[] passphrase; if ((args.length == 1) || (args.length == 2)) { String[] c = args[0].split(\":\"); host = c[0]; port = (c.length == 1) ? 443 : Integer.parseInt(c[1]); String p = (args.length == 1) ? \"changeit\" : args[1]; passphrase = p.separatorChar; File dir = new File(System.getProperty(\"java.home\") + SEP + \"lib\" + SEP + \"security\"); file = new File(dir, \"jssecacerts\"); if (file.isFile() == false) { file = new File(dir, \"cacerts\"); } } System.out.println(\"Loading KeyStore \" + file + \"...\"); InputStream(ks); X509TrustManager defaultTrustManager = (X509TrustManager) tmf.getTrustManagers()[0]; SavingTrustManager tm = new SavingTrustManager(defaultTrustManager); context.init(null, new TrustManager[] { tm }, null); SSLSocketFactory factory = context.getSocketFactory(); System.out.println(\"Opening connection to \" + host + \":\" + port + \"...\"); SSLSocket socket = (SSLSocket) factory.createSocket(host, port); socket.setSoTimeout(10000); try { System.out.println(\"Starting SSL handshake is already trusted\"); } catch (SSLException e) { System.out.println(); e.printStackTrace(System.out); } X509Certificate[] chain = tm.chain; if (chain == null) { System.out.println(\"Could not obtain server certificate chain\"); return; } BufferedReader reader = new BufferedReader(new InputStreamReader(System.in)); System.out.println(); sha1 = MessageDigest.getInstance(); for (int i = 0; i < chain.length; i++) { X509Certificate cert = chain[i]; System.out.println(\" \" + (i + 1) + \" Subject \" + cert.getSubjectDN()); System.outupdate(cert.getEncoded()); System.out.println(\" sha1 \" + toHexString(sha1.digest())); md5.update(cert.getEncoded()); System.out.println(\" md5 \" + toHexString(md5.digest())); System.out.println(); } System.out.println(\"Enter certificate to add to trusted keystore or 'q' to quit: [1]\"); String line = reader.readLine().trim(); int k; try { k = (line.length() == 0) ? 0 : Integer.parseInt(line) - 1; } catch (NumberFormatException e) { System.out.println(\"KeyStore not changed\"); return; } X509Certificate cert = chain[k]; String alias = host + \"-\" + (k + 1); ks.setCertificateEntry(alias, cert); OutputStream out = new FileOutputStream(\"jssecacerts\"); ks.store(out, passphrase); out.close(); System.out.println(); System.out.println(cert); System.out.println(); System.out.println(\"Added certificate to keystore 'jssecacerts' using alias '\" + alias + \"'\"); }"}
{"time": "2021-01-20 10:52:13.788361", "n_pass": [201, 9, 9], "score": "0.9955", "loss": "0.0051", "code": "public static void main(String[] args) throws Exception { String host; int port; char[] passphrase; if ((args.length == 1) || (args.length == 2)) { String[] c = args[0].split(\":\"); host = c[0]; port = (c.length == 1) ? 443 : Integer.parseInt(c[1]); String p = (args.length == 1) ? \"changeit\" : args[1]; passphrase = p.separatorChar; File dir = new File(System.getProperty(\"java.home\") + SEP + \"lib\" + SEP + \"security\"); file = new File(dir, \"jssecacerts\"); if (file.isFile() == false) { file = new File(dir, \"cacerts\"); } } System.out.println(\"Loading KeyStore \" + file + \"...\"); InputStream(ks); X509TrustManager defaultTrustManager = (X509TrustManager) tmf.getTrustManagers()[0]; SavingTrustManager tm = new SavingTrustManager(defaultTrustManager); context.init(null, new TrustManager[] { tm }, null); SSLSocketFactory factory = context.getSocketFactory(); System.out.println(\"Opening connection to \" + host + \":\" + port + \"...\"); SSLSocket socket = (SSLSocket) factory.createSocket(host, port); socket.setSoTimeout(10000); try { System.out.println(\"Starting SSL handshake is already trusted\"); } catch (SSLException e) { System.out.println(); e.printStackTrace(System.out); } X509Certificate[] chain = tm.chain; if (chain == null) { System.out.println(\"Could not obtain server certificate chain\"); return; } BufferedReader reader = new BufferedReader(new InputStreamReader(System.in)); System.out.println(); sha1 = MessageDigest.getInstance(); for (int i = 0; i < chain.length; i++) { X509Certificate cert = chain[i]; System.out.println(\" \" + (i + 1) + \" Subject \" + cert.getSubjectDN()); System.outupdate(cert.getEncoded()); System.out.println(\" sha1 \" + toHexString(sha1.digest())); md5.update(cert.getEncoded()); System.out.println(\" md5 \" + toHexString(md5.digest())); System.out.println(); } System.out.println(\"Enter certificate to add to trusted keystore or 'q' to quit: [1]\"); String line = reader.readLine().trim(); int k; try { k = (line.length() == 0) ? 0 : Integer.parseInt(line) - 1; } catch (NumberFormatException e) { System.out.println(\"KeyStore not changed\"); return; } X509Certificate cert = chain[k]; String alias =setCertificateEntry(alias, cert); OutputStream out = new FileOutputStream(\"jssecacerts\"); ks.store(out, passphrase); out.close(); System.out.println(); System.out.println(cert); System.out.println(); System.out.println(\"Added certificate to keystore 'jssecacerts' using alias '\" + alias + \"'\"); }"}
{"time": "2021-01-20 10:52:15.390093", "n_pass": [204, 10, 10], "score": "0.972", "loss": "0.0334", "code": "public static void main(String[] args) throws Exception { String host; int port; char[] passphrase; if ((args.length == 1) || (args.length == 2)) { String[] c = args[0].split(\":\"); host = c[0]; port = (c.length == 1) ? 443 : Integer.parseInt(c[1]); String p = (args.length == 1) ? \"changeit\" : args[1]; passphrase = p.separatorChar; File dir = new File(System.getProperty(\"java.home\") + SEP + \"lib\" + SEP + \"security\"); file = new File(dir, \"jssecacerts\"); if (file.isFile() == false) { file = new File(dir, \"cacerts\"); } } System.out.println(\"Loading KeyStore \" + file + \"...\"); InputStream(ks); X509TrustManager defaultTrustManager = (X509TrustManager) tmf.getTrustManagers()[0]; SavingTrustManager tm = new SavingTrustManager(defaultTrustManager); context.init(null, new TrustManager[] { tm }, null); SSLSocketFactory factory = context.getSocketFactory(); System.out.println(\"Opening connection to \" + host + \":\" + port + \"...\"); SSLSocket socket = (SSLSocket) factory.createSocket(host, port); socket.setSoTimeout(10000); try { System.out.println(\"Starting SSL handshake is already trusted\"); } catch (SSLException e) { System.out.println(); e.printStackTrace(System.out); } X509Certificate[] chain = tm.chain; if (chain == null) { System.out.println(\"Could not obtain server certificate chain\"); return; } BufferedReader reader = new BufferedReader(new InputStreamReader(System.in)); System.out.println(); sha1 = MessageDigest.getInstance(); for (int i = 0; i < chain.length; i++) { X509Certificate cert = chain[i]; System.out.println(\" \" + (i + 1) + \" Subject \" + cert.getSubjectDN()); System.outupdate(cert.getEncoded()); System.out.println(\" sha1 \" + toHexString(sha1.digest())); md5.update(cert.getEncoded()); System.out.println(\" md5 \" + toHexString(md5.digest())); System.out.println(); } System.out.println(\"Enter certificate to add to trusted keystore or 'q' to quit: [1]\"); String line = reader.readLine().trim(); int k; try { k = (line.length() == 0) ? 0 : Integer.parseInt(line) - 1; } catch (NumberFormatException e) { System.out.println(\"KeyStore not changed\"); return; } X509Certificate cert = chain[k]; String alias =setCertificateEntry(alias, cert); OutputStream out = new FileOutputStream(\"jssecacerts\"); ks.store(out, passphrase); out.close(); Systemprintln(); System.out.println(\"Added certificate to keystore 'jssecacerts' using alias '\" + alias + \"'\"); }"}
{"time": "2021-01-20 10:52:17.001736", "n_pass": [209, 11, 11], "score": "0.9848", "loss": "0.0194", "code": "public static void main(String[] args) throws Exception { String host; int port; char[] passphrase; if ((2)) { String[] c = args[0].split(\":\"); host = c[0]; port = (c.length == 1) ? 443 : Integer.parseInt(c[1]); String p = (args.length == 1) ? \"changeit\" : args[1]; passphrase = p.separatorChar; File dir = new File(System.getProperty(\"java.home\") + SEP + \"lib\" + SEP + \"security\"); file = new File(dir, \"jssecacerts\"); if (file.isFile() == false) { file = new File(dir, \"cacerts\"); } } System.out.println(\"Loading KeyStore \" + file + \"...\"); InputStream(ks); X509TrustManager defaultTrustManager = (X509TrustManager) tmf.getTrustManagers()[0]; SavingTrustManager tm = new SavingTrustManager(defaultTrustManager); context.init(null, new TrustManager[] { tm }, null); SSLSocketFactory factory = context.getSocketFactory(); System.out.println(\"Opening connection to \" + host + \":\" + port + \"...\"); SSLSocket socket = (SSLSocket) factory.createSocket(host, port); socket.setSoTimeout(10000); try { System.out.println(\"Starting SSL handshake is already trusted\"); } catch (SSLException e) { System.out.println(); e.printStackTrace(System.out); } X509Certificate[] chain = tm.chain; if (chain == null) { System.out.println(\"Could not obtain server certificate chain\"); return; } BufferedReader reader = new BufferedReader(new InputStreamReader(System.in)); System.out.println(); sha1 = MessageDigest.getInstance(); for (int i = 0; i < chain.length; i++) { X509Certificate cert = chain[i]; System.out.println(\" \" + (i + 1) + \" Subject \" + cert.getSubjectDN()); System.outupdate(cert.getEncoded()); System.out.println(\" sha1 \" + toHexString(sha1.digest())); md5.update(cert.getEncoded()); System.out.println(\" md5 \" + toHexString(md5.digest())); System.out.println(); } System.out.println(\"Enter certificate to add to trusted keystore or 'q' to quit: [1]\"); String line = reader.readLine().trim(); int k; try { k = (line.length() == 0) ? 0 : Integer.parseInt(line) - 1; } catch (NumberFormatException e) { System.out.println(\"KeyStore not changed\"); return; } X509Certificate cert = chain[k]; String alias =setCertificateEntry(alias, cert); OutputStream out = new FileOutputStream(\"jssecacerts\"); ks.store(out, passphrase); out.close(); Systemprintln(); System.out.println(\"Added certificate to keystore 'jssecacerts' using alias '\" + alias + \"'\"); }"}
{"time": "2021-01-20 10:52:18.592404", "n_pass": [211, 12, 12], "score": "0.9588", "loss": "0.0481", "code": "public static void main(String[] args) throws Exception { String host; int port; char[] passphrase; if ((2)) { String[] c = args[0].split(c.length == 1) ? 443 : Integer.parseInt(c[1]); String p = (args.length == 1) ? \"changeit\" : args[1]; passphrase = p.separatorChar; File dir = new File(System.getProperty(\"java.home\") + SEP + \"lib\" + SEP + \"security\"); file = new File(dir, \"jssecacerts\"); if (file.isFile() == false) { file = new File(dir, \"cacerts\"); } } System.out.println(\"Loading KeyStore \" + file + \"...\"); InputStream(ks); X509TrustManager defaultTrustManager = (X509TrustManager) tmf.getTrustManagers()[0]; SavingTrustManager tm = new SavingTrustManager(defaultTrustManager); context.init(null, new TrustManager[] { tm }, null); SSLSocketFactory factory = context.getSocketFactory(); System.out.println(\"Opening connection to \" + host + \":\" + port + \"...\"); SSLSocket socket = (SSLSocket) factory.createSocket(host, port); socket.setSoTimeout(10000); try { System.out.println(\"Starting SSL handshake is already trusted\"); } catch (SSLException e) { System.out.println(); e.printStackTrace(System.out); } X509Certificate[] chain = tm.chain; if (chain == null) { System.out.println(\"Could not obtain server certificate chain\"); return; } BufferedReader reader = new BufferedReader(new InputStreamReader(System.in)); System.out.println(); sha1 = MessageDigest.getInstance(); for (int i = 0; i < chain.length; i++) { X509Certificate cert = chain[i]; System.out.println(\" \" + (i + 1) + \" Subject \" + cert.getSubjectDN()); System.outupdate(cert.getEncoded()); System.out.println(\" sha1 \" + toHexString(sha1.digest())); md5.update(cert.getEncoded()); System.out.println(\" md5 \" + toHexString(md5.digest())); System.out.println(); } System.out.println(\"Enter certificate to add to trusted keystore or 'q' to quit: [1]\"); String line = reader.readLine().trim(); int k; try { k = (line.length() == 0) ? 0 : Integer.parseInt(line) - 1; } catch (NumberFormatException e) { System.out.println(\"KeyStore not changed\"); return; } X509Certificate cert = chain[k]; String alias =setCertificateEntry(alias, cert); OutputStream out = new FileOutputStream(\"jssecacerts\"); ks.store(out, passphrase); out.close(); Systemprintln(); System.out.println(\"Added certificate to keystore 'jssecacerts' using alias '\" + alias + \"'\"); }"}
{"time": "2021-01-20 10:52:21.211156", "n_pass": [226, 13, 13], "score": "0.9833", "loss": "0.0203", "code": "public static void main(String[] args) throws Exception { String host; int port; char[] passphrase; if ((2)) { String[] c = args[0].split(c.length == 1) ? 443 : Integer.parseInt(c[1]); String p = (args.length == 1) ? \"changeit\" : args[1]; passphrase = p.separatorChar; File dir = new File(System.getProperty(\"java.home\") + SEP + \"lib\" + SEP + \"security\"); file = new File(dir, \"jssecacerts\"); if (file.isFile() == false) { file = new File(dir, \"cacerts\"); } } System.out.println(\"Loading KeyStore \" + file + \"...\"); InputStream(ks); X509TrustManager defaultTrustManager = (X509TrustManager) tmf.getTrustManagers()[0]; SavingTrustManager tm = new SavingTrustManager(defaultTrustManager); context.init(null, new TrustManager[] { tm }, null); SSLSocketFactory factory = context.getSocketFactory(); System.out.println(\"Opening connection to \" ); SSLSocket socket = (SSLSocket) factory.createSocket(host, port); socket.setSoTimeout(10000); try { System.out.println(\"Starting SSL handshake is already trusted\"); } catch (SSLException e) { System.out.println(); e.printStackTrace(System.out); } X509Certificate[] chain = tm.chain; if (chain == null) { System.out.println(\"Could not obtain server certificate chain\"); return; } BufferedReader reader = new BufferedReader(new InputStreamReader(System.in)); System.out.println(); sha1 = MessageDigest.getInstance(); for (int i = 0; i < chain.length; i++) { X509Certificate cert = chain[i]; System.out.println(\" \" + (i + 1) + \" Subject \" + cert.getSubjectDN()); System.outupdate(cert.getEncoded()); System.out.println(\" sha1 \" + toHexString(sha1.digest())); md5.update(cert.getEncoded()); System.out.println(\" md5 \" + toHexString(md5.digest())); System.out.println(); } System.out.println(\"Enter certificate to add to trusted keystore or 'q' to quit: [1]\"); String line = reader.readLine().trim(); int k; try { k = (line.length() == 0) ? 0 : Integer.parseInt(line) - 1; } catch (NumberFormatException e) { System.out.println(\"KeyStore not changed\"); return; } X509Certificate cert = chain[k]; String alias =setCertificateEntry(alias, cert); OutputStream out = new FileOutputStream(\"jssecacerts\"); ks.store(out, passphrase); out.close(); Systemprintln(); System.out.println(\"Added certificate to keystore 'jssecacerts' using alias '\" + alias + \"'\"); }"}
{"time": "2021-01-20 10:52:22.757316", "n_pass": [227, 14, 14], "score": "0.9995", "loss": "0.0005", "code": "public static void main(String[] args) throws Exception { String host; int port; char[] passphrase; if ((2)) { String[] c = args[0].split(c.length == 1) ? 443 : Integer.parseInt(c[1]); String p = (args.length == 1) ? \"changeit\" : args[1]; passphrase = p.separatorChar; File dir = new File(System.getProperty(\"java.home\") + SEP + \"lib\" + SEP + \"security\"); file = new File(dir, \"jssecacerts\"); if (file.isFile() == false) { file = new File(dir, \"cacerts\"); } } System.out.println(\"Loading KeyStore \" + file + \"...\"); InputStream(ks); X509TrustManager defaultTrustManager = (X509TrustManager) tmf.getTrustManagers()[0]; SavingTrustManager tm = new SavingTrustManager(defaultTrustManager); context.init(null, new TrustManager[] { tm }, null); SSLSocketFactory factory = context.getSocketFactory(); System.out.println(\"Opening connection to \" ); socket.setSoTimeout(10000); try { System.out.println(\"Starting SSL handshake is already trusted\"); } catch (SSLException e) { System.out.println(); e.printStackTrace(System.out); } X509Certificate[] chain = tm.chain; if (chain == null) { System.out.println(\"Could not obtain server certificate chain\"); return; } BufferedReader reader = new BufferedReader(new InputStreamReader(System.in)); System.out.println(); sha1 = MessageDigest.getInstance(); for (int i = 0; i < chain.length; i++) { X509Certificate cert = chain[i]; System.out.println(\" \" + (i + 1) + \" Subject \" + cert.getSubjectDN()); System.outupdate(cert.getEncoded()); System.out.println(\" sha1 \" + toHexString(sha1.digest())); md5.update(cert.getEncoded()); System.out.println(\" md5 \" + toHexString(md5.digest())); System.out.println(); } System.out.println(\"Enter certificate to add to trusted keystore or 'q' to quit: [1]\"); String line = reader.readLine().trim(); int k; try { k = (line.length() == 0) ? 0 : Integer.parseInt(line) - 1; } catch (NumberFormatException e) { System.out.println(\"KeyStore not changed\"); return; } X509Certificate cert = chain[k]; String alias =setCertificateEntry(alias, cert); OutputStream out = new FileOutputStream(\"jssecacerts\"); ks.store(out, passphrase); out.close(); Systemprintln(); System.out.println(\"Added certificate to keystore 'jssecacerts' using alias '\" + alias + \"'\"); }"}
{"time": "2021-01-20 10:52:24.345074", "n_pass": [233, 15, 15], "score": "0.9852", "loss": "0.0185", "code": "public static void main(String[] args) throws Exception { String host; int port; char[] passphrase; if ((2)) { String[] c = args[0].split(c.length == 1) ? 443 : Integer.parseInt(c[1]); String p = (args.length == 1) ? \"changeit\" : args[1]; passphrase = p.separatorChar; File dir = new File(System.getProperty(\"java.home\") + SEP + \"lib\" + SEP + \"security\"); file = new File(dir, \"jssecacerts\"); if (file.isFile() == false) { file = new File(dir, \"cacerts\"); } } System.out.println(\"Loading KeyStore \" + file + \"...\"); InputStream(ks); X509TrustManager defaultTrustManager = (X509TrustManager) tmf.getTrustManagers()[0]; SavingTrustManager tm = new SavingTrustManager(defaultTrustManager); context.init(null, new TrustManager[] { tm }, null); SSLSocketFactory factory = context.getSocketFactory(); System.out.println(\"Opening connection to \" ); socket.setSoTimeout(10000); try { System.out.println(\"Starting SSL handshake is already trusted\"); } catch (SSLException e) { System.out.println(); e.printStackTrace(System.out); } X509Certificate[] chain = tm.chain; if (chain == null) { Systemreturn; } BufferedReader reader = new BufferedReader(new InputStreamReader(System.in)); System.out.println(); sha1 = MessageDigest.getInstance(); for (int i = 0; i < chain.length; i++) { X509Certificate cert = chain[i]; System.out.println(\" \" + (i + 1) + \" Subject \" + cert.getSubjectDN()); System.outupdate(cert.getEncoded()); System.out.println(\" sha1 \" + toHexString(sha1.digest())); md5.update(cert.getEncoded()); System.out.println(\" md5 \" + toHexString(md5.digest())); System.out.println(); } System.out.println(\"Enter certificate to add to trusted keystore or 'q' to quit: [1]\"); String line = reader.readLine().trim(); int k; try { k = (line.length() == 0) ? 0 : Integer.parseInt(line) - 1; } catch (NumberFormatException e) { System.out.println(\"KeyStore not changed\"); return; } X509Certificate cert = chain[k]; String alias =setCertificateEntry(alias, cert); OutputStream out = new FileOutputStream(\"jssecacerts\"); ks.store(out, passphrase); out.close(); Systemprintln(); System.out.println(\"Added certificate to keystore 'jssecacerts' using alias '\" + alias + \"'\"); }"}
{"time": "2021-01-20 10:52:26.408380", "n_pass": [250, 16, 16], "score": "0.9554", "loss": "0.0507", "code": "public static void main(String[] args) throws Exception { String host; int port; char[] passphrase; if ((2)) { String[] c = args[0].split(c.length == 1) ? 443 : Integer.parseInt(c[1]); String p = (args.length == 1) ? \"changeit\" : args[1]; passphrase = p.separatorChar; File dir = new File(System.getProperty(\"java.home\") + SEP + \"lib\" + SEP + \"security\"); file = new File(dir, \"jssecacerts\"); if (file.isFile() == false) { file = new File(dir, \"cacerts\"); } } System.out.println(\"Loading KeyStore \" + file + \"...\"); InputStream(ks); X509TrustManager defaultTrustManager = (X509TrustManager) tmf.getTrustManagers()[0]; SavingTrustManager tm = new SavingTrustManager(defaultTrustManager); context.init(null, new TrustManager[] { tm }, null); SSLSocketFactory factory = context.getSocketFactory(); System.out.println(\"Opening connection to \" ); socket.setSoTimeout(10000); try { System.out.println(\"Starting SSL handshake is already trusted\"); } catch (SSLException e) { System.out.println(); e.printStackTrace(System.out); } X509Certificate[] chain = tm.chain; if (chain == null) { Systemreturn; } BufferedReader reader = new BufferedReader(new InputStreamReader(System.in)); System.out.println(); sha1 = MessageDigest.getInstance(); for (int i = 0; i < chain.length; i++) { X509Certificate cert = chain[i]; System.out.println(\" \" + (i + 1) + \" Subject \" + cert.getSubjectDN()); System.outupdate(cert.getEncoded()); System.out.println(\" sha1 \" + toHexString(sha1.digest())); md5.update(cert.getEncoded()); System.out.println(\" md5 \" + toHexString(md5.digest())); System.out.println(); } System.out.println(\"Enter certificate to add to trusted keystore or 'q' to quit: [1]\"); String line = reader.readLine().trim(); int k; try { k = (line.length() == 0) ? 0 : Integer.parseInt(line) - 1; } catch (NumberFormatException e) { System.out.println(\"KeyStore not changed\"); return; }setCertificateEntry(alias, cert); OutputStream out = new FileOutputStream(\"jssecacerts\"); ks.store(out, passphrase); out.close(); Systemprintln(); System.out.println(\"Added certificate to keystore 'jssecacerts' using alias '\" + alias + \"'\"); }"}
{"time": "2021-01-20 10:52:28.987713", "n_pass": [377, 17, 17], "score": "0.9921", "loss": "0.0085", "code": "public static void main(String[] args) throws Exception { String host; int port; char[] passphrase; if ((2)) { String[] c = args[0].split(c.length == 1) ? 443 : Integer.parseInt(c[1]); String p = (args.length == 1) ? \"changeit\" : args[1]; passphrase = p.separatorChar; File dir = new File(System.getProperty(\"java.home\") + SEP + \"lib\" + SEP + \"security\"); file = new File(dir, \"jssecacerts\"); if (file.isFile() == false) { file = new File(dir, \"cacerts\"); } } System.out.println(\"Loading KeyStore \" + file + \"...\"); InputStream(ks); X509TrustManager defaultTrustManager = (X509TrustManager) tmf.getTrustManagers()[0]; SavingTrustManager tm = new SavingTrustManager(defaultTrustManager); context.init(null, new TrustManager[] { tm }, null); SSLSocketFactory factory = context.getSocketFactory(); System.out.println(\"Opening connection to \" ); socket.setSoTimeout(10000); try { System.out.println(\"Starting SSL handshake is already trusted\"); } catch (SSLException e) { System.out.println(); e.printStackTrace(System.out); } X509Certificate[] chain = tm.chain; if (chain == null) { Systemreturn; } BufferedReader reader = new BufferedReader(new InputStreamReader(System.in)); System.out.println(); sha1 = MessageDigest.getInstance(); for (int i = 0; i < chain.length; i++) { X509Certificate cert = chain[i]; System.out.println(\" \" + (i + 1) + \" Subject \" + cert.getSubjectDN()); System.outupdate(cert.getEncoded()); System.out.println(\" sha1 \" + toHexString(sha1.digest())); md5.update(cert.getEncoded()); System.out.println(\" md5 \" + toHexString(md5.digest())); System.out.println(); } System.out.println(\"Enter certificate to add to trusted keystore or 'q' to quit: [1]\"); String line = reader.readLine().trim(); int k; try { k = (line.length() == 0) ? 0 : Integer.parseInt(line) - 1; } catch (NumberFormatException e) { System.out.println(\"KeyStore not changed\"); return; }out = new FileOutputStream(\"jssecacerts\"); ks.store(out, passphrase); out.close(); Systemprintln(); System.out.println(\"Added certificate to keystore 'jssecacerts' using alias '\" + alias + \"'\"); }"}
{"time": "2021-01-20 10:52:30.541918", "n_pass": [378, 18, 18], "score": "0.9799", "loss": "0.0243", "code": "public static void main(String[] args) throws Exception { String host; int port; char[] passphrase; if ((2)) { String[] c = args[0].split(c.length == 1) ? 443 : Integer.parseInt(c[1]); String p = (args.length == 1) ? \"changeit\" : args[1]; passphrase = p.separatorChar; File dir = new File(System.getProperty(\"java.home\") + SEP + \"lib\" + SEP + \"security\"); file = new File(dir, \"jssecacerts\"); if (file.isFile() == false) { file = new File(dir, \"cacerts\"); } } System.out.println(\"Loading KeyStore \" + file + \"...\"); InputStream(ks); X509TrustManager defaultTrustManager = (X509TrustManager) tmf.getTrustManagers()[0]; SavingTrustManager tm = new SavingTrustManager(defaultTrustManager); context.init(null, new TrustManager[] { tm }, null); SSLSocketFactory factory = context.getSocketFactory(); System.out.println(\"Opening connection to \" ); socket.setSoTimeout(10000); try { System.out.println(\"Starting SSL handshake is already trusted\"); } catch (SSLException e) { System.out.println(); e.printStackTrace(System.out); } X509Certificate[] chain = tm.chain; if (chain == null) { Systemreturn; } BufferedReader reader = new BufferedReader(new InputStreamReader(System.in)); System.out.println(); sha1 = MessageDigest.getInstance(); for (int i = 0; i < chain.length; i++) { X509Certificate cert = chain[i]; System.out.println(\" \" + (i + 1) + \" Subject \" + cert.getSubjectDN()); System.outupdate(cert.getEncoded()); System.out.println(\" sha1 \" + toHexString(sha1.digest())); md5.update(cert.getEncoded()); System.out.println(\" md5 \" + toHexString(md5.digest())); System.out.println(); } System.out.println(\"Enter certificate to add to trusted keystore or 'q' to quit: [1]\"); String line = reader.readLine().trim(); int k; try { k = (line.length() == 0) ? 0 : Integer.parseInt(line) - 1; } catch (NumberFormatException e) { System.out.println(\"KeyStore not changed\"); return; }out = new FileOutputStream(\"jssecacerts\"); out.close(); Systemprintln(); System.out.println(\"Added certificate to keystore 'jssecacerts' using alias '\" + alias + \"'\"); }"}
{"time": "2021-01-20 10:52:32.136403", "n_pass": [386, 19, 19], "score": "0.9935", "loss": "0.0077", "code": "public static void main(String[] args) throws Exception { char[] passphrase; if ((2)) { String[] c = args[0].split(c.length == 1) ? 443 : Integer.parseInt(c[1]); String p = (args.length == 1) ? \"changeit\" : args[1]; passphrase = p.separatorChar; File dir = new File(System.getProperty(\"java.home\") + SEP + \"lib\" + SEP + \"security\"); file = new File(dir, \"jssecacerts\"); if (file.isFile() == false) { file = new File(dir, \"cacerts\"); } } System.out.println(\"Loading KeyStore \" + file + \"...\"); InputStream(ks); X509TrustManager defaultTrustManager = (X509TrustManager) tmf.getTrustManagers()[0]; SavingTrustManager tm = new SavingTrustManager(defaultTrustManager); context.init(null, new TrustManager[] { tm }, null); SSLSocketFactory factory = context.getSocketFactory(); System.out.println(\"Opening connection to \" ); socket.setSoTimeout(10000); try { System.out.println(\"Starting SSL handshake is already trusted\"); } catch (SSLException e) { System.out.println(); e.printStackTrace(System.out); } X509Certificate[] chain = tm.chain; if (chain == null) { Systemreturn; } BufferedReader reader = new BufferedReader(new InputStreamReader(System.in)); System.out.println(); sha1 = MessageDigest.getInstance(); for (int i = 0; i < chain.length; i++) { X509Certificate cert = chain[i]; System.out.println(\" \" + (i + 1) + \" Subject \" + cert.getSubjectDN()); System.outupdate(cert.getEncoded()); System.out.println(\" sha1 \" + toHexString(sha1.digest())); md5.update(cert.getEncoded()); System.out.println(\" md5 \" + toHexString(md5.digest())); System.out.println(); } System.out.println(\"Enter certificate to add to trusted keystore or 'q' to quit: [1]\"); String line = reader.readLine().trim(); int k; try { k = (line.length() == 0) ? 0 : Integer.parseInt(line) - 1; } catch (NumberFormatException e) { System.out.println(\"KeyStore not changed\"); return; }out = new FileOutputStream(\"jssecacerts\"); out.close(); Systemprintln(); System.out.println(\"Added certificate to keystore 'jssecacerts' using alias '\" + alias + \"'\"); }"}
{"time": "2021-01-20 10:52:33.851922", "n_pass": [397, 20, 20], "score": "0.9966", "loss": "0.0037", "code": "public static void main(String[] args) throws Exception { char[] passphrase; if ((2)) { String[] c = args[0].split(c.length == 1) ? 443 : Integer.parseInt(c[1]); String p = (args.length == 1) ? \"changeit\" : args[1]; passphrase = p.separatorCharFile(System.getProperty(\"java.home\") + SEP + \"lib\" + SEP + \"security\"); file = new File(dir, \"jssecacerts\"); if (file.isFile() == false) { file = new File(dir, \"cacerts\"); } } System.out.println(\"Loading KeyStore \" + file + \"...\"); InputStream(ks); X509TrustManager defaultTrustManager = (X509TrustManager) tmf.getTrustManagers()[0]; SavingTrustManager tm = new SavingTrustManager(defaultTrustManager); context.init(null, new TrustManager[] { tm }, null); SSLSocketFactory factory = context.getSocketFactory(); System.out.println(\"Opening connection to \" ); socket.setSoTimeout(10000); try { System.out.println(\"Starting SSL handshake is already trusted\"); } catch (SSLException e) { System.out.println(); e.printStackTrace(System.out); } X509Certificate[] chain = tm.chain; if (chain == null) { Systemreturn; } BufferedReader reader = new BufferedReader(new InputStreamReader(System.in)); System.out.println(); sha1 = MessageDigest.getInstance(); for (int i = 0; i < chain.length; i++) { X509Certificate cert = chain[i]; System.out.println(\" \" + (i + 1) + \" Subject \" + cert.getSubjectDN()); System.outupdate(cert.getEncoded()); System.out.println(\" sha1 \" + toHexString(sha1.digest())); md5.update(cert.getEncoded()); System.out.println(\" md5 \" + toHexString(md5.digest())); System.out.println(); } System.out.println(\"Enter certificate to add to trusted keystore or 'q' to quit: [1]\"); String line = reader.readLine().trim(); int k; try { k = (line.length() == 0) ? 0 : Integer.parseInt(line) - 1; } catch (NumberFormatException e) { System.out.println(\"KeyStore not changed\"); return; }out = new FileOutputStream(\"jssecacerts\"); out.close(); Systemprintln(); System.out.println(\"Added certificate to keystore 'jssecacerts' using alias '\" + alias + \"'\"); }"}
{"time": "2021-01-20 10:52:35.402155", "n_pass": [400, 21, 21], "score": "0.8082", "loss": "0.3435", "code": "public static void main(String[] args) throws Exception { char[] passphrase; if ((2)) { String[] c = args[0].split(c.length == 1) ? 443 : Integer.parseInt(c[1]); String p = (args.length == 1) ? \"changeit\" : args[1]; passphrase = p.separatorCharFile(System.getProperty(\"java.home\") + SEP + \"security\"); file = new File(dir, \"jssecacerts\"); if (file.isFile() == false) { file = new File(dir, \"cacerts\"); } } System.out.println(\"Loading KeyStore \" + file + \"...\"); InputStream(ks); X509TrustManager defaultTrustManager = (X509TrustManager) tmf.getTrustManagers()[0]; SavingTrustManager tm = new SavingTrustManager(defaultTrustManager); context.init(null, new TrustManager[] { tm }, null); SSLSocketFactory factory = context.getSocketFactory(); System.out.println(\"Opening connection to \" ); socket.setSoTimeout(10000); try { System.out.println(\"Starting SSL handshake is already trusted\"); } catch (SSLException e) { System.out.println(); e.printStackTrace(System.out); } X509Certificate[] chain = tm.chain; if (chain == null) { Systemreturn; } BufferedReader reader = new BufferedReader(new InputStreamReader(System.in)); System.out.println(); sha1 = MessageDigest.getInstance(); for (int i = 0; i < chain.length; i++) { X509Certificate cert = chain[i]; System.out.println(\" \" + (i + 1) + \" Subject \" + cert.getSubjectDN()); System.outupdate(cert.getEncoded()); System.out.println(\" sha1 \" + toHexString(sha1.digest())); md5.update(cert.getEncoded()); System.out.println(\" md5 \" + toHexString(md5.digest())); System.out.println(); } System.out.println(\"Enter certificate to add to trusted keystore or 'q' to quit: [1]\"); String line = reader.readLine().trim(); int k; try { k = (line.length() == 0) ? 0 : Integer.parseInt(line) - 1; } catch (NumberFormatException e) { System.out.println(\"KeyStore not changed\"); return; }out = new FileOutputStream(\"jssecacerts\"); out.close(); Systemprintln(); System.out.println(\"Added certificate to keystore 'jssecacerts' using alias '\" + alias + \"'\"); }"}
{"time": "2021-01-20 10:52:37.044050", "n_pass": [424, 22, 22], "score": "0.9954", "loss": "0.0055", "code": "public static void main(String[] args) throws Exception { char[] passphrase; if ((2)) { String[] c = args[0].split(c.length == 1) ? 443 : Integer.parseInt(c[1]); String p = (args.length == 1) ? \"changeit\" : args[1]; passphrase = p.separatorCharFile(System.getProperty(\"java.home\") + SEP + \"security\"); file = new File(dir, \"jssecacerts\"); if (file.isFile() == false) { file = new File(dir, \"cacerts\"); } } System.out.println(\"Loading KeyStore \" + file + \"...\"); InputStream(ks); X509TrustManager defaultTrustManager = (X509TrustManager) tmf.getTrustManagers()[0]; SavingTrustManager tm = new SavingTrustManager(defaultTrustManager); context.init(null, new TrustManager[] { tm }, null); SSLSocketFactory factory = context.getSocketFactory(); System.out.println(\"Opening connection to \" ); socket.setSoTimeout(10000); try { System.out.println(\"Starting SSL handshake is already trusted\"); } catch (SSLException e) { System.out.println();} X509Certificate[] chain = tm.chain; if (chain == null) { Systemreturn; } BufferedReader reader = new BufferedReader(new InputStreamReader(System.in)); System.out.println(); sha1 = MessageDigest.getInstance(); for (int i = 0; i < chain.length; i++) { X509Certificate cert = chain[i]; System.out.println(\" \" + (i + 1) + \" Subject \" + cert.getSubjectDN()); System.outupdate(cert.getEncoded()); System.out.println(\" sha1 \" + toHexString(sha1.digest())); md5.update(cert.getEncoded()); System.out.println(\" md5 \" + toHexString(md5.digest())); System.out.println(); } System.out.println(\"Enter certificate to add to trusted keystore or 'q' to quit: [1]\"); String line = reader.readLine().trim(); int k; try { k = (line.length() == 0) ? 0 : Integer.parseInt(line) - 1; } catch (NumberFormatException e) { System.out.println(\"KeyStore not changed\"); return; }out = new FileOutputStream(\"jssecacerts\"); out.close(); Systemprintln(); System.out.println(\"Added certificate to keystore 'jssecacerts' using alias '\" + alias + \"'\"); }"}
{"time": "2021-01-20 10:52:38.664511", "n_pass": [440, 23, 23], "score": "0.9801", "loss": "0.0239", "code": "public static void main(String[] args) throws Exception { char[] passphrase; if ((2)) { String[] c = args[0].split(c.length == 1) ? 443 : Integer.parseInt(c[1]); String p = (args.length == 1) ? \"changeit\" : args[1]; passphrase = p.separatorCharFile(System.getProperty(\"java.home\") + SEP + \"security\"); file = new File(dir, \"jssecacerts\"); if (file.isFile() == false) { file = new File(dir, \"cacerts\"); } } System.out.println(\"Loading KeyStore \" + file + \"...\"); InputStream(ks); X509TrustManager defaultTrustManager = (X509TrustManager) tmf.getTrustManagers()[0]; SavingTrustManager tm = new SavingTrustManager(defaultTrustManager); context.init(null, new TrustManager[] { tm }, null); SSLSocketFactory factory = context.getSocketFactory(); System.out.println(\"Opening connection to \" ); socket.setSoTimeout(10000); try { System.out.println(\"Starting SSL handshake is already trusted\"); } catch (SSLException e) { System.out.println();} X509Certificate[] chain = tm.chain; if (chain == null) { Systemreturn; } BufferedReader reader = new BufferedReader(new InputStreamReader(System.in)); System.out.println(); sha1 = MessageDigest.getInstance(); for (int i = 0; i < chain.length; i++) { X509Certificate cert = chain[i]; System.out.println(\" \" + (i + 1) + \" Subject \" + cert.getSubjectDN()); System.out.out.println(\" sha1 \" + toHexString(sha1.digest())); md5.update(cert.getEncoded()); System.out.println(\" md5 \" + toHexString(md5.digest())); System.out.println(); } System.out.println(\"Enter certificate to add to trusted keystore or 'q' to quit: [1]\"); String line = reader.readLine().trim(); int k; try { k = (line.length() == 0) ? 0 : Integer.parseInt(line) - 1; } catch (NumberFormatException e) { System.out.println(\"KeyStore not changed\"); return; }out = new FileOutputStream(\"jssecacerts\"); out.close(); Systemprintln(); System.out.println(\"Added certificate to keystore 'jssecacerts' using alias '\" + alias + \"'\"); }"}
{"time": "2021-01-20 10:52:40.248902", "n_pass": [449, 24, 24], "score": "0.9823", "loss": "0.0212", "code": "public static void main(String[] args) throws Exception { char[] passphrase; if ((2)) { String[] c = args[0].split(c.length == 1) ? 443 : Integer.parseInt(c[1]); String p = (args.length == 1) ? \"changeit\" : args[1]; passphrase = p.separatorCharFile(System.getProperty(\"java.home\") + SEP + \"security\"); file = new File(dir, \"jssecacerts\"); if (file.isFile() == false) { file = new File(dir, \"cacerts\"); } } System.out.println(\"Loading KeyStore \" + file + \"...\"); InputStream(ks); X509TrustManager defaultTrustManager = (X509TrustManager) tmf.getTrustManagers()[0]; SavingTrustManager tm = new SavingTrustManager(defaultTrustManager); context.init(null, new TrustManager[] { tm }, null); SSLSocketFactory factory = context.getSocketFactory(); System.out.println(\"Opening connection to \" ); socket.setSoTimeout(10000); try { System.out.println(\"Starting SSL handshake is already trusted\"); } catch (SSLException e) { System.out.println();} X509Certificate[] chain = tm.chain; if (chain == null) { Systemreturn; } BufferedReader reader = new BufferedReader(new InputStreamReader(System.in)); System.out.println(); sha1 = MessageDigest.getInstance(); for (int i = 0; i < chain.length; i++) { X509Certificate cert = chain[i]; System.out.println(\" \" + (i + 1) + \" Subject \" + cert.getSubjectDN()); System.out.out.println(\" sha1 \" + toHexString(sha1.digest())); md5.update(cert.getEncoded()); System.out.println(\" md5 \" + toHexString(md5.digest())); System.out.println(); } System.out.println(\"Enter certificate  'q' to quit: [1]\"); String line = reader.readLine().trim(); int k; try { k = (line.length() == 0) ? 0 : Integer.parseInt(line) - 1; } catch (NumberFormatException e) { System.out.println(\"KeyStore not changed\"); return; }out = new FileOutputStream(\"jssecacerts\"); out.close(); Systemprintln(); System.out.println(\"Added certificate to keystore 'jssecacerts' using alias '\" + alias + \"'\"); }"}
{"time": "2021-01-20 10:52:41.768774", "n_pass": [450, 25, 25], "score": "0.9997", "loss": "0.0004", "code": "public static void main(String[] args) throws Exception { char[] passphrase; if ((2)) { String[] c = args[0].split(c.length == 1) ? 443 : Integer.parseInt(c[1]); String p = (args.length == 1) ? \"changeit\" : args[1]; passphrase = p.separatorCharFile(System.getProperty(\"java.home\") + SEP + \"security\"); file = new File(dir, \"jssecacerts\"); if (file.isFile() == false) { file = new File(dir, \"cacerts\"); } } System.out.println(\"Loading KeyStore \" + file + \"...\"); InputStream(ks); X509TrustManager defaultTrustManager = (X509TrustManager) tmf.getTrustManagers()[0]; SavingTrustManager tm = new SavingTrustManager(defaultTrustManager); context.init(null, new TrustManager[] { tm }, null); SSLSocketFactory factory = context.getSocketFactory(); System.out.println(\"Opening connection to \" ); socket.setSoTimeout(10000); try { System.out.println(\"Starting SSL handshake is already trusted\"); } catch (SSLException e) { System.out.println();} X509Certificate[] chain = tm.chain; if (chain == null) { Systemreturn; } BufferedReader reader = new BufferedReader(new InputStreamReader(System.in)); System.out.println(); sha1 = MessageDigest.getInstance(); for (int i = 0; i < chain.length; i++) { X509Certificate cert = chain[i]; System.out.println(\" \" + (i + 1) + \" Subject \" + cert.getSubjectDN()); System.out.out.println(\" sha1 \" + toHexString(sha1.digest())); md5.update(cert.getEncoded()); System.out.println(\" md5 \" + toHexString(md5.digest())); System.out.println(); } System.out.println(\"Enter certificate 1]\"); String line = reader.readLine().trim(); int k; try { k = (line.length() == 0) ? 0 : Integer.parseInt(line) - 1; } catch (NumberFormatException e) { System.out.println(\"KeyStore not changed\"); return; }out = new FileOutputStream(\"jssecacerts\"); out.close(); Systemprintln(); System.out.println(\"Added certificate to keystore 'jssecacerts' using alias '\" + alias + \"'\"); }"}
{"time": "2021-01-20 10:52:44.259465", "n_pass": [681, 26, 26], "score": "0.9961", "loss": "0.0043", "code": "public static void main(String[] args) throws Exception { char[] passphrase; if ((2)) { String[] c = args[0].split(c.length == 1) ? 443 : Integer.parseInt(c[1]); String p = (args.length == 1) ? \"changeit\" : args[1]; passphrase = p.separatorCharFile(System.getProperty(\"java.home\") + SEP + \"security\"); file = new File(dir, \"jssecacerts\"); if (file.isFile() == false) { file = new File(dir, \"cacerts\"); } } System.out.println(\"Loading KeyStore \" + file + \"...\"); InputStream(ks); X509TrustManager defaultTrustManager = (X509TrustManager) tmf.getTrustManagers()[0]; SavingTrustManager tm = new SavingTrustManager(defaultTrustManager); context.init(null, new TrustManager[] { tm }, null); SSLSocketFactory factory = context.getSocketFactory(); System.out.println(\"Opening connection to \" ); socket.setSoTimeout(10000); try { System.out.println(\"Starting SSL handshake is already trusted\"); } catch (SSLException e) { System.out.println();} X509Certificate[] chain = tm.chain; if (chain == null) { Systemreturn; } BufferedReader reader = new BufferedReader(new InputStreamReader(System.in)); System.out.println(); sha1 = MessageDigest.getInstance(); for (int i = 0; i < chain.length; i++) { X509Certificate cert = chain[i]; System.out.println(\" \" + (i + 1) + \" Subject \" + cert.getSubjectDN()); System.out.out.println(\" sha1 \" + toHexString(sha1.digest())); md5.update(cert.getEncoded()); System.out.println(\" md5 \" + toHexString(md5.digest())); System.out.println(); } System.out.println(\"Enter certificate 1]\"); String line = reader.readLine; int k; try { k = (line.length() == 0) ? 0 : Integer.parseInt(line) - 1; } catch (NumberFormatException e) { System.out.println(\"KeyStore not changed\"); return; }out = new FileOutputStream(\"jssecacerts\"); out.close(); Systemprintln(); System.out.println(\"Added certificate to keystore 'jssecacerts' using alias '\" + alias + \"'\"); }"}
{"time": "2021-01-20 10:52:45.863099", "n_pass": [695, 27, 27], "score": "0.9956", "loss": "0.0048", "code": "public static void main(String[] args) throws Exception { char[] passphrase; if ((2)) { String[] c = args[0].split(c.length == 1) ? 443 : Integer.parseInt(c[1]); String p = (args.length == 1) ? \"changeit\" : args[1]; passphrase = p.separatorCharFile(System.getProperty(\"java.home\") + SEP + \"security\"); file = new File(dir, \"jssecacerts\"); if (file.isFile() == false) { file = new File(dir, \"cacerts\"); } } System.out.println(\"Loading KeyStore \" + file + \"...\"); InputStream(ks); X509TrustManager defaultTrustManager = (X509TrustManager) tmf.getTrustManagers()[0]; SavingTrustManager tm = new SavingTrustManager(defaultTrustManager); context.init(null, new TrustManager[] { tm }, null); SSLSocketFactory factory = context.getSocketFactory(); System.out.println(\"Opening connection to \" ); socket.setSoTimeout(10000); try { System.out.println(\"Starting SSL handshake is already trusted\"); } catch (SSLException e) { System.out.println();} X509Certificate[] chain = tm.chain; if (chain == null) { Systemreturn; } BufferedReader reader = new BufferedReader(new InputStreamReader(System.in)); System.out.println(); sha1 = MessageDigest.getInstance(); for (int i = 0; i < chain.length; i++) { X509Certificate cert = chain[i]; System.out.println(\" \" + (i + 1) + \" Subject \" + cert.getSubjectDN()); System.out.out.println(\" sha1 \" + toHexString(sha1.digest())); md5.update(cert.getEncoded()); System.out.println(\" md5 \" + toHexString(md5.digest())); System.out.println(); } System.out.println(\"Enter certificate 1]\"); String line = reader.readLine; int k; try { k = (line.length() == 0) ? 0 : Integer.parseInt(line) - 1; } catch (NumberFormatException e) { System.out.println(\"KeyStore not changed\"); return; }FileOutputStream(\"jssecacerts\"); out.close(); Systemprintln(); System.out.println(\"Added certificate to keystore 'jssecacerts' using alias '\" + alias + \"'\"); }"}
{"time": "2021-01-20 10:52:47.392125", "n_pass": [696, 28, 28], "score": "0.9593", "loss": "0.0477", "code": "public static void main(String[] args) throws Exception { char[] passphrase; if ((2)) { String[] c = args[0].split(c.length == 1) ? 443 : Integer.parseInt(c[1]); String p = (args.length == 1) ? \"changeit\" : args[1]; passphrase = p.separatorCharFile(System.getProperty(\"java.home\") + SEP + \"security\"); file = new File(dir, \"jssecacerts\"); if (file.isFile() == false) { file = new File(dir, \"cacerts\"); } } System.out.println(\"Loading KeyStore \" + file + \"...\"); InputStream(ks); X509TrustManager defaultTrustManager = (X509TrustManager) tmf.getTrustManagers()[0]; SavingTrustManager tm = new SavingTrustManager(defaultTrustManager); context.init(null, new TrustManager[] { tm }, null); SSLSocketFactory factory = context.getSocketFactory(); System.out.println(\"Opening connection to \" ); socket.setSoTimeout(10000); try { System.out.println(\"Starting SSL handshake is already trusted\"); } catch (SSLException e) { System.out.println();} X509Certificate[] chain = tm.chain; if (chain == null) { Systemreturn; } BufferedReader reader = new BufferedReader(new InputStreamReader(System.in)); System.out.println(); sha1 = MessageDigest.getInstance(); for (int i = 0; i < chain.length; i++) { X509Certificate cert = chain[i]; System.out.println(\" \" + (i + 1) + \" Subject \" + cert.getSubjectDN()); System.out.out.println(\" sha1 \" + toHexString(sha1.digest())); md5.update(cert.getEncoded()); System.out.println(\" md5 \" + toHexString(md5.digest())); System.out.println(); } System.out.println(\"Enter certificate 1]\"); String line = reader.readLine; int k; try { k = (line.length() == 0) ? 0 : Integer.parseInt(line) - 1; } catch (NumberFormatException e) { System.out.println(\"KeyStore not changed\"); return; }; out.close(); Systemprintln(); System.out.println(\"Added certificate to keystore 'jssecacerts' using alias '\" + alias + \"'\"); }"}
{"time": "2021-01-20 10:52:48.927479", "n_pass": [698, 29, 29], "score": "0.9969", "loss": "0.0034", "code": "public static void main(String[] args) throws Exception { char[] passphrase; if ((2)) { String[] c = args[0].split(c.length == 1) ? 443 : Integer.parseInt(c[1]); String p = (args.length == 1) ? \"changeit\" : args[1]; passphrase = p.separatorCharFile(System.getProperty(\"java.home\") + SEP + \"security\"); file = new File(dir, \"jssecacerts\"); if (file.isFile() == false) { file = new File(dir, \"cacerts\"); } } System.out.println(\"Loading KeyStore \" + file + \"...\"); InputStream(ks); X509TrustManager defaultTrustManager = (X509TrustManager) tmf.getTrustManagers()[0]; SavingTrustManager tm = new SavingTrustManager(defaultTrustManager); context.init(null, new TrustManager[] { tm }, null); SSLSocketFactory factory = context.getSocketFactory(); System.out.println(\"Opening connection to \" ); socket.setSoTimeout(10000); try { System.out.println(\"Starting SSL handshake is already trusted\"); } catch (SSLException e) { System.out.println();} X509Certificate[] chain = tm.chain; if (chain == null) { Systemreturn; } BufferedReader reader = new BufferedReader(new InputStreamReader(System.in)); System.out.println(); sha1 = MessageDigest.getInstance(); for (int i = 0; i < chain.length; i++) { X509Certificate cert = chain[i]; System.out.println(\" \" + (i + 1) + \" Subject \" + cert.getSubjectDN()); System.out.out.println(\" sha1 \" + toHexString(sha1.digest())); md5.update(cert.getEncoded()); System.out.println(\" md5 \" + toHexString(md5.digest())); System.out.println(); } System.out.println(\"Enter certificate 1]\"); String line = reader.readLine; int k; try { k = (line.length() == 0) ? 0 : Integer.parseInt(line) - 1; } catch (NumberFormatException e) { System.out.println(\"KeyStore not changed\"); return; }; out.close(); System.out.println(\"Added certificate to keystore 'jssecacerts' using alias '\" + alias + \"'\"); }"}
{"time": "2021-01-20 10:52:50.486132", "n_pass": [701, 30, 30], "score": "0.9987", "loss": "0.0017", "code": "public static void main(String[] args) throws Exception { char[] passphrase; if ((2)) { String[] c = args[0].split(c.length == 1) ? 443 : Integer.parseInt(c[1]); String p = (args.length == 1) ? \"changeit\" : args[1]; passphrase = p.separatorCharFile(System.getProperty(\"java.home\") + SEP + \"security\"); file = new File(dir, \"jssecacerts\"); if (file.isFile() == false) { file = new File(dir, \"cacerts\"); } } System.out.println(\"Loading KeyStore \" + file + \"...\"); InputStream(ks); X509TrustManager defaultTrustManager = (X509TrustManager) tmf.getTrustManagers()[0]; SavingTrustManager tm = new SavingTrustManager(defaultTrustManager); context.init(null, new TrustManager[] { tm }, null); SSLSocketFactory factory = context.getSocketFactory(); System.out.println(\"Opening connection to \" ); socket.setSoTimeout(10000); try { System.out.println(\"Starting SSL handshake is already trusted\"); } catch (SSLException e) { System.out.println();} X509Certificate[] chain = tm.chain; if (chain == null) { Systemreturn; } BufferedReader reader = new BufferedReader(new InputStreamReader(System.in)); System.out.println(); sha1 = MessageDigest.getInstance(); for (int i = 0; i < chain.length; i++) { X509Certificate cert = chain[i]; System.out.println(\" \" + (i + 1) + \" Subject \" + cert.getSubjectDN()); System.out.out.println(\" sha1 \" + toHexString(sha1.digest())); md5.update(cert.getEncoded()); System.out.println(\" md5 \" + toHexString(md5.digest())); System.out.println(); } System.out.println(\"Enter certificate 1]\"); String line = reader.readLine; int k; try { k = (line.length() == 0) ? 0 : Integer.parseInt(line) - 1; } catch (NumberFormatException e) { System.out.println(\"KeyStore not changed\"); return; }; out.close(); System.out.println(\"Added 'jssecacerts' using alias '\" + alias + \"'\"); }"}
{"time": "2021-01-20 10:52:52.035238", "n_pass": [702, 31, 31], "score": "0.9989", "loss": "0.0012", "code": "public static void main(String[] args) throws Exception { char[] passphrase; if ((2)) { String[] c = args[0].split(c.length == 1) ? 443 : Integer.parseInt(c[1]); String p = (args.length == 1) ? \"changeit\" : args[1]; passphrase = p.separatorCharFile(System.getProperty(\"java.home\") + SEP + \"security\"); file = new File(dir, \"jssecacerts\"); if (file.isFile() == false) { file = new File(dir, \"cacerts\"); } } System.out.println(\"Loading KeyStore \" + file + \"...\"); InputStream(ks); X509TrustManager defaultTrustManager = (X509TrustManager) tmf.getTrustManagers()[0]; SavingTrustManager tm = new SavingTrustManager(defaultTrustManager); context.init(null, new TrustManager[] { tm }, null); SSLSocketFactory factory = context.getSocketFactory(); System.out.println(\"Opening connection to \" ); socket.setSoTimeout(10000); try { System.out.println(\"Starting SSL handshake is already trusted\"); } catch (SSLException e) { System.out.println();} X509Certificate[] chain = tm.chain; if (chain == null) { Systemreturn; } BufferedReader reader = new BufferedReader(new InputStreamReader(System.in)); System.out.println(); sha1 = MessageDigest.getInstance(); for (int i = 0; i < chain.length; i++) { X509Certificate cert = chain[i]; System.out.println(\" \" + (i + 1) + \" Subject \" + cert.getSubjectDN()); System.out.out.println(\" sha1 \" + toHexString(sha1.digest())); md5.update(cert.getEncoded()); System.out.println(\" md5 \" + toHexString(md5.digest())); System.out.println(); } System.out.println(\"Enter certificate 1]\"); String line = reader.readLine; int k; try { k = (line.length() == 0) ? 0 : Integer.parseInt(line) - 1; } catch (NumberFormatException e) { System.out.println(\"KeyStore not changed\"); return; }; out.close(); System.out.println(\"Added alias '\" + alias + \"'\"); }"}
{"time": "2021-01-20 10:52:53.989270", "n_pass": [710, 32, 32], "score": "0.9792", "loss": "0.0228", "code": "public static void main(String[] args) throws Exception {passphrase; if ((2)) { String[] c = args[0].split(c.length == 1) ? 443 : Integer.parseInt(c[1]); String p = (args.length == 1) ? \"changeit\" : args[1]; passphrase = p.separatorCharFile(System.getProperty(\"java.home\") + SEP + \"security\"); file = new File(dir, \"jssecacerts\"); if (file.isFile() == false) { file = new File(dir, \"cacerts\"); } } System.out.println(\"Loading KeyStore \" + file + \"...\"); InputStream(ks); X509TrustManager defaultTrustManager = (X509TrustManager) tmf.getTrustManagers()[0]; SavingTrustManager tm = new SavingTrustManager(defaultTrustManager); context.init(null, new TrustManager[] { tm }, null); SSLSocketFactory factory = context.getSocketFactory(); System.out.println(\"Opening connection to \" ); socket.setSoTimeout(10000); try { System.out.println(\"Starting SSL handshake is already trusted\"); } catch (SSLException e) { System.out.println();} X509Certificate[] chain = tm.chain; if (chain == null) { Systemreturn; } BufferedReader reader = new BufferedReader(new InputStreamReader(System.in)); System.out.println(); sha1 = MessageDigest.getInstance(); for (int i = 0; i < chain.length; i++) { X509Certificate cert = chain[i]; System.out.println(\" \" + (i + 1) + \" Subject \" + cert.getSubjectDN()); System.out.out.println(\" sha1 \" + toHexString(sha1.digest())); md5.update(cert.getEncoded()); System.out.println(\" md5 \" + toHexString(md5.digest())); System.out.println(); } System.out.println(\"Enter certificate 1]\"); String line = reader.readLine; int k; try { k = (line.length() == 0) ? 0 : Integer.parseInt(line) - 1; } catch (NumberFormatException e) { System.out.println(\"KeyStore not changed\"); return; }; out.close(); System.out.println(\"Added alias '\" + alias + \"'\"); }"}
{"time": "2021-01-20 10:52:56.013163", "n_pass": [735, 33, 33], "score": "0.9845", "loss": "0.0205", "code": "public static void main(String[] args) throws Exception {passphrase; if ((2)) { String[] c = args[0].split(c.length == 1) ? 443 : Integer.parseInt(c[1]); String p = (args.length == 1) ? \"changeit\" : args[1]; passphrase = p.separatorCharFile(System.getProperty(\"java.home\") + SEP + \"security\");  File(dir, \"jssecacerts\"); if (file.isFile() == false) { file = new File(dir, \"cacerts\"); } } System.out.println(\"Loading KeyStore \" + file + \"...\"); InputStream(ks); X509TrustManager defaultTrustManager = (X509TrustManager) tmf.getTrustManagers()[0]; SavingTrustManager tm = new SavingTrustManager(defaultTrustManager); context.init(null, new TrustManager[] { tm }, null); SSLSocketFactory factory = context.getSocketFactory(); System.out.println(\"Opening connection to \" ); socket.setSoTimeout(10000); try { System.out.println(\"Starting SSL handshake is already trusted\"); } catch (SSLException e) { System.out.println();} X509Certificate[] chain = tm.chain; if (chain == null) { Systemreturn; } BufferedReader reader = new BufferedReader(new InputStreamReader(System.in)); System.out.println(); sha1 = MessageDigest.getInstance(); for (int i = 0; i < chain.length; i++) { X509Certificate cert = chain[i]; System.out.println(\" \" + (i + 1) + \" Subject \" + cert.getSubjectDN()); System.out.out.println(\" sha1 \" + toHexString(sha1.digest())); md5.update(cert.getEncoded()); System.out.println(\" md5 \" + toHexString(md5.digest())); System.out.println(); } System.out.println(\"Enter certificate 1]\"); String line = reader.readLine; int k; try { k = (line.length() == 0) ? 0 : Integer.parseInt(line) - 1; } catch (NumberFormatException e) { System.out.println(\"KeyStore not changed\"); return; }; out.close(); System.out.println(\"Added alias '\" + alias + \"'\"); }"}
{"time": "2021-01-20 10:52:57.551762", "n_pass": [740, 34, 34], "score": "0.9982", "loss": "0.002", "code": "public static void main(String[] args) throws Exception {passphrase; if ((2)) { String[] c = args[0].split(c.length == 1) ? 443 : Integer.parseInt(c[1]); String p = (args.length == 1) ? \"changeit\" : args[1]; passphrase = p.separatorCharFile(System.getProperty(\"java.home\") + SEP + \"security\");  File(dir, \"jssecacerts\"); if (file.isFile()) { file = new File(dir, \"cacerts\"); } } System.out.println(\"Loading KeyStore \" + file + \"...\"); InputStream(ks); X509TrustManager defaultTrustManager = (X509TrustManager) tmf.getTrustManagers()[0]; SavingTrustManager tm = new SavingTrustManager(defaultTrustManager); context.init(null, new TrustManager[] { tm }, null); SSLSocketFactory factory = context.getSocketFactory(); System.out.println(\"Opening connection to \" ); socket.setSoTimeout(10000); try { System.out.println(\"Starting SSL handshake is already trusted\"); } catch (SSLException e) { System.out.println();} X509Certificate[] chain = tm.chain; if (chain == null) { Systemreturn; } BufferedReader reader = new BufferedReader(new InputStreamReader(System.in)); System.out.println(); sha1 = MessageDigest.getInstance(); for (int i = 0; i < chain.length; i++) { X509Certificate cert = chain[i]; System.out.println(\" \" + (i + 1) + \" Subject \" + cert.getSubjectDN()); System.out.out.println(\" sha1 \" + toHexString(sha1.digest())); md5.update(cert.getEncoded()); System.out.println(\" md5 \" + toHexString(md5.digest())); System.out.println(); } System.out.println(\"Enter certificate 1]\"); String line = reader.readLine; int k; try { k = (line.length() == 0) ? 0 : Integer.parseInt(line) - 1; } catch (NumberFormatException e) { System.out.println(\"KeyStore not changed\"); return; }; out.close(); System.out.println(\"Added alias '\" + alias + \"'\"); }"}
{"time": "2021-01-20 10:52:59.094172", "n_pass": [742, 35, 35], "score": "0.9781", "loss": "0.0256", "code": "public static void main(String[] args) throws Exception {passphrase; if ((2)) { String[] c = args[0].split(c.length == 1) ? 443 : Integer.parseInt(c[1]); String p = (args.length == 1) ? \"changeit\" : args[1]; passphrase = p.separatorCharFile(System.getProperty(\"java.home\") + SEP + \"security\");  File(dir, \"jssecacerts\"); if (file.isFile()) { fileFile(dir, \"cacerts\"); } } System.out.println(\"Loading KeyStore \" + file + \"...\"); InputStream(ks); X509TrustManager defaultTrustManager = (X509TrustManager) tmf.getTrustManagers()[0]; SavingTrustManager tm = new SavingTrustManager(defaultTrustManager); context.init(null, new TrustManager[] { tm }, null); SSLSocketFactory factory = context.getSocketFactory(); System.out.println(\"Opening connection to \" ); socket.setSoTimeout(10000); try { System.out.println(\"Starting SSL handshake is already trusted\"); } catch (SSLException e) { System.out.println();} X509Certificate[] chain = tm.chain; if (chain == null) { Systemreturn; } BufferedReader reader = new BufferedReader(new InputStreamReader(System.in)); System.out.println(); sha1 = MessageDigest.getInstance(); for (int i = 0; i < chain.length; i++) { X509Certificate cert = chain[i]; System.out.println(\" \" + (i + 1) + \" Subject \" + cert.getSubjectDN()); System.out.out.println(\" sha1 \" + toHexString(sha1.digest())); md5.update(cert.getEncoded()); System.out.println(\" md5 \" + toHexString(md5.digest())); System.out.println(); } System.out.println(\"Enter certificate 1]\"); String line = reader.readLine; int k; try { k = (line.length() == 0) ? 0 : Integer.parseInt(line) - 1; } catch (NumberFormatException e) { System.out.println(\"KeyStore not changed\"); return; }; out.close(); System.out.println(\"Added alias '\" + alias + \"'\"); }"}
{"time": "2021-01-20 10:53:00.665162", "n_pass": [746, 36, 36], "score": "0.9924", "loss": "0.0084", "code": "public static void main(String[] args) throws Exception {passphrase; if ((2)) { String[] c = args[0].split(c.length == 1) ? 443 : Integer.parseInt(c[1]); String p = (args.length == 1) ? \"changeit\" : args[1]; passphrase = p.separatorCharFile(System.getProperty(\"java.home\") + SEP + \"security\");  File(dir, \"jssecacerts\"); if (file.isFile()) { fileFile(dir, \"cacerts\"); } } (\"Loading KeyStore \" + file + \"...\"); InputStream(ks); X509TrustManager defaultTrustManager = (X509TrustManager) tmf.getTrustManagers()[0]; SavingTrustManager tm = new SavingTrustManager(defaultTrustManager); context.init(null, new TrustManager[] { tm }, null); SSLSocketFactory factory = context.getSocketFactory(); System.out.println(\"Opening connection to \" ); socket.setSoTimeout(10000); try { System.out.println(\"Starting SSL handshake is already trusted\"); } catch (SSLException e) { System.out.println();} X509Certificate[] chain = tm.chain; if (chain == null) { Systemreturn; } BufferedReader reader = new BufferedReader(new InputStreamReader(System.in)); System.out.println(); sha1 = MessageDigest.getInstance(); for (int i = 0; i < chain.length; i++) { X509Certificate cert = chain[i]; System.out.println(\" \" + (i + 1) + \" Subject \" + cert.getSubjectDN()); System.out.out.println(\" sha1 \" + toHexString(sha1.digest())); md5.update(cert.getEncoded()); System.out.println(\" md5 \" + toHexString(md5.digest())); System.out.println(); } System.out.println(\"Enter certificate 1]\"); String line = reader.readLine; int k; try { k = (line.length() == 0) ? 0 : Integer.parseInt(line) - 1; } catch (NumberFormatException e) { System.out.println(\"KeyStore not changed\"); return; }; out.close(); System.out.println(\"Added alias '\" + alias + \"'\"); }"}
{"time": "2021-01-20 10:53:02.205839", "n_pass": [753, 37, 37], "score": "0.9801", "loss": "0.0249", "code": "public static void main(String[] args) throws Exception {passphrase; if ((2)) { String[] c = args[0].split(c.length == 1) ? 443 : Integer.parseInt(c[1]); String p = (args.length == 1) ? \"changeit\" : args[1]; passphrase = p.separatorCharFile(System.getProperty(\"java.home\") + SEP + \"security\");  File(dir, \"jssecacerts\"); if (file.isFile()) { fileFile(dir, \"cacerts\"); } } (\"Loading KeyStore \" + file + \"...\"); InputStream(ks); X5 = (X509TrustManager) tmf.getTrustManagers()[0]; SavingTrustManager tm = new SavingTrustManager(defaultTrustManager); context.init(null, new TrustManager[] { tm }, null); SSLSocketFactory factory = context.getSocketFactory(); System.out.println(\"Opening connection to \" ); socket.setSoTimeout(10000); try { System.out.println(\"Starting SSL handshake is already trusted\"); } catch (SSLException e) { System.out.println();} X509Certificate[] chain = tm.chain; if (chain == null) { Systemreturn; } BufferedReader reader = new BufferedReader(new InputStreamReader(System.in)); System.out.println(); sha1 = MessageDigest.getInstance(); for (int i = 0; i < chain.length; i++) { X509Certificate cert = chain[i]; System.out.println(\" \" + (i + 1) + \" Subject \" + cert.getSubjectDN()); System.out.out.println(\" sha1 \" + toHexString(sha1.digest())); md5.update(cert.getEncoded()); System.out.println(\" md5 \" + toHexString(md5.digest())); System.out.println(); } System.out.println(\"Enter certificate 1]\"); String line = reader.readLine; int k; try { k = (line.length() == 0) ? 0 : Integer.parseInt(line) - 1; } catch (NumberFormatException e) { System.out.println(\"KeyStore not changed\"); return; }; out.close(); System.out.println(\"Added alias '\" + alias + \"'\"); }"}
{"time": "2021-01-20 10:53:03.750744", "n_pass": [760, 38, 38], "score": "0.9684", "loss": "0.0403", "code": "public static void main(String[] args) throws Exception {passphrase; if ((2)) { String[] c = args[0].split(c.length == 1) ? 443 : Integer.parseInt(c[1]); String p = (args.length == 1) ? \"changeit\" : args[1]; passphrase = p.separatorCharFile(System.getProperty(\"java.home\") + SEP + \"security\");  File(dir, \"jssecacerts\"); if (file.isFile()) { fileFile(dir, \"cacerts\"); } } (\"Loading KeyStore \" + file + \"...\"); InputStream(ks); X5 = (X509TrustManager) tmf.getTrustManagers()[0]; SavingTrustManager tm = new SavingTrustManagercontext.init(null, new TrustManager[] { tm }, null); SSLSocketFactory factory = context.getSocketFactory(); System.out.println(\"Opening connection to \" ); socket.setSoTimeout(10000); try { System.out.println(\"Starting SSL handshake is already trusted\"); } catch (SSLException e) { System.out.println();} X509Certificate[] chain = tm.chain; if (chain == null) { Systemreturn; } BufferedReader reader = new BufferedReader(new InputStreamReader(System.in)); System.out.println(); sha1 = MessageDigest.getInstance(); for (int i = 0; i < chain.length; i++) { X509Certificate cert = chain[i]; System.out.println(\" \" + (i + 1) + \" Subject \" + cert.getSubjectDN()); System.out.out.println(\" sha1 \" + toHexString(sha1.digest())); md5.update(cert.getEncoded()); System.out.println(\" md5 \" + toHexString(md5.digest())); System.out.println(); } System.out.println(\"Enter certificate 1]\"); String line = reader.readLine; int k; try { k = (line.length() == 0) ? 0 : Integer.parseInt(line) - 1; } catch (NumberFormatException e) { System.out.println(\"KeyStore not changed\"); return; }; out.close(); System.out.println(\"Added alias '\" + alias + \"'\"); }"}
{"time": "2021-01-20 10:53:05.288596", "n_pass": [766, 39, 39], "score": "0.9908", "loss": "0.0119", "code": "public static void main(String[] args) throws Exception {passphrase; if ((2)) { String[] c = args[0].split(c.length == 1) ? 443 : Integer.parseInt(c[1]); String p = (args.length == 1) ? \"changeit\" : args[1]; passphrase = p.separatorCharFile(System.getProperty(\"java.home\") + SEP + \"security\");  File(dir, \"jssecacerts\"); if (file.isFile()) { fileFile(dir, \"cacerts\"); } } (\"Loading KeyStore \" + file + \"...\"); InputStream(ks); X5 = (X509TrustManager) tmf.getTrustManagers()[0]; SavingTrustManager tm = new SavingTrustManagercontext.init(null, new TrustManager[] { tm }, null); SSLSocketFactorycontext.getSocketFactory(); System.out.println(\"Opening connection to \" ); socket.setSoTimeout(10000); try { System.out.println(\"Starting SSL handshake is already trusted\"); } catch (SSLException e) { System.out.println();} X509Certificate[] chain = tm.chain; if (chain == null) { Systemreturn; } BufferedReader reader = new BufferedReader(new InputStreamReader(System.in)); System.out.println(); sha1 = MessageDigest.getInstance(); for (int i = 0; i < chain.length; i++) { X509Certificate cert = chain[i]; System.out.println(\" \" + (i + 1) + \" Subject \" + cert.getSubjectDN()); System.out.out.println(\" sha1 \" + toHexString(sha1.digest())); md5.update(cert.getEncoded()); System.out.println(\" md5 \" + toHexString(md5.digest())); System.out.println(); } System.out.println(\"Enter certificate 1]\"); String line = reader.readLine; int k; try { k = (line.length() == 0) ? 0 : Integer.parseInt(line) - 1; } catch (NumberFormatException e) { System.out.println(\"KeyStore not changed\"); return; }; out.close(); System.out.println(\"Added alias '\" + alias + \"'\"); }"}
{"time": "2021-01-20 10:53:06.837577", "n_pass": [767, 40, 40], "score": "0.9959", "loss": "0.0051", "code": "public static void main(String[] args) throws Exception {passphrase; if ((2)) { String[] c = args[0].split(c.length == 1) ? 443 : Integer.parseInt(c[1]); String p = (args.length == 1) ? \"changeit\" : args[1]; passphrase = p.separatorCharFile(System.getProperty(\"java.home\") + SEP + \"security\");  File(dir, \"jssecacerts\"); if (file.isFile()) { fileFile(dir, \"cacerts\"); } } (\"Loading KeyStore \" + file + \"...\"); InputStream(ks); X5 = (X509TrustManager) tmf.getTrustManagers()[0]; SavingTrustManager tm = new SavingTrustManagercontext.init(null, new TrustManager[] { tm }, null); SSLSocketFactory; System.out.println(\"Opening connection to \" ); socket.setSoTimeout(10000); try { System.out.println(\"Starting SSL handshake is already trusted\"); } catch (SSLException e) { System.out.println();} X509Certificate[] chain = tm.chain; if (chain == null) { Systemreturn; } BufferedReader reader = new BufferedReader(new InputStreamReader(System.in)); System.out.println(); sha1 = MessageDigest.getInstance(); for (int i = 0; i < chain.length; i++) { X509Certificate cert = chain[i]; System.out.println(\" \" + (i + 1) + \" Subject \" + cert.getSubjectDN()); System.out.out.println(\" sha1 \" + toHexString(sha1.digest())); md5.update(cert.getEncoded()); System.out.println(\" md5 \" + toHexString(md5.digest())); System.out.println(); } System.out.println(\"Enter certificate 1]\"); String line = reader.readLine; int k; try { k = (line.length() == 0) ? 0 : Integer.parseInt(line) - 1; } catch (NumberFormatException e) { System.out.println(\"KeyStore not changed\"); return; }; out.close(); System.out.println(\"Added alias '\" + alias + \"'\"); }"}
{"time": "2021-01-20 10:53:08.350278", "n_pass": [768, 41, 41], "score": "0.9858", "loss": "0.0165", "code": "public static void main(String[] args) throws Exception {passphrase; if ((2)) { String[] c = args[0].split(c.length == 1) ? 443 : Integer.parseInt(c[1]); String p = (args.length == 1) ? \"changeit\" : args[1]; passphrase = p.separatorCharFile(System.getProperty(\"java.home\") + SEP + \"security\");  File(dir, \"jssecacerts\"); if (file.isFile()) { fileFile(dir, \"cacerts\"); } } (\"Loading KeyStore \" + file + \"...\"); InputStream(ks); X5 = (X509TrustManager) tmf.getTrustManagers()[0]; SavingTrustManager tm = new SavingTrustManagercontext.init(null, new TrustManager[] { tm }, null); SSLSocketFactory.println(\"Opening connection to \" ); socket.setSoTimeout(10000); try { System.out.println(\"Starting SSL handshake is already trusted\"); } catch (SSLException e) { System.out.println();} X509Certificate[] chain = tm.chain; if (chain == null) { Systemreturn; } BufferedReader reader = new BufferedReader(new InputStreamReader(System.in)); System.out.println(); sha1 = MessageDigest.getInstance(); for (int i = 0; i < chain.length; i++) { X509Certificate cert = chain[i]; System.out.println(\" \" + (i + 1) + \" Subject \" + cert.getSubjectDN()); System.out.out.println(\" sha1 \" + toHexString(sha1.digest())); md5.update(cert.getEncoded()); System.out.println(\" md5 \" + toHexString(md5.digest())); System.out.println(); } System.out.println(\"Enter certificate 1]\"); String line = reader.readLine; int k; try { k = (line.length() == 0) ? 0 : Integer.parseInt(line) - 1; } catch (NumberFormatException e) { System.out.println(\"KeyStore not changed\"); return; }; out.close(); System.out.println(\"Added alias '\" + alias + \"'\"); }"}
{"time": "2021-01-20 10:53:09.862993", "n_pass": [770, 42, 42], "score": "0.9939", "loss": "0.0077", "code": "public static void main(String[] args) throws Exception {passphrase; if ((2)) { String[] c = args[0].split(c.length == 1) ? 443 : Integer.parseInt(c[1]); String p = (args.length == 1) ? \"changeit\" : args[1]; passphrase = p.separatorCharFile(System.getProperty(\"java.home\") + SEP + \"security\");  File(dir, \"jssecacerts\"); if (file.isFile()) { fileFile(dir, \"cacerts\"); } } (\"Loading KeyStore \" + file + \"...\"); InputStream(ks); X5 = (X509TrustManager) tmf.getTrustManagers()[0]; SavingTrustManager tm = new SavingTrustManagercontext.init(null, new TrustManager[] { tm }, null); SSLSocketFactory.println(\"Opening\" ); socket.setSoTimeout(10000); try { System.out.println(\"Starting SSL handshake is already trusted\"); } catch (SSLException e) { System.out.println();} X509Certificate[] chain = tm.chain; if (chain == null) { Systemreturn; } BufferedReader reader = new BufferedReader(new InputStreamReader(System.in)); System.out.println(); sha1 = MessageDigest.getInstance(); for (int i = 0; i < chain.length; i++) { X509Certificate cert = chain[i]; System.out.println(\" \" + (i + 1) + \" Subject \" + cert.getSubjectDN()); System.out.out.println(\" sha1 \" + toHexString(sha1.digest())); md5.update(cert.getEncoded()); System.out.println(\" md5 \" + toHexString(md5.digest())); System.out.println(); } System.out.println(\"Enter certificate 1]\"); String line = reader.readLine; int k; try { k = (line.length() == 0) ? 0 : Integer.parseInt(line) - 1; } catch (NumberFormatException e) { System.out.println(\"KeyStore not changed\"); return; }; out.close(); System.out.println(\"Added alias '\" + alias + \"'\"); }"}
{"time": "2021-01-20 10:53:11.559800", "n_pass": [775, 43, 43], "score": "0.9841", "loss": "0.0172", "code": "public static void main(String[] args) throws Exception {passphrase; if ((2)) { String[] c = args[0].split(c.length == 1) ? 443 : Integer.parseInt(c[1]); String p = (args.length == 1) ? \"changeit\" : args[1]; passphrase = p.separatorCharFile(System.getProperty(\"java.home\") + SEP + \"security\");  File(dir, \"jssecacerts\"); if (file.isFile()) { fileFile(dir, \"cacerts\"); } } (\"Loading KeyStore \" + file + \"...\"); InputStream(ks); X5 = (X509TrustManager) tmf.getTrustManagers()[0]; SavingTrustManager tm = new SavingTrustManagercontext.init(null, new TrustManager[] { tm }, null); SSLSocketFactory.println(\"Opening\" ); socket.setSoTimeout(10000); try {println(\"Starting SSL handshake is already trusted\"); } catch (SSLException e) { System.out.println();} X509Certificate[] chain = tm.chain; if (chain == null) { Systemreturn; } BufferedReader reader = new BufferedReader(new InputStreamReader(System.in)); System.out.println(); sha1 = MessageDigest.getInstance(); for (int i = 0; i < chain.length; i++) { X509Certificate cert = chain[i]; System.out.println(\" \" + (i + 1) + \" Subject \" + cert.getSubjectDN()); System.out.out.println(\" sha1 \" + toHexString(sha1.digest())); md5.update(cert.getEncoded()); System.out.println(\" md5 \" + toHexString(md5.digest())); System.out.println(); } System.out.println(\"Enter certificate 1]\"); String line = reader.readLine; int k; try { k = (line.length() == 0) ? 0 : Integer.parseInt(line) - 1; } catch (NumberFormatException e) { System.out.println(\"KeyStore not changed\"); return; }; out.close(); System.out.println(\"Added alias '\" + alias + \"'\"); }"}
{"time": "2021-01-20 10:53:13.070565", "n_pass": [777, 44, 44], "score": "0.9984", "loss": "0.0018", "code": "public static void main(String[] args) throws Exception {passphrase; if ((2)) { String[] c = args[0].split(c.length == 1) ? 443 : Integer.parseInt(c[1]); String p = (args.length == 1) ? \"changeit\" : args[1]; passphrase = p.separatorCharFile(System.getProperty(\"java.home\") + SEP + \"security\");  File(dir, \"jssecacerts\"); if (file.isFile()) { fileFile(dir, \"cacerts\"); } } (\"Loading KeyStore \" + file + \"...\"); InputStream(ks); X5 = (X509TrustManager) tmf.getTrustManagers()[0]; SavingTrustManager tm = new SavingTrustManagercontext.init(null, new TrustManager[] { tm }, null); SSLSocketFactory.println(\"Opening\" ); socket.setSoTimeout(10000); try {println(\"Starting  already trusted\"); } catch (SSLException e) { System.out.println();} X509Certificate[] chain = tm.chain; if (chain == null) { Systemreturn; } BufferedReader reader = new BufferedReader(new InputStreamReader(System.in)); System.out.println(); sha1 = MessageDigest.getInstance(); for (int i = 0; i < chain.length; i++) { X509Certificate cert = chain[i]; System.out.println(\" \" + (i + 1) + \" Subject \" + cert.getSubjectDN()); System.out.out.println(\" sha1 \" + toHexString(sha1.digest())); md5.update(cert.getEncoded()); System.out.println(\" md5 \" + toHexString(md5.digest())); System.out.println(); } System.out.println(\"Enter certificate 1]\"); String line = reader.readLine; int k; try { k = (line.length() == 0) ? 0 : Integer.parseInt(line) - 1; } catch (NumberFormatException e) { System.out.println(\"KeyStore not changed\"); return; }; out.close(); System.out.println(\"Added alias '\" + alias + \"'\"); }"}
{"time": "2021-01-20 10:53:14.613692", "n_pass": [785, 45, 45], "score": "0.9671", "loss": "0.0424", "code": "public static void main(String[] args) throws Exception {passphrase; if ((2)) { String[] c = args[0].split(c.length == 1) ? 443 : Integer.parseInt(c[1]); String p = (args.length == 1) ? \"changeit\" : args[1]; passphrase = p.separatorCharFile(System.getProperty(\"java.home\") + SEP + \"security\");  File(dir, \"jssecacerts\"); if (file.isFile()) { fileFile(dir, \"cacerts\"); } } (\"Loading KeyStore \" + file + \"...\"); InputStream(ks); X5 = (X509TrustManager) tmf.getTrustManagers()[0]; SavingTrustManager tm = new SavingTrustManagercontext.init(null, new TrustManager[] { tm }, null); SSLSocketFactory.println(\"Opening\" ); socket.setSoTimeout(10000); try {println(\"Starting  already trusted\"); } catch (SSLException e) { System.out.println();} X509Certificate= tm.chain; if (chain == null) { Systemreturn; } BufferedReader reader = new BufferedReader(new InputStreamReader(System.in)); System.out.println(); sha1 = MessageDigest.getInstance(); for (int i = 0; i < chain.length; i++) { X509Certificate cert = chain[i]; System.out.println(\" \" + (i + 1) + \" Subject \" + cert.getSubjectDN()); System.out.out.println(\" sha1 \" + toHexString(sha1.digest())); md5.update(cert.getEncoded()); System.out.println(\" md5 \" + toHexString(md5.digest())); System.out.println(); } System.out.println(\"Enter certificate 1]\"); String line = reader.readLine; int k; try { k = (line.length() == 0) ? 0 : Integer.parseInt(line) - 1; } catch (NumberFormatException e) { System.out.println(\"KeyStore not changed\"); return; }; out.close(); System.out.println(\"Added alias '\" + alias + \"'\"); }"}
{"time": "2021-01-20 10:53:16.117254", "n_pass": [786, 46, 46], "score": "0.9936", "loss": "0.0073", "code": "public static void main(String[] args) throws Exception {passphrase; if ((2)) { String[] c = args[0].split(c.length == 1) ? 443 : Integer.parseInt(c[1]); String p = (args.length == 1) ? \"changeit\" : args[1]; passphrase = p.separatorCharFile(System.getProperty(\"java.home\") + SEP + \"security\");  File(dir, \"jssecacerts\"); if (file.isFile()) { fileFile(dir, \"cacerts\"); } } (\"Loading KeyStore \" + file + \"...\"); InputStream(ks); X5 = (X509TrustManager) tmf.getTrustManagers()[0]; SavingTrustManager tm = new SavingTrustManagercontext.init(null, new TrustManager[] { tm }, null); SSLSocketFactory.println(\"Opening\" ); socket.setSoTimeout(10000); try {println(\"Starting  already trusted\"); } catch (SSLException e) { System.out.println();} X509Certificate; if (chain == null) { Systemreturn; } BufferedReader reader = new BufferedReader(new InputStreamReader(System.in)); System.out.println(); sha1 = MessageDigest.getInstance(); for (int i = 0; i < chain.length; i++) { X509Certificate cert = chain[i]; System.out.println(\" \" + (i + 1) + \" Subject \" + cert.getSubjectDN()); System.out.out.println(\" sha1 \" + toHexString(sha1.digest())); md5.update(cert.getEncoded()); System.out.println(\" md5 \" + toHexString(md5.digest())); System.out.println(); } System.out.println(\"Enter certificate 1]\"); String line = reader.readLine; int k; try { k = (line.length() == 0) ? 0 : Integer.parseInt(line) - 1; } catch (NumberFormatException e) { System.out.println(\"KeyStore not changed\"); return; }; out.close(); System.out.println(\"Added alias '\" + alias + \"'\"); }"}
{"time": "2021-01-20 10:53:17.643424", "n_pass": [788, 47, 47], "score": "0.9836", "loss": "0.02", "code": "public static void main(String[] args) throws Exception {passphrase; if ((2)) { String[] c = args[0].split(c.length == 1) ? 443 : Integer.parseInt(c[1]); String p = (args.length == 1) ? \"changeit\" : args[1]; passphrase = p.separatorCharFile(System.getProperty(\"java.home\") + SEP + \"security\");  File(dir, \"jssecacerts\"); if (file.isFile()) { fileFile(dir, \"cacerts\"); } } (\"Loading KeyStore \" + file + \"...\"); InputStream(ks); X5 = (X509TrustManager) tmf.getTrustManagers()[0]; SavingTrustManager tm = new SavingTrustManagercontext.init(null, new TrustManager[] { tm }, null); SSLSocketFactory.println(\"Opening\" ); socket.setSoTimeout(10000); try {println(\"Starting  already trusted\"); } catch (SSLException e) { System.out.println();} X509Certificate; if (null) { Systemreturn; } BufferedReader reader = new BufferedReader(new InputStreamReader(System.in)); System.out.println(); sha1 = MessageDigest.getInstance(); for (int i = 0; i < chain.length; i++) { X509Certificate cert = chain[i]; System.out.println(\" \" + (i + 1) + \" Subject \" + cert.getSubjectDN()); System.out.out.println(\" sha1 \" + toHexString(sha1.digest())); md5.update(cert.getEncoded()); System.out.println(\" md5 \" + toHexString(md5.digest())); System.out.println(); } System.out.println(\"Enter certificate 1]\"); String line = reader.readLine; int k; try { k = (line.length() == 0) ? 0 : Integer.parseInt(line) - 1; } catch (NumberFormatException e) { System.out.println(\"KeyStore not changed\"); return; }; out.close(); System.out.println(\"Added alias '\" + alias + \"'\"); }"}
{"time": "2021-01-20 10:53:19.185486", "n_pass": [795, 48, 48], "score": "0.9627", "loss": "0.0527", "code": "public static void main(String[] args) throws Exception {passphrase; if ((2)) { String[] c = args[0].split(c.length == 1) ? 443 : Integer.parseInt(c[1]); String p = (args.length == 1) ? \"changeit\" : args[1]; passphrase = p.separatorCharFile(System.getProperty(\"java.home\") + SEP + \"security\");  File(dir, \"jssecacerts\"); if (file.isFile()) { fileFile(dir, \"cacerts\"); } } (\"Loading KeyStore \" + file + \"...\"); InputStream(ks); X5 = (X509TrustManager) tmf.getTrustManagers()[0]; SavingTrustManager tm = new SavingTrustManagercontext.init(null, new TrustManager[] { tm }, null); SSLSocketFactory.println(\"Opening\" ); socket.setSoTimeout(10000); try {println(\"Starting  already trusted\"); } catch (SSLException e) { System.out.println();} X509Certificate; if (null) { Systemreturn; } BufferedReader reader = new BufferedReader(new InputStreamReader(System.in)).println(); sha1 = MessageDigest.getInstance(); for (int i = 0; i < chain.length; i++) { X509Certificate cert = chain[i]; System.out.println(\" \" + (i + 1) + \" Subject \" + cert.getSubjectDN()); System.out.out.println(\" sha1 \" + toHexString(sha1.digest())); md5.update(cert.getEncoded()); System.out.println(\" md5 \" + toHexString(md5.digest())); System.out.println(); } System.out.println(\"Enter certificate 1]\"); String line = reader.readLine; int k; try { k = (line.length() == 0) ? 0 : Integer.parseInt(line) - 1; } catch (NumberFormatException e) { System.out.println(\"KeyStore not changed\"); return; }; out.close(); System.out.println(\"Added alias '\" + alias + \"'\"); }"}
{"time": "2021-01-20 10:53:20.693349", "n_pass": [797, 49, 49], "score": "0.9807", "loss": "0.0249", "code": "public static void main(String[] args) throws Exception {passphrase; if ((2)) { String[] c = args[0].split(c.length == 1) ? 443 : Integer.parseInt(c[1]); String p = (args.length == 1) ? \"changeit\" : args[1]; passphrase = p.separatorCharFile(System.getProperty(\"java.home\") + SEP + \"security\");  File(dir, \"jssecacerts\"); if (file.isFile()) { fileFile(dir, \"cacerts\"); } } (\"Loading KeyStore \" + file + \"...\"); InputStream(ks); X5 = (X509TrustManager) tmf.getTrustManagers()[0]; SavingTrustManager tm = new SavingTrustManagercontext.init(null, new TrustManager[] { tm }, null); SSLSocketFactory.println(\"Opening\" ); socket.setSoTimeout(10000); try {println(\"Starting  already trusted\"); } catch (SSLException e) { System.out.println();} X509Certificate; if (null) { Systemreturn; } BufferedReader reader = new BufferedReader(new InputStreamReader(System.in)).println(); MessageDigest.getInstance(); for (int i = 0; i < chain.length; i++) { X509Certificate cert = chain[i]; System.out.println(\" \" + (i + 1) + \" Subject \" + cert.getSubjectDN()); System.out.out.println(\" sha1 \" + toHexString(sha1.digest())); md5.update(cert.getEncoded()); System.out.println(\" md5 \" + toHexString(md5.digest())); System.out.println(); } System.out.println(\"Enter certificate 1]\"); String line = reader.readLine; int k; try { k = (line.length() == 0) ? 0 : Integer.parseInt(line) - 1; } catch (NumberFormatException e) { System.out.println(\"KeyStore not changed\"); return; }; out.close(); System.out.println(\"Added alias '\" + alias + \"'\"); }"}
{"time": "2021-01-20 10:53:22.233971", "n_pass": [805, 50, 50], "score": "0.9887", "loss": "0.0141", "code": "public static void main(String[] args) throws Exception {passphrase; if ((2)) { String[] c = args[0].split(c.length == 1) ? 443 : Integer.parseInt(c[1]); String p = (args.length == 1) ? \"changeit\" : args[1]; passphrase = p.separatorCharFile(System.getProperty(\"java.home\") + SEP + \"security\");  File(dir, \"jssecacerts\"); if (file.isFile()) { fileFile(dir, \"cacerts\"); } } (\"Loading KeyStore \" + file + \"...\"); InputStream(ks); X5 = (X509TrustManager) tmf.getTrustManagers()[0]; SavingTrustManager tm = new SavingTrustManagercontext.init(null, new TrustManager[] { tm }, null); SSLSocketFactory.println(\"Opening\" ); socket.setSoTimeout(10000); try {println(\"Starting  already trusted\"); } catch (SSLException e) { System.out.println();} X509Certificate; if (null) { Systemreturn; } BufferedReader reader = new BufferedReader(new InputStreamReader(System.in)).println(); MessageDigest.getInstance(); for (int i = 0; i < chain.length; i++) { X509chain[i]; System.out.println(\" \" + (i + 1) + \" Subject \" + cert.getSubjectDN()); System.out.out.println(\" sha1 \" + toHexString(sha1.digest())); md5.update(cert.getEncoded()); System.out.println(\" md5 \" + toHexString(md5.digest())); System.out.println(); } System.out.println(\"Enter certificate 1]\"); String line = reader.readLine; int k; try { k = (line.length() == 0) ? 0 : Integer.parseInt(line) - 1; } catch (NumberFormatException e) { System.out.println(\"KeyStore not changed\"); return; }; out.close(); System.out.println(\"Added alias '\" + alias + \"'\"); }"}
{"time": "2021-01-20 10:53:23.730470", "n_pass": [806, 51, 51], "score": "0.9917", "loss": "0.0093", "code": "public static void main(String[] args) throws Exception {passphrase; if ((2)) { String[] c = args[0].split(c.length == 1) ? 443 : Integer.parseInt(c[1]); String p = (args.length == 1) ? \"changeit\" : args[1]; passphrase = p.separatorCharFile(System.getProperty(\"java.home\") + SEP + \"security\");  File(dir, \"jssecacerts\"); if (file.isFile()) { fileFile(dir, \"cacerts\"); } } (\"Loading KeyStore \" + file + \"...\"); InputStream(ks); X5 = (X509TrustManager) tmf.getTrustManagers()[0]; SavingTrustManager tm = new SavingTrustManagercontext.init(null, new TrustManager[] { tm }, null); SSLSocketFactory.println(\"Opening\" ); socket.setSoTimeout(10000); try {println(\"Starting  already trusted\"); } catch (SSLException e) { System.out.println();} X509Certificate; if (null) { Systemreturn; } BufferedReader reader = new BufferedReader(new InputStreamReader(System.in)).println(); MessageDigest.getInstance(); for (int i = 0; i < chain.length; i++) { X509System.out.println(\" \" + (i + 1) + \" Subject \" + cert.getSubjectDN()); System.out.out.println(\" sha1 \" + toHexString(sha1.digest())); md5.update(cert.getEncoded()); System.out.println(\" md5 \" + toHexString(md5.digest())); System.out.println(); } System.out.println(\"Enter certificate 1]\"); String line = reader.readLine; int k; try { k = (line.length() == 0) ? 0 : Integer.parseInt(line) - 1; } catch (NumberFormatException e) { System.out.println(\"KeyStore not changed\"); return; }; out.close(); System.out.println(\"Added alias '\" + alias + \"'\"); }"}
{"time": "2021-01-20 10:53:25.252702", "n_pass": [808, 52, 52], "score": "0.9946", "loss": "0.0062", "code": "public static void main(String[] args) throws Exception {passphrase; if ((2)) { String[] c = args[0].split(c.length == 1) ? 443 : Integer.parseInt(c[1]); String p = (args.length == 1) ? \"changeit\" : args[1]; passphrase = p.separatorCharFile(System.getProperty(\"java.home\") + SEP + \"security\");  File(dir, \"jssecacerts\"); if (file.isFile()) { fileFile(dir, \"cacerts\"); } } (\"Loading KeyStore \" + file + \"...\"); InputStream(ks); X5 = (X509TrustManager) tmf.getTrustManagers()[0]; SavingTrustManager tm = new SavingTrustManagercontext.init(null, new TrustManager[] { tm }, null); SSLSocketFactory.println(\"Opening\" ); socket.setSoTimeout(10000); try {println(\"Starting  already trusted\"); } catch (SSLException e) { System.out.println();} X509Certificate; if (null) { Systemreturn; } BufferedReader reader = new BufferedReader(new InputStreamReader(System.in)).println(); MessageDigest.getInstance(); for (int i = 0; i < chain.length; i++) { X509System.out.println((i + 1) + \" Subject \" + cert.getSubjectDN()); System.out.out.println(\" sha1 \" + toHexString(sha1.digest())); md5.update(cert.getEncoded()); System.out.println(\" md5 \" + toHexString(md5.digest())); System.out.println(); } System.out.println(\"Enter certificate 1]\"); String line = reader.readLine; int k; try { k = (line.length() == 0) ? 0 : Integer.parseInt(line) - 1; } catch (NumberFormatException e) { System.out.println(\"KeyStore not changed\"); return; }; out.close(); System.out.println(\"Added alias '\" + alias + \"'\"); }"}
{"time": "2021-01-20 10:53:26.845058", "n_pass": [825, 53, 53], "score": "0.9781", "loss": "0.0303", "code": "public static void main(String[] args) throws Exception {passphrase; if ((2)) { String[] c = args[0].split(c.length == 1) ? 443 : Integer.parseInt(c[1]); String p = (args.length == 1) ? \"changeit\" : args[1]; passphrase = p.separatorCharFile(System.getProperty(\"java.home\") + SEP + \"security\");  File(dir, \"jssecacerts\"); if (file.isFile()) { fileFile(dir, \"cacerts\"); } } (\"Loading KeyStore \" + file + \"...\"); InputStream(ks); X5 = (X509TrustManager) tmf.getTrustManagers()[0]; SavingTrustManager tm = new SavingTrustManagercontext.init(null, new TrustManager[] { tm }, null); SSLSocketFactory.println(\"Opening\" ); socket.setSoTimeout(10000); try {println(\"Starting  already trusted\"); } catch (SSLException e) { System.out.println();} X509Certificate; if (null) { Systemreturn; } BufferedReader reader = new BufferedReader(new InputStreamReader(System.in)).println(); MessageDigest.getInstance(); for (int i = 0; i < chain.length; i++) { X509System.out.println((i + 1) + \" Subject \" + cert.getSubjectDN()); System.out.out.println(\" sha1 \" + toHexString(sha1.digest())); md5.update(cert.getEncoded()); System.out.println(\" md5 \" + toHexString(md5.digest())); System; } System.out.println(\"Enter certificate 1]\"); String line = reader.readLine; int k; try { k = (line.length() == 0) ? 0 : Integer.parseInt(line) - 1; } catch (NumberFormatException e) { System.out.println(\"KeyStore not changed\"); return; }; out.close(); System.out.println(\"Added alias '\" + alias + \"'\"); }"}
{"time": "2021-01-20 10:53:28.373996", "n_pass": [830, 54, 54], "score": "0.9573", "loss": "0.0488", "code": "public static void main(String[] args) throws Exception {passphrase; if ((2)) { String[] c = args[0].split(c.length == 1) ? 443 : Integer.parseInt(c[1]); String p = (args.length == 1) ? \"changeit\" : args[1]; passphrase = p.separatorCharFile(System.getProperty(\"java.home\") + SEP + \"security\");  File(dir, \"jssecacerts\"); if (file.isFile()) { fileFile(dir, \"cacerts\"); } } (\"Loading KeyStore \" + file + \"...\"); InputStream(ks); X5 = (X509TrustManager) tmf.getTrustManagers()[0]; SavingTrustManager tm = new SavingTrustManagercontext.init(null, new TrustManager[] { tm }, null); SSLSocketFactory.println(\"Opening\" ); socket.setSoTimeout(10000); try {println(\"Starting  already trusted\"); } catch (SSLException e) { System.out.println();} X509Certificate; if (null) { Systemreturn; } BufferedReader reader = new BufferedReader(new InputStreamReader(System.in)).println(); MessageDigest.getInstance(); for (int i = 0; i < chain.length; i++) { X509System.out.println((i + 1) + \" Subject \" + cert.getSubjectDN()); System.out.out.println(\" sha1 \" + toHexString(sha1.digest())); md5.update(cert.getEncoded()); System.out.println(\" md5 \" + toHexString(md5.digest())); System; } System.out.println(\"Enter certificate 1]\"); String line; int k; try { k = (line.length() == 0) ? 0 : Integer.parseInt(line) - 1; } catch (NumberFormatException e) { System.out.println(\"KeyStore not changed\"); return; }; out.close(); System.out.println(\"Added alias '\" + alias + \"'\"); }"}
{"time": "2021-01-20 10:53:31.018667", "n_pass": [915, 55, 55], "score": "0.9804", "loss": "0.0222", "code": "public static void main(String[] args) throws Exception {passphrase; if ((2)) { String[] c = args[0].split(c.length == 1) ? 443 : Integer.parseInt(c[1]); String p = (args.length == 1) ? \"changeit\" : args[1]; passphrase = p.separatorCharFile(System.getProperty(\"java.home\") + SEP + \"security\");  File(dir, \"jssecacerts\"); if (file.isFile()) { fileFile(dir, \"cacerts\"); } } (\"Loading KeyStore \" + file + \"...\"); InputStream(ks); X5 = (X509TrustManager) tmf.getTrustManagers()[0]; SavingTrustManager tm = new SavingTrustManagercontext.init(null, new TrustManager[] { tm }, null); SSLSocketFactory.println(\"Opening\" ); socket.setSoTimeout(10000); try {println(\"Starting  already trusted\"); } catch (SSLException e) { System.out.println();} ; if (null) { Systemreturn; } BufferedReader reader = new BufferedReader(new InputStreamReader(System.in)).println(); MessageDigest.getInstance(); for (int i = 0; i < chain.length; i++) { X509System.out.println((i + 1) + \" Subject \" + cert.getSubjectDN()); System.out.out.println(\" sha1 \" + toHexString(sha1.digest())); md5.update(cert.getEncoded()); System.out.println(\" md5 \" + toHexString(md5.digest())); System; } System.out.println(\"Enter certificate 1]\"); String line; int k; try { k = (line.length() == 0) ? 0 : Integer.parseInt(line) - 1; } catch (NumberFormatException e) { System.out.println(\"KeyStore not changed\"); return; }; out.close(); System.out.println(\"Added alias '\" + alias + \"'\"); }"}
{"time": "2021-01-20 10:53:35.138172", "n_pass": [1279, 56, 56], "score": "0.9975", "loss": "0.0029", "code": "public static void main(String[] args) throws Exception {passphrase; if ((2)) { String[] c = args[0].split(c.length == 1) ? 443 : Integer.parseInt(c[1]); String p = (args.length == 1) ? \"changeit\" : args[1]; passphrase = p.separatorCharFile(System.getProperty(\"java.home\") + SEP + \"security\");  File(dir, \"jssecacerts\"); if (file.isFile()) { fileFile(dir, \"cacerts\"); } } (\"Loading KeyStore \" + file + \"...\"); InputStream(ks); X5 = (X509TrustManager) tmf.getTrustManagers()[0]; SavingTrustManager tm = new SavingTrustManagercontext.init(null, new TrustManager[] { tm }, null); SSLSocketFactory.println(\"Opening\" ); socket.setSoTimeout(10000); try {println(\"Starting  already trusted\"); } catch (SSLException e) { System.out.println();}if (null) { Systemreturn; } BufferedReader reader = new BufferedReader(new InputStreamReader(System.in)).println(); MessageDigest.getInstance(); for (int i = 0; i < chain.length; i++) { X509System.out.println((i + 1) + \" Subject \" + cert.getSubjectDN()); System.out.out.println(\" sha1 \" + toHexString(sha1.digest())); md5.update(cert.getEncoded()); System.out.println(\" md5 \" + toHexString(md5.digest())); System; } System.out.println(\"Enter certificate 1]\"); String line; int k; try { k = (line.length() == 0) ? 0 : Integer.parseInt(line) - 1; } catch (NumberFormatException e) { System.out.println(\"KeyStore not changed\"); return; }; out.close(); System.out.println(\"Added alias '\" + alias + \"'\"); }"}
{"time": "2021-01-20 10:53:36.665697", "n_pass": [1285, 57, 57], "score": "0.9235", "loss": "0.1517", "code": "public static void main(String[] args) throws Exception {passphrase; if ((2)) { String[] c = args[0].split(c.length == 1) ? 443 : Integer.parseInt(c[1]); String p = (args.length == 1) ? \"changeit\" : args[1]; passphrase = p.separatorCharFile(System.getProperty(\"java.home\") + SEP + \"security\");  File(dir, \"jssecacerts\"); if (file.isFile()) { fileFile(dir, \"cacerts\"); } } (\"Loading KeyStore \" + file + \"...\"); InputStream(ks); X5 = (X509TrustManager) tmf.getTrustManagers()[0]; SavingTrustManager tm = new SavingTrustManagercontext.init(null, new TrustManager[] { tm }, null); SSLSocketFactory.println(\"Opening\" ); socket.setSoTimeout(10000); try {println(\"Starting  already trusted\"); } catch (SSLException e) { System.out.println();}if (null) { Systemreturn; } BufferedReader= new BufferedReader(new InputStreamReader(System.in)).println(); MessageDigest.getInstance(); for (int i = 0; i < chain.length; i++) { X509System.out.println((i + 1) + \" Subject \" + cert.getSubjectDN()); System.out.out.println(\" sha1 \" + toHexString(sha1.digest())); md5.update(cert.getEncoded()); System.out.println(\" md5 \" + toHexString(md5.digest())); System; } System.out.println(\"Enter certificate 1]\"); String line; int k; try { k = (line.length() == 0) ? 0 : Integer.parseInt(line) - 1; } catch (NumberFormatException e) { System.out.println(\"KeyStore not changed\"); return; }; out.close(); System.out.println(\"Added alias '\" + alias + \"'\"); }"}
{"time": "2021-01-20 10:53:38.171635", "n_pass": [1288, 58, 58], "score": "0.9785", "loss": "0.0309", "code": "public static void main(String[] args) throws Exception {passphrase; if ((2)) { String[] c = args[0].split(c.length == 1) ? 443 : Integer.parseInt(c[1]); String p = (args.length == 1) ? \"changeit\" : args[1]; passphrase = p.separatorCharFile(System.getProperty(\"java.home\") + SEP + \"security\");  File(dir, \"jssecacerts\"); if (file.isFile()) { fileFile(dir, \"cacerts\"); } } (\"Loading KeyStore \" + file + \"...\"); InputStream(ks); X5 = (X509TrustManager) tmf.getTrustManagers()[0]; SavingTrustManager tm = new SavingTrustManagercontext.init(null, new TrustManager[] { tm }, null); SSLSocketFactory.println(\"Opening\" ); socket.setSoTimeout(10000); try {println(\"Starting  already trusted\"); } catch (SSLException e) { System.out.println();}if (null) { Systemreturn; } BufferedReader= new BufferedReader((System.in)).println(); MessageDigest.getInstance(); for (int i = 0; i < chain.length; i++) { X509System.out.println((i + 1) + \" Subject \" + cert.getSubjectDN()); System.out.out.println(\" sha1 \" + toHexString(sha1.digest())); md5.update(cert.getEncoded()); System.out.println(\" md5 \" + toHexString(md5.digest())); System; } System.out.println(\"Enter certificate 1]\"); String line; int k; try { k = (line.length() == 0) ? 0 : Integer.parseInt(line) - 1; } catch (NumberFormatException e) { System.out.println(\"KeyStore not changed\"); return; }; out.close(); System.out.println(\"Added alias '\" + alias + \"'\"); }"}
{"time": "2021-01-20 10:53:39.769241", "n_pass": [1300, 59, 59], "score": "0.9821", "loss": "0.0251", "code": "public static void main(String[] args) throws Exception {passphrase; if ((2)) { String[] c = args[0].split(c.length == 1) ? 443 : Integer.parseInt(c[1]); String p = (args.length == 1) ? \"changeit\" : args[1]; passphrase = p.separatorCharFile(System.getProperty(\"java.home\") + SEP + \"security\");  File(dir, \"jssecacerts\"); if (file.isFile()) { fileFile(dir, \"cacerts\"); } } (\"Loading KeyStore \" + file + \"...\"); InputStream(ks); X5 = (X509TrustManager) tmf.getTrustManagers()[0]; SavingTrustManager tm = new SavingTrustManagercontext.init(null, new TrustManager[] { tm }, null); SSLSocketFactory.println(\"Opening\" ); socket.setSoTimeout(10000); try {println(\"Starting  already trusted\"); } catch (SSLException e) { System.out.println();}if (null) { Systemreturn; } BufferedReader= new BufferedReader((System.in)).println(); MessageDigest.getInstance(); for (int i = 0; i .length; i++) { X509System.out.println((i + 1) + \" Subject \" + cert.getSubjectDN()); System.out.out.println(\" sha1 \" + toHexString(sha1.digest())); md5.update(cert.getEncoded()); System.out.println(\" md5 \" + toHexString(md5.digest())); System; } System.out.println(\"Enter certificate 1]\"); String line; int k; try { k = (line.length() == 0) ? 0 : Integer.parseInt(line) - 1; } catch (NumberFormatException e) { System.out.println(\"KeyStore not changed\"); return; }; out.close(); System.out.println(\"Added alias '\" + alias + \"'\"); }"}
{"time": "2021-01-20 10:53:41.309339", "n_pass": [1305, 60, 60], "score": "0.9945", "loss": "0.0068", "code": "public static void main(String[] args) throws Exception {passphrase; if ((2)) { String[] c = args[0].split(c.length == 1) ? 443 : Integer.parseInt(c[1]); String p = (args.length == 1) ? \"changeit\" : args[1]; passphrase = p.separatorCharFile(System.getProperty(\"java.home\") + SEP + \"security\");  File(dir, \"jssecacerts\"); if (file.isFile()) { fileFile(dir, \"cacerts\"); } } (\"Loading KeyStore \" + file + \"...\"); InputStream(ks); X5 = (X509TrustManager) tmf.getTrustManagers()[0]; SavingTrustManager tm = new SavingTrustManagercontext.init(null, new TrustManager[] { tm }, null); SSLSocketFactory.println(\"Opening\" ); socket.setSoTimeout(10000); try {println(\"Starting  already trusted\"); } catch (SSLException e) { System.out.println();}if (null) { Systemreturn; } BufferedReader= new BufferedReader((System.in)).println(); MessageDigest.getInstance(); for (int i = 0; i .length; i++) { XSystem.out.println((i + 1) + \" Subject \" + cert.getSubjectDN()); System.out.out.println(\" sha1 \" + toHexString(sha1.digest())); md5.update(cert.getEncoded()); System.out.println(\" md5 \" + toHexString(md5.digest())); System; } System.out.println(\"Enter certificate 1]\"); String line; int k; try { k = (line.length() == 0) ? 0 : Integer.parseInt(line) - 1; } catch (NumberFormatException e) { System.out.println(\"KeyStore not changed\"); return; }; out.close(); System.out.println(\"Added alias '\" + alias + \"'\"); }"}
{"time": "2021-01-20 10:53:42.807594", "n_pass": [1306, 61, 61], "score": "0.9721", "loss": "0.0372", "code": "public static void main(String[] args) throws Exception {passphrase; if ((2)) { String[] c = args[0].split(c.length == 1) ? 443 : Integer.parseInt(c[1]); String p = (args.length == 1) ? \"changeit\" : args[1]; passphrase = p.separatorCharFile(System.getProperty(\"java.home\") + SEP + \"security\");  File(dir, \"jssecacerts\"); if (file.isFile()) { fileFile(dir, \"cacerts\"); } } (\"Loading KeyStore \" + file + \"...\"); InputStream(ks); X5 = (X509TrustManager) tmf.getTrustManagers()[0]; SavingTrustManager tm = new SavingTrustManagercontext.init(null, new TrustManager[] { tm }, null); SSLSocketFactory.println(\"Opening\" ); socket.setSoTimeout(10000); try {println(\"Starting  already trusted\"); } catch (SSLException e) { System.out.println();}if (null) { Systemreturn; } BufferedReader= new BufferedReader((System.in)).println(); MessageDigest.getInstance(); for (int i = 0; i .length; i++) { X.println((i + 1) + \" Subject \" + cert.getSubjectDN()); System.out.out.println(\" sha1 \" + toHexString(sha1.digest())); md5.update(cert.getEncoded()); System.out.println(\" md5 \" + toHexString(md5.digest())); System; } System.out.println(\"Enter certificate 1]\"); String line; int k; try { k = (line.length() == 0) ? 0 : Integer.parseInt(line) - 1; } catch (NumberFormatException e) { System.out.println(\"KeyStore not changed\"); return; }; out.close(); System.out.println(\"Added alias '\" + alias + \"'\"); }"}
{"time": "2021-01-20 10:53:44.314226", "n_pass": [1309, 62, 62], "score": "0.9927", "loss": "0.0094", "code": "public static void main(String[] args) throws Exception {passphrase; if ((2)) { String[] c = args[0].split(c.length == 1) ? 443 : Integer.parseInt(c[1]); String p = (args.length == 1) ? \"changeit\" : args[1]; passphrase = p.separatorCharFile(System.getProperty(\"java.home\") + SEP + \"security\");  File(dir, \"jssecacerts\"); if (file.isFile()) { fileFile(dir, \"cacerts\"); } } (\"Loading KeyStore \" + file + \"...\"); InputStream(ks); X5 = (X509TrustManager) tmf.getTrustManagers()[0]; SavingTrustManager tm = new SavingTrustManagercontext.init(null, new TrustManager[] { tm }, null); SSLSocketFactory.println(\"Opening\" ); socket.setSoTimeout(10000); try {println(\"Starting  already trusted\"); } catch (SSLException e) { System.out.println();}if (null) { Systemreturn; } BufferedReader= new BufferedReader((System.in)).println(); MessageDigest.getInstance(); for (int i = 0; i .length; i++) { X.println((i ) + \" Subject \" + cert.getSubjectDN()); System.out.out.println(\" sha1 \" + toHexString(sha1.digest())); md5.update(cert.getEncoded()); System.out.println(\" md5 \" + toHexString(md5.digest())); System; } System.out.println(\"Enter certificate 1]\"); String line; int k; try { k = (line.length() == 0) ? 0 : Integer.parseInt(line) - 1; } catch (NumberFormatException e) { System.out.println(\"KeyStore not changed\"); return; }; out.close(); System.out.println(\"Added alias '\" + alias + \"'\"); }"}
{"time": "2021-01-20 10:53:45.837493", "n_pass": [1316, 63, 63], "score": "0.9863", "loss": "0.0202", "code": "public static void main(String[] args) throws Exception {passphrase; if ((2)) { String[] c = args[0].split(c.length == 1) ? 443 : Integer.parseInt(c[1]); String p = (args.length == 1) ? \"changeit\" : args[1]; passphrase = p.separatorCharFile(System.getProperty(\"java.home\") + SEP + \"security\");  File(dir, \"jssecacerts\"); if (file.isFile()) { fileFile(dir, \"cacerts\"); } } (\"Loading KeyStore \" + file + \"...\"); InputStream(ks); X5 = (X509TrustManager) tmf.getTrustManagers()[0]; SavingTrustManager tm = new SavingTrustManagercontext.init(null, new TrustManager[] { tm }, null); SSLSocketFactory.println(\"Opening\" ); socket.setSoTimeout(10000); try {println(\"Starting  already trusted\"); } catch (SSLException e) { System.out.println();}if (null) { Systemreturn; } BufferedReader= new BufferedReader((System.in)).println(); MessageDigest.getInstance(); for (int i = 0; i .length; i++) { X.println((i ) + \" Subject \" + cert.getSubjectDN()).out.out.println(\" sha1 \" + toHexString(sha1.digest())); md5.update(cert.getEncoded()); System.out.println(\" md5 \" + toHexString(md5.digest())); System; } System.out.println(\"Enter certificate 1]\"); String line; int k; try { k = (line.length() == 0) ? 0 : Integer.parseInt(line) - 1; } catch (NumberFormatException e) { System.out.println(\"KeyStore not changed\"); return; }; out.close(); System.out.println(\"Added alias '\" + alias + \"'\"); }"}
{"time": "2021-01-20 10:53:47.359342", "n_pass": [1320, 64, 64], "score": "0.9771", "loss": "0.0319", "code": "public static void main(String[] args) throws Exception {passphrase; if ((2)) { String[] c = args[0].split(c.length == 1) ? 443 : Integer.parseInt(c[1]); String p = (args.length == 1) ? \"changeit\" : args[1]; passphrase = p.separatorCharFile(System.getProperty(\"java.home\") + SEP + \"security\");  File(dir, \"jssecacerts\"); if (file.isFile()) { fileFile(dir, \"cacerts\"); } } (\"Loading KeyStore \" + file + \"...\"); InputStream(ks); X5 = (X509TrustManager) tmf.getTrustManagers()[0]; SavingTrustManager tm = new SavingTrustManagercontext.init(null, new TrustManager[] { tm }, null); SSLSocketFactory.println(\"Opening\" ); socket.setSoTimeout(10000); try {println(\"Starting  already trusted\"); } catch (SSLException e) { System.out.println();}if (null) { Systemreturn; } BufferedReader= new BufferedReader((System.in)).println(); MessageDigest.getInstance(); for (int i = 0; i .length; i++) { X.println((i ) + \" Subject \" + cert.getSubjectDN()).out.out.println(\" \" + toHexString(sha1.digest())); md5.update(cert.getEncoded()); System.out.println(\" md5 \" + toHexString(md5.digest())); System; } System.out.println(\"Enter certificate 1]\"); String line; int k; try { k = (line.length() == 0) ? 0 : Integer.parseInt(line) - 1; } catch (NumberFormatException e) { System.out.println(\"KeyStore not changed\"); return; }; out.close(); System.out.println(\"Added alias '\" + alias + \"'\"); }"}
{"time": "2021-01-20 10:53:48.870170", "n_pass": [1323, 65, 65], "score": "0.994", "loss": "0.0079", "code": "public static void main(String[] args) throws Exception {passphrase; if ((2)) { String[] c = args[0].split(c.length == 1) ? 443 : Integer.parseInt(c[1]); String p = (args.length == 1) ? \"changeit\" : args[1]; passphrase = p.separatorCharFile(System.getProperty(\"java.home\") + SEP + \"security\");  File(dir, \"jssecacerts\"); if (file.isFile()) { fileFile(dir, \"cacerts\"); } } (\"Loading KeyStore \" + file + \"...\"); InputStream(ks); X5 = (X509TrustManager) tmf.getTrustManagers()[0]; SavingTrustManager tm = new SavingTrustManagercontext.init(null, new TrustManager[] { tm }, null); SSLSocketFactory.println(\"Opening\" ); socket.setSoTimeout(10000); try {println(\"Starting  already trusted\"); } catch (SSLException e) { System.out.println();}if (null) { Systemreturn; } BufferedReader= new BufferedReader((System.in)).println(); MessageDigest.getInstance(); for (int i = 0; i .length; i++) { X.println((i ) + \" Subject \" + cert.getSubjectDN()).out.out.println(\" \" + toHexString(digest())); md5.update(cert.getEncoded()); System.out.println(\" md5 \" + toHexString(md5.digest())); System; } System.out.println(\"Enter certificate 1]\"); String line; int k; try { k = (line.length() == 0) ? 0 : Integer.parseInt(line) - 1; } catch (NumberFormatException e) { System.out.println(\"KeyStore not changed\"); return; }; out.close(); System.out.println(\"Added alias '\" + alias + \"'\"); }"}
{"time": "2021-01-20 10:53:50.371212", "n_pass": [1324, 66, 66], "score": "0.9328", "loss": "0.0935", "code": "public static void main(String[] args) throws Exception {passphrase; if ((2)) { String[] c = args[0].split(c.length == 1) ? 443 : Integer.parseInt(c[1]); String p = (args.length == 1) ? \"changeit\" : args[1]; passphrase = p.separatorCharFile(System.getProperty(\"java.home\") + SEP + \"security\");  File(dir, \"jssecacerts\"); if (file.isFile()) { fileFile(dir, \"cacerts\"); } } (\"Loading KeyStore \" + file + \"...\"); InputStream(ks); X5 = (X509TrustManager) tmf.getTrustManagers()[0]; SavingTrustManager tm = new SavingTrustManagercontext.init(null, new TrustManager[] { tm }, null); SSLSocketFactory.println(\"Opening\" ); socket.setSoTimeout(10000); try {println(\"Starting  already trusted\"); } catch (SSLException e) { System.out.println();}if (null) { Systemreturn; } BufferedReader= new BufferedReader((System.in)).println(); MessageDigest.getInstance(); for (int i = 0; i .length; i++) { X.println((i ) + \" Subject \" + cert.getSubjectDN()).out.out.println(\" \" + toHexString()); md5.update(cert.getEncoded()); System.out.println(\" md5 \" + toHexString(md5.digest())); System; } System.out.println(\"Enter certificate 1]\"); String line; int k; try { k = (line.length() == 0) ? 0 : Integer.parseInt(line) - 1; } catch (NumberFormatException e) { System.out.println(\"KeyStore not changed\"); return; }; out.close(); System.out.println(\"Added alias '\" + alias + \"'\"); }"}
{"time": "2021-01-20 10:53:51.895454", "n_pass": [1330, 67, 67], "score": "0.9413", "loss": "0.093", "code": "public static void main(String[] args) throws Exception {passphrase; if ((2)) { String[] c = args[0].split(c.length == 1) ? 443 : Integer.parseInt(c[1]); String p = (args.length == 1) ? \"changeit\" : args[1]; passphrase = p.separatorCharFile(System.getProperty(\"java.home\") + SEP + \"security\");  File(dir, \"jssecacerts\"); if (file.isFile()) { fileFile(dir, \"cacerts\"); } } (\"Loading KeyStore \" + file + \"...\"); InputStream(ks); X5 = (X509TrustManager) tmf.getTrustManagers()[0]; SavingTrustManager tm = new SavingTrustManagercontext.init(null, new TrustManager[] { tm }, null); SSLSocketFactory.println(\"Opening\" ); socket.setSoTimeout(10000); try {println(\"Starting  already trusted\"); } catch (SSLException e) { System.out.println();}if (null) { Systemreturn; } BufferedReader= new BufferedReader((System.in)).println(); MessageDigest.getInstance(); for (int i = 0; i .length; i++) { X.println((i ) + \" Subject \" + cert.getSubjectDN()).out.out.println(\" \" + toHexString()); md5.update(cert.getEncoded()).out.println(\" md5 \" + toHexString(md5.digest())); System; } System.out.println(\"Enter certificate 1]\"); String line; int k; try { k = (line.length() == 0) ? 0 : Integer.parseInt(line) - 1; } catch (NumberFormatException e) { System.out.println(\"KeyStore not changed\"); return; }; out.close(); System.out.println(\"Added alias '\" + alias + \"'\"); }"}
{"time": "2021-01-20 10:53:53.396559", "n_pass": [1333, 68, 68], "score": "0.9954", "loss": "0.0059", "code": "public static void main(String[] args) throws Exception {passphrase; if ((2)) { String[] c = args[0].split(c.length == 1) ? 443 : Integer.parseInt(c[1]); String p = (args.length == 1) ? \"changeit\" : args[1]; passphrase = p.separatorCharFile(System.getProperty(\"java.home\") + SEP + \"security\");  File(dir, \"jssecacerts\"); if (file.isFile()) { fileFile(dir, \"cacerts\"); } } (\"Loading KeyStore \" + file + \"...\"); InputStream(ks); X5 = (X509TrustManager) tmf.getTrustManagers()[0]; SavingTrustManager tm = new SavingTrustManagercontext.init(null, new TrustManager[] { tm }, null); SSLSocketFactory.println(\"Opening\" ); socket.setSoTimeout(10000); try {println(\"Starting  already trusted\"); } catch (SSLException e) { System.out.println();}if (null) { Systemreturn; } BufferedReader= new BufferedReader((System.in)).println(); MessageDigest.getInstance(); for (int i = 0; i .length; i++) { X.println((i ) + \" Subject \" + cert.getSubjectDN()).out.out.println(\" \" + toHexString()); md5.update(cert.getEncoded()).out.println(\" \" + toHexString(md5.digest())); System; } System.out.println(\"Enter certificate 1]\"); String line; int k; try { k = (line.length() == 0) ? 0 : Integer.parseInt(line) - 1; } catch (NumberFormatException e) { System.out.println(\"KeyStore not changed\"); return; }; out.close(); System.out.println(\"Added alias '\" + alias + \"'\"); }"}
{"time": "2021-01-20 10:53:54.934966", "n_pass": [1339, 69, 69], "score": "0.9908", "loss": "0.0123", "code": "public static void main(String[] args) throws Exception {passphrase; if ((2)) { String[] c = args[0].split(c.length == 1) ? 443 : Integer.parseInt(c[1]); String p = (args.length == 1) ? \"changeit\" : args[1]; passphrase = p.separatorCharFile(System.getProperty(\"java.home\") + SEP + \"security\");  File(dir, \"jssecacerts\"); if (file.isFile()) { fileFile(dir, \"cacerts\"); } } (\"Loading KeyStore \" + file + \"...\"); InputStream(ks); X5 = (X509TrustManager) tmf.getTrustManagers()[0]; SavingTrustManager tm = new SavingTrustManagercontext.init(null, new TrustManager[] { tm }, null); SSLSocketFactory.println(\"Opening\" ); socket.setSoTimeout(10000); try {println(\"Starting  already trusted\"); } catch (SSLException e) { System.out.println();}if (null) { Systemreturn; } BufferedReader= new BufferedReader((System.in)).println(); MessageDigest.getInstance(); for (int i = 0; i .length; i++) { X.println((i ) + \" Subject \" + cert.getSubjectDN()).out.out.println(\" \" + toHexString()); md5.update(cert.getEncoded()).out.println(\" \" + toHexString(md5.digest())); } System.out.println(\"Enter certificate 1]\"); String line; int k; try { k = (line.length() == 0) ? 0 : Integer.parseInt(line) - 1; } catch (NumberFormatException e) { System.out.println(\"KeyStore not changed\"); return; }; out.close(); System.out.println(\"Added alias '\" + alias + \"'\"); }"}
{"time": "2021-01-20 10:53:56.429021", "n_pass": [1341, 70, 70], "score": "0.9753", "loss": "0.032", "code": "public static void main(String[] args) throws Exception {passphrase; if ((2)) { String[] c = args[0].split(c.length == 1) ? 443 : Integer.parseInt(c[1]); String p = (args.length == 1) ? \"changeit\" : args[1]; passphrase = p.separatorCharFile(System.getProperty(\"java.home\") + SEP + \"security\");  File(dir, \"jssecacerts\"); if (file.isFile()) { fileFile(dir, \"cacerts\"); } } (\"Loading KeyStore \" + file + \"...\"); InputStream(ks); X5 = (X509TrustManager) tmf.getTrustManagers()[0]; SavingTrustManager tm = new SavingTrustManagercontext.init(null, new TrustManager[] { tm }, null); SSLSocketFactory.println(\"Opening\" ); socket.setSoTimeout(10000); try {println(\"Starting  already trusted\"); } catch (SSLException e) { System.out.println();}if (null) { Systemreturn; } BufferedReader= new BufferedReader((System.in)).println(); MessageDigest.getInstance(); for (int i = 0; i .length; i++) { X.println((i ) + \" Subject \" + cert.getSubjectDN()).out.out.println(\" \" + toHexString()); md5.update(cert.getEncoded()).out.println(\" \" + toHexString(md5.digest())); }out.println(\"Enter certificate 1]\"); String line; int k; try { k = (line.length() == 0) ? 0 : Integer.parseInt(line) - 1; } catch (NumberFormatException e) { System.out.println(\"KeyStore not changed\"); return; }; out.close(); System.out.println(\"Added alias '\" + alias + \"'\"); }"}
{"time": "2021-01-20 10:53:57.937752", "n_pass": [1342, 71, 71], "score": "0.9551", "loss": "0.0595", "code": "public static void main(String[] args) throws Exception {passphrase; if ((2)) { String[] c = args[0].split(c.length == 1) ? 443 : Integer.parseInt(c[1]); String p = (args.length == 1) ? \"changeit\" : args[1]; passphrase = p.separatorCharFile(System.getProperty(\"java.home\") + SEP + \"security\");  File(dir, \"jssecacerts\"); if (file.isFile()) { fileFile(dir, \"cacerts\"); } } (\"Loading KeyStore \" + file + \"...\"); InputStream(ks); X5 = (X509TrustManager) tmf.getTrustManagers()[0]; SavingTrustManager tm = new SavingTrustManagercontext.init(null, new TrustManager[] { tm }, null); SSLSocketFactory.println(\"Opening\" ); socket.setSoTimeout(10000); try {println(\"Starting  already trusted\"); } catch (SSLException e) { System.out.println();}if (null) { Systemreturn; } BufferedReader= new BufferedReader((System.in)).println(); MessageDigest.getInstance(); for (int i = 0; i .length; i++) { X.println((i ) + \" Subject \" + cert.getSubjectDN()).out.out.println(\" \" + toHexString()); md5.update(cert.getEncoded()).out.println(\" \" + toHexString(md5.digest())); }(\"Enter certificate 1]\"); String line; int k; try { k = (line.length() == 0) ? 0 : Integer.parseInt(line) - 1; } catch (NumberFormatException e) { System.out.println(\"KeyStore not changed\"); return; }; out.close(); System.out.println(\"Added alias '\" + alias + \"'\"); }"}
{"time": "2021-01-20 10:53:59.461697", "n_pass": [1344, 72, 72], "score": "0.9894", "loss": "0.0121", "code": "public static void main(String[] args) throws Exception {passphrase; if ((2)) { String[] c = args[0].split(c.length == 1) ? 443 : Integer.parseInt(c[1]); String p = (args.length == 1) ? \"changeit\" : args[1]; passphrase = p.separatorCharFile(System.getProperty(\"java.home\") + SEP + \"security\");  File(dir, \"jssecacerts\"); if (file.isFile()) { fileFile(dir, \"cacerts\"); } } (\"Loading KeyStore \" + file + \"...\"); InputStream(ks); X5 = (X509TrustManager) tmf.getTrustManagers()[0]; SavingTrustManager tm = new SavingTrustManagercontext.init(null, new TrustManager[] { tm }, null); SSLSocketFactory.println(\"Opening\" ); socket.setSoTimeout(10000); try {println(\"Starting  already trusted\"); } catch (SSLException e) { System.out.println();}if (null) { Systemreturn; } BufferedReader= new BufferedReader((System.in)).println(); MessageDigest.getInstance(); for (int i = 0; i .length; i++) { X.println((i ) + \" Subject \" + cert.getSubjectDN()).out.out.println(\" \" + toHexString()); md5.update(cert.getEncoded()).out.println(\" \" + toHexString(md5.digest())); }(\"Enter1]\"); String line; int k; try { k = (line.length() == 0) ? 0 : Integer.parseInt(line) - 1; } catch (NumberFormatException e) { System.out.println(\"KeyStore not changed\"); return; }; out.close(); System.out.println(\"Added alias '\" + alias + \"'\"); }"}
{"time": "2021-01-20 10:54:00.956202", "n_pass": [1347, 73, 73], "score": "0.9719", "loss": "0.0364", "code": "public static void main(String[] args) throws Exception {passphrase; if ((2)) { String[] c = args[0].split(c.length == 1) ? 443 : Integer.parseInt(c[1]); String p = (args.length == 1) ? \"changeit\" : args[1]; passphrase = p.separatorCharFile(System.getProperty(\"java.home\") + SEP + \"security\");  File(dir, \"jssecacerts\"); if (file.isFile()) { fileFile(dir, \"cacerts\"); } } (\"Loading KeyStore \" + file + \"...\"); InputStream(ks); X5 = (X509TrustManager) tmf.getTrustManagers()[0]; SavingTrustManager tm = new SavingTrustManagercontext.init(null, new TrustManager[] { tm }, null); SSLSocketFactory.println(\"Opening\" ); socket.setSoTimeout(10000); try {println(\"Starting  already trusted\"); } catch (SSLException e) { System.out.println();}if (null) { Systemreturn; } BufferedReader= new BufferedReader((System.in)).println(); MessageDigest.getInstance(); for (int i = 0; i .length; i++) { X.println((i ) + \" Subject \" + cert.getSubjectDN()).out.out.println(\" \" + toHexString()); md5.update(cert.getEncoded()).out.println(\" \" + toHexString(md5.digest())); }(\"Enter1]\"); ; int k; try { k = (line.length() == 0) ? 0 : Integer.parseInt(line) - 1; } catch (NumberFormatException e) { System.out.println(\"KeyStore not changed\"); return; }; out.close(); System.out.println(\"Added alias '\" + alias + \"'\"); }"}
{"time": "2021-01-20 10:54:02.471614", "n_pass": [1348, 74, 74], "score": "0.9568", "loss": "0.0638", "code": "public static void main(String[] args) throws Exception {passphrase; if ((2)) { String[] c = args[0].split(c.length == 1) ? 443 : Integer.parseInt(c[1]); String p = (args.length == 1) ? \"changeit\" : args[1]; passphrase = p.separatorCharFile(System.getProperty(\"java.home\") + SEP + \"security\");  File(dir, \"jssecacerts\"); if (file.isFile()) { fileFile(dir, \"cacerts\"); } } (\"Loading KeyStore \" + file + \"...\"); InputStream(ks); X5 = (X509TrustManager) tmf.getTrustManagers()[0]; SavingTrustManager tm = new SavingTrustManagercontext.init(null, new TrustManager[] { tm }, null); SSLSocketFactory.println(\"Opening\" ); socket.setSoTimeout(10000); try {println(\"Starting  already trusted\"); } catch (SSLException e) { System.out.println();}if (null) { Systemreturn; } BufferedReader= new BufferedReader((System.in)).println(); MessageDigest.getInstance(); for (int i = 0; i .length; i++) { X.println((i ) + \" Subject \" + cert.getSubjectDN()).out.out.println(\" \" + toHexString()); md5.update(cert.getEncoded()).out.println(\" \" + toHexString(md5.digest())); }(\"Enter1]\");  k; try { k = (line.length() == 0) ? 0 : Integer.parseInt(line) - 1; } catch (NumberFormatException e) { System.out.println(\"KeyStore not changed\"); return; }; out.close(); System.out.println(\"Added alias '\" + alias + \"'\"); }"}
{"time": "2021-01-20 10:54:03.959684", "n_pass": [1349, 75, 75], "score": "0.9437", "loss": "0.082", "code": "public static void main(String[] args) throws Exception {passphrase; if ((2)) { String[] c = args[0].split(c.length == 1) ? 443 : Integer.parseInt(c[1]); String p = (args.length == 1) ? \"changeit\" : args[1]; passphrase = p.separatorCharFile(System.getProperty(\"java.home\") + SEP + \"security\");  File(dir, \"jssecacerts\"); if (file.isFile()) { fileFile(dir, \"cacerts\"); } } (\"Loading KeyStore \" + file + \"...\"); InputStream(ks); X5 = (X509TrustManager) tmf.getTrustManagers()[0]; SavingTrustManager tm = new SavingTrustManagercontext.init(null, new TrustManager[] { tm }, null); SSLSocketFactory.println(\"Opening\" ); socket.setSoTimeout(10000); try {println(\"Starting  already trusted\"); } catch (SSLException e) { System.out.println();}if (null) { Systemreturn; } BufferedReader= new BufferedReader((System.in)).println(); MessageDigest.getInstance(); for (int i = 0; i .length; i++) { X.println((i ) + \" Subject \" + cert.getSubjectDN()).out.out.println(\" \" + toHexString()); md5.update(cert.getEncoded()).out.println(\" \" + toHexString(md5.digest())); }(\"Enter1]\");  try { k = (line.length() == 0) ? 0 : Integer.parseInt(line) - 1; } catch (NumberFormatException e) { System.out.println(\"KeyStore not changed\"); return; }; out.close(); System.out.println(\"Added alias '\" + alias + \"'\"); }"}
{"time": "2021-01-20 10:54:05.914047", "n_pass": [1359, 76, 76], "score": "0.9311", "loss": "0.0952", "code": "public static void main(String[] args) throws Exception {passphrase; if ((2)) { String[] c = args[0].split(c.length == 1) ? 443 : Integer.parseInt(c[1]); String p = (args.length == 1) ? \"changeit\" : args[1]; passphrase = p.separatorCharFile(System.getProperty(\"java.home\") + SEP + \"security\");  File(dir, \"jssecacerts\"); if (file.isFile()) { fileFile(dir, \"cacerts\"); } } (\"Loading KeyStore \" + file + \"...\"); InputStream(ks); X5 = (X509TrustManager) tmf.getTrustManagers()[0]; SavingTrustManager tm = new SavingTrustManagercontext.init(null, new TrustManager[] { tm }, null); SSLSocketFactory.println(\"Opening\" ); socket.setSoTimeout(10000); try {println(\"Starting  already trusted\"); } catch (SSLException e) { System.out.println();}if (null) { Systemreturn; } BufferedReader= new BufferedReader((System.in)).println(); MessageDigest.getInstance(); for (int i = 0; i .length; i++) { X.println((i ) + \" Subject \" + cert.getSubjectDN()).out.out.println(\" \" + toHexString()); md5.update(cert.getEncoded()).out.println(\" \" + toHexString(md5.digest())); }(\"Enter1]\");  try { k = (line.length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) { System.out.println(\"KeyStore not changed\"); return; }; out.close(); System.out.println(\"Added alias '\" + alias + \"'\"); }"}
{"time": "2021-01-20 10:54:07.433794", "n_pass": [1367, 77, 77], "score": "0.9569", "loss": "0.0636", "code": "public static void main(String[] args) throws Exception {passphrase; if ((2)) { String[] c = args[0].split(c.length == 1) ? 443 : Integer.parseInt(c[1]); String p = (args.length == 1) ? \"changeit\" : args[1]; passphrase = p.separatorCharFile(System.getProperty(\"java.home\") + SEP + \"security\");  File(dir, \"jssecacerts\"); if (file.isFile()) { fileFile(dir, \"cacerts\"); } } (\"Loading KeyStore \" + file + \"...\"); InputStream(ks); X5 = (X509TrustManager) tmf.getTrustManagers()[0]; SavingTrustManager tm = new SavingTrustManagercontext.init(null, new TrustManager[] { tm }, null); SSLSocketFactory.println(\"Opening\" ); socket.setSoTimeout(10000); try {println(\"Starting  already trusted\"); } catch (SSLException e) { System.out.println();}if (null) { Systemreturn; } BufferedReader= new BufferedReader((System.in)).println(); MessageDigest.getInstance(); for (int i = 0; i .length; i++) { X.println((i ) + \" Subject \" + cert.getSubjectDN()).out.out.println(\" \" + toHexString()); md5.update(cert.getEncoded()).out.println(\" \" + toHexString(md5.digest())); }(\"Enter1]\");  try { k = (line.length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {out.println(\"KeyStore not changed\"); return; }; out.close(); System.out.println(\"Added alias '\" + alias + \"'\"); }"}
{"time": "2021-01-20 10:54:08.927188", "n_pass": [1368, 78, 78], "score": "0.9612", "loss": "0.0476", "code": "public static void main(String[] args) throws Exception {passphrase; if ((2)) { String[] c = args[0].split(c.length == 1) ? 443 : Integer.parseInt(c[1]); String p = (args.length == 1) ? \"changeit\" : args[1]; passphrase = p.separatorCharFile(System.getProperty(\"java.home\") + SEP + \"security\");  File(dir, \"jssecacerts\"); if (file.isFile()) { fileFile(dir, \"cacerts\"); } } (\"Loading KeyStore \" + file + \"...\"); InputStream(ks); X5 = (X509TrustManager) tmf.getTrustManagers()[0]; SavingTrustManager tm = new SavingTrustManagercontext.init(null, new TrustManager[] { tm }, null); SSLSocketFactory.println(\"Opening\" ); socket.setSoTimeout(10000); try {println(\"Starting  already trusted\"); } catch (SSLException e) { System.out.println();}if (null) { Systemreturn; } BufferedReader= new BufferedReader((System.in)).println(); MessageDigest.getInstance(); for (int i = 0; i .length; i++) { X.println((i ) + \" Subject \" + cert.getSubjectDN()).out.out.println(\" \" + toHexString()); md5.update(cert.getEncoded()).out.println(\" \" + toHexString(md5.digest())); }(\"Enter1]\");  try { k = (line.length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"KeyStore not changed\"); return; }; out.close(); System.out.println(\"Added alias '\" + alias + \"'\"); }"}
{"time": "2021-01-20 10:54:10.408297", "n_pass": [1370, 79, 79], "score": "0.9889", "loss": "0.0126", "code": "public static void main(String[] args) throws Exception {passphrase; if ((2)) { String[] c = args[0].split(c.length == 1) ? 443 : Integer.parseInt(c[1]); String p = (args.length == 1) ? \"changeit\" : args[1]; passphrase = p.separatorCharFile(System.getProperty(\"java.home\") + SEP + \"security\");  File(dir, \"jssecacerts\"); if (file.isFile()) { fileFile(dir, \"cacerts\"); } } (\"Loading KeyStore \" + file + \"...\"); InputStream(ks); X5 = (X509TrustManager) tmf.getTrustManagers()[0]; SavingTrustManager tm = new SavingTrustManagercontext.init(null, new TrustManager[] { tm }, null); SSLSocketFactory.println(\"Opening\" ); socket.setSoTimeout(10000); try {println(\"Starting  already trusted\"); } catch (SSLException e) { System.out.println();}if (null) { Systemreturn; } BufferedReader= new BufferedReader((System.in)).println(); MessageDigest.getInstance(); for (int i = 0; i .length; i++) { X.println((i ) + \" Subject \" + cert.getSubjectDN()).out.out.println(\" \" + toHexString()); md5.update(cert.getEncoded()).out.println(\" \" + toHexString(md5.digest())); }(\"Enter1]\");  try { k = (line.length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"KeyStorechanged\"); return; }; out.close(); System.out.println(\"Added alias '\" + alias + \"'\"); }"}
{"time": "2021-01-20 10:54:11.916748", "n_pass": [1372, 80, 80], "score": "0.9925", "loss": "0.0097", "code": "public static void main(String[] args) throws Exception {passphrase; if ((2)) { String[] c = args[0].split(c.length == 1) ? 443 : Integer.parseInt(c[1]); String p = (args.length == 1) ? \"changeit\" : args[1]; passphrase = p.separatorCharFile(System.getProperty(\"java.home\") + SEP + \"security\");  File(dir, \"jssecacerts\"); if (file.isFile()) { fileFile(dir, \"cacerts\"); } } (\"Loading KeyStore \" + file + \"...\"); InputStream(ks); X5 = (X509TrustManager) tmf.getTrustManagers()[0]; SavingTrustManager tm = new SavingTrustManagercontext.init(null, new TrustManager[] { tm }, null); SSLSocketFactory.println(\"Opening\" ); socket.setSoTimeout(10000); try {println(\"Starting  already trusted\"); } catch (SSLException e) { System.out.println();}if (null) { Systemreturn; } BufferedReader= new BufferedReader((System.in)).println(); MessageDigest.getInstance(); for (int i = 0; i .length; i++) { X.println((i ) + \" Subject \" + cert.getSubjectDN()).out.out.println(\" \" + toHexString()); md5.update(cert.getEncoded()).out.println(\" \" + toHexString(md5.digest())); }(\"Enter1]\");  try { k = (line.length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"KeyStorechanged\"); }; out.close(); System.out.println(\"Added alias '\" + alias + \"'\"); }"}
{"time": "2021-01-20 10:54:13.437199", "n_pass": [1380, 81, 81], "score": "0.9793", "loss": "0.0291", "code": "public static void main(String[] args) throws Exception {passphrase; if ((2)) { String[] c = args[0].split(c.length == 1) ? 443 : Integer.parseInt(c[1]); String p = (args.length == 1) ? \"changeit\" : args[1]; passphrase = p.separatorCharFile(System.getProperty(\"java.home\") + SEP + \"security\");  File(dir, \"jssecacerts\"); if (file.isFile()) { fileFile(dir, \"cacerts\"); } } (\"Loading KeyStore \" + file + \"...\"); InputStream(ks); X5 = (X509TrustManager) tmf.getTrustManagers()[0]; SavingTrustManager tm = new SavingTrustManagercontext.init(null, new TrustManager[] { tm }, null); SSLSocketFactory.println(\"Opening\" ); socket.setSoTimeout(10000); try {println(\"Starting  already trusted\"); } catch (SSLException e) { System.out.println();}if (null) { Systemreturn; } BufferedReader= new BufferedReader((System.in)).println(); MessageDigest.getInstance(); for (int i = 0; i .length; i++) { X.println((i ) + \" Subject \" + cert.getSubjectDN()).out.out.println(\" \" + toHexString()); md5.update(cert.getEncoded()).out.println(\" \" + toHexString(md5.digest())); }(\"Enter1]\");  try { k = (line.length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"KeyStorechanged\"); }; out.close(); System.out.println(\"Added \" + alias + \"'\"); }"}
{"time": "2021-01-20 10:54:14.936003", "n_pass": [1386, 82, 82], "score": "0.9872", "loss": "0.0164", "code": "static void main(String[] args) throws Exception {passphrase; if ((2)) { String[] c = args[0].split(c.length == 1) ? 443 : Integer.parseInt(c[1]); String p = (args.length == 1) ? \"changeit\" : args[1]; passphrase = p.separatorCharFile(System.getProperty(\"java.home\") + SEP + \"security\");  File(dir, \"jssecacerts\"); if (file.isFile()) { fileFile(dir, \"cacerts\"); } } (\"Loading KeyStore \" + file + \"...\"); InputStream(ks); X5 = (X509TrustManager) tmf.getTrustManagers()[0]; SavingTrustManager tm = new SavingTrustManagercontext.init(null, new TrustManager[] { tm }, null); SSLSocketFactory.println(\"Opening\" ); socket.setSoTimeout(10000); try {println(\"Starting  already trusted\"); } catch (SSLException e) { System.out.println();}if (null) { Systemreturn; } BufferedReader= new BufferedReader((System.in)).println(); MessageDigest.getInstance(); for (int i = 0; i .length; i++) { X.println((i ) + \" Subject \" + cert.getSubjectDN()).out.out.println(\" \" + toHexString()); md5.update(cert.getEncoded()).out.println(\" \" + toHexString(md5.digest())); }(\"Enter1]\");  try { k = (line.length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"KeyStorechanged\"); }; out.close(); System.out.println(\"Added \" + alias + \"'\"); }"}
{"time": "2021-01-20 10:54:16.412622", "n_pass": [1387, 83, 83], "score": "0.9819", "loss": "0.0249", "code": "void main(String[] args) throws Exception {passphrase; if ((2)) { String[] c = args[0].split(c.length == 1) ? 443 : Integer.parseInt(c[1]); String p = (args.length == 1) ? \"changeit\" : args[1]; passphrase = p.separatorCharFile(System.getProperty(\"java.home\") + SEP + \"security\");  File(dir, \"jssecacerts\"); if (file.isFile()) { fileFile(dir, \"cacerts\"); } } (\"Loading KeyStore \" + file + \"...\"); InputStream(ks); X5 = (X509TrustManager) tmf.getTrustManagers()[0]; SavingTrustManager tm = new SavingTrustManagercontext.init(null, new TrustManager[] { tm }, null); SSLSocketFactory.println(\"Opening\" ); socket.setSoTimeout(10000); try {println(\"Starting  already trusted\"); } catch (SSLException e) { System.out.println();}if (null) { Systemreturn; } BufferedReader= new BufferedReader((System.in)).println(); MessageDigest.getInstance(); for (int i = 0; i .length; i++) { X.println((i ) + \" Subject \" + cert.getSubjectDN()).out.out.println(\" \" + toHexString()); md5.update(cert.getEncoded()).out.println(\" \" + toHexString(md5.digest())); }(\"Enter1]\");  try { k = (line.length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"KeyStorechanged\"); }; out.close(); System.out.println(\"Added \" + alias + \"'\"); }"}
{"time": "2021-01-20 10:54:18.341892", "n_pass": [1396, 84, 84], "score": "0.9909", "loss": "0.0107", "code": "void main(String[] args) throws Exception { if ((2)) { String[] c = args[0].split(c.length == 1) ? 443 : Integer.parseInt(c[1]); String p = (args.length == 1) ? \"changeit\" : args[1]; passphrase = p.separatorCharFile(System.getProperty(\"java.home\") + SEP + \"security\");  File(dir, \"jssecacerts\"); if (file.isFile()) { fileFile(dir, \"cacerts\"); } } (\"Loading KeyStore \" + file + \"...\"); InputStream(ks); X5 = (X509TrustManager) tmf.getTrustManagers()[0]; SavingTrustManager tm = new SavingTrustManagercontext.init(null, new TrustManager[] { tm }, null); SSLSocketFactory.println(\"Opening\" ); socket.setSoTimeout(10000); try {println(\"Starting  already trusted\"); } catch (SSLException e) { System.out.println();}if (null) { Systemreturn; } BufferedReader= new BufferedReader((System.in)).println(); MessageDigest.getInstance(); for (int i = 0; i .length; i++) { X.println((i ) + \" Subject \" + cert.getSubjectDN()).out.out.println(\" \" + toHexString()); md5.update(cert.getEncoded()).out.println(\" \" + toHexString(md5.digest())); }(\"Enter1]\");  try { k = (line.length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"KeyStorechanged\"); }; out.close(); System.out.println(\"Added \" + alias + \"'\"); }"}
{"time": "2021-01-20 10:54:19.866743", "n_pass": [1403, 85, 85], "score": "0.9538", "loss": "0.0814", "code": "void main(String[] args) throws Exception { if ((2)) { String c = args[0].split(c.length == 1) ? 443 : Integer.parseInt(c[1]); String p = (args.length == 1) ? \"changeit\" : args[1]; passphrase = p.separatorCharFile(System.getProperty(\"java.home\") + SEP + \"security\");  File(dir, \"jssecacerts\"); if (file.isFile()) { fileFile(dir, \"cacerts\"); } } (\"Loading KeyStore \" + file + \"...\"); InputStream(ks); X5 = (X509TrustManager) tmf.getTrustManagers()[0]; SavingTrustManager tm = new SavingTrustManagercontext.init(null, new TrustManager[] { tm }, null); SSLSocketFactory.println(\"Opening\" ); socket.setSoTimeout(10000); try {println(\"Starting  already trusted\"); } catch (SSLException e) { System.out.println();}if (null) { Systemreturn; } BufferedReader= new BufferedReader((System.in)).println(); MessageDigest.getInstance(); for (int i = 0; i .length; i++) { X.println((i ) + \" Subject \" + cert.getSubjectDN()).out.out.println(\" \" + toHexString()); md5.update(cert.getEncoded()).out.println(\" \" + toHexString(md5.digest())); }(\"Enter1]\");  try { k = (line.length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"KeyStorechanged\"); }; out.close(); System.out.println(\"Added \" + alias + \"'\"); }"}
{"time": "2021-01-20 10:54:21.345478", "n_pass": [1404, 86, 86], "score": "0.9355", "loss": "0.0878", "code": "void main(String[] args) throws Exception { if ((2)) { String = args[0].split(c.length == 1) ? 443 : Integer.parseInt(c[1]); String p = (args.length == 1) ? \"changeit\" : args[1]; passphrase = p.separatorCharFile(System.getProperty(\"java.home\") + SEP + \"security\");  File(dir, \"jssecacerts\"); if (file.isFile()) { fileFile(dir, \"cacerts\"); } } (\"Loading KeyStore \" + file + \"...\"); InputStream(ks); X5 = (X509TrustManager) tmf.getTrustManagers()[0]; SavingTrustManager tm = new SavingTrustManagercontext.init(null, new TrustManager[] { tm }, null); SSLSocketFactory.println(\"Opening\" ); socket.setSoTimeout(10000); try {println(\"Starting  already trusted\"); } catch (SSLException e) { System.out.println();}if (null) { Systemreturn; } BufferedReader= new BufferedReader((System.in)).println(); MessageDigest.getInstance(); for (int i = 0; i .length; i++) { X.println((i ) + \" Subject \" + cert.getSubjectDN()).out.out.println(\" \" + toHexString()); md5.update(cert.getEncoded()).out.println(\" \" + toHexString(md5.digest())); }(\"Enter1]\");  try { k = (line.length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"KeyStorechanged\"); }; out.close(); System.out.println(\"Added \" + alias + \"'\"); }"}
{"time": "2021-01-20 10:54:22.831082", "n_pass": [1410, 87, 87], "score": "0.9899", "loss": "0.0116", "code": "void main(String[] args) throws Exception { if ((2)) { String = args[0].split(length == 1) ? 443 : Integer.parseInt(c[1]); String p = (args.length == 1) ? \"changeit\" : args[1]; passphrase = p.separatorCharFile(System.getProperty(\"java.home\") + SEP + \"security\");  File(dir, \"jssecacerts\"); if (file.isFile()) { fileFile(dir, \"cacerts\"); } } (\"Loading KeyStore \" + file + \"...\"); InputStream(ks); X5 = (X509TrustManager) tmf.getTrustManagers()[0]; SavingTrustManager tm = new SavingTrustManagercontext.init(null, new TrustManager[] { tm }, null); SSLSocketFactory.println(\"Opening\" ); socket.setSoTimeout(10000); try {println(\"Starting  already trusted\"); } catch (SSLException e) { System.out.println();}if (null) { Systemreturn; } BufferedReader= new BufferedReader((System.in)).println(); MessageDigest.getInstance(); for (int i = 0; i .length; i++) { X.println((i ) + \" Subject \" + cert.getSubjectDN()).out.out.println(\" \" + toHexString()); md5.update(cert.getEncoded()).out.println(\" \" + toHexString(md5.digest())); }(\"Enter1]\");  try { k = (line.length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"KeyStorechanged\"); }; out.close(); System.out.println(\"Added \" + alias + \"'\"); }"}
{"time": "2021-01-20 10:54:24.347716", "n_pass": [1416, 88, 88], "score": "0.9907", "loss": "0.012", "code": "void main(String[] args) throws Exception { if ((2)) { String = args[0].split(length == 1) ? 3 : Integer.parseInt(c[1]); String p = (args.length == 1) ? \"changeit\" : args[1]; passphrase = p.separatorCharFile(System.getProperty(\"java.home\") + SEP + \"security\");  File(dir, \"jssecacerts\"); if (file.isFile()) { fileFile(dir, \"cacerts\"); } } (\"Loading KeyStore \" + file + \"...\"); InputStream(ks); X5 = (X509TrustManager) tmf.getTrustManagers()[0]; SavingTrustManager tm = new SavingTrustManagercontext.init(null, new TrustManager[] { tm }, null); SSLSocketFactory.println(\"Opening\" ); socket.setSoTimeout(10000); try {println(\"Starting  already trusted\"); } catch (SSLException e) { System.out.println();}if (null) { Systemreturn; } BufferedReader= new BufferedReader((System.in)).println(); MessageDigest.getInstance(); for (int i = 0; i .length; i++) { X.println((i ) + \" Subject \" + cert.getSubjectDN()).out.out.println(\" \" + toHexString()); md5.update(cert.getEncoded()).out.println(\" \" + toHexString(md5.digest())); }(\"Enter1]\");  try { k = (line.length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"KeyStorechanged\"); }; out.close(); System.out.println(\"Added \" + alias + \"'\"); }"}
{"time": "2021-01-20 10:54:25.833032", "n_pass": [1419, 89, 89], "score": "0.9912", "loss": "0.0116", "code": "void main(String[] args) throws Exception { if ((2)) { String = args[0].split(length == 1) ? 3 : parseInt(c[1]); String p = (args.length == 1) ? \"changeit\" : args[1]; passphrase = p.separatorCharFile(System.getProperty(\"java.home\") + SEP + \"security\");  File(dir, \"jssecacerts\"); if (file.isFile()) { fileFile(dir, \"cacerts\"); } } (\"Loading KeyStore \" + file + \"...\"); InputStream(ks); X5 = (X509TrustManager) tmf.getTrustManagers()[0]; SavingTrustManager tm = new SavingTrustManagercontext.init(null, new TrustManager[] { tm }, null); SSLSocketFactory.println(\"Opening\" ); socket.setSoTimeout(10000); try {println(\"Starting  already trusted\"); } catch (SSLException e) { System.out.println();}if (null) { Systemreturn; } BufferedReader= new BufferedReader((System.in)).println(); MessageDigest.getInstance(); for (int i = 0; i .length; i++) { X.println((i ) + \" Subject \" + cert.getSubjectDN()).out.out.println(\" \" + toHexString()); md5.update(cert.getEncoded()).out.println(\" \" + toHexString(md5.digest())); }(\"Enter1]\");  try { k = (line.length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"KeyStorechanged\"); }; out.close(); System.out.println(\"Added \" + alias + \"'\"); }"}
{"time": "2021-01-20 10:54:27.330718", "n_pass": [1424, 90, 90], "score": "0.9865", "loss": "0.0192", "code": "void main(String[] args) throws Exception { if ((2)) { String = args[0].split(length == 1) ? 3 : parseInt(c[1]); p = (args.length == 1) ? \"changeit\" : args[1]; passphrase = p.separatorCharFile(System.getProperty(\"java.home\") + SEP + \"security\");  File(dir, \"jssecacerts\"); if (file.isFile()) { fileFile(dir, \"cacerts\"); } } (\"Loading KeyStore \" + file + \"...\"); InputStream(ks); X5 = (X509TrustManager) tmf.getTrustManagers()[0]; SavingTrustManager tm = new SavingTrustManagercontext.init(null, new TrustManager[] { tm }, null); SSLSocketFactory.println(\"Opening\" ); socket.setSoTimeout(10000); try {println(\"Starting  already trusted\"); } catch (SSLException e) { System.out.println();}if (null) { Systemreturn; } BufferedReader= new BufferedReader((System.in)).println(); MessageDigest.getInstance(); for (int i = 0; i .length; i++) { X.println((i ) + \" Subject \" + cert.getSubjectDN()).out.out.println(\" \" + toHexString()); md5.update(cert.getEncoded()).out.println(\" \" + toHexString(md5.digest())); }(\"Enter1]\");  try { k = (line.length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"KeyStorechanged\"); }; out.close(); System.out.println(\"Added \" + alias + \"'\"); }"}
{"time": "2021-01-20 10:54:29.236547", "n_pass": [1428, 91, 91], "score": "0.9828", "loss": "0.0229", "code": "void main(String[] args) throws Exception { if ((2)) { String = args[0].split(length == 1) ? 3 : parseInt(c[1]); p = (length == 1) ? \"changeit\" : args[1]; passphrase = p.separatorCharFile(System.getProperty(\"java.home\") + SEP + \"security\");  File(dir, \"jssecacerts\"); if (file.isFile()) { fileFile(dir, \"cacerts\"); } } (\"Loading KeyStore \" + file + \"...\"); InputStream(ks); X5 = (X509TrustManager) tmf.getTrustManagers()[0]; SavingTrustManager tm = new SavingTrustManagercontext.init(null, new TrustManager[] { tm }, null); SSLSocketFactory.println(\"Opening\" ); socket.setSoTimeout(10000); try {println(\"Starting  already trusted\"); } catch (SSLException e) { System.out.println();}if (null) { Systemreturn; } BufferedReader= new BufferedReader((System.in)).println(); MessageDigest.getInstance(); for (int i = 0; i .length; i++) { X.println((i ) + \" Subject \" + cert.getSubjectDN()).out.out.println(\" \" + toHexString()); md5.update(cert.getEncoded()).out.println(\" \" + toHexString(md5.digest())); }(\"Enter1]\");  try { k = (line.length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"KeyStorechanged\"); }; out.close(); System.out.println(\"Added \" + alias + \"'\"); }"}
{"time": "2021-01-20 10:54:30.744474", "n_pass": [1442, 92, 92], "score": "0.9758", "loss": "0.0305", "code": "void main(String[] args) throws Exception { if ((2)) { String = args[0].split(length == 1) ? 3 : parseInt(c[1]); p = (length == 1) ? \"changeit\" : args[1]; passphrase = separatorCharFile(System.getProperty(\"java.home\") + SEP + \"security\");  File(dir, \"jssecacerts\"); if (file.isFile()) { fileFile(dir, \"cacerts\"); } } (\"Loading KeyStore \" + file + \"...\"); InputStream(ks); X5 = (X509TrustManager) tmf.getTrustManagers()[0]; SavingTrustManager tm = new SavingTrustManagercontext.init(null, new TrustManager[] { tm }, null); SSLSocketFactory.println(\"Opening\" ); socket.setSoTimeout(10000); try {println(\"Starting  already trusted\"); } catch (SSLException e) { System.out.println();}if (null) { Systemreturn; } BufferedReader= new BufferedReader((System.in)).println(); MessageDigest.getInstance(); for (int i = 0; i .length; i++) { X.println((i ) + \" Subject \" + cert.getSubjectDN()).out.out.println(\" \" + toHexString()); md5.update(cert.getEncoded()).out.println(\" \" + toHexString(md5.digest())); }(\"Enter1]\");  try { k = (line.length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"KeyStorechanged\"); }; out.close(); System.out.println(\"Added \" + alias + \"'\"); }"}
{"time": "2021-01-20 10:54:32.221587", "n_pass": [1443, 93, 93], "score": "0.9574", "loss": "0.053", "code": "void main(String[] args) throws Exception { if ((2)) { String = args[0].split(length == 1) ? 3 : parseInt(c[1]); p = (length == 1) ? \"changeit\" : args[1]; passphrase = (System.getProperty(\"java.home\") + SEP + \"security\");  File(dir, \"jssecacerts\"); if (file.isFile()) { fileFile(dir, \"cacerts\"); } } (\"Loading KeyStore \" + file + \"...\"); InputStream(ks); X5 = (X509TrustManager) tmf.getTrustManagers()[0]; SavingTrustManager tm = new SavingTrustManagercontext.init(null, new TrustManager[] { tm }, null); SSLSocketFactory.println(\"Opening\" ); socket.setSoTimeout(10000); try {println(\"Starting  already trusted\"); } catch (SSLException e) { System.out.println();}if (null) { Systemreturn; } BufferedReader= new BufferedReader((System.in)).println(); MessageDigest.getInstance(); for (int i = 0; i .length; i++) { X.println((i ) + \" Subject \" + cert.getSubjectDN()).out.out.println(\" \" + toHexString()); md5.update(cert.getEncoded()).out.println(\" \" + toHexString(md5.digest())); }(\"Enter1]\");  try { k = (line.length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"KeyStorechanged\"); }; out.close(); System.out.println(\"Added \" + alias + \"'\"); }"}
{"time": "2021-01-20 10:54:33.685724", "n_pass": [1445, 94, 94], "score": "0.9466", "loss": "0.084", "code": "void main(String[] args) throws Exception { if ((2)) { String = args[0].split(length == 1) ? 3 : parseInt(c[1]); p = (length == 1) ? \"changeit\" : args[1]; passphrase = (System(\"java.home\") + SEP + \"security\");  File(dir, \"jssecacerts\"); if (file.isFile()) { fileFile(dir, \"cacerts\"); } } (\"Loading KeyStore \" + file + \"...\"); InputStream(ks); X5 = (X509TrustManager) tmf.getTrustManagers()[0]; SavingTrustManager tm = new SavingTrustManagercontext.init(null, new TrustManager[] { tm }, null); SSLSocketFactory.println(\"Opening\" ); socket.setSoTimeout(10000); try {println(\"Starting  already trusted\"); } catch (SSLException e) { System.out.println();}if (null) { Systemreturn; } BufferedReader= new BufferedReader((System.in)).println(); MessageDigest.getInstance(); for (int i = 0; i .length; i++) { X.println((i ) + \" Subject \" + cert.getSubjectDN()).out.out.println(\" \" + toHexString()); md5.update(cert.getEncoded()).out.println(\" \" + toHexString(md5.digest())); }(\"Enter1]\");  try { k = (line.length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"KeyStorechanged\"); }; out.close(); System.out.println(\"Added \" + alias + \"'\"); }"}
{"time": "2021-01-20 10:54:35.148334", "n_pass": [1447, 95, 95], "score": "0.9801", "loss": "0.0241", "code": "void main(String[] args) throws Exception { if ((2)) { String = args[0].split(length == 1) ? 3 : parseInt(c[1]); p = (length == 1) ? \"changeit\" : args[1]; passphrase = (System(\"home\") + SEP + \"security\");  File(dir, \"jssecacerts\"); if (file.isFile()) { fileFile(dir, \"cacerts\"); } } (\"Loading KeyStore \" + file + \"...\"); InputStream(ks); X5 = (X509TrustManager) tmf.getTrustManagers()[0]; SavingTrustManager tm = new SavingTrustManagercontext.init(null, new TrustManager[] { tm }, null); SSLSocketFactory.println(\"Opening\" ); socket.setSoTimeout(10000); try {println(\"Starting  already trusted\"); } catch (SSLException e) { System.out.println();}if (null) { Systemreturn; } BufferedReader= new BufferedReader((System.in)).println(); MessageDigest.getInstance(); for (int i = 0; i .length; i++) { X.println((i ) + \" Subject \" + cert.getSubjectDN()).out.out.println(\" \" + toHexString()); md5.update(cert.getEncoded()).out.println(\" \" + toHexString(md5.digest())); }(\"Enter1]\");  try { k = (line.length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"KeyStorechanged\"); }; out.close(); System.out.println(\"Added \" + alias + \"'\"); }"}
{"time": "2021-01-20 10:54:36.625680", "n_pass": [1451, 96, 96], "score": "0.9906", "loss": "0.0122", "code": "void main(String[] args) throws Exception { if ((2)) { String = args[0].split(length == 1) ? 3 : parseInt(c[1]); p = (length == 1) ? \"changeit\" : args[1]; passphrase = (System(\"home\") + + \"security\");  File(dir, \"jssecacerts\"); if (file.isFile()) { fileFile(dir, \"cacerts\"); } } (\"Loading KeyStore \" + file + \"...\"); InputStream(ks); X5 = (X509TrustManager) tmf.getTrustManagers()[0]; SavingTrustManager tm = new SavingTrustManagercontext.init(null, new TrustManager[] { tm }, null); SSLSocketFactory.println(\"Opening\" ); socket.setSoTimeout(10000); try {println(\"Starting  already trusted\"); } catch (SSLException e) { System.out.println();}if (null) { Systemreturn; } BufferedReader= new BufferedReader((System.in)).println(); MessageDigest.getInstance(); for (int i = 0; i .length; i++) { X.println((i ) + \" Subject \" + cert.getSubjectDN()).out.out.println(\" \" + toHexString()); md5.update(cert.getEncoded()).out.println(\" \" + toHexString(md5.digest())); }(\"Enter1]\");  try { k = (line.length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"KeyStorechanged\"); }; out.close(); System.out.println(\"Added \" + alias + \"'\"); }"}
{"time": "2021-01-20 10:54:38.086387", "n_pass": [1452, 97, 97], "score": "0.9931", "loss": "0.0084", "code": "void main(String[] args) throws Exception { if ((2)) { String = args[0].split(length == 1) ? 3 : parseInt(c[1]); p = (length == 1) ? \"changeit\" : args[1]; passphrase = (System(\"home\") + \"security\");  File(dir, \"jssecacerts\"); if (file.isFile()) { fileFile(dir, \"cacerts\"); } } (\"Loading KeyStore \" + file + \"...\"); InputStream(ks); X5 = (X509TrustManager) tmf.getTrustManagers()[0]; SavingTrustManager tm = new SavingTrustManagercontext.init(null, new TrustManager[] { tm }, null); SSLSocketFactory.println(\"Opening\" ); socket.setSoTimeout(10000); try {println(\"Starting  already trusted\"); } catch (SSLException e) { System.out.println();}if (null) { Systemreturn; } BufferedReader= new BufferedReader((System.in)).println(); MessageDigest.getInstance(); for (int i = 0; i .length; i++) { X.println((i ) + \" Subject \" + cert.getSubjectDN()).out.out.println(\" \" + toHexString()); md5.update(cert.getEncoded()).out.println(\" \" + toHexString(md5.digest())); }(\"Enter1]\");  try { k = (line.length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"KeyStorechanged\"); }; out.close(); System.out.println(\"Added \" + alias + \"'\"); }"}
{"time": "2021-01-20 10:54:39.828560", "n_pass": [1472, 98, 98], "score": "0.9932", "loss": "0.0097", "code": "void main(String[] args) throws Exception { if ((2)) { String = args[0].split(length == 1) ? 3 : parseInt(c[1]); p = (length == 1) ? \"changeit\" : args[1]; passphrase = (System(\"home\") + \"security\");  File(dir, \"jssecacerts\"); if (file.isFile()) { fileFile(dir, \"cacerts\"); } } (\"Loading\" + file + \"...\"); InputStream(ks); X5 = (X509TrustManager) tmf.getTrustManagers()[0]; SavingTrustManager tm = new SavingTrustManagercontext.init(null, new TrustManager[] { tm }, null); SSLSocketFactory.println(\"Opening\" ); socket.setSoTimeout(10000); try {println(\"Starting  already trusted\"); } catch (SSLException e) { System.out.println();}if (null) { Systemreturn; } BufferedReader= new BufferedReader((System.in)).println(); MessageDigest.getInstance(); for (int i = 0; i .length; i++) { X.println((i ) + \" Subject \" + cert.getSubjectDN()).out.out.println(\" \" + toHexString()); md5.update(cert.getEncoded()).out.println(\" \" + toHexString(md5.digest())); }(\"Enter1]\");  try { k = (line.length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"KeyStorechanged\"); }; out.close(); System.out.println(\"Added \" + alias + \"'\"); }"}
{"time": "2021-01-20 10:54:41.307304", "n_pass": [1476, 99, 99], "score": "0.9852", "loss": "0.0199", "code": "void main(String[] args) throws Exception { if ((2)) { String = args[0].split(length == 1) ? 3 : parseInt(c[1]); p = (length == 1) ? \"changeit\" : args[1]; passphrase = (System(\"home\") + \"security\");  File(dir, \"jssecacerts\"); if (file.isFile()) { fileFile(dir, \"cacerts\"); } } (\"Loading\" + file + \"\"); InputStream(ks); X5 = (X509TrustManager) tmf.getTrustManagers()[0]; SavingTrustManager tm = new SavingTrustManagercontext.init(null, new TrustManager[] { tm }, null); SSLSocketFactory.println(\"Opening\" ); socket.setSoTimeout(10000); try {println(\"Starting  already trusted\"); } catch (SSLException e) { System.out.println();}if (null) { Systemreturn; } BufferedReader= new BufferedReader((System.in)).println(); MessageDigest.getInstance(); for (int i = 0; i .length; i++) { X.println((i ) + \" Subject \" + cert.getSubjectDN()).out.out.println(\" \" + toHexString()); md5.update(cert.getEncoded()).out.println(\" \" + toHexString(md5.digest())); }(\"Enter1]\");  try { k = (line.length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"KeyStorechanged\"); }; out.close(); System.out.println(\"Added \" + alias + \"'\"); }"}
{"time": "2021-01-20 10:54:42.805053", "n_pass": [1483, 100, 100], "score": "0.9854", "loss": "0.0181", "code": "void main(String[] args) throws Exception { if ((2)) { String = args[0].split(length == 1) ? 3 : parseInt(c[1]); p = (length == 1) ? \"changeit\" : args[1]; passphrase = (System(\"home\") + \"security\");  File(dir, \"jssecacerts\"); if (file.isFile()) { fileFile(dir, \"cacerts\"); } } (\"Loading\" + file + \"\"); InputStream(ks); X5 = (X5) tmf.getTrustManagers()[0]; SavingTrustManager tm = new SavingTrustManagercontext.init(null, new TrustManager[] { tm }, null); SSLSocketFactory.println(\"Opening\" ); socket.setSoTimeout(10000); try {println(\"Starting  already trusted\"); } catch (SSLException e) { System.out.println();}if (null) { Systemreturn; } BufferedReader= new BufferedReader((System.in)).println(); MessageDigest.getInstance(); for (int i = 0; i .length; i++) { X.println((i ) + \" Subject \" + cert.getSubjectDN()).out.out.println(\" \" + toHexString()); md5.update(cert.getEncoded()).out.println(\" \" + toHexString(md5.digest())); }(\"Enter1]\");  try { k = (line.length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"KeyStorechanged\"); }; out.close(); System.out.println(\"Added \" + alias + \"'\"); }"}
{"time": "2021-01-20 10:54:44.296820", "n_pass": [1490, 101, 101], "score": "0.983", "loss": "0.0212", "code": "void main(String[] args) throws Exception { if ((2)) { String = args[0].split(length == 1) ? 3 : parseInt(c[1]); p = (length == 1) ? \"changeit\" : args[1]; passphrase = (System(\"home\") + \"security\");  File(dir, \"jssecacerts\"); if (file.isFile()) { fileFile(dir, \"cacerts\"); } } (\"Loading\" + file + \"\"); InputStream(ks); X5 = (X5) tmf.getTrustManagers()[0]; SavingTrustManager tm = context.init(null, new TrustManager[] { tm }, null); SSLSocketFactory.println(\"Opening\" ); socket.setSoTimeout(10000); try {println(\"Starting  already trusted\"); } catch (SSLException e) { System.out.println();}if (null) { Systemreturn; } BufferedReader= new BufferedReader((System.in)).println(); MessageDigest.getInstance(); for (int i = 0; i .length; i++) { X.println((i ) + \" Subject \" + cert.getSubjectDN()).out.out.println(\" \" + toHexString()); md5.update(cert.getEncoded()).out.println(\" \" + toHexString(md5.digest())); }(\"Enter1]\");  try { k = (line.length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"KeyStorechanged\"); }; out.close(); System.out.println(\"Added \" + alias + \"'\"); }"}
{"time": "2021-01-20 10:54:45.813426", "n_pass": [1497, 102, 102], "score": "0.9823", "loss": "0.0206", "code": "void main(String[] args) throws Exception { if ((2)) { String = args[0].split(length == 1) ? 3 : parseInt(c[1]); p = (length == 1) ? \"changeit\" : args[1]; passphrase = (System(\"home\") + \"security\");  File(dir, \"jssecacerts\"); if (file.isFile()) { fileFile(dir, \"cacerts\"); } } (\"Loading\" + file + \"\"); InputStream(ks); X5 = (X5) tmf.getTrustManagers()[0]; SavingTrustManager tm = context.init(null, new TrustManager[] { tm }); SSLSocketFactory.println(\"Opening\" ); socket.setSoTimeout(10000); try {println(\"Starting  already trusted\"); } catch (SSLException e) { System.out.println();}if (null) { Systemreturn; } BufferedReader= new BufferedReader((System.in)).println(); MessageDigest.getInstance(); for (int i = 0; i .length; i++) { X.println((i ) + \" Subject \" + cert.getSubjectDN()).out.out.println(\" \" + toHexString()); md5.update(cert.getEncoded()).out.println(\" \" + toHexString(md5.digest())); }(\"Enter1]\");  try { k = (line.length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"KeyStorechanged\"); }; out.close(); System.out.println(\"Added \" + alias + \"'\"); }"}
{"time": "2021-01-20 10:54:47.285696", "n_pass": [1499, 103, 103], "score": "0.9938", "loss": "0.0083", "code": "void main(String[] args) throws Exception { if ((2)) { String = args[0].split(length == 1) ? 3 : parseInt(c[1]); p = (length == 1) ? \"changeit\" : args[1]; passphrase = (System(\"home\") + \"security\");  File(dir, \"jssecacerts\"); if (file.isFile()) { fileFile(dir, \"cacerts\"); } } (\"Loading\" + file + \"\"); InputStream(ks); X5 = (X5) tmf.getTrustManagers()[0]; SavingTrustManager tm = context.init(null, new TrustManager[] { tm }); (\"Opening\" ); socket.setSoTimeout(10000); try {println(\"Starting  already trusted\"); } catch (SSLException e) { System.out.println();}if (null) { Systemreturn; } BufferedReader= new BufferedReader((System.in)).println(); MessageDigest.getInstance(); for (int i = 0; i .length; i++) { X.println((i ) + \" Subject \" + cert.getSubjectDN()).out.out.println(\" \" + toHexString()); md5.update(cert.getEncoded()).out.println(\" \" + toHexString(md5.digest())); }(\"Enter1]\");  try { k = (line.length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"KeyStorechanged\"); }; out.close(); System.out.println(\"Added \" + alias + \"'\"); }"}
{"time": "2021-01-20 10:54:48.755743", "n_pass": [1502, 104, 104], "score": "0.963", "loss": "0.0445", "code": "void main(String[] args) throws Exception { if ((2)) { String = args[0].split(length == 1) ? 3 : parseInt(c[1]); p = (length == 1) ? \"changeit\" : args[1]; passphrase = (System(\"home\") + \"security\");  File(dir, \"jssecacerts\"); if (file.isFile()) { fileFile(dir, \"cacerts\"); } } (\"Loading\" + file + \"\"); InputStream(ks); X5 = (X5) tmf.getTrustManagers()[0]; SavingTrustManager tm = context.init(null, new TrustManager[] { tm }); (\"Opening\" ).setSoTimeout(10000); try {println(\"Starting  already trusted\"); } catch (SSLException e) { System.out.println();}if (null) { Systemreturn; } BufferedReader= new BufferedReader((System.in)).println(); MessageDigest.getInstance(); for (int i = 0; i .length; i++) { X.println((i ) + \" Subject \" + cert.getSubjectDN()).out.out.println(\" \" + toHexString()); md5.update(cert.getEncoded()).out.println(\" \" + toHexString(md5.digest())); }(\"Enter1]\");  try { k = (line.length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"KeyStorechanged\"); }; out.close(); System.out.println(\"Added \" + alias + \"'\"); }"}
{"time": "2021-01-20 10:54:50.249656", "n_pass": [1504, 105, 105], "score": "0.9477", "loss": "0.0696", "code": "void main(String[] args) throws Exception { if ((2)) { String = args[0].split(length == 1) ? 3 : parseInt(c[1]); p = (length == 1) ? \"changeit\" : args[1]; passphrase = (System(\"home\") + \"security\");  File(dir, \"jssecacerts\"); if (file.isFile()) { fileFile(dir, \"cacerts\"); } } (\"Loading\" + file + \"\"); InputStream(ks); X5 = (X5) tmf.getTrustManagers()[0]; SavingTrustManager tm = context.init(null, new TrustManager[] { tm }); (\"Opening\" ).setSoTimeout(00); try {println(\"Starting  already trusted\"); } catch (SSLException e) { System.out.println();}if (null) { Systemreturn; } BufferedReader= new BufferedReader((System.in)).println(); MessageDigest.getInstance(); for (int i = 0; i .length; i++) { X.println((i ) + \" Subject \" + cert.getSubjectDN()).out.out.println(\" \" + toHexString()); md5.update(cert.getEncoded()).out.println(\" \" + toHexString(md5.digest())); }(\"Enter1]\");  try { k = (line.length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"KeyStorechanged\"); }; out.close(); System.out.println(\"Added \" + alias + \"'\"); }"}
{"time": "2021-01-20 10:54:51.745292", "n_pass": [1509, 106, 106], "score": "0.9604", "loss": "0.0577", "code": "void main(String[] args) throws Exception { if ((2)) { String = args[0].split(length == 1) ? 3 : parseInt(c[1]); p = (length == 1) ? \"changeit\" : args[1]; passphrase = (System(\"home\") + \"security\");  File(dir, \"jssecacerts\"); if (file.isFile()) { fileFile(dir, \"cacerts\"); } } (\"Loading\" + file + \"\"); InputStream(ks); X5 = (X5) tmf.getTrustManagers()[0]; SavingTrustManager tm = context.init(null, new TrustManager[] { tm }); (\"Opening\" ).setSoTimeout(00); try {println(\"Starting trusted\"); } catch (SSLException e) { System.out.println();}if (null) { Systemreturn; } BufferedReader= new BufferedReader((System.in)).println(); MessageDigest.getInstance(); for (int i = 0; i .length; i++) { X.println((i ) + \" Subject \" + cert.getSubjectDN()).out.out.println(\" \" + toHexString()); md5.update(cert.getEncoded()).out.println(\" \" + toHexString(md5.digest())); }(\"Enter1]\");  try { k = (line.length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"KeyStorechanged\"); }; out.close(); System.out.println(\"Added \" + alias + \"'\"); }"}
{"time": "2021-01-20 10:54:54.945246", "n_pass": [1645, 107, 107], "score": "0.9941", "loss": "0.0074", "code": "void main(String[] args) throws Exception { if ((2)) { String = args[0].split(length == 1) ? 3 : parseInt(c[1]); p = (length == 1) ? \"changeit\" : args[1]; passphrase (System(\"home\") + \"security\");  File(dir, \"jssecacerts\"); if (file.isFile()) { fileFile(dir, \"cacerts\"); } } (\"Loading\" + file + \"\"); InputStream(ks); X5 = (X5) tmf.getTrustManagers()[0]; SavingTrustManager tm = context.init(null, new TrustManager[] { tm }); (\"Opening\" ).setSoTimeout(00); try {println(\"Starting trusted\"); } catch (SSLException e) { System.out.println();}if (null) { Systemreturn; } BufferedReader= new BufferedReader((System.in)).println(); MessageDigest.getInstance(); for (int i = 0; i .length; i++) { X.println((i ) + \" Subject \" + cert.getSubjectDN()).out.out.println(\" \" + toHexString()); md5.update(cert.getEncoded()).out.println(\" \" + toHexString(md5.digest())); }(\"Enter1]\");  try { k = (line.length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"KeyStorechanged\"); }; out.close(); System.out.println(\"Added \" + alias + \"'\"); }"}
{"time": "2021-01-20 10:54:58.497653", "n_pass": [1833, 108, 108], "score": "0.9755", "loss": "0.0294", "code": "void main(String[] args) throws Exception { if ((2)) { String = args[0].split(length == 1) ? 3 : parseInt(c[1]); p = (length == 1) ? \"changeit\" : args[1]; (System(\"home\") + \"security\");  File(dir, \"jssecacerts\"); if (file.isFile()) { fileFile(dir, \"cacerts\"); } } (\"Loading\" + file + \"\"); InputStream(ks); X5 = (X5) tmf.getTrustManagers()[0]; SavingTrustManager tm = context.init(null, new TrustManager[] { tm }); (\"Opening\" ).setSoTimeout(00); try {println(\"Starting trusted\"); } catch (SSLException e) { System.out.println();}if (null) { Systemreturn; } BufferedReader= new BufferedReader((System.in)).println(); MessageDigest.getInstance(); for (int i = 0; i .length; i++) { X.println((i ) + \" Subject \" + cert.getSubjectDN()).out.out.println(\" \" + toHexString()); md5.update(cert.getEncoded()).out.println(\" \" + toHexString(md5.digest())); }(\"Enter1]\");  try { k = (line.length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"KeyStorechanged\"); }; out.close(); System.out.println(\"Added \" + alias + \"'\"); }"}
{"time": "2021-01-20 10:55:30.534838", "n_pass": [2396, 109, 109], "score": "0.9683", "loss": "0.0484", "code": "void main(String[] args) throws Exception { if ((2)) { String = args[0].split(length == 1) ? 3 : parseInt(c[1]); p = (length == 1) ? \"changeit\" : args[1]; ((\"home\") + \"security\");  File(dir, \"jssecacerts\"); if (file.isFile()) { fileFile(dir, \"cacerts\"); } } (\"Loading\" + file + \"\"); InputStream(ks); X5 = (X5) tmf.getTrustManagers()[0]; SavingTrustManager tm = context.init(null, new TrustManager[] { tm }); (\"Opening\" ).setSoTimeout(00); try {println(\"Starting trusted\"); } catch (SSLException e) { System.out.println();}if (null) { Systemreturn; } BufferedReader= new BufferedReader((System.in)).println(); MessageDigest.getInstance(); for (int i = 0; i .length; i++) { X.println((i ) + \" Subject \" + cert.getSubjectDN()).out.out.println(\" \" + toHexString()); md5.update(cert.getEncoded()).out.println(\" \" + toHexString(md5.digest())); }(\"Enter1]\");  try { k = (line.length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"KeyStorechanged\"); }; out.close(); System.out.println(\"Added \" + alias + \"'\"); }"}
{"time": "2021-01-20 10:55:32.056333", "n_pass": [2399, 110, 110], "score": "0.9512", "loss": "0.0679", "code": "void main(String[] args) throws Exception { if ((2)) { String = args[0].split(length == 1) ? 3 : parseInt(c[1]); p = (length == 1) ? \"changeit\" : args[1]; ((\"\") + \"security\");  File(dir, \"jssecacerts\"); if (file.isFile()) { fileFile(dir, \"cacerts\"); } } (\"Loading\" + file + \"\"); InputStream(ks); X5 = (X5) tmf.getTrustManagers()[0]; SavingTrustManager tm = context.init(null, new TrustManager[] { tm }); (\"Opening\" ).setSoTimeout(00); try {println(\"Starting trusted\"); } catch (SSLException e) { System.out.println();}if (null) { Systemreturn; } BufferedReader= new BufferedReader((System.in)).println(); MessageDigest.getInstance(); for (int i = 0; i .length; i++) { X.println((i ) + \" Subject \" + cert.getSubjectDN()).out.out.println(\" \" + toHexString()); md5.update(cert.getEncoded()).out.println(\" \" + toHexString(md5.digest())); }(\"Enter1]\");  try { k = (line.length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"KeyStorechanged\"); }; out.close(); System.out.println(\"Added \" + alias + \"'\"); }"}
{"time": "2021-01-20 10:55:33.537262", "n_pass": [2402, 111, 111], "score": "0.9712", "loss": "0.0432", "code": "void main(String[] args) throws Exception { if ((2)) { String = args[0].split(length == 1) ? 3 : parseInt(c[1]); p = (length == 1) ? \"changeit\" : args[1]; ((\"\")+ \"security\");  File(dir, \"jssecacerts\"); if (file.isFile()) { fileFile(dir, \"cacerts\"); } } (\"Loading\" + file + \"\"); InputStream(ks); X5 = (X5) tmf.getTrustManagers()[0]; SavingTrustManager tm = context.init(null, new TrustManager[] { tm }); (\"Opening\" ).setSoTimeout(00); try {println(\"Starting trusted\"); } catch (SSLException e) { System.out.println();}if (null) { Systemreturn; } BufferedReader= new BufferedReader((System.in)).println(); MessageDigest.getInstance(); for (int i = 0; i .length; i++) { X.println((i ) + \" Subject \" + cert.getSubjectDN()).out.out.println(\" \" + toHexString()); md5.update(cert.getEncoded()).out.println(\" \" + toHexString(md5.digest())); }(\"Enter1]\");  try { k = (line.length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"KeyStorechanged\"); }; out.close(); System.out.println(\"Added \" + alias + \"'\"); }"}
{"time": "2021-01-20 10:55:35.017253", "n_pass": [2404, 112, 112], "score": "0.9781", "loss": "0.0285", "code": "void main(String[] args) throws Exception { if ((2)) { String = args[0].split(length == 1) ? 3 : parseInt(c[1]); p = (length == 1) ? \"changeit\" : args[1]; ((\"\")+\"security\");  File(dir, \"jssecacerts\"); if (file.isFile()) { fileFile(dir, \"cacerts\"); } } (\"Loading\" + file + \"\"); InputStream(ks); X5 = (X5) tmf.getTrustManagers()[0]; SavingTrustManager tm = context.init(null, new TrustManager[] { tm }); (\"Opening\" ).setSoTimeout(00); try {println(\"Starting trusted\"); } catch (SSLException e) { System.out.println();}if (null) { Systemreturn; } BufferedReader= new BufferedReader((System.in)).println(); MessageDigest.getInstance(); for (int i = 0; i .length; i++) { X.println((i ) + \" Subject \" + cert.getSubjectDN()).out.out.println(\" \" + toHexString()); md5.update(cert.getEncoded()).out.println(\" \" + toHexString(md5.digest())); }(\"Enter1]\");  try { k = (line.length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"KeyStorechanged\"); }; out.close(); System.out.println(\"Added \" + alias + \"'\"); }"}
{"time": "2021-01-20 10:55:36.499946", "n_pass": [2406, 113, 113], "score": "0.9784", "loss": "0.0303", "code": "void main(String[] args) throws Exception { if ((2)) { String = args[0].split(length == 1) ? 3 : parseInt(c[1]); p = (length == 1) ? \"changeit\" : args[1]; ((\"\")+\"\");  File(dir, \"jssecacerts\"); if (file.isFile()) { fileFile(dir, \"cacerts\"); } } (\"Loading\" + file + \"\"); InputStream(ks); X5 = (X5) tmf.getTrustManagers()[0]; SavingTrustManager tm = context.init(null, new TrustManager[] { tm }); (\"Opening\" ).setSoTimeout(00); try {println(\"Starting trusted\"); } catch (SSLException e) { System.out.println();}if (null) { Systemreturn; } BufferedReader= new BufferedReader((System.in)).println(); MessageDigest.getInstance(); for (int i = 0; i .length; i++) { X.println((i ) + \" Subject \" + cert.getSubjectDN()).out.out.println(\" \" + toHexString()); md5.update(cert.getEncoded()).out.println(\" \" + toHexString(md5.digest())); }(\"Enter1]\");  try { k = (line.length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"KeyStorechanged\"); }; out.close(); System.out.println(\"Added \" + alias + \"'\"); }"}
{"time": "2021-01-20 10:55:37.980552", "n_pass": [2410, 114, 114], "score": "0.977", "loss": "0.0314", "code": "void main(String[] args) throws Exception { if ((2)) { String = args[0].split(length == 1) ? 3 : parseInt(c[1]); p = (length == 1) ? \"changeit\" : args[1]; ((\"\")+\"\"); File(dir, \"jssecacerts\"); if (file.isFile()) { fileFile(dir, \"cacerts\"); } } (\"Loading\" + file + \"\"); InputStream(ks); X5 = (X5) tmf.getTrustManagers()[0]; SavingTrustManager tm = context.init(null, new TrustManager[] { tm }); (\"Opening\" ).setSoTimeout(00); try {println(\"Starting trusted\"); } catch (SSLException e) { System.out.println();}if (null) { Systemreturn; } BufferedReader= new BufferedReader((System.in)).println(); MessageDigest.getInstance(); for (int i = 0; i .length; i++) { X.println((i ) + \" Subject \" + cert.getSubjectDN()).out.out.println(\" \" + toHexString()); md5.update(cert.getEncoded()).out.println(\" \" + toHexString(md5.digest())); }(\"Enter1]\");  try { k = (line.length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"KeyStorechanged\"); }; out.close(); System.out.println(\"Added \" + alias + \"'\"); }"}
{"time": "2021-01-20 10:55:39.455733", "n_pass": [2411, 115, 115], "score": "0.9826", "loss": "0.0228", "code": "void main(String[] args) throws Exception { if ((2)) { String = args[0].split(length == 1) ? 3 : parseInt(c[1]); p = (length == 1) ? \"changeit\" : args[1]; ((\"\")+\"\");File(dir, \"jssecacerts\"); if (file.isFile()) { fileFile(dir, \"cacerts\"); } } (\"Loading\" + file + \"\"); InputStream(ks); X5 = (X5) tmf.getTrustManagers()[0]; SavingTrustManager tm = context.init(null, new TrustManager[] { tm }); (\"Opening\" ).setSoTimeout(00); try {println(\"Starting trusted\"); } catch (SSLException e) { System.out.println();}if (null) { Systemreturn; } BufferedReader= new BufferedReader((System.in)).println(); MessageDigest.getInstance(); for (int i = 0; i .length; i++) { X.println((i ) + \" Subject \" + cert.getSubjectDN()).out.out.println(\" \" + toHexString()); md5.update(cert.getEncoded()).out.println(\" \" + toHexString(md5.digest())); }(\"Enter1]\");  try { k = (line.length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"KeyStorechanged\"); }; out.close(); System.out.println(\"Added \" + alias + \"'\"); }"}
{"time": "2021-01-20 10:55:40.943369", "n_pass": [2416, 116, 116], "score": "0.9673", "loss": "0.0422", "code": "void main(String[] args) throws Exception { if ((2)) { String = args[0].split(length == 1) ? 3 : parseInt(c[1]); p = (length == 1) ? \"changeit\" : args[1]; ((\"\")+\"\");File(dir,\"jssecacerts\"); if (file.isFile()) { fileFile(dir, \"cacerts\"); } } (\"Loading\" + file + \"\"); InputStream(ks); X5 = (X5) tmf.getTrustManagers()[0]; SavingTrustManager tm = context.init(null, new TrustManager[] { tm }); (\"Opening\" ).setSoTimeout(00); try {println(\"Starting trusted\"); } catch (SSLException e) { System.out.println();}if (null) { Systemreturn; } BufferedReader= new BufferedReader((System.in)).println(); MessageDigest.getInstance(); for (int i = 0; i .length; i++) { X.println((i ) + \" Subject \" + cert.getSubjectDN()).out.out.println(\" \" + toHexString()); md5.update(cert.getEncoded()).out.println(\" \" + toHexString(md5.digest())); }(\"Enter1]\");  try { k = (line.length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"KeyStorechanged\"); }; out.close(); System.out.println(\"Added \" + alias + \"'\"); }"}
{"time": "2021-01-20 10:55:42.420796", "n_pass": [2418, 117, 117], "score": "0.9572", "loss": "0.0652", "code": "void main(String[] args) throws Exception { if ((2)) { String = args[0].split(length == 1) ? 3 : parseInt(c[1]); p = (length == 1) ? \"changeit\" : args[1]; ((\"\")+\"\");File(dir,\"\"); if (file.isFile()) { fileFile(dir, \"cacerts\"); } } (\"Loading\" + file + \"\"); InputStream(ks); X5 = (X5) tmf.getTrustManagers()[0]; SavingTrustManager tm = context.init(null, new TrustManager[] { tm }); (\"Opening\" ).setSoTimeout(00); try {println(\"Starting trusted\"); } catch (SSLException e) { System.out.println();}if (null) { Systemreturn; } BufferedReader= new BufferedReader((System.in)).println(); MessageDigest.getInstance(); for (int i = 0; i .length; i++) { X.println((i ) + \" Subject \" + cert.getSubjectDN()).out.out.println(\" \" + toHexString()); md5.update(cert.getEncoded()).out.println(\" \" + toHexString(md5.digest())); }(\"Enter1]\");  try { k = (line.length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"KeyStorechanged\"); }; out.close(); System.out.println(\"Added \" + alias + \"'\"); }"}
{"time": "2021-01-20 10:55:43.903055", "n_pass": [2422, 118, 118], "score": "0.9947", "loss": "0.0061", "code": "void main(String[] args) throws Exception { if ((2)) { String = args[0].split(length == 1) ? 3 : parseInt(c[1]); p = (length == 1) ? \"changeit\" : args[1]; ((\"\")+\"\");File(dir,\"\");if (file.isFile()) { fileFile(dir, \"cacerts\"); } } (\"Loading\" + file + \"\"); InputStream(ks); X5 = (X5) tmf.getTrustManagers()[0]; SavingTrustManager tm = context.init(null, new TrustManager[] { tm }); (\"Opening\" ).setSoTimeout(00); try {println(\"Starting trusted\"); } catch (SSLException e) { System.out.println();}if (null) { Systemreturn; } BufferedReader= new BufferedReader((System.in)).println(); MessageDigest.getInstance(); for (int i = 0; i .length; i++) { X.println((i ) + \" Subject \" + cert.getSubjectDN()).out.out.println(\" \" + toHexString()); md5.update(cert.getEncoded()).out.println(\" \" + toHexString(md5.digest())); }(\"Enter1]\");  try { k = (line.length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"KeyStorechanged\"); }; out.close(); System.out.println(\"Added \" + alias + \"'\"); }"}
{"time": "2021-01-20 10:55:45.403391", "n_pass": [2424, 119, 119], "score": "0.994", "loss": "0.0079", "code": "void main(String[] args) throws Exception { if ((2)) { String = args[0].split(length == 1) ? 3 : parseInt(c[1]); p = (length == 1) ? \"changeit\" : args[1]; ((\"\")+\"\");File(dir,\"\");if(file.isFile()) { fileFile(dir, \"cacerts\"); } } (\"Loading\" + file + \"\"); InputStream(ks); X5 = (X5) tmf.getTrustManagers()[0]; SavingTrustManager tm = context.init(null, new TrustManager[] { tm }); (\"Opening\" ).setSoTimeout(00); try {println(\"Starting trusted\"); } catch (SSLException e) { System.out.println();}if (null) { Systemreturn; } BufferedReader= new BufferedReader((System.in)).println(); MessageDigest.getInstance(); for (int i = 0; i .length; i++) { X.println((i ) + \" Subject \" + cert.getSubjectDN()).out.out.println(\" \" + toHexString()); md5.update(cert.getEncoded()).out.println(\" \" + toHexString(md5.digest())); }(\"Enter1]\");  try { k = (line.length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"KeyStorechanged\"); }; out.close(); System.out.println(\"Added \" + alias + \"'\"); }"}
{"time": "2021-01-20 10:55:46.882280", "n_pass": [2427, 120, 120], "score": "0.9898", "loss": "0.0121", "code": "void main(String[] args) throws Exception { if ((2)) { String = args[0].split(length == 1) ? 3 : parseInt(c[1]); p = (length == 1) ? \"changeit\" : args[1]; ((\"\")+\"\");File(dir,\"\");if(fileisFile()) { fileFile(dir, \"cacerts\"); } } (\"Loading\" + file + \"\"); InputStream(ks); X5 = (X5) tmf.getTrustManagers()[0]; SavingTrustManager tm = context.init(null, new TrustManager[] { tm }); (\"Opening\" ).setSoTimeout(00); try {println(\"Starting trusted\"); } catch (SSLException e) { System.out.println();}if (null) { Systemreturn; } BufferedReader= new BufferedReader((System.in)).println(); MessageDigest.getInstance(); for (int i = 0; i .length; i++) { X.println((i ) + \" Subject \" + cert.getSubjectDN()).out.out.println(\" \" + toHexString()); md5.update(cert.getEncoded()).out.println(\" \" + toHexString(md5.digest())); }(\"Enter1]\");  try { k = (line.length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"KeyStorechanged\"); }; out.close(); System.out.println(\"Added \" + alias + \"'\"); }"}
{"time": "2021-01-20 10:55:48.380091", "n_pass": [2428, 121, 121], "score": "0.9804", "loss": "0.0271", "code": "void main(String[] args) throws Exception { if ((2)) { String = args[0].split(length == 1) ? 3 : parseInt(c[1]); p = (length == 1) ? \"changeit\" : args[1]; ((\"\")+\"\");File(dir,\"\");if(file()) { fileFile(dir, \"cacerts\"); } } (\"Loading\" + file + \"\"); InputStream(ks); X5 = (X5) tmf.getTrustManagers()[0]; SavingTrustManager tm = context.init(null, new TrustManager[] { tm }); (\"Opening\" ).setSoTimeout(00); try {println(\"Starting trusted\"); } catch (SSLException e) { System.out.println();}if (null) { Systemreturn; } BufferedReader= new BufferedReader((System.in)).println(); MessageDigest.getInstance(); for (int i = 0; i .length; i++) { X.println((i ) + \" Subject \" + cert.getSubjectDN()).out.out.println(\" \" + toHexString()); md5.update(cert.getEncoded()).out.println(\" \" + toHexString(md5.digest())); }(\"Enter1]\");  try { k = (line.length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"KeyStorechanged\"); }; out.close(); System.out.println(\"Added \" + alias + \"'\"); }"}
{"time": "2021-01-20 10:55:49.864436", "n_pass": [2432, 122, 122], "score": "0.9795", "loss": "0.0262", "code": "void main(String[] args) throws Exception { if ((2)) { String = args[0].split(length == 1) ? 3 : parseInt(c[1]); p = (length == 1) ? \"changeit\" : args[1]; ((\"\")+\"\");File(dir,\"\");if(file()){ fileFile(dir, \"cacerts\"); } } (\"Loading\" + file + \"\"); InputStream(ks); X5 = (X5) tmf.getTrustManagers()[0]; SavingTrustManager tm = context.init(null, new TrustManager[] { tm }); (\"Opening\" ).setSoTimeout(00); try {println(\"Starting trusted\"); } catch (SSLException e) { System.out.println();}if (null) { Systemreturn; } BufferedReader= new BufferedReader((System.in)).println(); MessageDigest.getInstance(); for (int i = 0; i .length; i++) { X.println((i ) + \" Subject \" + cert.getSubjectDN()).out.out.println(\" \" + toHexString()); md5.update(cert.getEncoded()).out.println(\" \" + toHexString(md5.digest())); }(\"Enter1]\");  try { k = (line.length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"KeyStorechanged\"); }; out.close(); System.out.println(\"Added \" + alias + \"'\"); }"}
{"time": "2021-01-20 10:55:51.370328", "n_pass": [2434, 123, 123], "score": "0.9674", "loss": "0.0463", "code": "void main(String[] args) throws Exception { if ((2)) { String = args[0].split(length == 1) ? 3 : parseInt(c[1]); p = (length == 1) ? \"changeit\" : args[1]; ((\"\")+\"\");File(dir,\"\");if(file()){fileFile(dir, \"cacerts\"); } } (\"Loading\" + file + \"\"); InputStream(ks); X5 = (X5) tmf.getTrustManagers()[0]; SavingTrustManager tm = context.init(null, new TrustManager[] { tm }); (\"Opening\" ).setSoTimeout(00); try {println(\"Starting trusted\"); } catch (SSLException e) { System.out.println();}if (null) { Systemreturn; } BufferedReader= new BufferedReader((System.in)).println(); MessageDigest.getInstance(); for (int i = 0; i .length; i++) { X.println((i ) + \" Subject \" + cert.getSubjectDN()).out.out.println(\" \" + toHexString()); md5.update(cert.getEncoded()).out.println(\" \" + toHexString(md5.digest())); }(\"Enter1]\");  try { k = (line.length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"KeyStorechanged\"); }; out.close(); System.out.println(\"Added \" + alias + \"'\"); }"}
{"time": "2021-01-20 10:55:52.891230", "n_pass": [2435, 124, 124], "score": "0.9707", "loss": "0.0355", "code": "void main(String[] args) throws Exception { if ((2)) { String = args[0].split(length == 1) ? 3 : parseInt(c[1]); p = (length == 1) ? \"changeit\" : args[1]; ((\"\")+\"\");File(dir,\"\");if(file()){File(dir, \"cacerts\"); } } (\"Loading\" + file + \"\"); InputStream(ks); X5 = (X5) tmf.getTrustManagers()[0]; SavingTrustManager tm = context.init(null, new TrustManager[] { tm }); (\"Opening\" ).setSoTimeout(00); try {println(\"Starting trusted\"); } catch (SSLException e) { System.out.println();}if (null) { Systemreturn; } BufferedReader= new BufferedReader((System.in)).println(); MessageDigest.getInstance(); for (int i = 0; i .length; i++) { X.println((i ) + \" Subject \" + cert.getSubjectDN()).out.out.println(\" \" + toHexString()); md5.update(cert.getEncoded()).out.println(\" \" + toHexString(md5.digest())); }(\"Enter1]\");  try { k = (line.length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"KeyStorechanged\"); }; out.close(); System.out.println(\"Added \" + alias + \"'\"); }"}
{"time": "2021-01-20 10:55:54.384420", "n_pass": [2440, 125, 125], "score": "0.9749", "loss": "0.0336", "code": "void main(String[] args) throws Exception { if ((2)) { String = args[0].split(length == 1) ? 3 : parseInt(c[1]); p = (length == 1) ? \"changeit\" : args[1]; ((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"cacerts\"); } } (\"Loading\" + file + \"\"); InputStream(ks); X5 = (X5) tmf.getTrustManagers()[0]; SavingTrustManager tm = context.init(null, new TrustManager[] { tm }); (\"Opening\" ).setSoTimeout(00); try {println(\"Starting trusted\"); } catch (SSLException e) { System.out.println();}if (null) { Systemreturn; } BufferedReader= new BufferedReader((System.in)).println(); MessageDigest.getInstance(); for (int i = 0; i .length; i++) { X.println((i ) + \" Subject \" + cert.getSubjectDN()).out.out.println(\" \" + toHexString()); md5.update(cert.getEncoded()).out.println(\" \" + toHexString(md5.digest())); }(\"Enter1]\");  try { k = (line.length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"KeyStorechanged\"); }; out.close(); System.out.println(\"Added \" + alias + \"'\"); }"}
{"time": "2021-01-20 10:55:55.876366", "n_pass": [2442, 126, 126], "score": "0.9922", "loss": "0.0112", "code": "void main(String[] args) throws Exception { if ((2)) { String = args[0].split(length == 1) ? 3 : parseInt(c[1]); p = (length == 1) ? \"changeit\" : args[1]; ((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\"); } } (\"Loading\" + file + \"\"); InputStream(ks); X5 = (X5) tmf.getTrustManagers()[0]; SavingTrustManager tm = context.init(null, new TrustManager[] { tm }); (\"Opening\" ).setSoTimeout(00); try {println(\"Starting trusted\"); } catch (SSLException e) { System.out.println();}if (null) { Systemreturn; } BufferedReader= new BufferedReader((System.in)).println(); MessageDigest.getInstance(); for (int i = 0; i .length; i++) { X.println((i ) + \" Subject \" + cert.getSubjectDN()).out.out.println(\" \" + toHexString()); md5.update(cert.getEncoded()).out.println(\" \" + toHexString(md5.digest())); }(\"Enter1]\");  try { k = (line.length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"KeyStorechanged\"); }; out.close(); System.out.println(\"Added \" + alias + \"'\"); }"}
{"time": "2021-01-20 10:55:57.399669", "n_pass": [2446, 127, 127], "score": "0.9686", "loss": "0.0454", "code": "void main(String[] args) throws Exception { if ((2)) { String = args[0].split(length == 1) ? 3 : parseInt(c[1]); p = (length == 1) ? \"changeit\" : args[1]; ((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");} } (\"Loading\" + file + \"\"); InputStream(ks); X5 = (X5) tmf.getTrustManagers()[0]; SavingTrustManager tm = context.init(null, new TrustManager[] { tm }); (\"Opening\" ).setSoTimeout(00); try {println(\"Starting trusted\"); } catch (SSLException e) { System.out.println();}if (null) { Systemreturn; } BufferedReader= new BufferedReader((System.in)).println(); MessageDigest.getInstance(); for (int i = 0; i .length; i++) { X.println((i ) + \" Subject \" + cert.getSubjectDN()).out.out.println(\" \" + toHexString()); md5.update(cert.getEncoded()).out.println(\" \" + toHexString(md5.digest())); }(\"Enter1]\");  try { k = (line.length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"KeyStorechanged\"); }; out.close(); System.out.println(\"Added \" + alias + \"'\"); }"}
{"time": "2021-01-20 10:55:58.881281", "n_pass": [2448, 128, 128], "score": "0.9831", "loss": "0.0211", "code": "void main(String[] args) throws Exception { if ((2)) { String = args[0].split(length == 1) ? 3 : parseInt(c[1]); p = (length == 1) ? \"changeit\" : args[1]; ((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}} (\"Loading\" + file + \"\"); InputStream(ks); X5 = (X5) tmf.getTrustManagers()[0]; SavingTrustManager tm = context.init(null, new TrustManager[] { tm }); (\"Opening\" ).setSoTimeout(00); try {println(\"Starting trusted\"); } catch (SSLException e) { System.out.println();}if (null) { Systemreturn; } BufferedReader= new BufferedReader((System.in)).println(); MessageDigest.getInstance(); for (int i = 0; i .length; i++) { X.println((i ) + \" Subject \" + cert.getSubjectDN()).out.out.println(\" \" + toHexString()); md5.update(cert.getEncoded()).out.println(\" \" + toHexString(md5.digest())); }(\"Enter1]\");  try { k = (line.length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"KeyStorechanged\"); }; out.close(); System.out.println(\"Added \" + alias + \"'\"); }"}
{"time": "2021-01-20 10:56:00.374512", "n_pass": [2450, 129, 129], "score": "0.9516", "loss": "0.0747", "code": "void main(String[] args) throws Exception { if ((2)) { String = args[0].split(length == 1) ? 3 : parseInt(c[1]); p = (length == 1) ? \"changeit\" : args[1]; ((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"Loading\" + file + \"\"); InputStream(ks); X5 = (X5) tmf.getTrustManagers()[0]; SavingTrustManager tm = context.init(null, new TrustManager[] { tm }); (\"Opening\" ).setSoTimeout(00); try {println(\"Starting trusted\"); } catch (SSLException e) { System.out.println();}if (null) { Systemreturn; } BufferedReader= new BufferedReader((System.in)).println(); MessageDigest.getInstance(); for (int i = 0; i .length; i++) { X.println((i ) + \" Subject \" + cert.getSubjectDN()).out.out.println(\" \" + toHexString()); md5.update(cert.getEncoded()).out.println(\" \" + toHexString(md5.digest())); }(\"Enter1]\");  try { k = (line.length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"KeyStorechanged\"); }; out.close(); System.out.println(\"Added \" + alias + \"'\"); }"}
{"time": "2021-01-20 10:56:01.850726", "n_pass": [2453, 130, 130], "score": "0.9634", "loss": "0.0593", "code": "void main(String[] args) throws Exception { if ((2)) { String = args[0].split(length == 1) ? 3 : parseInt(c[1]); p = (length == 1) ? \"changeit\" : args[1]; ((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\" + file + \"\"); InputStream(ks); X5 = (X5) tmf.getTrustManagers()[0]; SavingTrustManager tm = context.init(null, new TrustManager[] { tm }); (\"Opening\" ).setSoTimeout(00); try {println(\"Starting trusted\"); } catch (SSLException e) { System.out.println();}if (null) { Systemreturn; } BufferedReader= new BufferedReader((System.in)).println(); MessageDigest.getInstance(); for (int i = 0; i .length; i++) { X.println((i ) + \" Subject \" + cert.getSubjectDN()).out.out.println(\" \" + toHexString()); md5.update(cert.getEncoded()).out.println(\" \" + toHexString(md5.digest())); }(\"Enter1]\");  try { k = (line.length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"KeyStorechanged\"); }; out.close(); System.out.println(\"Added \" + alias + \"'\"); }"}
{"time": "2021-01-20 10:56:03.349066", "n_pass": [2455, 131, 131], "score": "0.9781", "loss": "0.0279", "code": "void main(String[] args) throws Exception { if ((2)) { String = args[0].split(length == 1) ? 3 : parseInt(c[1]); p = (length == 1) ? \"changeit\" : args[1]; ((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+ file + \"\"); InputStream(ks); X5 = (X5) tmf.getTrustManagers()[0]; SavingTrustManager tm = context.init(null, new TrustManager[] { tm }); (\"Opening\" ).setSoTimeout(00); try {println(\"Starting trusted\"); } catch (SSLException e) { System.out.println();}if (null) { Systemreturn; } BufferedReader= new BufferedReader((System.in)).println(); MessageDigest.getInstance(); for (int i = 0; i .length; i++) { X.println((i ) + \" Subject \" + cert.getSubjectDN()).out.out.println(\" \" + toHexString()); md5.update(cert.getEncoded()).out.println(\" \" + toHexString(md5.digest())); }(\"Enter1]\");  try { k = (line.length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"KeyStorechanged\"); }; out.close(); System.out.println(\"Added \" + alias + \"'\"); }"}
{"time": "2021-01-20 10:56:04.827368", "n_pass": [2457, 132, 132], "score": "0.9839", "loss": "0.0203", "code": "void main(String[] args) throws Exception { if ((2)) { String = args[0].split(length == 1) ? 3 : parseInt(c[1]); p = (length == 1) ? \"changeit\" : args[1]; ((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+file + \"\"); InputStream(ks); X5 = (X5) tmf.getTrustManagers()[0]; SavingTrustManager tm = context.init(null, new TrustManager[] { tm }); (\"Opening\" ).setSoTimeout(00); try {println(\"Starting trusted\"); } catch (SSLException e) { System.out.println();}if (null) { Systemreturn; } BufferedReader= new BufferedReader((System.in)).println(); MessageDigest.getInstance(); for (int i = 0; i .length; i++) { X.println((i ) + \" Subject \" + cert.getSubjectDN()).out.out.println(\" \" + toHexString()); md5.update(cert.getEncoded()).out.println(\" \" + toHexString(md5.digest())); }(\"Enter1]\");  try { k = (line.length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"KeyStorechanged\"); }; out.close(); System.out.println(\"Added \" + alias + \"'\"); }"}
{"time": "2021-01-20 10:56:06.315858", "n_pass": [2458, 133, 133], "score": "0.9833", "loss": "0.0218", "code": "void main(String[] args) throws Exception { if ((2)) { String = args[0].split(length == 1) ? 3 : parseInt(c[1]); p = (length == 1) ? \"changeit\" : args[1]; ((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+ + \"\"); InputStream(ks); X5 = (X5) tmf.getTrustManagers()[0]; SavingTrustManager tm = context.init(null, new TrustManager[] { tm }); (\"Opening\" ).setSoTimeout(00); try {println(\"Starting trusted\"); } catch (SSLException e) { System.out.println();}if (null) { Systemreturn; } BufferedReader= new BufferedReader((System.in)).println(); MessageDigest.getInstance(); for (int i = 0; i .length; i++) { X.println((i ) + \" Subject \" + cert.getSubjectDN()).out.out.println(\" \" + toHexString()); md5.update(cert.getEncoded()).out.println(\" \" + toHexString(md5.digest())); }(\"Enter1]\");  try { k = (line.length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"KeyStorechanged\"); }; out.close(); System.out.println(\"Added \" + alias + \"'\"); }"}
{"time": "2021-01-20 10:56:07.799876", "n_pass": [2460, 134, 134], "score": "0.9921", "loss": "0.0092", "code": "void main(String[] args) throws Exception { if ((2)) { String = args[0].split(length == 1) ? 3 : parseInt(c[1]); p = (length == 1) ? \"changeit\" : args[1]; ((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+  \"\"); InputStream(ks); X5 = (X5) tmf.getTrustManagers()[0]; SavingTrustManager tm = context.init(null, new TrustManager[] { tm }); (\"Opening\" ).setSoTimeout(00); try {println(\"Starting trusted\"); } catch (SSLException e) { System.out.println();}if (null) { Systemreturn; } BufferedReader= new BufferedReader((System.in)).println(); MessageDigest.getInstance(); for (int i = 0; i .length; i++) { X.println((i ) + \" Subject \" + cert.getSubjectDN()).out.out.println(\" \" + toHexString()); md5.update(cert.getEncoded()).out.println(\" \" + toHexString(md5.digest())); }(\"Enter1]\");  try { k = (line.length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"KeyStorechanged\"); }; out.close(); System.out.println(\"Added \" + alias + \"'\"); }"}
{"time": "2021-01-20 10:56:09.279407", "n_pass": [2461, 135, 135], "score": "0.9851", "loss": "0.0191", "code": "void main(String[] args) throws Exception { if ((2)) { String = args[0].split(length == 1) ? 3 : parseInt(c[1]); p = (length == 1) ? \"changeit\" : args[1]; ((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+ \"\"); InputStream(ks); X5 = (X5) tmf.getTrustManagers()[0]; SavingTrustManager tm = context.init(null, new TrustManager[] { tm }); (\"Opening\" ).setSoTimeout(00); try {println(\"Starting trusted\"); } catch (SSLException e) { System.out.println();}if (null) { Systemreturn; } BufferedReader= new BufferedReader((System.in)).println(); MessageDigest.getInstance(); for (int i = 0; i .length; i++) { X.println((i ) + \" Subject \" + cert.getSubjectDN()).out.out.println(\" \" + toHexString()); md5.update(cert.getEncoded()).out.println(\" \" + toHexString(md5.digest())); }(\"Enter1]\");  try { k = (line.length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"KeyStorechanged\"); }; out.close(); System.out.println(\"Added \" + alias + \"'\"); }"}
{"time": "2021-01-20 10:56:10.782372", "n_pass": [2466, 136, 136], "score": "0.9671", "loss": "0.0463", "code": "void main(String[] args) throws Exception { if ((2)) { String = args[0].split(length == 1) ? 3 : parseInt(c[1]); p = (length == 1) ? \"changeit\" : args[1]; ((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+ \"\");InputStream(ks); X5 = (X5) tmf.getTrustManagers()[0]; SavingTrustManager tm = context.init(null, new TrustManager[] { tm }); (\"Opening\" ).setSoTimeout(00); try {println(\"Starting trusted\"); } catch (SSLException e) { System.out.println();}if (null) { Systemreturn; } BufferedReader= new BufferedReader((System.in)).println(); MessageDigest.getInstance(); for (int i = 0; i .length; i++) { X.println((i ) + \" Subject \" + cert.getSubjectDN()).out.out.println(\" \" + toHexString()); md5.update(cert.getEncoded()).out.println(\" \" + toHexString(md5.digest())); }(\"Enter1]\");  try { k = (line.length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"KeyStorechanged\"); }; out.close(); System.out.println(\"Added \" + alias + \"'\"); }"}
{"time": "2021-01-20 10:56:12.275943", "n_pass": [2467, 137, 137], "score": "0.9892", "loss": "0.0119", "code": "void main(String[] args) throws Exception { if ((2)) { String = args[0].split(length == 1) ? 3 : parseInt(c[1]); p = (length == 1) ? \"changeit\" : args[1]; ((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+ \"\");(ks); X5 = (X5) tmf.getTrustManagers()[0]; SavingTrustManager tm = context.init(null, new TrustManager[] { tm }); (\"Opening\" ).setSoTimeout(00); try {println(\"Starting trusted\"); } catch (SSLException e) { System.out.println();}if (null) { Systemreturn; } BufferedReader= new BufferedReader((System.in)).println(); MessageDigest.getInstance(); for (int i = 0; i .length; i++) { X.println((i ) + \" Subject \" + cert.getSubjectDN()).out.out.println(\" \" + toHexString()); md5.update(cert.getEncoded()).out.println(\" \" + toHexString(md5.digest())); }(\"Enter1]\");  try { k = (line.length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"KeyStorechanged\"); }; out.close(); System.out.println(\"Added \" + alias + \"'\"); }"}
{"time": "2021-01-20 10:56:14.169742", "n_pass": [2472, 138, 138], "score": "0.9692", "loss": "0.0384", "code": "void main(String[] args) throws Exception { if ((2)) { String = args[0].split(length == 1) ? 3 : parseInt(c[1]); p = (length == 1) ? \"changeit\" : args[1]; ((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+ \"\");(ks);X5 = (X5) tmf.getTrustManagers()[0]; SavingTrustManager tm = context.init(null, new TrustManager[] { tm }); (\"Opening\" ).setSoTimeout(00); try {println(\"Starting trusted\"); } catch (SSLException e) { System.out.println();}if (null) { Systemreturn; } BufferedReader= new BufferedReader((System.in)).println(); MessageDigest.getInstance(); for (int i = 0; i .length; i++) { X.println((i ) + \" Subject \" + cert.getSubjectDN()).out.out.println(\" \" + toHexString()); md5.update(cert.getEncoded()).out.println(\" \" + toHexString(md5.digest())); }(\"Enter1]\");  try { k = (line.length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"KeyStorechanged\"); }; out.close(); System.out.println(\"Added \" + alias + \"'\"); }"}
{"time": "2021-01-20 10:56:16.054760", "n_pass": [2474, 139, 139], "score": "0.9894", "loss": "0.0124", "code": "void main(String[] args) throws Exception { if ((2)) { String = args[0].split(length == 1) ? 3 : parseInt(c[1]); p = (length == 1) ? \"changeit\" : args[1]; ((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+ \"\");(ks);X = (X5) tmf.getTrustManagers()[0]; SavingTrustManager tm = context.init(null, new TrustManager[] { tm }); (\"Opening\" ).setSoTimeout(00); try {println(\"Starting trusted\"); } catch (SSLException e) { System.out.println();}if (null) { Systemreturn; } BufferedReader= new BufferedReader((System.in)).println(); MessageDigest.getInstance(); for (int i = 0; i .length; i++) { X.println((i ) + \" Subject \" + cert.getSubjectDN()).out.out.println(\" \" + toHexString()); md5.update(cert.getEncoded()).out.println(\" \" + toHexString(md5.digest())); }(\"Enter1]\");  try { k = (line.length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"KeyStorechanged\"); }; out.close(); System.out.println(\"Added \" + alias + \"'\"); }"}
{"time": "2021-01-20 10:56:17.537699", "n_pass": [2475, 140, 140], "score": "0.9789", "loss": "0.0244", "code": "void main(String[] args) throws Exception { if ((2)) { String = args[0].split(length == 1) ? 3 : parseInt(c[1]); p = (length == 1) ? \"changeit\" : args[1]; ((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+ \"\");(ks);X= (X5) tmf.getTrustManagers()[0]; SavingTrustManager tm = context.init(null, new TrustManager[] { tm }); (\"Opening\" ).setSoTimeout(00); try {println(\"Starting trusted\"); } catch (SSLException e) { System.out.println();}if (null) { Systemreturn; } BufferedReader= new BufferedReader((System.in)).println(); MessageDigest.getInstance(); for (int i = 0; i .length; i++) { X.println((i ) + \" Subject \" + cert.getSubjectDN()).out.out.println(\" \" + toHexString()); md5.update(cert.getEncoded()).out.println(\" \" + toHexString(md5.digest())); }(\"Enter1]\");  try { k = (line.length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"KeyStorechanged\"); }; out.close(); System.out.println(\"Added \" + alias + \"'\"); }"}
{"time": "2021-01-20 10:56:19.012185", "n_pass": [2477, 141, 141], "score": "0.9508", "loss": "0.0686", "code": "void main(String[] args) throws Exception { if ((2)) { String = args[0].split(length == 1) ? 3 : parseInt(c[1]); p = (length == 1) ? \"changeit\" : args[1]; ((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+ \"\");(ks);X=(X5) tmf.getTrustManagers()[0]; SavingTrustManager tm = context.init(null, new TrustManager[] { tm }); (\"Opening\" ).setSoTimeout(00); try {println(\"Starting trusted\"); } catch (SSLException e) { System.out.println();}if (null) { Systemreturn; } BufferedReader= new BufferedReader((System.in)).println(); MessageDigest.getInstance(); for (int i = 0; i .length; i++) { X.println((i ) + \" Subject \" + cert.getSubjectDN()).out.out.println(\" \" + toHexString()); md5.update(cert.getEncoded()).out.println(\" \" + toHexString(md5.digest())); }(\"Enter1]\");  try { k = (line.length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"KeyStorechanged\"); }; out.close(); System.out.println(\"Added \" + alias + \"'\"); }"}
{"time": "2021-01-20 10:56:20.512380", "n_pass": [2480, 142, 142], "score": "0.9827", "loss": "0.0232", "code": "void main(String[] args) throws Exception { if ((2)) { String = args[0].split(length == 1) ? 3 : parseInt(c[1]); p = (length == 1) ? \"changeit\" : args[1]; ((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+ \"\");(ks);X=(X) tmf.getTrustManagers()[0]; SavingTrustManager tm = context.init(null, new TrustManager[] { tm }); (\"Opening\" ).setSoTimeout(00); try {println(\"Starting trusted\"); } catch (SSLException e) { System.out.println();}if (null) { Systemreturn; } BufferedReader= new BufferedReader((System.in)).println(); MessageDigest.getInstance(); for (int i = 0; i .length; i++) { X.println((i ) + \" Subject \" + cert.getSubjectDN()).out.out.println(\" \" + toHexString()); md5.update(cert.getEncoded()).out.println(\" \" + toHexString(md5.digest())); }(\"Enter1]\");  try { k = (line.length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"KeyStorechanged\"); }; out.close(); System.out.println(\"Added \" + alias + \"'\"); }"}
{"time": "2021-01-20 10:56:21.984673", "n_pass": [2482, 143, 143], "score": "0.9649", "loss": "0.0557", "code": "void main(String[] args) throws Exception { if ((2)) { String = args[0].split(length == 1) ? 3 : parseInt(c[1]); p = (length == 1) ? \"changeit\" : args[1]; ((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+ \"\");(ks);X=(X)tmf.getTrustManagers()[0]; SavingTrustManager tm = context.init(null, new TrustManager[] { tm }); (\"Opening\" ).setSoTimeout(00); try {println(\"Starting trusted\"); } catch (SSLException e) { System.out.println();}if (null) { Systemreturn; } BufferedReader= new BufferedReader((System.in)).println(); MessageDigest.getInstance(); for (int i = 0; i .length; i++) { X.println((i ) + \" Subject \" + cert.getSubjectDN()).out.out.println(\" \" + toHexString()); md5.update(cert.getEncoded()).out.println(\" \" + toHexString(md5.digest())); }(\"Enter1]\");  try { k = (line.length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"KeyStorechanged\"); }; out.close(); System.out.println(\"Added \" + alias + \"'\"); }"}
{"time": "2021-01-20 10:56:23.450776", "n_pass": [2483, 144, 144], "score": "0.9814", "loss": "0.029", "code": "void main(String[] args) throws Exception { if ((2)) { String = args[0].split(length == 1) ? 3 : parseInt(c[1]); p = (length == 1) ? \"changeit\" : args[1]; ((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+ \"\");(ks);X=(X).getTrustManagers()[0]; SavingTrustManager tm = context.init(null, new TrustManager[] { tm }); (\"Opening\" ).setSoTimeout(00); try {println(\"Starting trusted\"); } catch (SSLException e) { System.out.println();}if (null) { Systemreturn; } BufferedReader= new BufferedReader((System.in)).println(); MessageDigest.getInstance(); for (int i = 0; i .length; i++) { X.println((i ) + \" Subject \" + cert.getSubjectDN()).out.out.println(\" \" + toHexString()); md5.update(cert.getEncoded()).out.println(\" \" + toHexString(md5.digest())); }(\"Enter1]\");  try { k = (line.length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"KeyStorechanged\"); }; out.close(); System.out.println(\"Added \" + alias + \"'\"); }"}
{"time": "2021-01-20 10:56:24.957980", "n_pass": [2484, 145, 145], "score": "0.9797", "loss": "0.0295", "code": "void main(String[] args) throws Exception { if ((2)) { String = args[0].split(length == 1) ? 3 : parseInt(c[1]); p = (length == 1) ? \"changeit\" : args[1]; ((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+ \"\");(ks);X=(X)getTrustManagers()[0]; SavingTrustManager tm = context.init(null, new TrustManager[] { tm }); (\"Opening\" ).setSoTimeout(00); try {println(\"Starting trusted\"); } catch (SSLException e) { System.out.println();}if (null) { Systemreturn; } BufferedReader= new BufferedReader((System.in)).println(); MessageDigest.getInstance(); for (int i = 0; i .length; i++) { X.println((i ) + \" Subject \" + cert.getSubjectDN()).out.out.println(\" \" + toHexString()); md5.update(cert.getEncoded()).out.println(\" \" + toHexString(md5.digest())); }(\"Enter1]\");  try { k = (line.length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"KeyStorechanged\"); }; out.close(); System.out.println(\"Added \" + alias + \"'\"); }"}
{"time": "2021-01-20 10:56:26.455554", "n_pass": [2492, 146, 146], "score": "0.9955", "loss": "0.0053", "code": "void main(String[] args) throws Exception { if ((2)) { String = args[0].split(length == 1) ? 3 : parseInt(c[1]); p = (length == 1) ? \"changeit\" : args[1]; ((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+ \"\");(ks);X=(X)getTrustManagers()[0];SavingTrustManager tm = context.init(null, new TrustManager[] { tm }); (\"Opening\" ).setSoTimeout(00); try {println(\"Starting trusted\"); } catch (SSLException e) { System.out.println();}if (null) { Systemreturn; } BufferedReader= new BufferedReader((System.in)).println(); MessageDigest.getInstance(); for (int i = 0; i .length; i++) { X.println((i ) + \" Subject \" + cert.getSubjectDN()).out.out.println(\" \" + toHexString()); md5.update(cert.getEncoded()).out.println(\" \" + toHexString(md5.digest())); }(\"Enter1]\");  try { k = (line.length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"KeyStorechanged\"); }; out.close(); System.out.println(\"Added \" + alias + \"'\"); }"}
{"time": "2021-01-20 10:56:27.920381", "n_pass": [2493, 147, 147], "score": "0.9468", "loss": "0.0817", "code": "void main(String[] args) throws Exception { if ((2)) { String = args[0].split(length == 1) ? 3 : parseInt(c[1]); p = (length == 1) ? \"changeit\" : args[1]; ((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+ \"\");(ks);X=(X)getTrustManagers()[0]; tm = context.init(null, new TrustManager[] { tm }); (\"Opening\" ).setSoTimeout(00); try {println(\"Starting trusted\"); } catch (SSLException e) { System.out.println();}if (null) { Systemreturn; } BufferedReader= new BufferedReader((System.in)).println(); MessageDigest.getInstance(); for (int i = 0; i .length; i++) { X.println((i ) + \" Subject \" + cert.getSubjectDN()).out.out.println(\" \" + toHexString()); md5.update(cert.getEncoded()).out.println(\" \" + toHexString(md5.digest())); }(\"Enter1]\");  try { k = (line.length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"KeyStorechanged\"); }; out.close(); System.out.println(\"Added \" + alias + \"'\"); }"}
{"time": "2021-01-20 10:56:29.383896", "n_pass": [2494, 148, 148], "score": "0.9909", "loss": "0.0127", "code": "void main(String[] args) throws Exception { if ((2)) { String = args[0].split(length == 1) ? 3 : parseInt(c[1]); p = (length == 1) ? \"changeit\" : args[1]; ((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+ \"\");(ks);X=(X)getTrustManagers()[0];tm = context.init(null, new TrustManager[] { tm }); (\"Opening\" ).setSoTimeout(00); try {println(\"Starting trusted\"); } catch (SSLException e) { System.out.println();}if (null) { Systemreturn; } BufferedReader= new BufferedReader((System.in)).println(); MessageDigest.getInstance(); for (int i = 0; i .length; i++) { X.println((i ) + \" Subject \" + cert.getSubjectDN()).out.out.println(\" \" + toHexString()); md5.update(cert.getEncoded()).out.println(\" \" + toHexString(md5.digest())); }(\"Enter1]\");  try { k = (line.length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"KeyStorechanged\"); }; out.close(); System.out.println(\"Added \" + alias + \"'\"); }"}
{"time": "2021-01-20 10:56:30.872932", "n_pass": [2496, 149, 149], "score": "0.9884", "loss": "0.0171", "code": "void main(String[] args) throws Exception { if ((2)) { String = args[0].split(length == 1) ? 3 : parseInt(c[1]); p = (length == 1) ? \"changeit\" : args[1]; ((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+ \"\");(ks);X=(X)getTrustManagers()[0];tm= context.init(null, new TrustManager[] { tm }); (\"Opening\" ).setSoTimeout(00); try {println(\"Starting trusted\"); } catch (SSLException e) { System.out.println();}if (null) { Systemreturn; } BufferedReader= new BufferedReader((System.in)).println(); MessageDigest.getInstance(); for (int i = 0; i .length; i++) { X.println((i ) + \" Subject \" + cert.getSubjectDN()).out.out.println(\" \" + toHexString()); md5.update(cert.getEncoded()).out.println(\" \" + toHexString(md5.digest())); }(\"Enter1]\");  try { k = (line.length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"KeyStorechanged\"); }; out.close(); System.out.println(\"Added \" + alias + \"'\"); }"}
{"time": "2021-01-20 10:56:32.354513", "n_pass": [2498, 150, 150], "score": "0.9498", "loss": "0.0741", "code": "void main(String[] args) throws Exception { if ((2)) { String = args[0].split(length == 1) ? 3 : parseInt(c[1]); p = (length == 1) ? \"changeit\" : args[1]; ((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+ \"\");(ks);X=(X)getTrustManagers()[0];tm=context.init(null, new TrustManager[] { tm }); (\"Opening\" ).setSoTimeout(00); try {println(\"Starting trusted\"); } catch (SSLException e) { System.out.println();}if (null) { Systemreturn; } BufferedReader= new BufferedReader((System.in)).println(); MessageDigest.getInstance(); for (int i = 0; i .length; i++) { X.println((i ) + \" Subject \" + cert.getSubjectDN()).out.out.println(\" \" + toHexString()); md5.update(cert.getEncoded()).out.println(\" \" + toHexString(md5.digest())); }(\"Enter1]\");  try { k = (line.length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"KeyStorechanged\"); }; out.close(); System.out.println(\"Added \" + alias + \"'\"); }"}
{"time": "2021-01-20 10:56:33.819384", "n_pass": [2500, 151, 151], "score": "0.97", "loss": "0.0436", "code": "void main(String[] args) throws Exception { if ((2)) { String = args[0].split(length == 1) ? 3 : parseInt(c[1]); p = (length == 1) ? \"changeit\" : args[1]; ((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+ \"\");(ks);X=(X)getTrustManagers()[0];tm=contextinit(null, new TrustManager[] { tm }); (\"Opening\" ).setSoTimeout(00); try {println(\"Starting trusted\"); } catch (SSLException e) { System.out.println();}if (null) { Systemreturn; } BufferedReader= new BufferedReader((System.in)).println(); MessageDigest.getInstance(); for (int i = 0; i .length; i++) { X.println((i ) + \" Subject \" + cert.getSubjectDN()).out.out.println(\" \" + toHexString()); md5.update(cert.getEncoded()).out.println(\" \" + toHexString(md5.digest())); }(\"Enter1]\");  try { k = (line.length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"KeyStorechanged\"); }; out.close(); System.out.println(\"Added \" + alias + \"'\"); }"}
{"time": "2021-01-20 10:56:35.300286", "n_pass": [2501, 152, 152], "score": "0.9873", "loss": "0.0144", "code": "void main(String[] args) throws Exception { if ((2)) { String = args[0].split(length == 1) ? 3 : parseInt(c[1]); p = (length == 1) ? \"changeit\" : args[1]; ((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+ \"\");(ks);X=(X)getTrustManagers()[0];tm=context(null, new TrustManager[] { tm }); (\"Opening\" ).setSoTimeout(00); try {println(\"Starting trusted\"); } catch (SSLException e) { System.out.println();}if (null) { Systemreturn; } BufferedReader= new BufferedReader((System.in)).println(); MessageDigest.getInstance(); for (int i = 0; i .length; i++) { X.println((i ) + \" Subject \" + cert.getSubjectDN()).out.out.println(\" \" + toHexString()); md5.update(cert.getEncoded()).out.println(\" \" + toHexString(md5.digest())); }(\"Enter1]\");  try { k = (line.length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"KeyStorechanged\"); }; out.close(); System.out.println(\"Added \" + alias + \"'\"); }"}
{"time": "2021-01-20 10:56:36.782931", "n_pass": [2505, 153, 153], "score": "0.9722", "loss": "0.0338", "code": "void main(String[] args) throws Exception { if ((2)) { String = args[0].split(length == 1) ? 3 : parseInt(c[1]); p = (length == 1) ? \"changeit\" : args[1]; ((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+ \"\");(ks);X=(X)getTrustManagers()[0];tm=context(null,new TrustManager[] { tm }); (\"Opening\" ).setSoTimeout(00); try {println(\"Starting trusted\"); } catch (SSLException e) { System.out.println();}if (null) { Systemreturn; } BufferedReader= new BufferedReader((System.in)).println(); MessageDigest.getInstance(); for (int i = 0; i .length; i++) { X.println((i ) + \" Subject \" + cert.getSubjectDN()).out.out.println(\" \" + toHexString()); md5.update(cert.getEncoded()).out.println(\" \" + toHexString(md5.digest())); }(\"Enter1]\");  try { k = (line.length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"KeyStorechanged\"); }; out.close(); System.out.println(\"Added \" + alias + \"'\"); }"}
{"time": "2021-01-20 10:56:38.261261", "n_pass": [2511, 154, 154], "score": "0.9645", "loss": "0.054", "code": "void main(String[] args) throws Exception { if ((2)) { String = args[0].split(length == 1) ? 3 : parseInt(c[1]); p = (length == 1) ? \"changeit\" : args[1]; ((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+ \"\");(ks);X=(X)getTrustManagers()[0];tm=context(null,new TrustManager[]{ tm }); (\"Opening\" ).setSoTimeout(00); try {println(\"Starting trusted\"); } catch (SSLException e) { System.out.println();}if (null) { Systemreturn; } BufferedReader= new BufferedReader((System.in)).println(); MessageDigest.getInstance(); for (int i = 0; i .length; i++) { X.println((i ) + \" Subject \" + cert.getSubjectDN()).out.out.println(\" \" + toHexString()); md5.update(cert.getEncoded()).out.println(\" \" + toHexString(md5.digest())); }(\"Enter1]\");  try { k = (line.length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"KeyStorechanged\"); }; out.close(); System.out.println(\"Added \" + alias + \"'\"); }"}
{"time": "2021-01-20 10:56:39.723135", "n_pass": [2513, 155, 155], "score": "0.9864", "loss": "0.0182", "code": "void main(String[] args) throws Exception { if ((2)) { String = args[0].split(length == 1) ? 3 : parseInt(c[1]); p = (length == 1) ? \"changeit\" : args[1]; ((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+ \"\");(ks);X=(X)getTrustManagers()[0];tm=context(null,new TrustManager[]{tm }); (\"Opening\" ).setSoTimeout(00); try {println(\"Starting trusted\"); } catch (SSLException e) { System.out.println();}if (null) { Systemreturn; } BufferedReader= new BufferedReader((System.in)).println(); MessageDigest.getInstance(); for (int i = 0; i .length; i++) { X.println((i ) + \" Subject \" + cert.getSubjectDN()).out.out.println(\" \" + toHexString()); md5.update(cert.getEncoded()).out.println(\" \" + toHexString(md5.digest())); }(\"Enter1]\");  try { k = (line.length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"KeyStorechanged\"); }; out.close(); System.out.println(\"Added \" + alias + \"'\"); }"}
{"time": "2021-01-20 10:56:41.207238", "n_pass": [2514, 156, 156], "score": "0.932", "loss": "0.1013", "code": "void main(String[] args) throws Exception { if ((2)) { String = args[0].split(length == 1) ? 3 : parseInt(c[1]); p = (length == 1) ? \"changeit\" : args[1]; ((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+ \"\");(ks);X=(X)getTrustManagers()[0];tm=context(null,new TrustManager[]{ }); (\"Opening\" ).setSoTimeout(00); try {println(\"Starting trusted\"); } catch (SSLException e) { System.out.println();}if (null) { Systemreturn; } BufferedReader= new BufferedReader((System.in)).println(); MessageDigest.getInstance(); for (int i = 0; i .length; i++) { X.println((i ) + \" Subject \" + cert.getSubjectDN()).out.out.println(\" \" + toHexString()); md5.update(cert.getEncoded()).out.println(\" \" + toHexString(md5.digest())); }(\"Enter1]\");  try { k = (line.length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"KeyStorechanged\"); }; out.close(); System.out.println(\"Added \" + alias + \"'\"); }"}
{"time": "2021-01-20 10:56:42.671981", "n_pass": [2515, 157, 157], "score": "0.9553", "loss": "0.0716", "code": "void main(String[] args) throws Exception { if ((2)) { String = args[0].split(length == 1) ? 3 : parseInt(c[1]); p = (length == 1) ? \"changeit\" : args[1]; ((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+ \"\");(ks);X=(X)getTrustManagers()[0];tm=context(null,new TrustManager[]{}); (\"Opening\" ).setSoTimeout(00); try {println(\"Starting trusted\"); } catch (SSLException e) { System.out.println();}if (null) { Systemreturn; } BufferedReader= new BufferedReader((System.in)).println(); MessageDigest.getInstance(); for (int i = 0; i .length; i++) { X.println((i ) + \" Subject \" + cert.getSubjectDN()).out.out.println(\" \" + toHexString()); md5.update(cert.getEncoded()).out.println(\" \" + toHexString(md5.digest())); }(\"Enter1]\");  try { k = (line.length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"KeyStorechanged\"); }; out.close(); System.out.println(\"Added \" + alias + \"'\"); }"}
{"time": "2021-01-20 10:56:44.143046", "n_pass": [2519, 158, 158], "score": "0.9957", "loss": "0.0062", "code": "void main(String[] args) throws Exception { if ((2)) { String = args[0].split(length == 1) ? 3 : parseInt(c[1]); p = (length == 1) ? \"changeit\" : args[1]; ((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+ \"\");(ks);X=(X)getTrustManagers()[0];tm=context(null,new TrustManager[]{});(\"Opening\" ).setSoTimeout(00); try {println(\"Starting trusted\"); } catch (SSLException e) { System.out.println();}if (null) { Systemreturn; } BufferedReader= new BufferedReader((System.in)).println(); MessageDigest.getInstance(); for (int i = 0; i .length; i++) { X.println((i ) + \" Subject \" + cert.getSubjectDN()).out.out.println(\" \" + toHexString()); md5.update(cert.getEncoded()).out.println(\" \" + toHexString(md5.digest())); }(\"Enter1]\");  try { k = (line.length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"KeyStorechanged\"); }; out.close(); System.out.println(\"Added \" + alias + \"'\"); }"}
{"time": "2021-01-20 10:56:45.611129", "n_pass": [2522, 159, 159], "score": "0.97", "loss": "0.0494", "code": "void main(String[] args) throws Exception { if ((2)) { String = args[0].split(length == 1) ? 3 : parseInt(c[1]); p = (length == 1) ? \"changeit\" : args[1]; ((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+ \"\");(ks);X=(X)getTrustManagers()[0];tm=context(null,new TrustManager[]{});(\"\" ).setSoTimeout(00); try {println(\"Starting trusted\"); } catch (SSLException e) { System.out.println();}if (null) { Systemreturn; } BufferedReader= new BufferedReader((System.in)).println(); MessageDigest.getInstance(); for (int i = 0; i .length; i++) { X.println((i ) + \" Subject \" + cert.getSubjectDN()).out.out.println(\" \" + toHexString()); md5.update(cert.getEncoded()).out.println(\" \" + toHexString(md5.digest())); }(\"Enter1]\");  try { k = (line.length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"KeyStorechanged\"); }; out.close(); System.out.println(\"Added \" + alias + \"'\"); }"}
{"time": "2021-01-20 10:56:47.112128", "n_pass": [2524, 160, 160], "score": "0.9577", "loss": "0.0699", "code": "void main(String[] args) throws Exception { if ((2)) { String = args[0].split(length == 1) ? 3 : parseInt(c[1]); p = (length == 1) ? \"changeit\" : args[1]; ((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+ \"\");(ks);X=(X)getTrustManagers()[0];tm=context(null,new TrustManager[]{});(\"\").setSoTimeout(00); try {println(\"Starting trusted\"); } catch (SSLException e) { System.out.println();}if (null) { Systemreturn; } BufferedReader= new BufferedReader((System.in)).println(); MessageDigest.getInstance(); for (int i = 0; i .length; i++) { X.println((i ) + \" Subject \" + cert.getSubjectDN()).out.out.println(\" \" + toHexString()); md5.update(cert.getEncoded()).out.println(\" \" + toHexString(md5.digest())); }(\"Enter1]\");  try { k = (line.length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"KeyStorechanged\"); }; out.close(); System.out.println(\"Added \" + alias + \"'\"); }"}
{"time": "2021-01-20 10:56:48.608906", "n_pass": [2529, 161, 161], "score": "0.9692", "loss": "0.0479", "code": "void main(String[] args) throws Exception { if ((2)) { String = args[0].split(length == 1) ? 3 : parseInt(c[1]); p = (length == 1) ? \"changeit\" : args[1]; ((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+ \"\");(ks);X=(X)getTrustManagers()[0];tm=context(null,new TrustManager[]{});(\"\").setSoTimeout(0); try {println(\"Starting trusted\"); } catch (SSLException e) { System.out.println();}if (null) { Systemreturn; } BufferedReader= new BufferedReader((System.in)).println(); MessageDigest.getInstance(); for (int i = 0; i .length; i++) { X.println((i ) + \" Subject \" + cert.getSubjectDN()).out.out.println(\" \" + toHexString()); md5.update(cert.getEncoded()).out.println(\" \" + toHexString(md5.digest())); }(\"Enter1]\");  try { k = (line.length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"KeyStorechanged\"); }; out.close(); System.out.println(\"Added \" + alias + \"'\"); }"}
{"time": "2021-01-20 10:56:50.112866", "n_pass": [2530, 162, 162], "score": "0.9825", "loss": "0.0275", "code": "void main(String[] args) throws Exception { if ((2)) { String = args[0].split(length == 1) ? 3 : parseInt(c[1]); p = (length == 1) ? \"changeit\" : args[1]; ((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+ \"\");(ks);X=(X)getTrustManagers()[0];tm=context(null,new TrustManager[]{});(\"\").setSoTimeout(); try {println(\"Starting trusted\"); } catch (SSLException e) { System.out.println();}if (null) { Systemreturn; } BufferedReader= new BufferedReader((System.in)).println(); MessageDigest.getInstance(); for (int i = 0; i .length; i++) { X.println((i ) + \" Subject \" + cert.getSubjectDN()).out.out.println(\" \" + toHexString()); md5.update(cert.getEncoded()).out.println(\" \" + toHexString(md5.digest())); }(\"Enter1]\");  try { k = (line.length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"KeyStorechanged\"); }; out.close(); System.out.println(\"Added \" + alias + \"'\"); }"}
{"time": "2021-01-20 10:56:51.589084", "n_pass": [2533, 163, 163], "score": "0.9812", "loss": "0.0276", "code": "void main(String[] args) throws Exception { if ((2)) { String = args[0].split(length == 1) ? 3 : parseInt(c[1]); p = (length == 1) ? \"changeit\" : args[1]; ((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+ \"\");(ks);X=(X)getTrustManagers()[0];tm=context(null,new TrustManager[]{});(\"\").setSoTimeout();try {println(\"Starting trusted\"); } catch (SSLException e) { System.out.println();}if (null) { Systemreturn; } BufferedReader= new BufferedReader((System.in)).println(); MessageDigest.getInstance(); for (int i = 0; i .length; i++) { X.println((i ) + \" Subject \" + cert.getSubjectDN()).out.out.println(\" \" + toHexString()); md5.update(cert.getEncoded()).out.println(\" \" + toHexString(md5.digest())); }(\"Enter1]\");  try { k = (line.length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"KeyStorechanged\"); }; out.close(); System.out.println(\"Added \" + alias + \"'\"); }"}
{"time": "2021-01-20 10:56:53.065424", "n_pass": [2535, 164, 164], "score": "0.9786", "loss": "0.0277", "code": "void main(String[] args) throws Exception { if ((2)) { String = args[0].split(length == 1) ? 3 : parseInt(c[1]); p = (length == 1) ? \"changeit\" : args[1]; ((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+ \"\");(ks);X=(X)getTrustManagers()[0];tm=context(null,new TrustManager[]{});(\"\").setSoTimeout();try{println(\"Starting trusted\"); } catch (SSLException e) { System.out.println();}if (null) { Systemreturn; } BufferedReader= new BufferedReader((System.in)).println(); MessageDigest.getInstance(); for (int i = 0; i .length; i++) { X.println((i ) + \" Subject \" + cert.getSubjectDN()).out.out.println(\" \" + toHexString()); md5.update(cert.getEncoded()).out.println(\" \" + toHexString(md5.digest())); }(\"Enter1]\");  try { k = (line.length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"KeyStorechanged\"); }; out.close(); System.out.println(\"Added \" + alias + \"'\"); }"}
{"time": "2021-01-20 10:56:54.526281", "n_pass": [2537, 165, 165], "score": "0.9864", "loss": "0.0206", "code": "void main(String[] args) throws Exception { if ((2)) { String = args[0].split(length == 1) ? 3 : parseInt(c[1]); p = (length == 1) ? \"changeit\" : args[1]; ((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+ \"\");(ks);X=(X)getTrustManagers()[0];tm=context(null,new TrustManager[]{});(\"\").setSoTimeout();try{(\"Starting trusted\"); } catch (SSLException e) { System.out.println();}if (null) { Systemreturn; } BufferedReader= new BufferedReader((System.in)).println(); MessageDigest.getInstance(); for (int i = 0; i .length; i++) { X.println((i ) + \" Subject \" + cert.getSubjectDN()).out.out.println(\" \" + toHexString()); md5.update(cert.getEncoded()).out.println(\" \" + toHexString(md5.digest())); }(\"Enter1]\");  try { k = (line.length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"KeyStorechanged\"); }; out.close(); System.out.println(\"Added \" + alias + \"'\"); }"}
{"time": "2021-01-20 10:56:56.005112", "n_pass": [2540, 166, 166], "score": "0.9591", "loss": "0.0593", "code": "void main(String[] args) throws Exception { if ((2)) { String = args[0].split(length == 1) ? 3 : parseInt(c[1]); p = (length == 1) ? \"changeit\" : args[1]; ((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+ \"\");(ks);X=(X)getTrustManagers()[0];tm=context(null,new TrustManager[]{});(\"\").setSoTimeout();try{(\" trusted\"); } catch (SSLException e) { System.out.println();}if (null) { Systemreturn; } BufferedReader= new BufferedReader((System.in)).println(); MessageDigest.getInstance(); for (int i = 0; i .length; i++) { X.println((i ) + \" Subject \" + cert.getSubjectDN()).out.out.println(\" \" + toHexString()); md5.update(cert.getEncoded()).out.println(\" \" + toHexString(md5.digest())); }(\"Enter1]\");  try { k = (line.length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"KeyStorechanged\"); }; out.close(); System.out.println(\"Added \" + alias + \"'\"); }"}
{"time": "2021-01-20 10:56:57.462111", "n_pass": [2541, 167, 167], "score": "0.9627", "loss": "0.0587", "code": "void main(String[] args) throws Exception { if ((2)) { String = args[0].split(length == 1) ? 3 : parseInt(c[1]); p = (length == 1) ? \"changeit\" : args[1]; ((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+ \"\");(ks);X=(X)getTrustManagers()[0];tm=context(null,new TrustManager[]{});(\"\").setSoTimeout();try{(\"trusted\"); } catch (SSLException e) { System.out.println();}if (null) { Systemreturn; } BufferedReader= new BufferedReader((System.in)).println(); MessageDigest.getInstance(); for (int i = 0; i .length; i++) { X.println((i ) + \" Subject \" + cert.getSubjectDN()).out.out.println(\" \" + toHexString()); md5.update(cert.getEncoded()).out.println(\" \" + toHexString(md5.digest())); }(\"Enter1]\");  try { k = (line.length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"KeyStorechanged\"); }; out.close(); System.out.println(\"Added \" + alias + \"'\"); }"}
{"time": "2021-01-20 10:56:58.942360", "n_pass": [2542, 168, 168], "score": "0.9947", "loss": "0.0071", "code": "void main(String[] args) throws Exception { if ((2)) { String = args[0].split(length == 1) ? 3 : parseInt(c[1]); p = (length == 1) ? \"changeit\" : args[1]; ((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+ \"\");(ks);X=(X)getTrustManagers()[0];tm=context(null,new TrustManager[]{});(\"\").setSoTimeout();try{(\"\"); } catch (SSLException e) { System.out.println();}if (null) { Systemreturn; } BufferedReader= new BufferedReader((System.in)).println(); MessageDigest.getInstance(); for (int i = 0; i .length; i++) { X.println((i ) + \" Subject \" + cert.getSubjectDN()).out.out.println(\" \" + toHexString()); md5.update(cert.getEncoded()).out.println(\" \" + toHexString(md5.digest())); }(\"Enter1]\");  try { k = (line.length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"KeyStorechanged\"); }; out.close(); System.out.println(\"Added \" + alias + \"'\"); }"}
{"time": "2021-01-20 10:57:00.416992", "n_pass": [2546, 169, 169], "score": "0.9498", "loss": "0.0654", "code": "void main(String[] args) throws Exception { if ((2)) { String = args[0].split(length == 1) ? 3 : parseInt(c[1]); p = (length == 1) ? \"changeit\" : args[1]; ((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+ \"\");(ks);X=(X)getTrustManagers()[0];tm=context(null,new TrustManager[]{});(\"\").setSoTimeout();try{(\"\");} catch (SSLException e) { System.out.println();}if (null) { Systemreturn; } BufferedReader= new BufferedReader((System.in)).println(); MessageDigest.getInstance(); for (int i = 0; i .length; i++) { X.println((i ) + \" Subject \" + cert.getSubjectDN()).out.out.println(\" \" + toHexString()); md5.update(cert.getEncoded()).out.println(\" \" + toHexString(md5.digest())); }(\"Enter1]\");  try { k = (line.length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"KeyStorechanged\"); }; out.close(); System.out.println(\"Added \" + alias + \"'\"); }"}
{"time": "2021-01-20 10:57:01.892325", "n_pass": [2548, 170, 170], "score": "0.9783", "loss": "0.0347", "code": "void main(String[] args) throws Exception { if ((2)) { String = args[0].split(length == 1) ? 3 : parseInt(c[1]); p = (length == 1) ? \"changeit\" : args[1]; ((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+ \"\");(ks);X=(X)getTrustManagers()[0];tm=context(null,new TrustManager[]{});(\"\").setSoTimeout();try{(\"\");}catch (SSLException e) { System.out.println();}if (null) { Systemreturn; } BufferedReader= new BufferedReader((System.in)).println(); MessageDigest.getInstance(); for (int i = 0; i .length; i++) { X.println((i ) + \" Subject \" + cert.getSubjectDN()).out.out.println(\" \" + toHexString()); md5.update(cert.getEncoded()).out.println(\" \" + toHexString(md5.digest())); }(\"Enter1]\");  try { k = (line.length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"KeyStorechanged\"); }; out.close(); System.out.println(\"Added \" + alias + \"'\"); }"}
{"time": "2021-01-20 10:57:03.350949", "n_pass": [2550, 171, 171], "score": "0.9709", "loss": "0.0419", "code": "void main(String[] args) throws Exception { if ((2)) { String = args[0].split(length == 1) ? 3 : parseInt(c[1]); p = (length == 1) ? \"changeit\" : args[1]; ((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+ \"\");(ks);X=(X)getTrustManagers()[0];tm=context(null,new TrustManager[]{});(\"\").setSoTimeout();try{(\"\");}catch(SSLException e) { System.out.println();}if (null) { Systemreturn; } BufferedReader= new BufferedReader((System.in)).println(); MessageDigest.getInstance(); for (int i = 0; i .length; i++) { X.println((i ) + \" Subject \" + cert.getSubjectDN()).out.out.println(\" \" + toHexString()); md5.update(cert.getEncoded()).out.println(\" \" + toHexString(md5.digest())); }(\"Enter1]\");  try { k = (line.length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"KeyStorechanged\"); }; out.close(); System.out.println(\"Added \" + alias + \"'\"); }"}
{"time": "2021-01-20 10:57:04.839393", "n_pass": [2555, 172, 172], "score": "0.9313", "loss": "0.1105", "code": "void main(String[] args) throws Exception { if ((2)) { String = args[0].split(length == 1) ? 3 : parseInt(c[1]); p = (length == 1) ? \"changeit\" : args[1]; ((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+ \"\");(ks);X=(X)getTrustManagers()[0];tm=context(null,new TrustManager[]{});(\"\").setSoTimeout();try{(\"\");}catch(SSLException e) { out.println();}if (null) { Systemreturn; } BufferedReader= new BufferedReader((System.in)).println(); MessageDigest.getInstance(); for (int i = 0; i .length; i++) { X.println((i ) + \" Subject \" + cert.getSubjectDN()).out.out.println(\" \" + toHexString()); md5.update(cert.getEncoded()).out.println(\" \" + toHexString(md5.digest())); }(\"Enter1]\");  try { k = (line.length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"KeyStorechanged\"); }; out.close(); System.out.println(\"Added \" + alias + \"'\"); }"}
{"time": "2021-01-20 10:57:06.293687", "n_pass": [2556, 173, 173], "score": "0.9926", "loss": "0.0103", "code": "void main(String[] args) throws Exception { if ((2)) { String = args[0].split(length == 1) ? 3 : parseInt(c[1]); p = (length == 1) ? \"changeit\" : args[1]; ((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+ \"\");(ks);X=(X)getTrustManagers()[0];tm=context(null,new TrustManager[]{});(\"\").setSoTimeout();try{(\"\");}catch(SSLException e) { println();}if (null) { Systemreturn; } BufferedReader= new BufferedReader((System.in)).println(); MessageDigest.getInstance(); for (int i = 0; i .length; i++) { X.println((i ) + \" Subject \" + cert.getSubjectDN()).out.out.println(\" \" + toHexString()); md5.update(cert.getEncoded()).out.println(\" \" + toHexString(md5.digest())); }(\"Enter1]\");  try { k = (line.length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"KeyStorechanged\"); }; out.close(); System.out.println(\"Added \" + alias + \"'\"); }"}
{"time": "2021-01-20 10:57:07.774006", "n_pass": [2563, 174, 174], "score": "0.9897", "loss": "0.0136", "code": "void main(String[] args) throws Exception { if ((2)) { String = args[0].split(length == 1) ? 3 : parseInt(c[1]); p = (length == 1) ? \"changeit\" : args[1]; ((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+ \"\");(ks);X=(X)getTrustManagers()[0];tm=context(null,new TrustManager[]{});(\"\").setSoTimeout();try{(\"\");}catch(SSLException e) { println();}if (null) {return; } BufferedReader= new BufferedReader((System.in)).println(); MessageDigest.getInstance(); for (int i = 0; i .length; i++) { X.println((i ) + \" Subject \" + cert.getSubjectDN()).out.out.println(\" \" + toHexString()); md5.update(cert.getEncoded()).out.println(\" \" + toHexString(md5.digest())); }(\"Enter1]\");  try { k = (line.length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"KeyStorechanged\"); }; out.close(); System.out.println(\"Added \" + alias + \"'\"); }"}
{"time": "2021-01-20 10:57:09.228206", "n_pass": [2564, 175, 175], "score": "0.994", "loss": "0.0075", "code": "void main(String[] args) throws Exception { if ((2)) { String = args[0].split(length == 1) ? 3 : parseInt(c[1]); p = (length == 1) ? \"changeit\" : args[1]; ((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+ \"\");(ks);X=(X)getTrustManagers()[0];tm=context(null,new TrustManager[]{});(\"\").setSoTimeout();try{(\"\");}catch(SSLException e) { println();}if (null) { } BufferedReader= new BufferedReader((System.in)).println(); MessageDigest.getInstance(); for (int i = 0; i .length; i++) { X.println((i ) + \" Subject \" + cert.getSubjectDN()).out.out.println(\" \" + toHexString()); md5.update(cert.getEncoded()).out.println(\" \" + toHexString(md5.digest())); }(\"Enter1]\");  try { k = (line.length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"KeyStorechanged\"); }; out.close(); System.out.println(\"Added \" + alias + \"'\"); }"}
{"time": "2021-01-20 10:57:10.730247", "n_pass": [2568, 176, 176], "score": "0.9894", "loss": "0.0131", "code": "void main(String[] args) throws Exception { if ((2)) { String = args[0].split(length == 1) ? 3 : parseInt(c[1]); p = (length == 1) ? \"changeit\" : args[1]; ((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+ \"\");(ks);X=(X)getTrustManagers()[0];tm=context(null,new TrustManager[]{});(\"\").setSoTimeout();try{(\"\");}catch(SSLException e) { println();}if (null) { } BufferedReader= BufferedReader((System.in)).println(); MessageDigest.getInstance(); for (int i = 0; i .length; i++) { X.println((i ) + \" Subject \" + cert.getSubjectDN()).out.out.println(\" \" + toHexString()); md5.update(cert.getEncoded()).out.println(\" \" + toHexString(md5.digest())); }(\"Enter1]\");  try { k = (line.length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"KeyStorechanged\"); }; out.close(); System.out.println(\"Added \" + alias + \"'\"); }"}
{"time": "2021-01-20 10:57:12.192181", "n_pass": [2571, 177, 177], "score": "0.9764", "loss": "0.0412", "code": "void main(String[] args) throws Exception { if ((2)) { String = args[0].split(length == 1) ? 3 : parseInt(c[1]); p = (length == 1) ? \"changeit\" : args[1]; ((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+ \"\");(ks);X=(X)getTrustManagers()[0];tm=context(null,new TrustManager[]{});(\"\").setSoTimeout();try{(\"\");}catch(SSLException e) { println();}if (null) { } BufferedReader= BufferedReader((System)).println(); MessageDigest.getInstance(); for (int i = 0; i .length; i++) { X.println((i ) + \" Subject \" + cert.getSubjectDN()).out.out.println(\" \" + toHexString()); md5.update(cert.getEncoded()).out.println(\" \" + toHexString(md5.digest())); }(\"Enter1]\");  try { k = (line.length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"KeyStorechanged\"); }; out.close(); System.out.println(\"Added \" + alias + \"'\"); }"}
{"time": "2021-01-20 10:57:13.653976", "n_pass": [2574, 178, 178], "score": "0.9914", "loss": "0.0116", "code": "void main(String[] args) throws Exception { if ((2)) { String = args[0].split(length == 1) ? 3 : parseInt(c[1]); p = (length == 1) ? \"changeit\" : args[1]; ((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+ \"\");(ks);X=(X)getTrustManagers()[0];tm=context(null,new TrustManager[]{});(\"\").setSoTimeout();try{(\"\");}catch(SSLException e) { println();}if (null) { } BufferedReader= BufferedReader((System)).println; MessageDigest.getInstance(); for (int i = 0; i .length; i++) { X.println((i ) + \" Subject \" + cert.getSubjectDN()).out.out.println(\" \" + toHexString()); md5.update(cert.getEncoded()).out.println(\" \" + toHexString(md5.digest())); }(\"Enter1]\");  try { k = (line.length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"KeyStorechanged\"); }; out.close(); System.out.println(\"Added \" + alias + \"'\"); }"}
{"time": "2021-01-20 10:57:15.139978", "n_pass": [2575, 179, 179], "score": "0.9752", "loss": "0.0399", "code": "void main(String[] args) throws Exception { if ((2)) { String = args[0].split(length == 1) ? 3 : parseInt(c[1]); p = (length == 1) ? \"changeit\" : args[1]; ((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+ \"\");(ks);X=(X)getTrustManagers()[0];tm=context(null,new TrustManager[]{});(\"\").setSoTimeout();try{(\"\");}catch(SSLException e) { println();}if (null) { } BufferedReader= BufferedReader((System)).printlnMessageDigest.getInstance(); for (int i = 0; i .length; i++) { X.println((i ) + \" Subject \" + cert.getSubjectDN()).out.out.println(\" \" + toHexString()); md5.update(cert.getEncoded()).out.println(\" \" + toHexString(md5.digest())); }(\"Enter1]\");  try { k = (line.length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"KeyStorechanged\"); }; out.close(); System.out.println(\"Added \" + alias + \"'\"); }"}
{"time": "2021-01-20 10:57:16.619056", "n_pass": [2576, 180, 180], "score": "0.9869", "loss": "0.0181", "code": "void main(String[] args) throws Exception { if ((2)) { String = args[0].split(length == 1) ? 3 : parseInt(c[1]); p = (length == 1) ? \"changeit\" : args[1]; ((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+ \"\");(ks);X=(X)getTrustManagers()[0];tm=context(null,new TrustManager[]{});(\"\").setSoTimeout();try{(\"\");}catch(SSLException e) { println();}if (null) { } BufferedReader= BufferedReader((System)).printlngetInstance(); for (int i = 0; i .length; i++) { X.println((i ) + \" Subject \" + cert.getSubjectDN()).out.out.println(\" \" + toHexString()); md5.update(cert.getEncoded()).out.println(\" \" + toHexString(md5.digest())); }(\"Enter1]\");  try { k = (line.length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"KeyStorechanged\"); }; out.close(); System.out.println(\"Added \" + alias + \"'\"); }"}
{"time": "2021-01-20 10:57:18.085300", "n_pass": [2581, 181, 181], "score": "0.9626", "loss": "0.0617", "code": "void main(String[] args) throws Exception { if ((2)) { String = args[0].split(length == 1) ? 3 : parseInt(c[1]); p = (length == 1) ? \"changeit\" : args[1]; ((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+ \"\");(ks);X=(X)getTrustManagers()[0];tm=context(null,new TrustManager[]{});(\"\").setSoTimeout();try{(\"\");}catch(SSLException e) { println();}if (null) { } BufferedReader= BufferedReader((System)).printlngetInstance(); for (i = 0; i .length; i++) { X.println((i ) + \" Subject \" + cert.getSubjectDN()).out.out.println(\" \" + toHexString()); md5.update(cert.getEncoded()).out.println(\" \" + toHexString(md5.digest())); }(\"Enter1]\");  try { k = (line.length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"KeyStorechanged\"); }; out.close(); System.out.println(\"Added \" + alias + \"'\"); }"}
{"time": "2021-01-20 10:57:19.793123", "n_pass": [2586, 182, 182], "score": "0.9658", "loss": "0.0437", "code": "void main(String[] args) throws Exception { if ((2)) { String = args[0].split(length == 1) ? 3 : parseInt(c[1]); p = (length == 1) ? \"changeit\" : args[1]; ((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+ \"\");(ks);X=(X)getTrustManagers()[0];tm=context(null,new TrustManager[]{});(\"\").setSoTimeout();try{(\"\");}catch(SSLException e) { println();}if (null) { } BufferedReader= BufferedReader((System)).printlngetInstance(); for (i = 0; ilength; i++) { X.println((i ) + \" Subject \" + cert.getSubjectDN()).out.out.println(\" \" + toHexString()); md5.update(cert.getEncoded()).out.println(\" \" + toHexString(md5.digest())); }(\"Enter1]\");  try { k = (line.length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"KeyStorechanged\"); }; out.close(); System.out.println(\"Added \" + alias + \"'\"); }"}
{"time": "2021-01-20 10:57:21.248028", "n_pass": [2589, 183, 183], "score": "0.9848", "loss": "0.0226", "code": "void main(String[] args) throws Exception { if ((2)) { String = args[0].split(length == 1) ? 3 : parseInt(c[1]); p = (length == 1) ? \"changeit\" : args[1]; ((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+ \"\");(ks);X=(X)getTrustManagers()[0];tm=context(null,new TrustManager[]{});(\"\").setSoTimeout();try{(\"\");}catch(SSLException e) { println();}if (null) { } BufferedReader= BufferedReader((System)).printlngetInstance(); for (i = 0; ilength; i) { X.println((i ) + \" Subject \" + cert.getSubjectDN()).out.out.println(\" \" + toHexString()); md5.update(cert.getEncoded()).out.println(\" \" + toHexString(md5.digest())); }(\"Enter1]\");  try { k = (line.length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"KeyStorechanged\"); }; out.close(); System.out.println(\"Added \" + alias + \"'\"); }"}
{"time": "2021-01-20 10:57:22.701705", "n_pass": [2592, 184, 184], "score": "0.9874", "loss": "0.0167", "code": "void main(String[] args) throws Exception { if ((2)) { String = args[0].split(length == 1) ? 3 : parseInt(c[1]); p = (length == 1) ? \"changeit\" : args[1]; ((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+ \"\");(ks);X=(X)getTrustManagers()[0];tm=context(null,new TrustManager[]{});(\"\").setSoTimeout();try{(\"\");}catch(SSLException e) { println();}if (null) { } BufferedReader= BufferedReader((System)).printlngetInstance(); for (i = 0; ilength; i) { println((i ) + \" Subject \" + cert.getSubjectDN()).out.out.println(\" \" + toHexString()); md5.update(cert.getEncoded()).out.println(\" \" + toHexString(md5.digest())); }(\"Enter1]\");  try { k = (line.length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"KeyStorechanged\"); }; out.close(); System.out.println(\"Added \" + alias + \"'\"); }"}
{"time": "2021-01-20 10:57:24.160035", "n_pass": [2596, 185, 185], "score": "0.9582", "loss": "0.0627", "code": "void main(String[] args) throws Exception { if ((2)) { String = args[0].split(length == 1) ? 3 : parseInt(c[1]); p = (length == 1) ? \"changeit\" : args[1]; ((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+ \"\");(ks);X=(X)getTrustManagers()[0];tm=context(null,new TrustManager[]{});(\"\").setSoTimeout();try{(\"\");}catch(SSLException e) { println();}if (null) { } BufferedReader= BufferedReader((System)).printlngetInstance(); for (i = 0; ilength; i) { println((i ) \" Subject \" + cert.getSubjectDN()).out.out.println(\" \" + toHexString()); md5.update(cert.getEncoded()).out.println(\" \" + toHexString(md5.digest())); }(\"Enter1]\");  try { k = (line.length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"KeyStorechanged\"); }; out.close(); System.out.println(\"Added \" + alias + \"'\"); }"}
{"time": "2021-01-20 10:57:25.630444", "n_pass": [2598, 186, 186], "score": "0.9904", "loss": "0.0122", "code": "void main(String[] args) throws Exception { if ((2)) { String = args[0].split(length == 1) ? 3 : parseInt(c[1]); p = (length == 1) ? \"changeit\" : args[1]; ((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+ \"\");(ks);X=(X)getTrustManagers()[0];tm=context(null,new TrustManager[]{});(\"\").setSoTimeout();try{(\"\");}catch(SSLException e) { println();}if (null) { } BufferedReader= BufferedReader((System)).printlngetInstance(); for (i = 0; ilength; i) { println((i ) \" \" + cert.getSubjectDN()).out.out.println(\" \" + toHexString()); md5.update(cert.getEncoded()).out.println(\" \" + toHexString(md5.digest())); }(\"Enter1]\");  try { k = (line.length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"KeyStorechanged\"); }; out.close(); System.out.println(\"Added \" + alias + \"'\"); }"}
{"time": "2021-01-20 10:57:27.086781", "n_pass": [2602, 187, 187], "score": "0.981", "loss": "0.031", "code": "void main(String[] args) throws Exception { if ((2)) { String = args[0].split(length == 1) ? 3 : parseInt(c[1]); p = (length == 1) ? \"changeit\" : args[1]; ((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+ \"\");(ks);X=(X)getTrustManagers()[0];tm=context(null,new TrustManager[]{});(\"\").setSoTimeout();try{(\"\");}catch(SSLException e) { println();}if (null) { } BufferedReader= BufferedReader((System)).printlngetInstance(); for (i = 0; ilength; i) { println((i ) \" \" + cert()).out.out.println(\" \" + toHexString()); md5.update(cert.getEncoded()).out.println(\" \" + toHexString(md5.digest())); }(\"Enter1]\");  try { k = (line.length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"KeyStorechanged\"); }; out.close(); System.out.println(\"Added \" + alias + \"'\"); }"}
{"time": "2021-01-20 10:57:28.518612", "n_pass": [2603, 188, 188], "score": "0.959", "loss": "0.0648", "code": "void main(String[] args) throws Exception { if ((2)) { String = args[0].split(length == 1) ? 3 : parseInt(c[1]); p = (length == 1) ? \"changeit\" : args[1]; ((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+ \"\");(ks);X=(X)getTrustManagers()[0];tm=context(null,new TrustManager[]{});(\"\").setSoTimeout();try{(\"\");}catch(SSLException e) { println();}if (null) { } BufferedReader= BufferedReader((System)).printlngetInstance(); for (i = 0; ilength; i) { println((i ) \" \" + cert).out.out.println(\" \" + toHexString()); md5.update(cert.getEncoded()).out.println(\" \" + toHexString(md5.digest())); }(\"Enter1]\");  try { k = (line.length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"KeyStorechanged\"); }; out.close(); System.out.println(\"Added \" + alias + \"'\"); }"}
{"time": "2021-01-20 10:57:29.957898", "n_pass": [2605, 189, 189], "score": "0.9699", "loss": "0.0395", "code": "void main(String[] args) throws Exception { if ((2)) { String = args[0].split(length == 1) ? 3 : parseInt(c[1]); p = (length == 1) ? \"changeit\" : args[1]; ((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+ \"\");(ks);X=(X)getTrustManagers()[0];tm=context(null,new TrustManager[]{});(\"\").setSoTimeout();try{(\"\");}catch(SSLException e) { println();}if (null) { } BufferedReader= BufferedReader((System)).printlngetInstance(); for (i = 0; ilength; i) { println((i ) \" \" + cert).out.println(\" \" + toHexString()); md5.update(cert.getEncoded()).out.println(\" \" + toHexString(md5.digest())); }(\"Enter1]\");  try { k = (line.length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"KeyStorechanged\"); }; out.close(); System.out.println(\"Added \" + alias + \"'\"); }"}
{"time": "2021-01-20 10:57:31.391745", "n_pass": [2606, 190, 190], "score": "0.9652", "loss": "0.0556", "code": "void main(String[] args) throws Exception { if ((2)) { String = args[0].split(length == 1) ? 3 : parseInt(c[1]); p = (length == 1) ? \"changeit\" : args[1]; ((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+ \"\");(ks);X=(X)getTrustManagers()[0];tm=context(null,new TrustManager[]{});(\"\").setSoTimeout();try{(\"\");}catch(SSLException e) { println();}if (null) { } BufferedReader= BufferedReader((System)).printlngetInstance(); for (i = 0; ilength; i) { println((i ) \" \" + cert).println(\" \" + toHexString()); md5.update(cert.getEncoded()).out.println(\" \" + toHexString(md5.digest())); }(\"Enter1]\");  try { k = (line.length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"KeyStorechanged\"); }; out.close(); System.out.println(\"Added \" + alias + \"'\"); }"}
{"time": "2021-01-20 10:57:32.868587", "n_pass": [2615, 191, 191], "score": "0.966", "loss": "0.0511", "code": "void main(String[] args) throws Exception { if ((2)) { String = args[0].split(length == 1) ? 3 : parseInt(c[1]); p = (length == 1) ? \"changeit\" : args[1]; ((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+ \"\");(ks);X=(X)getTrustManagers()[0];tm=context(null,new TrustManager[]{});(\"\").setSoTimeout();try{(\"\");}catch(SSLException e) { println();}if (null) { } BufferedReader= BufferedReader((System)).printlngetInstance(); for (i = 0; ilength; i) { println((i ) \" \" + cert).println(\" \" + toHexString()); md5(cert.getEncoded()).out.println(\" \" + toHexString(md5.digest())); }(\"Enter1]\");  try { k = (line.length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"KeyStorechanged\"); }; out.close(); System.out.println(\"Added \" + alias + \"'\"); }"}
{"time": "2021-01-20 10:57:34.315237", "n_pass": [2617, 192, 192], "score": "0.9673", "loss": "0.0508", "code": "void main(String[] args) throws Exception { if ((2)) { String = args[0].split(length == 1) ? 3 : parseInt(c[1]); p = (length == 1) ? \"changeit\" : args[1]; ((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+ \"\");(ks);X=(X)getTrustManagers()[0];tm=context(null,new TrustManager[]{});(\"\").setSoTimeout();try{(\"\");}catch(SSLException e) { println();}if (null) { } BufferedReader= BufferedReader((System)).printlngetInstance(); for (i = 0; ilength; i) { println((i ) \" \" + cert).println(\" \" + toHexString()); md5(cert()).out.println(\" \" + toHexString(md5.digest())); }(\"Enter1]\");  try { k = (line.length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"KeyStorechanged\"); }; out.close(); System.out.println(\"Added \" + alias + \"'\"); }"}
{"time": "2021-01-20 10:57:35.744532", "n_pass": [2618, 193, 193], "score": "0.9784", "loss": "0.0345", "code": "void main(String[] args) throws Exception { if ((2)) { String = args[0].split(length == 1) ? 3 : parseInt(c[1]); p = (length == 1) ? \"changeit\" : args[1]; ((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+ \"\");(ks);X=(X)getTrustManagers()[0];tm=context(null,new TrustManager[]{});(\"\").setSoTimeout();try{(\"\");}catch(SSLException e) { println();}if (null) { } BufferedReader= BufferedReader((System)).printlngetInstance(); for (i = 0; ilength; i) { println((i ) \" \" + cert).println(\" \" + toHexString()); md5(cert).out.println(\" \" + toHexString(md5.digest())); }(\"Enter1]\");  try { k = (line.length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"KeyStorechanged\"); }; out.close(); System.out.println(\"Added \" + alias + \"'\"); }"}
{"time": "2021-01-20 10:57:37.204738", "n_pass": [2620, 194, 194], "score": "0.9865", "loss": "0.0201", "code": "void main(String[] args) throws Exception { if ((2)) { String = args[0].split(length == 1) ? 3 : parseInt(c[1]); p = (length == 1) ? \"changeit\" : args[1]; ((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+ \"\");(ks);X=(X)getTrustManagers()[0];tm=context(null,new TrustManager[]{});(\"\").setSoTimeout();try{(\"\");}catch(SSLException e) { println();}if (null) { } BufferedReader= BufferedReader((System)).printlngetInstance(); for (i = 0; ilength; i) { println((i ) \" \" + cert).println(\" \" + toHexString()); md5(cert).println(\" \" + toHexString(md5.digest())); }(\"Enter1]\");  try { k = (line.length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"KeyStorechanged\"); }; out.close(); System.out.println(\"Added \" + alias + \"'\"); }"}
{"time": "2021-01-20 10:57:38.680464", "n_pass": [2627, 195, 195], "score": "0.9859", "loss": "0.0248", "code": "void main(String[] args) throws Exception { if ((2)) { String = args[0].split(length == 1) ? 3 : parseInt(c[1]); p = (length == 1) ? \"changeit\" : args[1]; ((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+ \"\");(ks);X=(X)getTrustManagers()[0];tm=context(null,new TrustManager[]{});(\"\").setSoTimeout();try{(\"\");}catch(SSLException e) { println();}if (null) { } BufferedReader= BufferedReader((System)).printlngetInstance(); for (i = 0; ilength; i) { println((i ) \" \" + cert).println(\" \" + toHexString()); md5(cert).println(\" \" + toHexString(md5())); }(\"Enter1]\");  try { k = (line.length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"KeyStorechanged\"); }; out.close(); System.out.println(\"Added \" + alias + \"'\"); }"}
{"time": "2021-01-20 10:57:40.120703", "n_pass": [2628, 196, 196], "score": "0.9795", "loss": "0.0322", "code": "void main(String[] args) throws Exception { if ((2)) { String = args[0].split(length == 1) ? 3 : parseInt(c[1]); p = (length == 1) ? \"changeit\" : args[1]; ((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+ \"\");(ks);X=(X)getTrustManagers()[0];tm=context(null,new TrustManager[]{});(\"\").setSoTimeout();try{(\"\");}catch(SSLException e) { println();}if (null) { } BufferedReader= BufferedReader((System)).printlngetInstance(); for (i = 0; ilength; i) { println((i ) \" \" + cert).println(\" \" + toHexString()); md5(cert).println(\" \" + toHexString(md5)); }(\"Enter1]\");  try { k = (line.length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"KeyStorechanged\"); }; out.close(); System.out.println(\"Added \" + alias + \"'\"); }"}
{"time": "2021-01-20 10:57:41.565474", "n_pass": [2633, 197, 197], "score": "0.9473", "loss": "0.0948", "code": "void main(String[] args) throws Exception { if ((2)) { String = args[0].split(length == 1) ? 3 : parseInt(c[1]); p = (length == 1) ? \"changeit\" : args[1]; ((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+ \"\");(ks);X=(X)getTrustManagers()[0];tm=context(null,new TrustManager[]{});(\"\").setSoTimeout();try{(\"\");}catch(SSLException e) { println();}if (null) { } BufferedReader= BufferedReader((System)).printlngetInstance(); for (i = 0; ilength; i) { println((i ) \" \" + cert).println(\" \" + toHexString()); md5(cert).println(\" \" + toHexString(md5)); }(\"Enter\");  try { k = (line.length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"KeyStorechanged\"); }; out.close(); System.out.println(\"Added \" + alias + \"'\"); }"}
{"time": "2021-01-20 10:57:43.432923", "n_pass": [2641, 198, 198], "score": "0.9912", "loss": "0.0142", "code": "void main(String[] args) throws Exception { if ((2)) { String = args[0].split(length == 1) ? 3 : parseInt(c[1]); p = (length == 1) ? \"changeit\" : args[1]; ((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+ \"\");(ks);X=(X)getTrustManagers()[0];tm=context(null,new TrustManager[]{});(\"\").setSoTimeout();try{(\"\");}catch(SSLException e) { println();}if (null) { } BufferedReader= BufferedReader((System)).printlngetInstance(); for (i = 0; ilength; i) { println((i ) \" \" + cert).println(\" \" + toHexString()); md5(cert).println(\" \" + toHexString(md5)); }(\"Enter\");  try { k = (length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"KeyStorechanged\"); }; out.close(); System.out.println(\"Added \" + alias + \"'\"); }"}
{"time": "2021-01-20 10:57:44.943716", "n_pass": [2661, 199, 199], "score": "0.992", "loss": "0.012", "code": "void main(String[] args) throws Exception { if ((2)) { String = args[0].split(length == 1) ? 3 : parseInt(c[1]); p = (length == 1) ? \"changeit\" : args[1]; ((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+ \"\");(ks);X=(X)getTrustManagers()[0];tm=context(null,new TrustManager[]{});(\"\").setSoTimeout();try{(\"\");}catch(SSLException e) { println();}if (null) { } BufferedReader= BufferedReader((System)).printlngetInstance(); for (i = 0; ilength; i) { println((i ) \" \" + cert).println(\" \" + toHexString()); md5(cert).println(\" \" + toHexString(md5)); }(\"Enter\");  try { k = (length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"\"); }; out.close(); System.out.println(\"Added \" + alias + \"'\"); }"}
{"time": "2021-01-20 10:57:46.397640", "n_pass": [2666, 200, 200], "score": "0.9869", "loss": "0.0187", "code": "void main(String[] args) throws Exception { if ((2)) { String = args[0].split(length == 1) ? 3 : parseInt(c[1]); p = (length == 1) ? \"changeit\" : args[1]; ((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+ \"\");(ks);X=(X)getTrustManagers()[0];tm=context(null,new TrustManager[]{});(\"\").setSoTimeout();try{(\"\");}catch(SSLException e) { println();}if (null) { } BufferedReader= BufferedReader((System)).printlngetInstance(); for (i = 0; ilength; i) { println((i ) \" \" + cert).println(\" \" + toHexString()); md5(cert).println(\" \" + toHexString(md5)); }(\"Enter\");  try { k = (length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"\"); }; out(); System.out.println(\"Added \" + alias + \"'\"); }"}
{"time": "2021-01-20 10:57:47.846319", "n_pass": [2667, 201, 201], "score": "0.9714", "loss": "0.0473", "code": "void main(String[] args) throws Exception { if ((2)) { String = args[0].split(length == 1) ? 3 : parseInt(c[1]); p = (length == 1) ? \"changeit\" : args[1]; ((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+ \"\");(ks);X=(X)getTrustManagers()[0];tm=context(null,new TrustManager[]{});(\"\").setSoTimeout();try{(\"\");}catch(SSLException e) { println();}if (null) { } BufferedReader= BufferedReader((System)).printlngetInstance(); for (i = 0; ilength; i) { println((i ) \" \" + cert).println(\" \" + toHexString()); md5(cert).println(\" \" + toHexString(md5)); }(\"Enter\");  try { k = (length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"\"); }; out; System.out.println(\"Added \" + alias + \"'\"); }"}
{"time": "2021-01-20 10:57:49.286114", "n_pass": [2668, 202, 202], "score": "0.9788", "loss": "0.0295", "code": "void main(String[] args) throws Exception { if ((2)) { String = args[0].split(length == 1) ? 3 : parseInt(c[1]); p = (length == 1) ? \"changeit\" : args[1]; ((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+ \"\");(ks);X=(X)getTrustManagers()[0];tm=context(null,new TrustManager[]{});(\"\").setSoTimeout();try{(\"\");}catch(SSLException e) { println();}if (null) { } BufferedReader= BufferedReader((System)).printlngetInstance(); for (i = 0; ilength; i) { println((i ) \" \" + cert).println(\" \" + toHexString()); md5(cert).println(\" \" + toHexString(md5)); }(\"Enter\");  try { k = (length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"\"); }; outSystem.out.println(\"Added \" + alias + \"'\"); }"}
{"time": "2021-01-20 10:57:50.710342", "n_pass": [2669, 203, 203], "score": "0.9893", "loss": "0.0181", "code": "void main(String[] args) throws Exception { if ((2)) { String = args[0].split(length == 1) ? 3 : parseInt(c[1]); p = (length == 1) ? \"changeit\" : args[1]; ((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+ \"\");(ks);X=(X)getTrustManagers()[0];tm=context(null,new TrustManager[]{});(\"\").setSoTimeout();try{(\"\");}catch(SSLException e) { println();}if (null) { } BufferedReader= BufferedReader((System)).printlngetInstance(); for (i = 0; ilength; i) { println((i ) \" \" + cert).println(\" \" + toHexString()); md5(cert).println(\" \" + toHexString(md5)); }(\"Enter\");  try { k = (length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"\"); }; outout.println(\"Added \" + alias + \"'\"); }"}
{"time": "2021-01-20 10:57:52.134545", "n_pass": [2670, 204, 204], "score": "0.9939", "loss": "0.0089", "code": "void main(String[] args) throws Exception { if ((2)) { String = args[0].split(length == 1) ? 3 : parseInt(c[1]); p = (length == 1) ? \"changeit\" : args[1]; ((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+ \"\");(ks);X=(X)getTrustManagers()[0];tm=context(null,new TrustManager[]{});(\"\").setSoTimeout();try{(\"\");}catch(SSLException e) { println();}if (null) { } BufferedReader= BufferedReader((System)).printlngetInstance(); for (i = 0; ilength; i) { println((i ) \" \" + cert).println(\" \" + toHexString()); md5(cert).println(\" \" + toHexString(md5)); }(\"Enter\");  try { k = (length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"\"); }; outprintln(\"Added \" + alias + \"'\"); }"}
{"time": "2021-01-20 10:57:53.584505", "n_pass": [2675, 205, 205], "score": "0.9857", "loss": "0.026", "code": "void main(String[] args) throws Exception { if ((2)) { String = args[0].split(length == 1) ? 3 : parseInt(c[1]); p = (length == 1) ? \"changeit\" : args[1]; ((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+ \"\");(ks);X=(X)getTrustManagers()[0];tm=context(null,new TrustManager[]{});(\"\").setSoTimeout();try{(\"\");}catch(SSLException e) { println();}if (null) { } BufferedReader= BufferedReader((System)).printlngetInstance(); for (i = 0; ilength; i) { println((i ) \" \" + cert).println(\" \" + toHexString()); md5(cert).println(\" \" + toHexString(md5)); }(\"Enter\");  try { k = (length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"\"); }; outprintln(\"Added \" + + \"'\"); }"}
{"time": "2021-01-20 10:57:55.020345", "n_pass": [2676, 206, 206], "score": "0.9785", "loss": "0.034", "code": "void main(String[] args) throws Exception { if ((2)) { String = args[0].split(length == 1) ? 3 : parseInt(c[1]); p = (length == 1) ? \"changeit\" : args[1]; ((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+ \"\");(ks);X=(X)getTrustManagers()[0];tm=context(null,new TrustManager[]{});(\"\").setSoTimeout();try{(\"\");}catch(SSLException e) { println();}if (null) { } BufferedReader= BufferedReader((System)).printlngetInstance(); for (i = 0; ilength; i) { println((i ) \" \" + cert).println(\" \" + toHexString()); md5(cert).println(\" \" + toHexString(md5)); }(\"Enter\");  try { k = (length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"\"); }; outprintln(\"Added \" + \"'\"); }"}
{"time": "2021-01-20 10:57:57.265219", "n_pass": [2688, 207, 207], "score": "0.9935", "loss": "0.0105", "code": "void main(String[]args) throws Exception { if ((2)) { String = args[0].split(length == 1) ? 3 : parseInt(c[1]); p = (length == 1) ? \"changeit\" : args[1]; ((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+ \"\");(ks);X=(X)getTrustManagers()[0];tm=context(null,new TrustManager[]{});(\"\").setSoTimeout();try{(\"\");}catch(SSLException e) { println();}if (null) { } BufferedReader= BufferedReader((System)).printlngetInstance(); for (i = 0; ilength; i) { println((i ) \" \" + cert).println(\" \" + toHexString()); md5(cert).println(\" \" + toHexString(md5)); }(\"Enter\");  try { k = (length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"\"); }; outprintln(\"Added \" + \"'\"); }"}
{"time": "2021-01-20 10:57:58.722979", "n_pass": [2691, 208, 208], "score": "0.9907", "loss": "0.0142", "code": "void main(String[]args)throws Exception { if ((2)) { String = args[0].split(length == 1) ? 3 : parseInt(c[1]); p = (length == 1) ? \"changeit\" : args[1]; ((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+ \"\");(ks);X=(X)getTrustManagers()[0];tm=context(null,new TrustManager[]{});(\"\").setSoTimeout();try{(\"\");}catch(SSLException e) { println();}if (null) { } BufferedReader= BufferedReader((System)).printlngetInstance(); for (i = 0; ilength; i) { println((i ) \" \" + cert).println(\" \" + toHexString()); md5(cert).println(\" \" + toHexString(md5)); }(\"Enter\");  try { k = (length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"\"); }; outprintln(\"Added \" + \"'\"); }"}
{"time": "2021-01-20 10:58:00.188324", "n_pass": [2695, 209, 209], "score": "0.9936", "loss": "0.0093", "code": "void main(String[]args)throws Exception{ if ((2)) { String = args[0].split(length == 1) ? 3 : parseInt(c[1]); p = (length == 1) ? \"changeit\" : args[1]; ((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+ \"\");(ks);X=(X)getTrustManagers()[0];tm=context(null,new TrustManager[]{});(\"\").setSoTimeout();try{(\"\");}catch(SSLException e) { println();}if (null) { } BufferedReader= BufferedReader((System)).printlngetInstance(); for (i = 0; ilength; i) { println((i ) \" \" + cert).println(\" \" + toHexString()); md5(cert).println(\" \" + toHexString(md5)); }(\"Enter\");  try { k = (length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"\"); }; outprintln(\"Added \" + \"'\"); }"}
{"time": "2021-01-20 10:58:01.612981", "n_pass": [2697, 210, 210], "score": "0.9743", "loss": "0.043", "code": "void main(String[]args)throws Exception{if ((2)) { String = args[0].split(length == 1) ? 3 : parseInt(c[1]); p = (length == 1) ? \"changeit\" : args[1]; ((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+ \"\");(ks);X=(X)getTrustManagers()[0];tm=context(null,new TrustManager[]{});(\"\").setSoTimeout();try{(\"\");}catch(SSLException e) { println();}if (null) { } BufferedReader= BufferedReader((System)).printlngetInstance(); for (i = 0; ilength; i) { println((i ) \" \" + cert).println(\" \" + toHexString()); md5(cert).println(\" \" + toHexString(md5)); }(\"Enter\");  try { k = (length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"\"); }; outprintln(\"Added \" + \"'\"); }"}
{"time": "2021-01-20 10:58:03.057730", "n_pass": [2699, 211, 211], "score": "0.9776", "loss": "0.0369", "code": "void main(String[]args)throws Exception{if((2)) { String = args[0].split(length == 1) ? 3 : parseInt(c[1]); p = (length == 1) ? \"changeit\" : args[1]; ((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+ \"\");(ks);X=(X)getTrustManagers()[0];tm=context(null,new TrustManager[]{});(\"\").setSoTimeout();try{(\"\");}catch(SSLException e) { println();}if (null) { } BufferedReader= BufferedReader((System)).printlngetInstance(); for (i = 0; ilength; i) { println((i ) \" \" + cert).println(\" \" + toHexString()); md5(cert).println(\" \" + toHexString(md5)); }(\"Enter\");  try { k = (length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"\"); }; outprintln(\"Added \" + \"'\"); }"}
{"time": "2021-01-20 10:58:04.501109", "n_pass": [2705, 212, 212], "score": "0.9955", "loss": "0.0076", "code": "void main(String[]args)throws Exception{if((2)){ String = args[0].split(length == 1) ? 3 : parseInt(c[1]); p = (length == 1) ? \"changeit\" : args[1]; ((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+ \"\");(ks);X=(X)getTrustManagers()[0];tm=context(null,new TrustManager[]{});(\"\").setSoTimeout();try{(\"\");}catch(SSLException e) { println();}if (null) { } BufferedReader= BufferedReader((System)).printlngetInstance(); for (i = 0; ilength; i) { println((i ) \" \" + cert).println(\" \" + toHexString()); md5(cert).println(\" \" + toHexString(md5)); }(\"Enter\");  try { k = (length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"\"); }; outprintln(\"Added \" + \"'\"); }"}
{"time": "2021-01-20 10:58:05.958672", "n_pass": [2707, 213, 213], "score": "0.9725", "loss": "0.0471", "code": "void main(String[]args)throws Exception{if((2)){String = args[0].split(length == 1) ? 3 : parseInt(c[1]); p = (length == 1) ? \"changeit\" : args[1]; ((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+ \"\");(ks);X=(X)getTrustManagers()[0];tm=context(null,new TrustManager[]{});(\"\").setSoTimeout();try{(\"\");}catch(SSLException e) { println();}if (null) { } BufferedReader= BufferedReader((System)).printlngetInstance(); for (i = 0; ilength; i) { println((i ) \" \" + cert).println(\" \" + toHexString()); md5(cert).println(\" \" + toHexString(md5)); }(\"Enter\");  try { k = (length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"\"); }; outprintln(\"Added \" + \"'\"); }"}
{"time": "2021-01-20 10:58:07.386601", "n_pass": [2709, 214, 214], "score": "0.9931", "loss": "0.009", "code": "void main(String[]args)throws Exception{if((2)){String= args[0].split(length == 1) ? 3 : parseInt(c[1]); p = (length == 1) ? \"changeit\" : args[1]; ((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+ \"\");(ks);X=(X)getTrustManagers()[0];tm=context(null,new TrustManager[]{});(\"\").setSoTimeout();try{(\"\");}catch(SSLException e) { println();}if (null) { } BufferedReader= BufferedReader((System)).printlngetInstance(); for (i = 0; ilength; i) { println((i ) \" \" + cert).println(\" \" + toHexString()); md5(cert).println(\" \" + toHexString(md5)); }(\"Enter\");  try { k = (length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"\"); }; outprintln(\"Added \" + \"'\"); }"}
{"time": "2021-01-20 10:58:08.824814", "n_pass": [2711, 215, 215], "score": "0.9893", "loss": "0.0175", "code": "void main(String[]args)throws Exception{if((2)){String=args[0].split(length == 1) ? 3 : parseInt(c[1]); p = (length == 1) ? \"changeit\" : args[1]; ((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+ \"\");(ks);X=(X)getTrustManagers()[0];tm=context(null,new TrustManager[]{});(\"\").setSoTimeout();try{(\"\");}catch(SSLException e) { println();}if (null) { } BufferedReader= BufferedReader((System)).printlngetInstance(); for (i = 0; ilength; i) { println((i ) \" \" + cert).println(\" \" + toHexString()); md5(cert).println(\" \" + toHexString(md5)); }(\"Enter\");  try { k = (length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"\"); }; outprintln(\"Added \" + \"'\"); }"}
{"time": "2021-01-20 10:58:10.263174", "n_pass": [2720, 216, 216], "score": "0.9851", "loss": "0.0252", "code": "void main(String[]args)throws Exception{if((2)){String=args[0].split(length== 1) ? 3 : parseInt(c[1]); p = (length == 1) ? \"changeit\" : args[1]; ((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+ \"\");(ks);X=(X)getTrustManagers()[0];tm=context(null,new TrustManager[]{});(\"\").setSoTimeout();try{(\"\");}catch(SSLException e) { println();}if (null) { } BufferedReader= BufferedReader((System)).printlngetInstance(); for (i = 0; ilength; i) { println((i ) \" \" + cert).println(\" \" + toHexString()); md5(cert).println(\" \" + toHexString(md5)); }(\"Enter\");  try { k = (length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"\"); }; outprintln(\"Added \" + \"'\"); }"}
{"time": "2021-01-20 10:58:11.700006", "n_pass": [2721, 217, 217], "score": "0.9546", "loss": "0.0739", "code": "void main(String[]args)throws Exception{if((2)){String=args[0].split(length= 1) ? 3 : parseInt(c[1]); p = (length == 1) ? \"changeit\" : args[1]; ((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+ \"\");(ks);X=(X)getTrustManagers()[0];tm=context(null,new TrustManager[]{});(\"\").setSoTimeout();try{(\"\");}catch(SSLException e) { println();}if (null) { } BufferedReader= BufferedReader((System)).printlngetInstance(); for (i = 0; ilength; i) { println((i ) \" \" + cert).println(\" \" + toHexString()); md5(cert).println(\" \" + toHexString(md5)); }(\"Enter\");  try { k = (length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"\"); }; outprintln(\"Added \" + \"'\"); }"}
{"time": "2021-01-20 10:58:13.156878", "n_pass": [2723, 218, 218], "score": "0.9939", "loss": "0.0092", "code": "void main(String[]args)throws Exception{if((2)){String=args[0].split(length=1) ? 3 : parseInt(c[1]); p = (length == 1) ? \"changeit\" : args[1]; ((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+ \"\");(ks);X=(X)getTrustManagers()[0];tm=context(null,new TrustManager[]{});(\"\").setSoTimeout();try{(\"\");}catch(SSLException e) { println();}if (null) { } BufferedReader= BufferedReader((System)).printlngetInstance(); for (i = 0; ilength; i) { println((i ) \" \" + cert).println(\" \" + toHexString()); md5(cert).println(\" \" + toHexString(md5)); }(\"Enter\");  try { k = (length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"\"); }; outprintln(\"Added \" + \"'\"); }"}
{"time": "2021-01-20 10:58:14.598579", "n_pass": [2726, 219, 219], "score": "0.9853", "loss": "0.0245", "code": "void main(String[]args)throws Exception{if((2)){String=args[0].split(length=1)? 3 : parseInt(c[1]); p = (length == 1) ? \"changeit\" : args[1]; ((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+ \"\");(ks);X=(X)getTrustManagers()[0];tm=context(null,new TrustManager[]{});(\"\").setSoTimeout();try{(\"\");}catch(SSLException e) { println();}if (null) { } BufferedReader= BufferedReader((System)).printlngetInstance(); for (i = 0; ilength; i) { println((i ) \" \" + cert).println(\" \" + toHexString()); md5(cert).println(\" \" + toHexString(md5)); }(\"Enter\");  try { k = (length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"\"); }; outprintln(\"Added \" + \"'\"); }"}
{"time": "2021-01-20 10:58:16.028712", "n_pass": [2728, 220, 220], "score": "0.98", "loss": "0.0343", "code": "void main(String[]args)throws Exception{if((2)){String=args[0].split(length=1)?3 : parseInt(c[1]); p = (length == 1) ? \"changeit\" : args[1]; ((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+ \"\");(ks);X=(X)getTrustManagers()[0];tm=context(null,new TrustManager[]{});(\"\").setSoTimeout();try{(\"\");}catch(SSLException e) { println();}if (null) { } BufferedReader= BufferedReader((System)).printlngetInstance(); for (i = 0; ilength; i) { println((i ) \" \" + cert).println(\" \" + toHexString()); md5(cert).println(\" \" + toHexString(md5)); }(\"Enter\");  try { k = (length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"\"); }; outprintln(\"Added \" + \"'\"); }"}
{"time": "2021-01-20 10:58:17.453435", "n_pass": [2730, 221, 221], "score": "0.9723", "loss": "0.0488", "code": "void main(String[]args)throws Exception{if((2)){String=args[0].split(length=1)?3: parseInt(c[1]); p = (length == 1) ? \"changeit\" : args[1]; ((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+ \"\");(ks);X=(X)getTrustManagers()[0];tm=context(null,new TrustManager[]{});(\"\").setSoTimeout();try{(\"\");}catch(SSLException e) { println();}if (null) { } BufferedReader= BufferedReader((System)).printlngetInstance(); for (i = 0; ilength; i) { println((i ) \" \" + cert).println(\" \" + toHexString()); md5(cert).println(\" \" + toHexString(md5)); }(\"Enter\");  try { k = (length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"\"); }; outprintln(\"Added \" + \"'\"); }"}
{"time": "2021-01-20 10:58:18.885868", "n_pass": [2732, 222, 222], "score": "0.8785", "loss": "0.2042", "code": "void main(String[]args)throws Exception{if((2)){String=args[0].split(length=1)?3:parseInt(c[1]); p = (length == 1) ? \"changeit\" : args[1]; ((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+ \"\");(ks);X=(X)getTrustManagers()[0];tm=context(null,new TrustManager[]{});(\"\").setSoTimeout();try{(\"\");}catch(SSLException e) { println();}if (null) { } BufferedReader= BufferedReader((System)).printlngetInstance(); for (i = 0; ilength; i) { println((i ) \" \" + cert).println(\" \" + toHexString()); md5(cert).println(\" \" + toHexString(md5)); }(\"Enter\");  try { k = (length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"\"); }; outprintln(\"Added \" + \"'\"); }"}
{"time": "2021-01-20 10:58:20.314842", "n_pass": [2733, 223, 223], "score": "0.9944", "loss": "0.0076", "code": "void main(String[]args)throws Exception{if((2)){String=args[0].split(length=1)?3:(c[1]); p = (length == 1) ? \"changeit\" : args[1]; ((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+ \"\");(ks);X=(X)getTrustManagers()[0];tm=context(null,new TrustManager[]{});(\"\").setSoTimeout();try{(\"\");}catch(SSLException e) { println();}if (null) { } BufferedReader= BufferedReader((System)).printlngetInstance(); for (i = 0; ilength; i) { println((i ) \" \" + cert).println(\" \" + toHexString()); md5(cert).println(\" \" + toHexString(md5)); }(\"Enter\");  try { k = (length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"\"); }; outprintln(\"Added \" + \"'\"); }"}
{"time": "2021-01-20 10:58:21.755761", "n_pass": [2741, 224, 224], "score": "0.991", "loss": "0.0134", "code": "void main(String[]args)throws Exception{if((2)){String=args[0].split(length=1)?3:(c[1]);p = (length == 1) ? \"changeit\" : args[1]; ((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+ \"\");(ks);X=(X)getTrustManagers()[0];tm=context(null,new TrustManager[]{});(\"\").setSoTimeout();try{(\"\");}catch(SSLException e) { println();}if (null) { } BufferedReader= BufferedReader((System)).printlngetInstance(); for (i = 0; ilength; i) { println((i ) \" \" + cert).println(\" \" + toHexString()); md5(cert).println(\" \" + toHexString(md5)); }(\"Enter\");  try { k = (length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"\"); }; outprintln(\"Added \" + \"'\"); }"}
{"time": "2021-01-20 10:58:23.191839", "n_pass": [2743, 225, 225], "score": "0.976", "loss": "0.0402", "code": "void main(String[]args)throws Exception{if((2)){String=args[0].split(length=1)?3:(c[1]);p= (length == 1) ? \"changeit\" : args[1]; ((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+ \"\");(ks);X=(X)getTrustManagers()[0];tm=context(null,new TrustManager[]{});(\"\").setSoTimeout();try{(\"\");}catch(SSLException e) { println();}if (null) { } BufferedReader= BufferedReader((System)).printlngetInstance(); for (i = 0; ilength; i) { println((i ) \" \" + cert).println(\" \" + toHexString()); md5(cert).println(\" \" + toHexString(md5)); }(\"Enter\");  try { k = (length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"\"); }; outprintln(\"Added \" + \"'\"); }"}
{"time": "2021-01-20 10:58:25.024270", "n_pass": [2745, 226, 226], "score": "0.9824", "loss": "0.0256", "code": "void main(String[]args)throws Exception{if((2)){String=args[0].split(length=1)?3:(c[1]);p=(length == 1) ? \"changeit\" : args[1]; ((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+ \"\");(ks);X=(X)getTrustManagers()[0];tm=context(null,new TrustManager[]{});(\"\").setSoTimeout();try{(\"\");}catch(SSLException e) { println();}if (null) { } BufferedReader= BufferedReader((System)).printlngetInstance(); for (i = 0; ilength; i) { println((i ) \" \" + cert).println(\" \" + toHexString()); md5(cert).println(\" \" + toHexString(md5)); }(\"Enter\");  try { k = (length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"\"); }; outprintln(\"Added \" + \"'\"); }"}
{"time": "2021-01-20 10:58:26.461561", "n_pass": [2748, 227, 227], "score": "0.9594", "loss": "0.0758", "code": "void main(String[]args)throws Exception{if((2)){String=args[0].split(length=1)?3:(c[1]);p=(length== 1) ? \"changeit\" : args[1]; ((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+ \"\");(ks);X=(X)getTrustManagers()[0];tm=context(null,new TrustManager[]{});(\"\").setSoTimeout();try{(\"\");}catch(SSLException e) { println();}if (null) { } BufferedReader= BufferedReader((System)).printlngetInstance(); for (i = 0; ilength; i) { println((i ) \" \" + cert).println(\" \" + toHexString()); md5(cert).println(\" \" + toHexString(md5)); }(\"Enter\");  try { k = (length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"\"); }; outprintln(\"Added \" + \"'\"); }"}
{"time": "2021-01-20 10:58:27.894661", "n_pass": [2749, 228, 228], "score": "0.9829", "loss": "0.0291", "code": "void main(String[]args)throws Exception{if((2)){String=args[0].split(length=1)?3:(c[1]);p=(length= 1) ? \"changeit\" : args[1]; ((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+ \"\");(ks);X=(X)getTrustManagers()[0];tm=context(null,new TrustManager[]{});(\"\").setSoTimeout();try{(\"\");}catch(SSLException e) { println();}if (null) { } BufferedReader= BufferedReader((System)).printlngetInstance(); for (i = 0; ilength; i) { println((i ) \" \" + cert).println(\" \" + toHexString()); md5(cert).println(\" \" + toHexString(md5)); }(\"Enter\");  try { k = (length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"\"); }; outprintln(\"Added \" + \"'\"); }"}
{"time": "2021-01-20 10:58:29.325364", "n_pass": [2751, 229, 229], "score": "0.9907", "loss": "0.0151", "code": "void main(String[]args)throws Exception{if((2)){String=args[0].split(length=1)?3:(c[1]);p=(length=1) ? \"changeit\" : args[1]; ((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+ \"\");(ks);X=(X)getTrustManagers()[0];tm=context(null,new TrustManager[]{});(\"\").setSoTimeout();try{(\"\");}catch(SSLException e) { println();}if (null) { } BufferedReader= BufferedReader((System)).printlngetInstance(); for (i = 0; ilength; i) { println((i ) \" \" + cert).println(\" \" + toHexString()); md5(cert).println(\" \" + toHexString(md5)); }(\"Enter\");  try { k = (length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"\"); }; outprintln(\"Added \" + \"'\"); }"}
{"time": "2021-01-20 10:58:30.761209", "n_pass": [2754, 230, 230], "score": "0.99", "loss": "0.0151", "code": "void main(String[]args)throws Exception{if((2)){String=args[0].split(length=1)?3:(c[1]);p=(length=1)? \"changeit\" : args[1]; ((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+ \"\");(ks);X=(X)getTrustManagers()[0];tm=context(null,new TrustManager[]{});(\"\").setSoTimeout();try{(\"\");}catch(SSLException e) { println();}if (null) { } BufferedReader= BufferedReader((System)).printlngetInstance(); for (i = 0; ilength; i) { println((i ) \" \" + cert).println(\" \" + toHexString()); md5(cert).println(\" \" + toHexString(md5)); }(\"Enter\");  try { k = (length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"\"); }; outprintln(\"Added \" + \"'\"); }"}
{"time": "2021-01-20 10:58:32.191666", "n_pass": [2756, 231, 231], "score": "0.9864", "loss": "0.0217", "code": "void main(String[]args)throws Exception{if((2)){String=args[0].split(length=1)?3:(c[1]);p=(length=1)?\"changeit\" : args[1]; ((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+ \"\");(ks);X=(X)getTrustManagers()[0];tm=context(null,new TrustManager[]{});(\"\").setSoTimeout();try{(\"\");}catch(SSLException e) { println();}if (null) { } BufferedReader= BufferedReader((System)).printlngetInstance(); for (i = 0; ilength; i) { println((i ) \" \" + cert).println(\" \" + toHexString()); md5(cert).println(\" \" + toHexString(md5)); }(\"Enter\");  try { k = (length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"\"); }; outprintln(\"Added \" + \"'\"); }"}
{"time": "2021-01-20 10:58:33.624392", "n_pass": [2758, 232, 232], "score": "0.9684", "loss": "0.0482", "code": "void main(String[]args)throws Exception{if((2)){String=args[0].split(length=1)?3:(c[1]);p=(length=1)?\"\" : args[1]; ((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+ \"\");(ks);X=(X)getTrustManagers()[0];tm=context(null,new TrustManager[]{});(\"\").setSoTimeout();try{(\"\");}catch(SSLException e) { println();}if (null) { } BufferedReader= BufferedReader((System)).printlngetInstance(); for (i = 0; ilength; i) { println((i ) \" \" + cert).println(\" \" + toHexString()); md5(cert).println(\" \" + toHexString(md5)); }(\"Enter\");  try { k = (length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"\"); }; outprintln(\"Added \" + \"'\"); }"}
{"time": "2021-01-20 10:58:35.084918", "n_pass": [2760, 233, 233], "score": "0.9472", "loss": "0.089", "code": "void main(String[]args)throws Exception{if((2)){String=args[0].split(length=1)?3:(c[1]);p=(length=1)?\"\": args[1]; ((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+ \"\");(ks);X=(X)getTrustManagers()[0];tm=context(null,new TrustManager[]{});(\"\").setSoTimeout();try{(\"\");}catch(SSLException e) { println();}if (null) { } BufferedReader= BufferedReader((System)).printlngetInstance(); for (i = 0; ilength; i) { println((i ) \" \" + cert).println(\" \" + toHexString()); md5(cert).println(\" \" + toHexString(md5)); }(\"Enter\");  try { k = (length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"\"); }; outprintln(\"Added \" + \"'\"); }"}
{"time": "2021-01-20 10:58:36.540010", "n_pass": [2762, 234, 234], "score": "0.9787", "loss": "0.039", "code": "void main(String[]args)throws Exception{if((2)){String=args[0].split(length=1)?3:(c[1]);p=(length=1)?\"\":args[1]; ((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+ \"\");(ks);X=(X)getTrustManagers()[0];tm=context(null,new TrustManager[]{});(\"\").setSoTimeout();try{(\"\");}catch(SSLException e) { println();}if (null) { } BufferedReader= BufferedReader((System)).printlngetInstance(); for (i = 0; ilength; i) { println((i ) \" \" + cert).println(\" \" + toHexString()); md5(cert).println(\" \" + toHexString(md5)); }(\"Enter\");  try { k = (length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"\"); }; outprintln(\"Added \" + \"'\"); }"}
{"time": "2021-01-20 10:58:37.984662", "n_pass": [2768, 235, 235], "score": "0.994", "loss": "0.0094", "code": "void main(String[]args)throws Exception{if((2)){String=args[0].split(length=1)?3:(c[1]);p=(length=1)?\"\":args[1];((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+ \"\");(ks);X=(X)getTrustManagers()[0];tm=context(null,new TrustManager[]{});(\"\").setSoTimeout();try{(\"\");}catch(SSLException e) { println();}if (null) { } BufferedReader= BufferedReader((System)).printlngetInstance(); for (i = 0; ilength; i) { println((i ) \" \" + cert).println(\" \" + toHexString()); md5(cert).println(\" \" + toHexString(md5)); }(\"Enter\");  try { k = (length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"\"); }; outprintln(\"Added \" + \"'\"); }"}
{"time": "2021-01-20 10:58:39.509354", "n_pass": [2808, 236, 236], "score": "0.9661", "loss": "0.0609", "code": "void main(String[]args)throws Exception{if((2)){String=args[0].split(length=1)?3:(c[1]);p=(length=1)?\"\":args[1];((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+\"\");(ks);X=(X)getTrustManagers()[0];tm=context(null,new TrustManager[]{});(\"\").setSoTimeout();try{(\"\");}catch(SSLException e) { println();}if (null) { } BufferedReader= BufferedReader((System)).printlngetInstance(); for (i = 0; ilength; i) { println((i ) \" \" + cert).println(\" \" + toHexString()); md5(cert).println(\" \" + toHexString(md5)); }(\"Enter\");  try { k = (length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"\"); }; outprintln(\"Added \" + \"'\"); }"}
{"time": "2021-01-20 10:58:41.401571", "n_pass": [2830, 237, 237], "score": "0.9906", "loss": "0.0166", "code": "void main(String[]args)throws Exception{if((2)){String=args[0].split(length=1)?3:(c[1]);p=(length=1)?\"\":args[1];((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+\"\");(ks);X=(X)getTrustManagers()[0];tmcontext(null,new TrustManager[]{});(\"\").setSoTimeout();try{(\"\");}catch(SSLException e) { println();}if (null) { } BufferedReader= BufferedReader((System)).printlngetInstance(); for (i = 0; ilength; i) { println((i ) \" \" + cert).println(\" \" + toHexString()); md5(cert).println(\" \" + toHexString(md5)); }(\"Enter\");  try { k = (length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"\"); }; outprintln(\"Added \" + \"'\"); }"}
{"time": "2021-01-20 10:58:42.833967", "n_pass": [2831, 238, 238], "score": "0.9819", "loss": "0.0237", "code": "void main(String[]args)throws Exception{if((2)){String=args[0].split(length=1)?3:(c[1]);p=(length=1)?\"\":args[1];((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+\"\");(ks);X=(X)getTrustManagers()[0];tm(null,new TrustManager[]{});(\"\").setSoTimeout();try{(\"\");}catch(SSLException e) { println();}if (null) { } BufferedReader= BufferedReader((System)).printlngetInstance(); for (i = 0; ilength; i) { println((i ) \" \" + cert).println(\" \" + toHexString()); md5(cert).println(\" \" + toHexString(md5)); }(\"Enter\");  try { k = (length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"\"); }; outprintln(\"Added \" + \"'\"); }"}
{"time": "2021-01-20 10:58:44.393331", "n_pass": [2874, 239, 239], "score": "0.992", "loss": "0.0101", "code": "void main(String[]args)throws Exception{if((2)){String=args[0].split(length=1)?3:(c[1]);p=(length=1)?\"\":args[1];((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+\"\");(ks);X=(X)getTrustManagers()[0];tm(null,new TrustManager[]{});(\"\").setSoTimeout();try{(\"\");}catch(SSLException e) { println();}if (null) { } BufferedReaderBufferedReader((System)).printlngetInstance(); for (i = 0; ilength; i) { println((i ) \" \" + cert).println(\" \" + toHexString()); md5(cert).println(\" \" + toHexString(md5)); }(\"Enter\");  try { k = (length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"\"); }; outprintln(\"Added \" + \"'\"); }"}
{"time": "2021-01-20 10:58:45.856817", "n_pass": [2886, 240, 240], "score": "0.9955", "loss": "0.0061", "code": "void main(String[]args)throws Exception{if((2)){String=args[0].split(length=1)?3:(c[1]);p=(length=1)?\"\":args[1];((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+\"\");(ks);X=(X)getTrustManagers()[0];tm(null,new TrustManager[]{});(\"\").setSoTimeout();try{(\"\");}catch(SSLException e) { println();}if (null) { } BufferedReaderBufferedReader((System)).printlngetInstance(); for (i = 0;length; i) { println((i ) \" \" + cert).println(\" \" + toHexString()); md5(cert).println(\" \" + toHexString(md5)); }(\"Enter\");  try { k = (length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"\"); }; outprintln(\"Added \" + \"'\"); }"}
{"time": "2021-01-20 10:58:47.289953", "n_pass": [2888, 241, 241], "score": "0.988", "loss": "0.0191", "code": "void main(String[]args)throws Exception{if((2)){String=args[0].split(length=1)?3:(c[1]);p=(length=1)?\"\":args[1];((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+\"\");(ks);X=(X)getTrustManagers()[0];tm(null,new TrustManager[]{});(\"\").setSoTimeout();try{(\"\");}catch(SSLException e) { println();}if (null) { } BufferedReaderBufferedReader((System)).printlngetInstance(); for (i = 0;length;) { println((i ) \" \" + cert).println(\" \" + toHexString()); md5(cert).println(\" \" + toHexString(md5)); }(\"Enter\");  try { k = (length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"\"); }; outprintln(\"Added \" + \"'\"); }"}
{"time": "2021-01-20 10:58:48.774259", "n_pass": [2906, 242, 242], "score": "0.9926", "loss": "0.0121", "code": "void main(String[]args)throws Exception{if((2)){String=args[0].split(length=1)?3:(c[1]);p=(length=1)?\"\":args[1];((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+\"\");(ks);X=(X)getTrustManagers()[0];tm(null,new TrustManager[]{});(\"\").setSoTimeout();try{(\"\");}catch(SSLException e) { println();}if (null) { } BufferedReaderBufferedReader((System)).printlngetInstance(); for (i = 0;length;) { println((i ) \" \" + cert).println(\" \" + toHexString()); (cert).println(\" \" + toHexString(md5)); }(\"Enter\");  try { k = (length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"\"); }; outprintln(\"Added \" + \"'\"); }"}
{"time": "2021-01-20 10:58:50.225163", "n_pass": [2914, 243, 243], "score": "0.982", "loss": "0.0306", "code": "void main(String[]args)throws Exception{if((2)){String=args[0].split(length=1)?3:(c[1]);p=(length=1)?\"\":args[1];((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+\"\");(ks);X=(X)getTrustManagers()[0];tm(null,new TrustManager[]{});(\"\").setSoTimeout();try{(\"\");}catch(SSLException e) { println();}if (null) { } BufferedReaderBufferedReader((System)).printlngetInstance(); for (i = 0;length;) { println((i ) \" \" + cert).println(\" \" + toHexString()); (cert).println(\" \" + toHexString()); }(\"Enter\");  try { k = (length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"\"); }; outprintln(\"Added \" + \"'\"); }"}
{"time": "2021-01-20 10:58:52.188469", "n_pass": [2948, 244, 244], "score": "0.984", "loss": "0.0228", "code": "void main(String[]args)throws Exception{if((2)){String=args[0].split(length=1)?3:(c[1]);p=(length=1)?\"\":args[1];((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+\"\");(ks);X=(X)getTrustManagers()[0];tm(null,new TrustManager[]{});(\"\").setSoTimeout();try{(\"\");}catch(SSLException e) { println();}if (null) { } BufferedReaderBufferedReader((System)).printlngetInstance(); for (i = 0;length;) { println((i ) \" \" + cert).println(\" \" + toHexString()); (cert).println(\" \" + toHexString()); }(\"Enter\");  try { k = (length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"\"); };println(\"Added \" + \"'\"); }"}
{"time": "2021-01-20 10:58:54.915634", "n_pass": [2987, 245, 245], "score": "0.9686", "loss": "0.0456", "code": "void main(String[]args)throws Exception{if((2)){String=args[0].split(length1)?3:(c[1]);p=(length=1)?\"\":args[1];((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+\"\");(ks);X=(X)getTrustManagers()[0];tm(null,new TrustManager[]{});(\"\").setSoTimeout();try{(\"\");}catch(SSLException e) { println();}if (null) { } BufferedReaderBufferedReader((System)).printlngetInstance(); for (i = 0;length;) { println((i ) \" \" + cert).println(\" \" + toHexString()); (cert).println(\" \" + toHexString()); }(\"Enter\");  try { k = (length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"\"); };println(\"Added \" + \"'\"); }"}
{"time": "2021-01-20 10:58:56.346673", "n_pass": [2988, 246, 246], "score": "0.9862", "loss": "0.0218", "code": "void main(String[]args)throws Exception{if((2)){String=args[0].split(length)?3:(c[1]);p=(length=1)?\"\":args[1];((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+\"\");(ks);X=(X)getTrustManagers()[0];tm(null,new TrustManager[]{});(\"\").setSoTimeout();try{(\"\");}catch(SSLException e) { println();}if (null) { } BufferedReaderBufferedReader((System)).printlngetInstance(); for (i = 0;length;) { println((i ) \" \" + cert).println(\" \" + toHexString()); (cert).println(\" \" + toHexString()); }(\"Enter\");  try { k = (length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"\"); };println(\"Added \" + \"'\"); }"}
{"time": "2021-01-20 10:58:58.199933", "n_pass": [3004, 247, 247], "score": "0.9809", "loss": "0.0306", "code": "void main(String[]args)throws Exception{if((2)){String=args[0].split(length)?3:(c[1]);p=(length1)?\"\":args[1];((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+\"\");(ks);X=(X)getTrustManagers()[0];tm(null,new TrustManager[]{});(\"\").setSoTimeout();try{(\"\");}catch(SSLException e) { println();}if (null) { } BufferedReaderBufferedReader((System)).printlngetInstance(); for (i = 0;length;) { println((i ) \" \" + cert).println(\" \" + toHexString()); (cert).println(\" \" + toHexString()); }(\"Enter\");  try { k = (length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"\"); };println(\"Added \" + \"'\"); }"}
{"time": "2021-01-20 10:58:59.627386", "n_pass": [3005, 248, 248], "score": "0.9962", "loss": "0.0055", "code": "void main(String[]args)throws Exception{if((2)){String=args[0].split(length)?3:(c[1]);p=(length)?\"\":args[1];((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+\"\");(ks);X=(X)getTrustManagers()[0];tm(null,new TrustManager[]{});(\"\").setSoTimeout();try{(\"\");}catch(SSLException e) { println();}if (null) { } BufferedReaderBufferedReader((System)).printlngetInstance(); for (i = 0;length;) { println((i ) \" \" + cert).println(\" \" + toHexString()); (cert).println(\" \" + toHexString()); }(\"Enter\");  try { k = (length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"\"); };println(\"Added \" + \"'\"); }"}
{"time": "2021-01-20 10:59:01.735188", "n_pass": [3117, 249, 249], "score": "0.9745", "loss": "0.0424", "code": "void main(String[]args)throws Exception{if((2)){String=args[0].split(length)?3:(c[1]);p=(length)?\"\":args[1];((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+\"\");(ks);X=(X)getTrustManagers()[0];tm(null,new TrustManager[]{});(\"\").setSoTimeout();try{(\"\");}catch(SSLException e) { println();}if (null) { }BufferedReader((System)).printlngetInstance(); for (i = 0;length;) { println((i ) \" \" + cert).println(\" \" + toHexString()); (cert).println(\" \" + toHexString()); }(\"Enter\");  try { k = (length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"\"); };println(\"Added \" + \"'\"); }"}
{"time": "2021-01-20 10:59:05.059398", "n_pass": [3224, 250, 250], "score": "0.9814", "loss": "0.0239", "code": "void main(String[]args)throws Exception{if((2)){String=args[0].split()?3:(c[1]);p=(length)?\"\":args[1];((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+\"\");(ks);X=(X)getTrustManagers()[0];tm(null,new TrustManager[]{});(\"\").setSoTimeout();try{(\"\");}catch(SSLException e) { println();}if (null) { }BufferedReader((System)).printlngetInstance(); for (i = 0;length;) { println((i ) \" \" + cert).println(\" \" + toHexString()); (cert).println(\" \" + toHexString()); }(\"Enter\");  try { k = (length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"\"); };println(\"Added \" + \"'\"); }"}
{"time": "2021-01-20 10:59:30.399133", "n_pass": [3638, 251, 251], "score": "0.9739", "loss": "0.0377", "code": "void main(String[]args)throws Exception{if((2)){String=args[0].split()?3:(c[1]);p=(length)?\"\":args[1];((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+\"\");(ks);X=(X)getTrustManagers()[0];tm(null,new TrustManager[]{});(\"\").setSoTimeout();try{(\"\");}catch(SSLException e){ println();}if (null) { }BufferedReader((System)).printlngetInstance(); for (i = 0;length;) { println((i ) \" \" + cert).println(\" \" + toHexString()); (cert).println(\" \" + toHexString()); }(\"Enter\");  try { k = (length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"\"); };println(\"Added \" + \"'\"); }"}
{"time": "2021-01-20 10:59:31.833339", "n_pass": [3640, 252, 252], "score": "0.9931", "loss": "0.0087", "code": "void main(String[]args)throws Exception{if((2)){String=args[0].split()?3:(c[1]);p=(length)?\"\":args[1];((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+\"\");(ks);X=(X)getTrustManagers()[0];tm(null,new TrustManager[]{});(\"\").setSoTimeout();try{(\"\");}catch(SSLException e){println();}if (null) { }BufferedReader((System)).printlngetInstance(); for (i = 0;length;) { println((i ) \" \" + cert).println(\" \" + toHexString()); (cert).println(\" \" + toHexString()); }(\"Enter\");  try { k = (length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"\"); };println(\"Added \" + \"'\"); }"}
{"time": "2021-01-20 10:59:33.317614", "n_pass": [3647, 253, 253], "score": "0.996", "loss": "0.0064", "code": "void main(String[]args)throws Exception{if((2)){String=args[0].split()?3:(c[1]);p=(length)?\"\":args[1];((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+\"\");(ks);X=(X)getTrustManagers()[0];tm(null,new TrustManager[]{});(\"\").setSoTimeout();try{(\"\");}catch(SSLException e){println();}if(null) { }BufferedReader((System)).printlngetInstance(); for (i = 0;length;) { println((i ) \" \" + cert).println(\" \" + toHexString()); (cert).println(\" \" + toHexString()); }(\"Enter\");  try { k = (length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"\"); };println(\"Added \" + \"'\"); }"}
{"time": "2021-01-20 10:59:34.766844", "n_pass": [3651, 254, 254], "score": "0.9474", "loss": "0.0999", "code": "void main(String[]args)throws Exception{if((2)){String=args[0].split()?3:(c[1]);p=(length)?\"\":args[1];((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+\"\");(ks);X=(X)getTrustManagers()[0];tm(null,new TrustManager[]{});(\"\").setSoTimeout();try{(\"\");}catch(SSLException e){println();}if(null){ }BufferedReader((System)).printlngetInstance(); for (i = 0;length;) { println((i ) \" \" + cert).println(\" \" + toHexString()); (cert).println(\" \" + toHexString()); }(\"Enter\");  try { k = (length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"\"); };println(\"Added \" + \"'\"); }"}
{"time": "2021-01-20 10:59:36.210416", "n_pass": [3653, 255, 255], "score": "0.9579", "loss": "0.0701", "code": "void main(String[]args)throws Exception{if((2)){String=args[0].split()?3:(c[1]);p=(length)?\"\":args[1];((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+\"\");(ks);X=(X)getTrustManagers()[0];tm(null,new TrustManager[]{});(\"\").setSoTimeout();try{(\"\");}catch(SSLException e){println();}if(null){}BufferedReader((System)).printlngetInstance(); for (i = 0;length;) { println((i ) \" \" + cert).println(\" \" + toHexString()); (cert).println(\" \" + toHexString()); }(\"Enter\");  try { k = (length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"\"); };println(\"Added \" + \"'\"); }"}
{"time": "2021-01-20 10:59:37.653983", "n_pass": [3655, 256, 256], "score": "0.9681", "loss": "0.0449", "code": "void main(String[]args)throws Exception{if((2)){String=args[0].split()?3:(c[1]);p=(length)?\"\":args[1];((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+\"\");(ks);X=(X)getTrustManagers()[0];tm(null,new TrustManager[]{});(\"\").setSoTimeout();try{(\"\");}catch(SSLException e){println();}if(null){}((System)).printlngetInstance(); for (i = 0;length;) { println((i ) \" \" + cert).println(\" \" + toHexString()); (cert).println(\" \" + toHexString()); }(\"Enter\");  try { k = (length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"\"); };println(\"Added \" + \"'\"); }"}
{"time": "2021-01-20 10:59:39.104774", "n_pass": [3662, 257, 257], "score": "0.9872", "loss": "0.0201", "code": "void main(String[]args)throws Exception{if((2)){String=args[0].split()?3:(c[1]);p=(length)?\"\":args[1];((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+\"\");(ks);X=(X)getTrustManagers()[0];tm(null,new TrustManager[]{});(\"\").setSoTimeout();try{(\"\");}catch(SSLException e){println();}if(null){}((System)).getInstance(); for (i = 0;length;) { println((i ) \" \" + cert).println(\" \" + toHexString()); (cert).println(\" \" + toHexString()); }(\"Enter\");  try { k = (length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"\"); };println(\"Added \" + \"'\"); }"}
{"time": "2021-01-20 10:59:40.548922", "n_pass": [3667, 258, 258], "score": "0.9831", "loss": "0.0217", "code": "void main(String[]args)throws Exception{if((2)){String=args[0].split()?3:(c[1]);p=(length)?\"\":args[1];((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+\"\");(ks);X=(X)getTrustManagers()[0];tm(null,new TrustManager[]{});(\"\").setSoTimeout();try{(\"\");}catch(SSLException e){println();}if(null){}((System)).getInstance();for (i = 0;length;) { println((i ) \" \" + cert).println(\" \" + toHexString()); (cert).println(\" \" + toHexString()); }(\"Enter\");  try { k = (length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"\"); };println(\"Added \" + \"'\"); }"}
{"time": "2021-01-20 10:59:41.982308", "n_pass": [3669, 259, 259], "score": "0.9971", "loss": "0.0046", "code": "void main(String[]args)throws Exception{if((2)){String=args[0].split()?3:(c[1]);p=(length)?\"\":args[1];((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+\"\");(ks);X=(X)getTrustManagers()[0];tm(null,new TrustManager[]{});(\"\").setSoTimeout();try{(\"\");}catch(SSLException e){println();}if(null){}((System)).getInstance();for(i = 0;length;) { println((i ) \" \" + cert).println(\" \" + toHexString()); (cert).println(\" \" + toHexString()); }(\"Enter\");  try { k = (length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"\"); };println(\"Added \" + \"'\"); }"}
{"time": "2021-01-20 10:59:43.418784", "n_pass": [3672, 260, 260], "score": "0.9808", "loss": "0.0285", "code": "void main(String[]args)throws Exception{if((2)){String=args[0].split()?3:(c[1]);p=(length)?\"\":args[1];((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+\"\");(ks);X=(X)getTrustManagers()[0];tm(null,new TrustManager[]{});(\"\").setSoTimeout();try{(\"\");}catch(SSLException e){println();}if(null){}((System)).getInstance();for(i= 0;length;) { println((i ) \" \" + cert).println(\" \" + toHexString()); (cert).println(\" \" + toHexString()); }(\"Enter\");  try { k = (length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"\"); };println(\"Added \" + \"'\"); }"}
{"time": "2021-01-20 10:59:44.858201", "n_pass": [3674, 261, 261], "score": "0.9944", "loss": "0.0088", "code": "void main(String[]args)throws Exception{if((2)){String=args[0].split()?3:(c[1]);p=(length)?\"\":args[1];((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+\"\");(ks);X=(X)getTrustManagers()[0];tm(null,new TrustManager[]{});(\"\").setSoTimeout();try{(\"\");}catch(SSLException e){println();}if(null){}((System)).getInstance();for(i=0;length;) { println((i ) \" \" + cert).println(\" \" + toHexString()); (cert).println(\" \" + toHexString()); }(\"Enter\");  try { k = (length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"\"); };println(\"Added \" + \"'\"); }"}
{"time": "2021-01-20 10:59:46.308686", "n_pass": [3677, 262, 262], "score": "0.9818", "loss": "0.0295", "code": "void main(String[]args)throws Exception{if((2)){String=args[0].split()?3:(c[1]);p=(length)?\"\":args[1];((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+\"\");(ks);X=(X)getTrustManagers()[0];tm(null,new TrustManager[]{});(\"\").setSoTimeout();try{(\"\");}catch(SSLException e){println();}if(null){}((System)).getInstance();for(i=0;;) { println((i ) \" \" + cert).println(\" \" + toHexString()); (cert).println(\" \" + toHexString()); }(\"Enter\");  try { k = (length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"\"); };println(\"Added \" + \"'\"); }"}
{"time": "2021-01-20 10:59:47.775706", "n_pass": [3680, 263, 263], "score": "0.992", "loss": "0.0117", "code": "void main(String[]args)throws Exception{if((2)){String=args[0].split()?3:(c[1]);p=(length)?\"\":args[1];((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+\"\");(ks);X=(X)getTrustManagers()[0];tm(null,new TrustManager[]{});(\"\").setSoTimeout();try{(\"\");}catch(SSLException e){println();}if(null){}((System)).getInstance();for(i=0;;){ println((i ) \" \" + cert).println(\" \" + toHexString()); (cert).println(\" \" + toHexString()); }(\"Enter\");  try { k = (length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"\"); };println(\"Added \" + \"'\"); }"}
{"time": "2021-01-20 10:59:49.229488", "n_pass": [3682, 264, 264], "score": "0.9826", "loss": "0.0275", "code": "void main(String[]args)throws Exception{if((2)){String=args[0].split()?3:(c[1]);p=(length)?\"\":args[1];((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+\"\");(ks);X=(X)getTrustManagers()[0];tm(null,new TrustManager[]{});(\"\").setSoTimeout();try{(\"\");}catch(SSLException e){println();}if(null){}((System)).getInstance();for(i=0;;){println((i ) \" \" + cert).println(\" \" + toHexString()); (cert).println(\" \" + toHexString()); }(\"Enter\");  try { k = (length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"\"); };println(\"Added \" + \"'\"); }"}
{"time": "2021-01-20 10:59:50.656629", "n_pass": [3683, 265, 265], "score": "0.9879", "loss": "0.0178", "code": "void main(String[]args)throws Exception{if((2)){String=args[0].split()?3:(c[1]);p=(length)?\"\":args[1];((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+\"\");(ks);X=(X)getTrustManagers()[0];tm(null,new TrustManager[]{});(\"\").setSoTimeout();try{(\"\");}catch(SSLException e){println();}if(null){}((System)).getInstance();for(i=0;;){((i ) \" \" + cert).println(\" \" + toHexString()); (cert).println(\" \" + toHexString()); }(\"Enter\");  try { k = (length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"\"); };println(\"Added \" + \"'\"); }"}
{"time": "2021-01-20 10:59:52.113331", "n_pass": [3687, 266, 266], "score": "0.9847", "loss": "0.0184", "code": "void main(String[]args)throws Exception{if((2)){String=args[0].split()?3:(c[1]);p=(length)?\"\":args[1];((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+\"\");(ks);X=(X)getTrustManagers()[0];tm(null,new TrustManager[]{});(\"\").setSoTimeout();try{(\"\");}catch(SSLException e){println();}if(null){}((System)).getInstance();for(i=0;;){((i) \" \" + cert).println(\" \" + toHexString()); (cert).println(\" \" + toHexString()); }(\"Enter\");  try { k = (length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"\"); };println(\"Added \" + \"'\"); }"}
{"time": "2021-01-20 10:59:53.544553", "n_pass": [3689, 267, 267], "score": "0.9881", "loss": "0.0168", "code": "void main(String[]args)throws Exception{if((2)){String=args[0].split()?3:(c[1]);p=(length)?\"\":args[1];((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+\"\");(ks);X=(X)getTrustManagers()[0];tm(null,new TrustManager[]{});(\"\").setSoTimeout();try{(\"\");}catch(SSLException e){println();}if(null){}((System)).getInstance();for(i=0;;){((i)\" \" + cert).println(\" \" + toHexString()); (cert).println(\" \" + toHexString()); }(\"Enter\");  try { k = (length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"\"); };println(\"Added \" + \"'\"); }"}
{"time": "2021-01-20 10:59:54.984268", "n_pass": [3691, 268, 268], "score": "0.984", "loss": "0.0249", "code": "void main(String[]args)throws Exception{if((2)){String=args[0].split()?3:(c[1]);p=(length)?\"\":args[1];((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+\"\");(ks);X=(X)getTrustManagers()[0];tm(null,new TrustManager[]{});(\"\").setSoTimeout();try{(\"\");}catch(SSLException e){println();}if(null){}((System)).getInstance();for(i=0;;){((i)\"\" + cert).println(\" \" + toHexString()); (cert).println(\" \" + toHexString()); }(\"Enter\");  try { k = (length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"\"); };println(\"Added \" + \"'\"); }"}
{"time": "2021-01-20 10:59:56.413741", "n_pass": [3693, 269, 269], "score": "0.9828", "loss": "0.0292", "code": "void main(String[]args)throws Exception{if((2)){String=args[0].split()?3:(c[1]);p=(length)?\"\":args[1];((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+\"\");(ks);X=(X)getTrustManagers()[0];tm(null,new TrustManager[]{});(\"\").setSoTimeout();try{(\"\");}catch(SSLException e){println();}if(null){}((System)).getInstance();for(i=0;;){((i)\"\"+ cert).println(\" \" + toHexString()); (cert).println(\" \" + toHexString()); }(\"Enter\");  try { k = (length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"\"); };println(\"Added \" + \"'\"); }"}
{"time": "2021-01-20 10:59:57.845135", "n_pass": [3695, 270, 270], "score": "0.9878", "loss": "0.0193", "code": "void main(String[]args)throws Exception{if((2)){String=args[0].split()?3:(c[1]);p=(length)?\"\":args[1];((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+\"\");(ks);X=(X)getTrustManagers()[0];tm(null,new TrustManager[]{});(\"\").setSoTimeout();try{(\"\");}catch(SSLException e){println();}if(null){}((System)).getInstance();for(i=0;;){((i)\"\"+cert).println(\" \" + toHexString()); (cert).println(\" \" + toHexString()); }(\"Enter\");  try { k = (length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"\"); };println(\"Added \" + \"'\"); }"}
{"time": "2021-01-20 10:59:59.290156", "n_pass": [3702, 271, 271], "score": "0.9842", "loss": "0.0286", "code": "void main(String[]args)throws Exception{if((2)){String=args[0].split()?3:(c[1]);p=(length)?\"\":args[1];((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+\"\");(ks);X=(X)getTrustManagers()[0];tm(null,new TrustManager[]{});(\"\").setSoTimeout();try{(\"\");}catch(SSLException e){println();}if(null){}((System)).getInstance();for(i=0;;){((i)\"\"+cert).println(\"\" + toHexString()); (cert).println(\" \" + toHexString()); }(\"Enter\");  try { k = (length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"\"); };println(\"Added \" + \"'\"); }"}
{"time": "2021-01-20 11:00:00.748976", "n_pass": [3704, 272, 272], "score": "0.9926", "loss": "0.0099", "code": "void main(String[]args)throws Exception{if((2)){String=args[0].split()?3:(c[1]);p=(length)?\"\":args[1];((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+\"\");(ks);X=(X)getTrustManagers()[0];tm(null,new TrustManager[]{});(\"\").setSoTimeout();try{(\"\");}catch(SSLException e){println();}if(null){}((System)).getInstance();for(i=0;;){((i)\"\"+cert).println(\"\"+ toHexString()); (cert).println(\" \" + toHexString()); }(\"Enter\");  try { k = (length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"\"); };println(\"Added \" + \"'\"); }"}
{"time": "2021-01-20 11:00:02.175867", "n_pass": [3706, 273, 273], "score": "0.9836", "loss": "0.0252", "code": "void main(String[]args)throws Exception{if((2)){String=args[0].split()?3:(c[1]);p=(length)?\"\":args[1];((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+\"\");(ks);X=(X)getTrustManagers()[0];tm(null,new TrustManager[]{});(\"\").setSoTimeout();try{(\"\");}catch(SSLException e){println();}if(null){}((System)).getInstance();for(i=0;;){((i)\"\"+cert).println(\"\"+toHexString()); (cert).println(\" \" + toHexString()); }(\"Enter\");  try { k = (length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"\"); };println(\"Added \" + \"'\"); }"}
{"time": "2021-01-20 11:00:03.634338", "n_pass": [3712, 274, 274], "score": "0.9884", "loss": "0.0176", "code": "void main(String[]args)throws Exception{if((2)){String=args[0].split()?3:(c[1]);p=(length)?\"\":args[1];((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+\"\");(ks);X=(X)getTrustManagers()[0];tm(null,new TrustManager[]{});(\"\").setSoTimeout();try{(\"\");}catch(SSLException e){println();}if(null){}((System)).getInstance();for(i=0;;){((i)\"\"+cert).println(\"\"+toHexString());(cert).println(\" \" + toHexString()); }(\"Enter\");  try { k = (length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"\"); };println(\"Added \" + \"'\"); }"}
{"time": "2021-01-20 11:00:05.480723", "n_pass": [3720, 275, 275], "score": "0.9806", "loss": "0.0314", "code": "void main(String[]args)throws Exception{if((2)){String=args[0].split()?3:(c[1]);p=(length)?\"\":args[1];((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+\"\");(ks);X=(X)getTrustManagers()[0];tm(null,new TrustManager[]{});(\"\").setSoTimeout();try{(\"\");}catch(SSLException e){println();}if(null){}((System)).getInstance();for(i=0;;){((i)\"\"+cert).println(\"\"+toHexString());(cert).println(\"\" + toHexString()); }(\"Enter\");  try { k = (length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"\"); };println(\"Added \" + \"'\"); }"}
{"time": "2021-01-20 11:00:06.910207", "n_pass": [3722, 276, 276], "score": "0.9797", "loss": "0.0268", "code": "void main(String[]args)throws Exception{if((2)){String=args[0].split()?3:(c[1]);p=(length)?\"\":args[1];((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+\"\");(ks);X=(X)getTrustManagers()[0];tm(null,new TrustManager[]{});(\"\").setSoTimeout();try{(\"\");}catch(SSLException e){println();}if(null){}((System)).getInstance();for(i=0;;){((i)\"\"+cert).println(\"\"+toHexString());(cert).println(\"\"+ toHexString()); }(\"Enter\");  try { k = (length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"\"); };println(\"Added \" + \"'\"); }"}
{"time": "2021-01-20 11:00:08.360141", "n_pass": [3724, 277, 277], "score": "0.9897", "loss": "0.0145", "code": "void main(String[]args)throws Exception{if((2)){String=args[0].split()?3:(c[1]);p=(length)?\"\":args[1];((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+\"\");(ks);X=(X)getTrustManagers()[0];tm(null,new TrustManager[]{});(\"\").setSoTimeout();try{(\"\");}catch(SSLException e){println();}if(null){}((System)).getInstance();for(i=0;;){((i)\"\"+cert).println(\"\"+toHexString());(cert).println(\"\"+toHexString()); }(\"Enter\");  try { k = (length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"\"); };println(\"Added \" + \"'\"); }"}
{"time": "2021-01-20 11:00:09.808091", "n_pass": [3730, 278, 278], "score": "0.9947", "loss": "0.0077", "code": "void main(String[]args)throws Exception{if((2)){String=args[0].split()?3:(c[1]);p=(length)?\"\":args[1];((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+\"\");(ks);X=(X)getTrustManagers()[0];tm(null,new TrustManager[]{});(\"\").setSoTimeout();try{(\"\");}catch(SSLException e){println();}if(null){}((System)).getInstance();for(i=0;;){((i)\"\"+cert).println(\"\"+toHexString());(cert).println(\"\"+toHexString());}(\"Enter\");  try { k = (length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"\"); };println(\"Added \" + \"'\"); }"}
{"time": "2021-01-20 11:00:11.255406", "n_pass": [3734, 279, 279], "score": "0.9752", "loss": "0.0382", "code": "void main(String[]args)throws Exception{if((2)){String=args[0].split()?3:(c[1]);p=(length)?\"\":args[1];((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+\"\");(ks);X=(X)getTrustManagers()[0];tm(null,new TrustManager[]{});(\"\").setSoTimeout();try{(\"\");}catch(SSLException e){println();}if(null){}((System)).getInstance();for(i=0;;){((i)\"\"+cert).println(\"\"+toHexString());(cert).println(\"\"+toHexString());}(\"\");  try { k = (length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"\"); };println(\"Added \" + \"'\"); }"}
{"time": "2021-01-20 11:00:12.698770", "n_pass": [3738, 280, 280], "score": "0.9654", "loss": "0.0576", "code": "void main(String[]args)throws Exception{if((2)){String=args[0].split()?3:(c[1]);p=(length)?\"\":args[1];((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+\"\");(ks);X=(X)getTrustManagers()[0];tm(null,new TrustManager[]{});(\"\").setSoTimeout();try{(\"\");}catch(SSLException e){println();}if(null){}((System)).getInstance();for(i=0;;){((i)\"\"+cert).println(\"\"+toHexString());(cert).println(\"\"+toHexString());}(\"\"); try { k = (length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"\"); };println(\"Added \" + \"'\"); }"}
{"time": "2021-01-20 11:00:14.126519", "n_pass": [3739, 281, 281], "score": "0.9832", "loss": "0.0268", "code": "void main(String[]args)throws Exception{if((2)){String=args[0].split()?3:(c[1]);p=(length)?\"\":args[1];((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+\"\");(ks);X=(X)getTrustManagers()[0];tm(null,new TrustManager[]{});(\"\").setSoTimeout();try{(\"\");}catch(SSLException e){println();}if(null){}((System)).getInstance();for(i=0;;){((i)\"\"+cert).println(\"\"+toHexString());(cert).println(\"\"+toHexString());}(\"\");try { k = (length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"\"); };println(\"Added \" + \"'\"); }"}
{"time": "2021-01-20 11:00:15.556410", "n_pass": [3741, 282, 282], "score": "0.9589", "loss": "0.0565", "code": "void main(String[]args)throws Exception{if((2)){String=args[0].split()?3:(c[1]);p=(length)?\"\":args[1];((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+\"\");(ks);X=(X)getTrustManagers()[0];tm(null,new TrustManager[]{});(\"\").setSoTimeout();try{(\"\");}catch(SSLException e){println();}if(null){}((System)).getInstance();for(i=0;;){((i)\"\"+cert).println(\"\"+toHexString());(cert).println(\"\"+toHexString());}(\"\");try{ k = (length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"\"); };println(\"Added \" + \"'\"); }"}
{"time": "2021-01-20 11:00:16.994227", "n_pass": [3743, 283, 283], "score": "0.9795", "loss": "0.0256", "code": "void main(String[]args)throws Exception{if((2)){String=args[0].split()?3:(c[1]);p=(length)?\"\":args[1];((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+\"\");(ks);X=(X)getTrustManagers()[0];tm(null,new TrustManager[]{});(\"\").setSoTimeout();try{(\"\");}catch(SSLException e){println();}if(null){}((System)).getInstance();for(i=0;;){((i)\"\"+cert).println(\"\"+toHexString());(cert).println(\"\"+toHexString());}(\"\");try{k = (length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"\"); };println(\"Added \" + \"'\"); }"}
{"time": "2021-01-20 11:00:18.433485", "n_pass": [3745, 284, 284], "score": "0.9805", "loss": "0.0273", "code": "void main(String[]args)throws Exception{if((2)){String=args[0].split()?3:(c[1]);p=(length)?\"\":args[1];((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+\"\");(ks);X=(X)getTrustManagers()[0];tm(null,new TrustManager[]{});(\"\").setSoTimeout();try{(\"\");}catch(SSLException e){println();}if(null){}((System)).getInstance();for(i=0;;){((i)\"\"+cert).println(\"\"+toHexString());(cert).println(\"\"+toHexString());}(\"\");try{k= (length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"\"); };println(\"Added \" + \"'\"); }"}
{"time": "2021-01-20 11:00:20.259648", "n_pass": [3747, 285, 285], "score": "0.9812", "loss": "0.0277", "code": "void main(String[]args)throws Exception{if((2)){String=args[0].split()?3:(c[1]);p=(length)?\"\":args[1];((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+\"\");(ks);X=(X)getTrustManagers()[0];tm(null,new TrustManager[]{});(\"\").setSoTimeout();try{(\"\");}catch(SSLException e){println();}if(null){}((System)).getInstance();for(i=0;;){((i)\"\"+cert).println(\"\"+toHexString());(cert).println(\"\"+toHexString());}(\"\");try{k=(length() == 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"\"); };println(\"Added \" + \"'\"); }"}
{"time": "2021-01-20 11:00:21.703088", "n_pass": [3752, 286, 286], "score": "0.9882", "loss": "0.0158", "code": "void main(String[]args)throws Exception{if((2)){String=args[0].split()?3:(c[1]);p=(length)?\"\":args[1];((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+\"\");(ks);X=(X)getTrustManagers()[0];tm(null,new TrustManager[]{});(\"\").setSoTimeout();try{(\"\");}catch(SSLException e){println();}if(null){}((System)).getInstance();for(i=0;;){((i)\"\"+cert).println(\"\"+toHexString());(cert).println(\"\"+toHexString());}(\"\");try{k=(length()== 0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"\"); };println(\"Added \" + \"'\"); }"}
{"time": "2021-01-20 11:00:23.927695", "n_pass": [3755, 287, 287], "score": "0.9663", "loss": "0.0515", "code": "void main(String[]args)throws Exception{if((2)){String=args[0].split()?3:(c[1]);p=(length)?\"\":args[1];((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+\"\");(ks);X=(X)getTrustManagers()[0];tm(null,new TrustManager[]{});(\"\").setSoTimeout();try{(\"\");}catch(SSLException e){println();}if(null){}((System)).getInstance();for(i=0;;){((i)\"\"+cert).println(\"\"+toHexString());(cert).println(\"\"+toHexString());}(\"\");try{k=(length()==0) ? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"\"); };println(\"Added \" + \"'\"); }"}
{"time": "2021-01-20 11:00:25.371837", "n_pass": [3758, 288, 288], "score": "0.9914", "loss": "0.0113", "code": "void main(String[]args)throws Exception{if((2)){String=args[0].split()?3:(c[1]);p=(length)?\"\":args[1];((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+\"\");(ks);X=(X)getTrustManagers()[0];tm(null,new TrustManager[]{});(\"\").setSoTimeout();try{(\"\");}catch(SSLException e){println();}if(null){}((System)).getInstance();for(i=0;;){((i)\"\"+cert).println(\"\"+toHexString());(cert).println(\"\"+toHexString());}(\"\");try{k=(length()==0)? 0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"\"); };println(\"Added \" + \"'\"); }"}
{"time": "2021-01-20 11:00:26.793456", "n_pass": [3760, 289, 289], "score": "0.9739", "loss": "0.0453", "code": "void main(String[]args)throws Exception{if((2)){String=args[0].split()?3:(c[1]);p=(length)?\"\":args[1];((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+\"\");(ks);X=(X)getTrustManagers()[0];tm(null,new TrustManager[]{});(\"\").setSoTimeout();try{(\"\");}catch(SSLException e){println();}if(null){}((System)).getInstance();for(i=0;;){((i)\"\"+cert).println(\"\"+toHexString());(cert).println(\"\"+toHexString());}(\"\");try{k=(length()==0)?0 :parseInt(line) - 1; } catch (NumberFormatException e) {(\"\"); };println(\"Added \" + \"'\"); }"}
{"time": "2021-01-20 11:00:28.226210", "n_pass": [3762, 290, 290], "score": "0.9669", "loss": "0.0602", "code": "void main(String[]args)throws Exception{if((2)){String=args[0].split()?3:(c[1]);p=(length)?\"\":args[1];((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+\"\");(ks);X=(X)getTrustManagers()[0];tm(null,new TrustManager[]{});(\"\").setSoTimeout();try{(\"\");}catch(SSLException e){println();}if(null){}((System)).getInstance();for(i=0;;){((i)\"\"+cert).println(\"\"+toHexString());(cert).println(\"\"+toHexString());}(\"\");try{k=(length()==0)?0:parseInt(line) - 1; } catch (NumberFormatException e) {(\"\"); };println(\"Added \" + \"'\"); }"}
{"time": "2021-01-20 11:00:29.656008", "n_pass": [3764, 291, 291], "score": "0.9855", "loss": "0.0225", "code": "void main(String[]args)throws Exception{if((2)){String=args[0].split()?3:(c[1]);p=(length)?\"\":args[1];((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+\"\");(ks);X=(X)getTrustManagers()[0];tm(null,new TrustManager[]{});(\"\").setSoTimeout();try{(\"\");}catch(SSLException e){println();}if(null){}((System)).getInstance();for(i=0;;){((i)\"\"+cert).println(\"\"+toHexString());(cert).println(\"\"+toHexString());}(\"\");try{k=(length()==0)?0:(line) - 1; } catch (NumberFormatException e) {(\"\"); };println(\"Added \" + \"'\"); }"}
{"time": "2021-01-20 11:00:31.110310", "n_pass": [3768, 292, 292], "score": "0.9828", "loss": "0.025", "code": "void main(String[]args)throws Exception{if((2)){String=args[0].split()?3:(c[1]);p=(length)?\"\":args[1];((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+\"\");(ks);X=(X)getTrustManagers()[0];tm(null,new TrustManager[]{});(\"\").setSoTimeout();try{(\"\");}catch(SSLException e){println();}if(null){}((System)).getInstance();for(i=0;;){((i)\"\"+cert).println(\"\"+toHexString());(cert).println(\"\"+toHexString());}(\"\");try{k=(length()==0)?0:(line)- 1; } catch (NumberFormatException e) {(\"\"); };println(\"Added \" + \"'\"); }"}
{"time": "2021-01-20 11:00:32.560482", "n_pass": [3769, 293, 293], "score": "0.9816", "loss": "0.0282", "code": "void main(String[]args)throws Exception{if((2)){String=args[0].split()?3:(c[1]);p=(length)?\"\":args[1];((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+\"\");(ks);X=(X)getTrustManagers()[0];tm(null,new TrustManager[]{});(\"\").setSoTimeout();try{(\"\");}catch(SSLException e){println();}if(null){}((System)).getInstance();for(i=0;;){((i)\"\"+cert).println(\"\"+toHexString());(cert).println(\"\"+toHexString());}(\"\");try{k=(length()==0)?0:(line) 1; } catch (NumberFormatException e) {(\"\"); };println(\"Added \" + \"'\"); }"}
{"time": "2021-01-20 11:00:34.002276", "n_pass": [3770, 294, 294], "score": "0.9936", "loss": "0.009", "code": "void main(String[]args)throws Exception{if((2)){String=args[0].split()?3:(c[1]);p=(length)?\"\":args[1];((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+\"\");(ks);X=(X)getTrustManagers()[0];tm(null,new TrustManager[]{});(\"\").setSoTimeout();try{(\"\");}catch(SSLException e){println();}if(null){}((System)).getInstance();for(i=0;;){((i)\"\"+cert).println(\"\"+toHexString());(cert).println(\"\"+toHexString());}(\"\");try{k=(length()==0)?0:(line)1; } catch (NumberFormatException e) {(\"\"); };println(\"Added \" + \"'\"); }"}
{"time": "2021-01-20 11:00:35.437502", "n_pass": [3771, 295, 295], "score": "0.9914", "loss": "0.0145", "code": "void main(String[]args)throws Exception{if((2)){String=args[0].split()?3:(c[1]);p=(length)?\"\":args[1];((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+\"\");(ks);X=(X)getTrustManagers()[0];tm(null,new TrustManager[]{});(\"\").setSoTimeout();try{(\"\");}catch(SSLException e){println();}if(null){}((System)).getInstance();for(i=0;;){((i)\"\"+cert).println(\"\"+toHexString());(cert).println(\"\"+toHexString());}(\"\");try{k=(length()==0)?0:(line); } catch (NumberFormatException e) {(\"\"); };println(\"Added \" + \"'\"); }"}
{"time": "2021-01-20 11:00:36.856607", "n_pass": [3773, 296, 296], "score": "0.9894", "loss": "0.0175", "code": "void main(String[]args)throws Exception{if((2)){String=args[0].split()?3:(c[1]);p=(length)?\"\":args[1];((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+\"\");(ks);X=(X)getTrustManagers()[0];tm(null,new TrustManager[]{});(\"\").setSoTimeout();try{(\"\");}catch(SSLException e){println();}if(null){}((System)).getInstance();for(i=0;;){((i)\"\"+cert).println(\"\"+toHexString());(cert).println(\"\"+toHexString());}(\"\");try{k=(length()==0)?0:(line);} catch (NumberFormatException e) {(\"\"); };println(\"Added \" + \"'\"); }"}
{"time": "2021-01-20 11:00:38.289720", "n_pass": [3775, 297, 297], "score": "0.9886", "loss": "0.0187", "code": "void main(String[]args)throws Exception{if((2)){String=args[0].split()?3:(c[1]);p=(length)?\"\":args[1];((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+\"\");(ks);X=(X)getTrustManagers()[0];tm(null,new TrustManager[]{});(\"\").setSoTimeout();try{(\"\");}catch(SSLException e){println();}if(null){}((System)).getInstance();for(i=0;;){((i)\"\"+cert).println(\"\"+toHexString());(cert).println(\"\"+toHexString());}(\"\");try{k=(length()==0)?0:(line);}catch (NumberFormatException e) {(\"\"); };println(\"Added \" + \"'\"); }"}
{"time": "2021-01-20 11:00:39.738157", "n_pass": [3777, 298, 298], "score": "0.9792", "loss": "0.0318", "code": "void main(String[]args)throws Exception{if((2)){String=args[0].split()?3:(c[1]);p=(length)?\"\":args[1];((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+\"\");(ks);X=(X)getTrustManagers()[0];tm(null,new TrustManager[]{});(\"\").setSoTimeout();try{(\"\");}catch(SSLException e){println();}if(null){}((System)).getInstance();for(i=0;;){((i)\"\"+cert).println(\"\"+toHexString());(cert).println(\"\"+toHexString());}(\"\");try{k=(length()==0)?0:(line);}catch(NumberFormatException e) {(\"\"); };println(\"Added \" + \"'\"); }"}
{"time": "2021-01-20 11:00:41.203346", "n_pass": [3783, 299, 299], "score": "0.9852", "loss": "0.0204", "code": "void main(String[]args)throws Exception{if((2)){String=args[0].split()?3:(c[1]);p=(length)?\"\":args[1];((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+\"\");(ks);X=(X)getTrustManagers()[0];tm(null,new TrustManager[]{});(\"\").setSoTimeout();try{(\"\");}catch(SSLException e){println();}if(null){}((System)).getInstance();for(i=0;;){((i)\"\"+cert).println(\"\"+toHexString());(cert).println(\"\"+toHexString());}(\"\");try{k=(length()==0)?0:(line);}catch(NumberFormatException e){(\"\"); };println(\"Added \" + \"'\"); }"}
{"time": "2021-01-20 11:00:42.646922", "n_pass": [3790, 300, 300], "score": "0.9921", "loss": "0.0121", "code": "void main(String[]args)throws Exception{if((2)){String=args[0].split()?3:(c[1]);p=(length)?\"\":args[1];((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+\"\");(ks);X=(X)getTrustManagers()[0];tm(null,new TrustManager[]{});(\"\").setSoTimeout();try{(\"\");}catch(SSLException e){println();}if(null){}((System)).getInstance();for(i=0;;){((i)\"\"+cert).println(\"\"+toHexString());(cert).println(\"\"+toHexString());}(\"\");try{k=(length()==0)?0:(line);}catch(NumberFormatException e){(\"\");};println(\"Added \" + \"'\"); }"}
{"time": "2021-01-20 11:00:44.080834", "n_pass": [3792, 301, 301], "score": "0.9669", "loss": "0.0491", "code": "void main(String[]args)throws Exception{if((2)){String=args[0].split()?3:(c[1]);p=(length)?\"\":args[1];((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+\"\");(ks);X=(X)getTrustManagers()[0];tm(null,new TrustManager[]{});(\"\").setSoTimeout();try{(\"\");}catch(SSLException e){println();}if(null){}((System)).getInstance();for(i=0;;){((i)\"\"+cert).println(\"\"+toHexString());(cert).println(\"\"+toHexString());}(\"\");try{k=(length()==0)?0:(line);}catch(NumberFormatException e){(\"\");}println(\"Added \" + \"'\"); }"}
{"time": "2021-01-20 11:00:45.509331", "n_pass": [3793, 302, 302], "score": "0.9463", "loss": "0.0849", "code": "void main(String[]args)throws Exception{if((2)){String=args[0].split()?3:(c[1]);p=(length)?\"\":args[1];((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+\"\");(ks);X=(X)getTrustManagers()[0];tm(null,new TrustManager[]{});(\"\").setSoTimeout();try{(\"\");}catch(SSLException e){println();}if(null){}((System)).getInstance();for(i=0;;){((i)\"\"+cert).println(\"\"+toHexString());(cert).println(\"\"+toHexString());}(\"\");try{k=(length()==0)?0:(line);}catch(NumberFormatException e){(\"\");}(\"Added \" + \"'\"); }"}
{"time": "2021-01-20 11:00:46.944343", "n_pass": [3796, 303, 303], "score": "0.9918", "loss": "0.0139", "code": "void main(String[]args)throws Exception{if((2)){String=args[0].split()?3:(c[1]);p=(length)?\"\":args[1];((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+\"\");(ks);X=(X)getTrustManagers()[0];tm(null,new TrustManager[]{});(\"\").setSoTimeout();try{(\"\");}catch(SSLException e){println();}if(null){}((System)).getInstance();for(i=0;;){((i)\"\"+cert).println(\"\"+toHexString());(cert).println(\"\"+toHexString());}(\"\");try{k=(length()==0)?0:(line);}catch(NumberFormatException e){(\"\");}(\" \" + \"'\"); }"}
{"time": "2021-01-20 11:00:48.368492", "n_pass": [3797, 304, 304], "score": "0.9762", "loss": "0.0416", "code": "void main(String[]args)throws Exception{if((2)){String=args[0].split()?3:(c[1]);p=(length)?\"\":args[1];((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+\"\");(ks);X=(X)getTrustManagers()[0];tm(null,new TrustManager[]{});(\"\").setSoTimeout();try{(\"\");}catch(SSLException e){println();}if(null){}((System)).getInstance();for(i=0;;){((i)\"\"+cert).println(\"\"+toHexString());(cert).println(\"\"+toHexString());}(\"\");try{k=(length()==0)?0:(line);}catch(NumberFormatException e){(\"\");}(\"\" + \"'\"); }"}
{"time": "2021-01-20 11:00:49.814766", "n_pass": [3799, 305, 305], "score": "0.9591", "loss": "0.0706", "code": "void main(String[]args)throws Exception{if((2)){String=args[0].split()?3:(c[1]);p=(length)?\"\":args[1];((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+\"\");(ks);X=(X)getTrustManagers()[0];tm(null,new TrustManager[]{});(\"\").setSoTimeout();try{(\"\");}catch(SSLException e){println();}if(null){}((System)).getInstance();for(i=0;;){((i)\"\"+cert).println(\"\"+toHexString());(cert).println(\"\"+toHexString());}(\"\");try{k=(length()==0)?0:(line);}catch(NumberFormatException e){(\"\");}(\"\"+ \"'\"); }"}
{"time": "2021-01-20 11:00:51.244450", "n_pass": [3801, 306, 306], "score": "0.9683", "loss": "0.0433", "code": "void main(String[]args)throws Exception{if((2)){String=args[0].split()?3:(c[1]);p=(length)?\"\":args[1];((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+\"\");(ks);X=(X)getTrustManagers()[0];tm(null,new TrustManager[]{});(\"\").setSoTimeout();try{(\"\");}catch(SSLException e){println();}if(null){}((System)).getInstance();for(i=0;;){((i)\"\"+cert).println(\"\"+toHexString());(cert).println(\"\"+toHexString());}(\"\");try{k=(length()==0)?0:(line);}catch(NumberFormatException e){(\"\");}(\"\"+\"'\"); }"}
{"time": "2021-01-20 11:00:52.669640", "n_pass": [3803, 307, 307], "score": "0.9829", "loss": "0.0263", "code": "void main(String[]args)throws Exception{if((2)){String=args[0].split()?3:(c[1]);p=(length)?\"\":args[1];((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+\"\");(ks);X=(X)getTrustManagers()[0];tm(null,new TrustManager[]{});(\"\").setSoTimeout();try{(\"\");}catch(SSLException e){println();}if(null){}((System)).getInstance();for(i=0;;){((i)\"\"+cert).println(\"\"+toHexString());(cert).println(\"\"+toHexString());}(\"\");try{k=(length()==0)?0:(line);}catch(NumberFormatException e){(\"\");}(\"\"+\"\"); }"}
{"time": "2021-01-20 11:00:54.104871", "n_pass": [3807, 308, 308], "score": "0.9899", "loss": "0.0144", "code": "void main(String[]args)throws Exception{if((2)){String=args[0].split()?3:(c[1]);p=(length)?\"\":args[1];((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+\"\");(ks);X=(X)getTrustManagers()[0];tm(null,new TrustManager[]{});(\"\").setSoTimeout();try{(\"\");}catch(SSLException e){println();}if(null){}((System)).getInstance();for(i=0;;){((i)\"\"+cert).println(\"\"+toHexString());(cert).println(\"\"+toHexString());}(\"\");try{k=(length()==0)?0:(line);}catch(NumberFormatException e){(\"\");}(\"\"+\"\");}"}
{"time": "2021-01-20 11:00:57.894801", "n_pass": [3983, 309, 309], "score": "0.9865", "loss": "0.0176", "code": "void main(String[]args)throws Exception{if((2)){String=args[0].split()?3:(c[1]);p=(length)?\"\":args[1];((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+\"\");(ks);X=(X)getTrustManagers()[0];tm(null,new TrustManager[]{});(\"\").setSoTimeout();try{(\"\");}catch(SSLException e){println();}if(null){}((System)).getInstance();for(i0;;){((i)\"\"+cert).println(\"\"+toHexString());(cert).println(\"\"+toHexString());}(\"\");try{k=(length()==0)?0:(line);}catch(NumberFormatException e){(\"\");}(\"\"+\"\");}"}
{"time": "2021-01-20 11:00:59.362559", "n_pass": [3984, 310, 310], "score": "0.845", "loss": "0.3274", "code": "void main(String[]args)throws Exception{if((2)){String=args[0].split()?3:(c[1]);p=(length)?\"\":args[1];((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+\"\");(ks);X=(X)getTrustManagers()[0];tm(null,new TrustManager[]{});(\"\").setSoTimeout();try{(\"\");}catch(SSLException e){println();}if(null){}((System)).getInstance();for(i;;){((i)\"\"+cert).println(\"\"+toHexString());(cert).println(\"\"+toHexString());}(\"\");try{k=(length()==0)?0:(line);}catch(NumberFormatException e){(\"\");}(\"\"+\"\");}"}
{"time": "2021-01-20 11:01:04.994226", "n_pass": [4244, 311, 311], "score": "0.9367", "loss": "0.0975", "code": "void main(String[]args)throws Exception{if((2)){String=args[0].split()?3:(c[1]);p=(length)?\"\":args[1];((\"\")+\"\");File(dir,\"\");if(file()){File(dir,\"\");}}(\"\"+\"\");(ks);X=(X)getTrustManagers()[0];tm(null,new TrustManager[]{});(\"\").setSoTimeout();try{(\"\");}catch(SSLException e){println();}if(null){}((System)).getInstance();for(;;){((i)\"\"+cert).println(\"\"+toHexString());(cert).println(\"\"+toHexString());}(\"\");try{k=(length()==0)?0:(line);}catch(NumberFormatException e){(\"\");}(\"\"+\"\");}"}

Minimal simplified code:
void main(String[]args)throws Exception{if((2)){String=args[0].split()?3:(c[1]);p=(length)?"":args[1];(("")+"");File(dir,"");if(file()){File(dir,"");}}(""+"");(ks);X=(X)getTrustManagers()[0];tm(null,new TrustManager[]{});("").setSoTimeout();try{("");}catch(SSLException e){println();}if(null){}((System)).getInstance();for(;;){((i)""+cert).println(""+toHexString());(cert).println(""+toHexString());}("");try{k=(length()==0)?0:(line);}catch(NumberFormatException e){("");}(""+"");}

