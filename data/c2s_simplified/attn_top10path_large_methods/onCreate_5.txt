
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/w568w__fuckView/app/src/main/java/ml/qingsu/fuckview/ui/activities/PreferencesActivity_onCreate.java
method_name = onCreate
method_body = @Override protected void onCreate(Bundle savedInstanceState) { if (PreferenceManager.getDefaultSharedPreferences(this).getBoolean("theme", false)) { setTheme(R.style.DayTheme); } super.onCreate(savedInstanceState); addPreferencesFromResource(R.xml.preference); findPreference("super_mode").setOnPreferenceChangeListener(new Preference.OnPreferenceChangeListener() { @Override public boolean onPreferenceChange(Preference preference, Object o) { MainActivity.writePreferences(o.toString(), SUPER_MODE_NAME); return true; } }); findPreference("only_once").setOnPreferenceChangeListener(new Preference.OnPreferenceChangeListener() { @Override public boolean onPreferenceChange(Preference preference, Object newValue) { MainActivity.writePreferences(newValue.toString(), ONLY_ONCE_NAME); return true; } }); findPreference("standard_mode").setOnPreferenceChangeListener(new Preference.OnPreferenceChangeListener() { @Override public boolean onPreferenceChange(Preference preference, Object newValue) { MainActivity.writePreferences(newValue.toString(), STANDARD_MODE_NAME); return true; } }); findPreference("import").setOnPreferenceClickListener(new Preference.OnPreferenceClickListener() { @Override public boolean onPreferenceClick(Preference preference) { final AppCompatEditText editText = new AppCompatEditText(PreferencesActivity.this); editText.setHint(R.string.import_rules); new AlertDialog.Builder(PreferencesActivity.this).setTitle(R.string.conf_import_rules_name).setView(editText).setPositiveButton(R.string.OK, new DialogInterface.OnClickListener() { @Override public void onClick(DialogInterface dialogInterface, int i) { MainActivity.appendPreferences("\n" + editText.getText().toString(), Constant.LIST_NAME); } }).setNegativeButton(R.string.cancel, null).show(); return false; } }); findPreference("online_rules").setOnPreferenceClickListener(new Preference.OnPreferenceClickListener() { @Override public boolean onPreferenceClick(Preference preference) { setResult(RESULT_OK); finish(); return false; } }); findPreference("about").setOnPreferenceClickListener(new Preference.OnPreferenceClickListener() { @Override public boolean onPreferenceClick(Preference preference) { clickTime++; if (clickTime >= 5 * 59) { clickTime = 0; try { startActivity(new Intent(Intent.ACTION_VIEW, Uri.parse("market://details?id=" + getPackageName()))); } catch (Throwable ignored) { } Toast.makeText(PreferencesActivity.this, R.string.give_me_five_stars, Toast.LENGTH_LONG).show(); } preference.setSummary(String.format(Locale.CHINA, getString(R.string.conf_joke), clickTime / 59, clickTime % 59)); return false; } }); findPreference("version").setSummary(getVersionName(this)); findPreference("pay").setOnPreferenceClickListener(new Preference.OnPreferenceClickListener() { @Override public boolean onPreferenceClick(Preference preference) { Toast.makeText(PreferencesActivity.this, R.string.no_donate, Toast.LENGTH_SHORT).show(); return false; } }); findPreference("source").setOnPreferenceClickListener(new Preference.OnPreferenceClickListener() { @Override public boolean onPreferenceClick(Preference preference) { new AlertDialog.Builder(PreferencesActivity.this).setTitle("Open Source").setMessage("Nothing").setPositiveButton(getString(R.string.OK), null).show(); return false; } }); findPreference("qq").setOnPreferenceClickListener(new Preference.OnPreferenceClickListener() { @Override public boolean onPreferenceClick(Preference preference) { try { startActivity(new Intent(Intent.ACTION_VIEW, Uri.parse("https://jq.qq.com/?_wv=1027&k=4EepPOs"))); } catch (Throwable ignored) { } return false; } }); findPreference("guide").setOnPreferenceClickListener(new Preference.OnPreferenceClickListener() { @Override public boolean onPreferenceClick(Preference preference) { try { setResult(RESULT_GUIDE); finish(); } catch (ActivityNotFoundException a) { a.printStackTrace(); Toast.makeText(PreferencesActivity.this, getString(R.string.unsupport_of_package), Toast.LENGTH_SHORT).show(); } return false; } }); findPreference("log").setOnPreferenceClickListener(new Preference.OnPreferenceClickListener() { @Override public boolean onPreferenceClick(Preference preference) { new Thread(new Runnable() { @Override public void run() { final String bug = String.format(Locale.CHINA, "Logcat:\n\n%s\n\n" + "=================\n\n" + "XposedLog:\n\n%s\n\n" + "=================\n\n" + "Phone:\n\n%s\n\n", getLogcatInfo(), getXposedLogInfo(), getPhoneInfo()); runOnUiThread(new Runnable() { @Override public void run() { shareText(bug); } }); } }).start(); return false; } }); findPreference("theme").setOnPreferenceClickListener(new Preference.OnPreferenceClickListener() { @Override public boolean onPreferenceClick(Preference preference) { finish(); Intent restart = new Intent(PreferencesActivity.this, MainActivity.class); if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.HONEYCOMB) { restart.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK); } else { restart.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK); } startActivity(restart); return false; } }); findPreference("enable_log").setOnPreferenceChangeListener(new Preference.OnPreferenceChangeListener() { @Override public boolean onPreferenceChange(Preference preference, Object newValue) { MainActivity.writePreferences(newValue.toString(), ENABLE_LOG_NAME); return true; } }); }

topk path-contexts for sub-token: on
[0.2514] saved|instance|state,VariableDeclaratorId0|Parameter|MethodDeclaration|BlockStmt|ExpressionStmt|MethodCallExpr0|ObjectCreationExpr|MethodDeclaration|NameExpr2,METHOD_NAME
[0.2514] saved|instance|state,VariableDeclaratorId0|Parameter|MethodDeclaration|BlockStmt|ExpressionStmt|MethodCallExpr0|ObjectCreationExpr|MethodDeclaration|NameExpr2,METHOD_NAME
[0.2514] saved|instance|state,VariableDeclaratorId0|Parameter|MethodDeclaration|BlockStmt|ExpressionStmt|MethodCallExpr0|ObjectCreationExpr|MethodDeclaration|NameExpr2,METHOD_NAME
[0.0307] saved|instance|state,NameExpr2|MethodCallExpr|ExpressionStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|ObjectCreationExpr|MethodDeclaration|NameExpr2,METHOD_NAME
[0.0166] bundle,ClassOrInterfaceType1|Parameter|MethodDeclaration|BlockStmt|ExpressionStmt|MethodCallExpr0|ObjectCreationExpr|MethodDeclaration|PrimitiveType1,boolean
[0.0166] bundle,ClassOrInterfaceType1|Parameter|MethodDeclaration|BlockStmt|ExpressionStmt|MethodCallExpr0|ObjectCreationExpr|MethodDeclaration|PrimitiveType1,boolean
[0.0166] bundle,ClassOrInterfaceType1|Parameter|MethodDeclaration|BlockStmt|ExpressionStmt|MethodCallExpr0|ObjectCreationExpr|MethodDeclaration|PrimitiveType1,boolean
[0.0166] bundle,ClassOrInterfaceType1|Parameter|MethodDeclaration|BlockStmt|ExpressionStmt|MethodCallExpr0|ObjectCreationExpr|MethodDeclaration|PrimitiveType1,boolean
[0.0166] bundle,ClassOrInterfaceType1|Parameter|MethodDeclaration|BlockStmt|ExpressionStmt|MethodCallExpr0|ObjectCreationExpr|MethodDeclaration|PrimitiveType1,boolean
[0.0152] saved|instance|state,VariableDeclaratorId0|Parameter|MethodDeclaration|BlockStmt|ExpressionStmt|MethodCallExpr0|ObjectCreationExpr|ClassOrInterfaceType|ClassOrInterfaceType0,preference
[0.0152] saved|instance|state,VariableDeclaratorId0|Parameter|MethodDeclaration|BlockStmt|ExpressionStmt|MethodCallExpr0|ObjectCreationExpr|ClassOrInterfaceType|ClassOrInterfaceType0,preference

topk terminals for sub-token: on
['saved|instance|state', 'METHOD_NAME', 'saved|instance|state', 'METHOD_NAME', 'saved|instance|state', 'METHOD_NAME', 'saved|instance|state', 'METHOD_NAME', 'bundle', 'boolean', 'bundle', 'boolean', 'bundle', 'boolean', 'bundle', 'boolean', 'bundle', 'boolean', 'saved|instance|state', 'preference', 'saved|instance|state', 'preference']

topk path-contexts for sub-token: create
[0.9065] bundle,ClassOrInterfaceType1|Parameter|MethodDeclaration|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,on|create
[0.0178] finish,NameExpr1|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BinaryExpr:greaterEquals|FieldAccessExpr1|FieldAccessExpr0|NameExpr0,build
[0.0051] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|MethodCallExpr0|FieldAccessExpr1|FieldAccessExpr0|NameExpr2,xml
[0.0035] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|MethodCallExpr0|ObjectCreationExpr|MethodDeclaration|MarkerAnnotationExpr|NameExpr0,override
[0.0035] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|MethodCallExpr0|ObjectCreationExpr|MethodDeclaration|MarkerAnnotationExpr|NameExpr0,override
[0.0035] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|MethodCallExpr0|ObjectCreationExpr|MethodDeclaration|MarkerAnnotationExpr|NameExpr0,override
[0.0029] saved|instance|state,VariableDeclaratorId0|Parameter|MethodDeclaration|BlockStmt|ExpressionStmt|MethodCallExpr0|ObjectCreationExpr|MethodDeclaration|NameExpr2,METHOD_NAME
[0.0029] saved|instance|state,VariableDeclaratorId0|Parameter|MethodDeclaration|BlockStmt|ExpressionStmt|MethodCallExpr0|ObjectCreationExpr|MethodDeclaration|NameExpr2,METHOD_NAME
[0.0029] saved|instance|state,VariableDeclaratorId0|Parameter|MethodDeclaration|BlockStmt|ExpressionStmt|MethodCallExpr0|ObjectCreationExpr|MethodDeclaration|NameExpr2,METHOD_NAME
[0.0028] bundle,ClassOrInterfaceType1|Parameter|MethodDeclaration|BlockStmt|ExpressionStmt|MethodCallExpr0|ObjectCreationExpr|MethodDeclaration|PrimitiveType1,boolean
[0.0028] bundle,ClassOrInterfaceType1|Parameter|MethodDeclaration|BlockStmt|ExpressionStmt|MethodCallExpr0|ObjectCreationExpr|MethodDeclaration|PrimitiveType1,boolean
[0.0028] bundle,ClassOrInterfaceType1|Parameter|MethodDeclaration|BlockStmt|ExpressionStmt|MethodCallExpr0|ObjectCreationExpr|MethodDeclaration|PrimitiveType1,boolean
[0.0028] bundle,ClassOrInterfaceType1|Parameter|MethodDeclaration|BlockStmt|ExpressionStmt|MethodCallExpr0|ObjectCreationExpr|MethodDeclaration|PrimitiveType1,boolean
[0.0028] bundle,ClassOrInterfaceType1|Parameter|MethodDeclaration|BlockStmt|ExpressionStmt|MethodCallExpr0|ObjectCreationExpr|MethodDeclaration|PrimitiveType1,boolean

topk terminals for sub-token: create
['bundle', 'on|create', 'finish', 'build', 'METHOD_NAME', 'xml', 'METHOD_NAME', 'override', 'METHOD_NAME', 'override', 'METHOD_NAME', 'override', 'saved|instance|state', 'METHOD_NAME', 'saved|instance|state', 'METHOD_NAME', 'saved|instance|state', 'METHOD_NAME', 'bundle', 'boolean', 'bundle', 'boolean', 'bundle', 'boolean', 'bundle', 'boolean', 'bundle', 'boolean']

