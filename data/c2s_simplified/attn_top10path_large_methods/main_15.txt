
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/javaee__javamail/mail/src/oldtest/java/javax/mail/internet/messagecachetest_main.java
method_name = main
method_body = public static void main(String[] argv) { int nummsg = 256; int optind; for (optind = 0; optind < argv.length; optind++) { if (argv[optind].equals("-T")) { protocol = argv[++optind]; } else if (argv[optind].equals("-H")) { host = argv[++optind]; } else if (argv[optind].equals("-U")) { user = argv[++optind]; } else if (argv[optind].equals("-P")) { password = argv[++optind]; } else if (argv[optind].equals("-v")) { verbose = true; } else if (argv[optind].equals("-D")) { debug = true; } else if (argv[optind].equals("-f")) { mbox = argv[++optind]; } else if (argv[optind].equals("-L")) { url = argv[++optind]; } else if (argv[optind].equals("-p")) { port = Integer.parseInt(argv[++optind]); } else if (argv[optind].equals("--")) { optind++; break; } else if (argv[optind].startsWith("-")) { System.out.println("Usage: messagecachetest [-L url] [-T protocol] [-H host] [-p port] [-U user]"); System.out.println("\t[-P password] [-f mailbox] [msgnum] [-v] [-D]"); System.exit(1); } else { break; } } try { if (optind < argv.length) nummsg = Integer.parseInt(argv[optind]); Properties props = System.getProperties(); session = Session.getInstance(props, null); session.setDebug(debug); Store store = null; if (url != null) { URLName urln = new URLName(url); store = session.getStore(urln); store.connect(); } else { if (protocol != null) store = session.getStore(protocol); else store = session.getStore(); if (host != null || user != null || password != null) store.connect(host, port, user, password); else store.connect(); } Folder folder = store.getDefaultFolder(); if (folder == null) { System.out.println("No default folder"); System.exit(1); } if (mbox == null) mbox = "messagecachetest"; folder = folder.getFolder(mbox); if (folder == null) { System.out.println("Invalid folder"); System.exit(1); } Message[] msgs = createMessages(nummsg); if (folder.exists()) folder.delete(false); folder.create(Folder.HOLDS_MESSAGES); folder.open(Folder.READ_WRITE); if (verbose) System.out.println("fill folder"); folder.appendMessages(msgs); folder.close(false); folder.open(Folder.READ_WRITE); if (verbose) System.out.println("test message number"); testMessageNumber(folder); folder.close(false); folder.open(Folder.READ_WRITE); if (verbose) System.out.println("test expunge forward"); testExpungeForward(folder); folder.close(false); folder.open(Folder.READ_WRITE); folder.appendMessages(msgs); folder.close(false); folder.open(Folder.READ_WRITE); if (verbose) System.out.println("test expunge reverse"); testExpungeReverse(folder); folder.close(false); folder.open(Folder.READ_WRITE); folder.appendMessages(msgs); folder.close(false); folder.open(Folder.READ_WRITE); if (verbose) System.out.println("test expunge random"); testExpungeRandom(folder); folder.close(false); folder.open(Folder.READ_WRITE); folder.appendMessages(msgs); folder.close(false); folder.open(Folder.READ_WRITE); if (verbose) System.out.println("test expunge other"); testExpungeOther(folder); folder.close(false); store.close(); } catch (Exception ex) { System.out.println("Oops, got exception! " + ex.getMessage()); ex.printStackTrace(); System.exit(1); } System.exit(0); }

topk path-contexts for sub-token: main
[0.2237] argv,VariableDeclaratorId0|Parameter|MethodDeclaration|BlockStmt|TryStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,folder
[0.2101] argv,VariableDeclaratorId0|Parameter|MethodDeclaration|BlockStmt|TryStmt|BlockStmt|IfStmt|BinaryExpr:equals|NameExpr0,folder
[0.1862] argv,VariableDeclaratorId0|Parameter|MethodDeclaration|BlockStmt|TryStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|ClassOrInterfaceType0,store
[0.0519] argv,VariableDeclaratorId0|Parameter|MethodDeclaration|BlockStmt|TryStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,test|expunge|forward
[0.0473] argv,VariableDeclaratorId0|Parameter|MethodDeclaration|BlockStmt|TryStmt|BlockStmt|IfStmt|BinaryExpr:notEquals|NullLiteralExpr1,null
[0.0221] argv,VariableDeclaratorId0|Parameter|MethodDeclaration|BlockStmt|ForStmt|BinaryExpr:less|FieldAccessExpr1|NameExpr0,argv
[0.0215] argv,VariableDeclaratorId0|Parameter|MethodDeclaration|BlockStmt|TryStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,debug
[0.0210] test|expunge|random,StringLiteralExpr2|MethodCallExpr|ExpressionStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|BooleanLiteralExpr2,false
[0.0182] read|write,NameExpr2|FieldAccessExpr2|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|ExpressionStmt|MethodCallExpr0|StringLiteralExpr2,fill|folder
[0.0165] argv,VariableDeclaratorId0|Parameter|MethodDeclaration|BlockStmt|TryStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,append|messages

topk terminals for sub-token: main
['argv', 'folder', 'argv', 'folder', 'argv', 'store', 'argv', 'test|expunge|forward', 'argv', 'null', 'argv', 'argv', 'argv', 'debug', 'test|expunge|random', 'false', 'read|write', 'fill|folder', 'argv', 'append|messages']

