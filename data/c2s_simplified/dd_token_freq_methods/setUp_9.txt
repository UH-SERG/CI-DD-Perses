
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/codefollower__Tomcat-Research/test/org/apache/catalina/tribes/test/channel/TestRemoteProcessException_setUp.java
method_name = setUp
method_body = @Before public void setUp() throws Exception { channel1 = new GroupChannel(); channel2 = new GroupChannel(); listener1 = new Listener(); channel2.addChannelListener(listener1); TesterUtil.addRandomDomain(new ManagedChannel[] { channel1, channel2 }); channel1.start(Channel.DEFAULT); channel2.start(Channel.DEFAULT); }
predict, score, loss = setUp, 0.7702005, 0.27091566

Trace of simplified code(s):
{"time": "2020-12-27 04:11:29.075609", "n_pass": [1, 1, 1], "score": "0.7702", "loss": "0.2709", "code": "@Before public void setUp() throws Exception { channel1 = new GroupChannel(); channel2 = new GroupChannel(); listener1 = new Listener(); channel2.addChannelListener(listener1); TesterUtil.addRandomDomain(new ManagedChannel[] { channel1, channel2 }); channel1.start(Channel.DEFAULT); channel2.start(Channel.DEFAULT); }"}
{"time": "2020-12-27 04:11:30.821674", "n_pass": [47, 2, 2], "score": "0.7698", "loss": "0.275", "code": "@Before public void setUp() throws Exception { channel(); channel2 = new GroupChannel(); listener1 = new Listener(); channel2.addChannelListener(listener1); TesterUtil.addRandomDomain(new ManagedChannel[] { channel1, channel2 }); channel1.start(Channel.DEFAULT); channel2.start(Channel.DEFAULT); }"}
{"time": "2020-12-27 04:11:32.181189", "n_pass": [48, 3, 3], "score": "0.7672", "loss": "0.2793", "code": "@Before public void setUp() throws Exception { channel= new GroupChannel(); listener1 = new Listener(); channel2.addChannelListener(listener1); TesterUtil.addRandomDomain(new ManagedChannel[] { channel1, channel2 }); channel1.start(Channel.DEFAULT); channel2.start(Channel.DEFAULT); }"}
{"time": "2020-12-27 04:11:33.557555", "n_pass": [49, 4, 4], "score": "0.7561", "loss": "0.3007", "code": "@Before public void setUp() throws Exception { channel; listener1 = new Listener(); channel2.addChannelListener(listener1); TesterUtil.addRandomDomain(new ManagedChannel[] { channel1, channel2 }); channel1.start(Channel.DEFAULT); channel2.start(Channel.DEFAULT); }"}
{"time": "2020-12-27 04:11:34.935205", "n_pass": [51, 5, 5], "score": "0.7786", "loss": "0.2665", "code": "@Before public void setUp() throws Exception { channel; listener1 = channel2.addChannelListener(listener1); TesterUtil.addRandomDomain(new ManagedChannel[] { channel1, channel2 }); channel1.start(Channel.DEFAULT); channel2.start(Channel.DEFAULT); }"}
{"time": "2020-12-27 04:11:36.291921", "n_pass": [55, 6, 6], "score": "0.8327", "loss": "0.1979", "code": "@Before public void setUp() throws Exception { channel; listener1 = channel2.addChannelListener(listener1); TesterUtil.addRandomDomain(new ManagedChannel[] { }); channel1.start(Channel.DEFAULT); channel2.start(Channel.DEFAULT); }"}
{"time": "2020-12-27 04:11:37.665783", "n_pass": [57, 7, 7], "score": "0.8404", "loss": "0.1818", "code": "@Before public void setUp() throws Exception { channel; listener1 = channel2.addChannelListener(listener1); TesterUtil.addRandomDomain(new ManagedChannel[] { }); channel1; channel2.start(Channel.DEFAULT); }"}
{"time": "2020-12-27 04:11:39.369203", "n_pass": [63, 8, 8], "score": "0.7932", "loss": "0.2484", "code": "@Before public void setUp() throws Exception { channelchannel2.addChannelListener(listener1); TesterUtil.addRandomDomain(new ManagedChannel[] { }); channel1; channel2.start(Channel.DEFAULT); }"}
{"time": "2020-12-27 04:11:41.076423", "n_pass": [91, 9, 9], "score": "0.8201", "loss": "0.2116", "code": "@Before public void setUp() throws Exception { channeladdChannelListener(listener1); TesterUtil.addRandomDomain(new ManagedChannel[] { }); channel1; channel2.start(Channel.DEFAULT); }"}
{"time": "2020-12-27 04:11:42.458719", "n_pass": [94, 10, 10], "score": "0.7821", "loss": "0.255", "code": "@Before public void setUp() throws Exception { channeladdChannelListener(listener1);addRandomDomain(new ManagedChannel[] { }); channel1; channel2.start(Channel.DEFAULT); }"}
{"time": "2020-12-27 04:11:43.819452", "n_pass": [99, 11, 11], "score": "0.767", "loss": "0.2772", "code": "@Before public void setUp() throws Exception { channeladdChannelListener(listener1);addRandomDomain(new ManagedChannel[] { }); channel2.start(Channel.DEFAULT); }"}
{"time": "2020-12-27 04:11:45.180331", "n_pass": [100, 12, 12], "score": "0.7699", "loss": "0.2749", "code": "@Before public void setUp() throws Exception { channeladdChannelListener(listener1);addRandomDomain(new ManagedChannel[] { }); (Channel.DEFAULT); }"}
{"time": "2020-12-27 04:11:49.574502", "n_pass": [144, 14, 13], "score": "0.7386", "loss": "0.3112", "code": "@Before public void setUp() throws Exception { channeladdChannelListener(listener1);addRandomDomain(new ManagedChannel[] { }); (Channel); }"}
{"time": "2020-12-27 04:11:52.263093", "n_pass": [150, 16, 14], "score": "0.7386", "loss": "0.3112", "code": "@Before  void setUp() throws Exception { channeladdChannelListener(listener1);addRandomDomain(new ManagedChannel[] { }); (Channel); }"}
{"time": "2020-12-27 04:11:53.615943", "n_pass": [151, 17, 15], "score": "0.7386", "loss": "0.3112", "code": "@Before void setUp() throws Exception { channeladdChannelListener(listener1);addRandomDomain(new ManagedChannel[] { }); (Channel); }"}
{"time": "2020-12-27 04:11:55.685502", "n_pass": [160, 18, 16], "score": "0.7072", "loss": "0.3538", "code": "@Before void setUp() throws Exception {addChannelListener(listener1);addRandomDomain(new ManagedChannel[] { }); (Channel); }"}
{"time": "2020-12-27 04:11:57.030696", "n_pass": [162, 19, 17], "score": "0.7244", "loss": "0.3309", "code": "@Before void setUp() throws Exception {addChannelListener();addRandomDomain(new ManagedChannel[] { }); (Channel); }"}
{"time": "2020-12-27 04:12:03.150185", "n_pass": [222, 20, 18], "score": "0.7244", "loss": "0.3309", "code": "@Before void setUp() throws Exception {addChannelListener();addRandomDomain(new ManagedChannel[]{ }); (Channel); }"}
{"time": "2020-12-27 04:12:04.473384", "n_pass": [224, 21, 19], "score": "0.7244", "loss": "0.3309", "code": "@Before void setUp() throws Exception {addChannelListener();addRandomDomain(new ManagedChannel[]{}); (Channel); }"}
{"time": "2020-12-27 04:12:05.809303", "n_pass": [228, 22, 20], "score": "0.7244", "loss": "0.3309", "code": "@Before void setUp() throws Exception {addChannelListener();addRandomDomain(new ManagedChannel[]{});(Channel); }"}
{"time": "2020-12-27 04:12:07.149775", "n_pass": [233, 23, 21], "score": "0.7244", "loss": "0.3309", "code": "@Before void setUp() throws Exception {addChannelListener();addRandomDomain(new ManagedChannel[]{});(Channel);}"}
{"time": "2020-12-27 04:12:09.572399", "n_pass": [243, 24, 22], "score": "0.7244", "loss": "0.3309", "code": "@Before void setUp()throws Exception {addChannelListener();addRandomDomain(new ManagedChannel[]{});(Channel);}"}
{"time": "2020-12-27 04:12:10.943409", "n_pass": [247, 25, 23], "score": "0.7244", "loss": "0.3309", "code": "@Before void setUp()throws Exception{addChannelListener();addRandomDomain(new ManagedChannel[]{});(Channel);}"}
{"time": "2020-12-27 04:12:12.265505", "n_pass": [253, 26, 24], "score": "0.5667", "loss": "0.6094", "code": "@Before void setUp()throws Exception{addChannelListener();(new ManagedChannel[]{});(Channel);}"}

Minimal simplified code:
@Before void setUp()throws Exception{addChannelListener();(new ManagedChannel[]{});(Channel);}

