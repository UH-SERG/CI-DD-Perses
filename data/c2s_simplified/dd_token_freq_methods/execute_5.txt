
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/DigitalPebble__storm-crawler/core/src/main/java/com/digitalpebble/stormcrawler/indexing/DummyIndexer_execute.java
method_name = execute
method_body = @Override public void execute(Tuple tuple) { String url = tuple.getStringByField("url"); Metadata metadata = (Metadata) tuple.getValueByField("metadata"); _collector.emit(com.digitalpebble.stormcrawler.Constants.StatusStreamName, tuple, new Values(url, metadata, Status.FETCHED)); _collector.ack(tuple); }
predict, score, loss = execute, 0.46994704, 0.9249372

Trace of simplified code(s):
{"time": "2020-12-27 04:00:21.654353", "n_pass": [1, 1, 1], "score": "0.4803", "loss": "0.8791", "code": "@Override public void execute(Tuple tuple) { String url = tuple.getStringByField(\"url\"); Metadata metadata = (Metadata) tuple.getValueByField(\"metadata\"); _collector.emit(com.digitalpebble.stormcrawler.Constants.StatusStreamName, tuple, new Values(url, metadata, Status.FETCHED)); _collector.ack(tuple); }"}
{"time": "2020-12-27 04:00:23.766695", "n_pass": [54, 2, 2], "score": "0.3402", "loss": "1.1823", "code": "@Override public void execute(Tuple tuple) { String url = tuple.getStringByField(\"url\"); Metadata metadata = (Metadata) tuple.getValueByField(\"metadata\"); _collector.emit(com.digitalpebble, tuple, new Values(url, metadata, Status.FETCHED)); _collector.ack(tuple); }"}
{"time": "2020-12-27 04:00:25.848400", "n_pass": [99, 3, 3], "score": "0.3685", "loss": "1.099", "code": "@Override public void execute(Tuple tuple) { String url = tuple.getStringByField(\"url\"); Metadata metadata = (Metadata) tuple.getValueByField(\"metadata\"); _collector.emit(com.digitalpebble, new Values(url, metadata, Status.FETCHED)); _collector.ack(tuple); }"}
{"time": "2020-12-27 04:00:27.199253", "n_pass": [101, 4, 4], "score": "0.3858", "loss": "1.0513", "code": "@Override public void execute(Tuple tuple) { String url = tuple.getStringByField(\"url\"); Metadata metadata = (Metadata) tuple.getValueByField(\"metadata\"); _collector.emit(com.digitalpebble, new Values(metadata, Status.FETCHED)); _collector.ack(tuple); }"}
{"time": "2020-12-27 04:00:28.530718", "n_pass": [102, 5, 5], "score": "0.3808", "loss": "1.0521", "code": "@Override public void execute(Tuple tuple) { String url = tuple.getStringByField(\"url\"); Metadata metadata = (Metadata) tuple.getValueByField(\"metadata\"); _collector.emit(com.digitalpebble, new Values(Status.FETCHED)); _collector.ack(tuple); }"}
{"time": "2020-12-27 04:00:29.893427", "n_pass": [103, 6, 6], "score": "0.3967", "loss": "1.0118", "code": "@Override public void execute(Tuple tuple) { String url = tuple.getStringByField(\"url\"); Metadata metadata = (Metadata) tuple.getValueByField(\"metadata\"); _collector.emit(com.digitalpebble, new Values()); _collector.ack(tuple); }"}
{"time": "2020-12-27 04:00:31.269739", "n_pass": [108, 7, 7], "score": "0.3008", "loss": "1.6819", "code": "public void execute(Tuple tuple) { String url = tuple.getStringByField(\"url\"); Metadata metadata = (Metadata) tuple.getValueByField(\"metadata\"); _collector.emit(com.digitalpebble, new Values()); _collector.ack(tuple); }"}
{"time": "2020-12-27 04:00:38.365860", "n_pass": [122, 12, 8], "score": "0.2923", "loss": "1.7449", "code": "public void execute(Tuple tuple) { String url = tuple.getStringByField(\"url\"); Metadata metadata = (Metadata) (\"metadata\"); _collector.emit(com.digitalpebble, new Values()); _collector.ack(tuple); }"}
{"time": "2020-12-27 04:00:42.745169", "n_pass": [140, 15, 9], "score": "0.2702", "loss": "1.9011", "code": "public void execute(Tuple tuple) { String url =getStringByField(\"url\"); Metadata metadata = (Metadata) (\"metadata\"); _collector.emit(com.digitalpebble, new Values()); _collector.ack(tuple); }"}
{"time": "2020-12-27 04:00:51.430271", "n_pass": [210, 19, 10], "score": "0.2702", "loss": "1.9011", "code": "public void execute(Tuple tuple) {String url =getStringByField(\"url\"); Metadata metadata = (Metadata) (\"metadata\"); _collector.emit(com.digitalpebble, new Values()); _collector.ack(tuple); }"}
{"time": "2020-12-27 04:00:56.771243", "n_pass": [214, 23, 11], "score": "0.2702", "loss": "1.9011", "code": "public void execute(Tuple tuple) {String url=getStringByField(\"url\"); Metadata metadata = (Metadata) (\"metadata\"); _collector.emit(com.digitalpebble, new Values()); _collector.ack(tuple); }"}
{"time": "2020-12-27 04:01:07.487125", "n_pass": [244, 31, 12], "score": "0.2702", "loss": "1.9011", "code": " void execute(Tuple tuple) {String url=getStringByField(\"url\"); Metadata metadata = (Metadata) (\"metadata\"); _collector.emit(com.digitalpebble, new Values()); _collector.ack(tuple); }"}
{"time": "2020-12-27 04:01:08.809640", "n_pass": [245, 32, 13], "score": "0.2702", "loss": "1.9011", "code": "void execute(Tuple tuple) {String url=getStringByField(\"url\"); Metadata metadata = (Metadata) (\"metadata\"); _collector.emit(com.digitalpebble, new Values()); _collector.ack(tuple); }"}
{"time": "2020-12-27 04:01:10.887184", "n_pass": [254, 33, 14], "score": "0.2702", "loss": "1.9011", "code": "void execute(Tuple tuple){String url=getStringByField(\"url\"); Metadata metadata = (Metadata) (\"metadata\"); _collector.emit(com.digitalpebble, new Values()); _collector.ack(tuple); }"}
{"time": "2020-12-27 04:01:32.275509", "n_pass": [350, 45, 15], "score": "0.2702", "loss": "1.9011", "code": "void execute(Tuple tuple){String url=getStringByField(\"url\");Metadata metadata = (Metadata) (\"metadata\"); _collector.emit(com.digitalpebble, new Values()); _collector.ack(tuple); }"}
{"time": "2020-12-27 04:01:36.317205", "n_pass": [353, 48, 16], "score": "0.2702", "loss": "1.9011", "code": "void execute(Tuple tuple){String url=getStringByField(\"url\");Metadata metadata= (Metadata) (\"metadata\"); _collector.emit(com.digitalpebble, new Values()); _collector.ack(tuple); }"}
{"time": "2020-12-27 04:01:37.646604", "n_pass": [355, 49, 17], "score": "0.2702", "loss": "1.9011", "code": "void execute(Tuple tuple){String url=getStringByField(\"url\");Metadata metadata=(Metadata) (\"metadata\"); _collector.emit(com.digitalpebble, new Values()); _collector.ack(tuple); }"}
{"time": "2020-12-27 04:01:38.970695", "n_pass": [359, 50, 18], "score": "0.2702", "loss": "1.9011", "code": "void execute(Tuple tuple){String url=getStringByField(\"url\");Metadata metadata=(Metadata)(\"metadata\"); _collector.emit(com.digitalpebble, new Values()); _collector.ack(tuple); }"}
{"time": "2020-12-27 04:01:40.299126", "n_pass": [362, 51, 19], "score": "0.2777", "loss": "1.8726", "code": "void execute(Tuple tuple){String url=getStringByField(\"url\");Metadata metadata=(Metadata)(\"\"); _collector.emit(com.digitalpebble, new Values()); _collector.ack(tuple); }"}
{"time": "2020-12-27 04:01:41.651627", "n_pass": [366, 52, 20], "score": "0.2777", "loss": "1.8726", "code": "void execute(Tuple tuple){String url=getStringByField(\"url\");Metadata metadata=(Metadata)(\"\");_collector.emit(com.digitalpebble, new Values()); _collector.ack(tuple); }"}
{"time": "2020-12-27 04:01:42.974299", "n_pass": [367, 53, 21], "score": "0.2777", "loss": "1.8726", "code": "void execute(Tuple tuple){String url=getStringByField(\"url\");Metadata metadata=(Metadata)(\"\");collector.emit(com.digitalpebble, new Values()); _collector.ack(tuple); }"}
{"time": "2020-12-27 04:01:47.000066", "n_pass": [376, 56, 22], "score": "0.2777", "loss": "1.8726", "code": "void execute(Tuple tuple){String url=getStringByField(\"url\");Metadata metadata=(Metadata)(\"\");collector.emit(com.digitalpebble,new Values()); _collector.ack(tuple); }"}
{"time": "2020-12-27 04:01:51.004820", "n_pass": [384, 59, 23], "score": "0.2777", "loss": "1.8726", "code": "void execute(Tuple tuple){String url=getStringByField(\"url\");Metadata metadata=(Metadata)(\"\");collector.emit(com.digitalpebble,new Values());_collector.ack(tuple); }"}
{"time": "2020-12-27 04:01:52.351494", "n_pass": [385, 60, 24], "score": "0.2777", "loss": "1.8726", "code": "void execute(Tuple tuple){String url=getStringByField(\"url\");Metadata metadata=(Metadata)(\"\");collector.emit(com.digitalpebble,new Values());collector.ack(tuple); }"}
{"time": "2020-12-27 04:01:55.029711", "n_pass": [390, 62, 25], "score": "0.4045", "loss": "1.346", "code": "void execute(Tuple tuple){String url=getStringByField(\"url\");Metadata metadata=(Metadata)(\"\");collector.emit(com.digitalpebble,new Values());collector.ack(); }"}
{"time": "2020-12-27 04:01:56.383233", "n_pass": [393, 63, 26], "score": "0.4045", "loss": "1.346", "code": "void execute(Tuple tuple){String url=getStringByField(\"url\");Metadata metadata=(Metadata)(\"\");collector.emit(com.digitalpebble,new Values());collector.ack();}"}
{"time": "2020-12-27 04:01:58.476128", "n_pass": [404, 64, 27], "score": "0.3509", "loss": "1.5027", "code": "void execute(Tuple tuple){ url=getStringByField(\"url\");Metadata metadata=(Metadata)(\"\");collector.emit(com.digitalpebble,new Values());collector.ack();}"}
{"time": "2020-12-27 04:01:59.798330", "n_pass": [405, 65, 28], "score": "0.3509", "loss": "1.5027", "code": "void execute(Tuple tuple){url=getStringByField(\"url\");Metadata metadata=(Metadata)(\"\");collector.emit(com.digitalpebble,new Values());collector.ack();}"}
{"time": "2020-12-27 04:02:01.151326", "n_pass": [407, 66, 29], "score": "0.3464", "loss": "1.4872", "code": "void execute(Tuple tuple){urlgetStringByField(\"url\");Metadata metadata=(Metadata)(\"\");collector.emit(com.digitalpebble,new Values());collector.ack();}"}
{"time": "2020-12-27 04:02:02.505062", "n_pass": [408, 67, 30], "score": "0.3314", "loss": "1.4935", "code": "void execute(Tuple tuple){url(\"url\");Metadata metadata=(Metadata)(\"\");collector.emit(com.digitalpebble,new Values());collector.ack();}"}
{"time": "2020-12-27 04:02:03.832430", "n_pass": [411, 68, 31], "score": "0.3015", "loss": "1.5589", "code": "void execute(Tuple tuple){url(\"\");Metadata metadata=(Metadata)(\"\");collector.emit(com.digitalpebble,new Values());collector.ack();}"}
{"time": "2020-12-27 04:02:06.476080", "n_pass": [416, 70, 32], "score": "0.2433", "loss": "1.838", "code": "void execute(Tuple tuple){url(\"\");Metadatametadata=(Metadata)(\"\");collector.emit(com.digitalpebble,new Values());collector.ack();}"}
{"time": "2020-12-27 04:02:16.592382", "n_pass": [458, 77, 33], "score": "0.2608", "loss": "1.8353", "code": "void execute(Tuple tuple){(\"\");Metadatametadata=(Metadata)(\"\");collector.emit(com.digitalpebble,new Values());collector.ack();}"}
{"time": "2020-12-27 04:02:20.576289", "n_pass": [476, 80, 34], "score": "0.2476", "loss": "2.4874", "code": "void execute(Tuple tuple){(\"\");Metadatametadata=(Metadata)(\"\");collectoremit(com.digitalpebble,new Values());collector.ack();}"}
{"time": "2020-12-27 04:02:21.911333", "n_pass": [477, 81, 35], "score": "0.3184", "loss": "2.0644", "code": "void execute(Tuple tuple){(\"\");Metadatametadata=(Metadata)(\"\");collector(com.digitalpebble,new Values());collector.ack();}"}
{"time": "2020-12-27 04:02:23.270763", "n_pass": [480, 82, 36], "score": "0.3763", "loss": "1.9323", "code": "void execute(Tuple tuple){(\"\");Metadatametadata=(Metadata)(\"\");collector(comdigitalpebble,new Values());collector.ack();}"}
{"time": "2020-12-27 04:02:24.601966", "n_pass": [481, 83, 37], "score": "0.3478", "loss": "2.0069", "code": "void execute(Tuple tuple){(\"\");Metadatametadata=(Metadata)(\"\");collector(com,new Values());collector.ack();}"}
{"time": "2020-12-27 04:02:25.912811", "n_pass": [483, 84, 38], "score": "0.2925", "loss": "2.1007", "code": "void execute(Tuple tuple){(\"\");Metadatametadata=(Metadata)(\"\");collector(com, Values());collector.ack();}"}
{"time": "2020-12-27 04:02:27.250019", "n_pass": [484, 85, 39], "score": "0.2925", "loss": "2.1007", "code": "void execute(Tuple tuple){(\"\");Metadatametadata=(Metadata)(\"\");collector(com,Values());collector.ack();}"}
{"time": "2020-12-27 04:02:30.621335", "n_pass": [511, 87, 40], "score": "0.2051", "loss": "2.5168", "code": "void execute(Tuple tuple){(\"\");metadata=(Metadata)(\"\");collector(com,Values());collector.ack();}"}
{"time": "2020-12-27 04:02:31.997259", "n_pass": [525, 88, 41], "score": "0.2288", "loss": "2.4613", "code": "void execute(Tuple tuple){(\"\");metadata=(Metadata)(\"\");collector(comValues());collector.ack();}"}
{"time": "2020-12-27 04:02:33.411697", "n_pass": [526, 89, 42], "score": "0.2392", "loss": "2.3518", "code": "void execute(Tuple tuple){(\"\");metadata=(Metadata)(\"\");collector(com());collector.ack();}"}

Minimal simplified code:
void execute(Tuple tuple){("");metadata=(Metadata)("");collector(com());collector.ack();}

