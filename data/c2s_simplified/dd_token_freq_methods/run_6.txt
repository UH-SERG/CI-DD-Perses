
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/codefollower__Tomcat-Research/test/org/apache/catalina/tribes/demos/EchoRpcTest_run.java
method_name = run
method_body = @Override public void run() { try { Thread.sleep(delay); } catch (Exception x) { x.printStackTrace(); } System.exit(0); }
predict, score, loss = run, 0.9882762, 0.023722434

Trace of simplified code(s):
{"time": "2020-12-27 03:49:51.330679", "n_pass": [1, 1, 1], "score": "0.9883", "loss": "0.0237", "code": "@Override public void run() { try { Thread.sleep(delay); } catch (Exception x) { x.printStackTrace(); } System.exit(0); }"}
{"time": "2020-12-27 03:49:53.014038", "n_pass": [44, 2, 2], "score": "0.9358", "loss": "0.1534", "code": "public void run() { try { Thread.sleep(delay); } catch (Exception x) { x.printStackTrace(); } System.exit(0); }"}
{"time": "2020-12-27 03:49:55.646454", "n_pass": [89, 3, 3], "score": "0.9358", "loss": "0.1534", "code": " void run() { try { Thread.sleep(delay); } catch (Exception x) { x.printStackTrace(); } System.exit(0); }"}
{"time": "2020-12-27 03:49:56.988305", "n_pass": [90, 4, 4], "score": "0.9358", "loss": "0.1534", "code": "void run() { try { Thread.sleep(delay); } catch (Exception x) { x.printStackTrace(); } System.exit(0); }"}
{"time": "2020-12-27 03:49:58.661669", "n_pass": [95, 5, 5], "score": "0.9358", "loss": "0.1534", "code": "void run(){ try { Thread.sleep(delay); } catch (Exception x) { x.printStackTrace(); } System.exit(0); }"}
{"time": "2020-12-27 03:49:59.966535", "n_pass": [99, 6, 6], "score": "0.9048", "loss": "0.2109", "code": "void run(){ try { sleep(delay); } catch (Exception x) { x.printStackTrace(); } System.exit(0); }"}
{"time": "2020-12-27 03:50:01.288828", "n_pass": [109, 7, 7], "score": "0.8928", "loss": "0.2435", "code": "void run(){ try { sleep(delay); } catch (Exception x) { printStackTrace(); } System.exit(0); }"}
{"time": "2020-12-27 03:50:02.637453", "n_pass": [114, 8, 8], "score": "0.8988", "loss": "0.2052", "code": "void run(){ try { sleep(delay); } catch (Exception x) { printStackTrace(); } System(0); }"}
{"time": "2020-12-27 03:50:04.691460", "n_pass": [138, 9, 9], "score": "0.7598", "loss": "0.3701", "code": "void run(){ try { sleep(delay); } catch (Exception x) { printStackTrace(); }(0); }"}
{"time": "2020-12-27 03:50:11.498739", "n_pass": [202, 10, 10], "score": "0.7598", "loss": "0.3701", "code": "void run(){ try { sleep(delay); } catch (Exception x) { printStackTrace(); }(0);}"}
{"time": "2020-12-27 03:50:13.519590", "n_pass": [209, 11, 11], "score": "0.7598", "loss": "0.3701", "code": "void run(){try { sleep(delay); } catch (Exception x) { printStackTrace(); }(0);}"}
{"time": "2020-12-27 03:50:14.844699", "n_pass": [211, 12, 12], "score": "0.7598", "loss": "0.3701", "code": "void run(){try{ sleep(delay); } catch (Exception x) { printStackTrace(); }(0);}"}
{"time": "2020-12-27 03:50:16.178843", "n_pass": [213, 13, 13], "score": "0.7598", "loss": "0.3701", "code": "void run(){try{sleep(delay); } catch (Exception x) { printStackTrace(); }(0);}"}
{"time": "2020-12-27 03:50:17.517154", "n_pass": [214, 14, 14], "score": "0.7745", "loss": "0.6464", "code": "void run(){try{(delay); } catch (Exception x) { printStackTrace(); }(0);}"}
{"time": "2020-12-27 03:50:18.850360", "n_pass": [219, 15, 15], "score": "0.7745", "loss": "0.6464", "code": "void run(){try{(delay);} catch (Exception x) { printStackTrace(); }(0);}"}
{"time": "2020-12-27 03:50:20.161435", "n_pass": [221, 16, 16], "score": "0.7745", "loss": "0.6464", "code": "void run(){try{(delay);}catch (Exception x) { printStackTrace(); }(0);}"}
{"time": "2020-12-27 03:50:21.475085", "n_pass": [223, 17, 17], "score": "0.7745", "loss": "0.6464", "code": "void run(){try{(delay);}catch(Exception x) { printStackTrace(); }(0);}"}
{"time": "2020-12-27 03:50:22.791906", "n_pass": [229, 18, 18], "score": "0.7745", "loss": "0.6464", "code": "void run(){try{(delay);}catch(Exception x){ printStackTrace(); }(0);}"}
{"time": "2020-12-27 03:50:24.119185", "n_pass": [231, 19, 19], "score": "0.7745", "loss": "0.6464", "code": "void run(){try{(delay);}catch(Exception x){printStackTrace(); }(0);}"}
{"time": "2020-12-27 03:50:25.453245", "n_pass": [236, 20, 20], "score": "0.7745", "loss": "0.6464", "code": "void run(){try{(delay);}catch(Exception x){printStackTrace();}(0);}"}

Minimal simplified code:
void run(){try{(delay);}catch(Exception x){printStackTrace();}(0);}

