
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/spring-cloud__spring-cloud-function/spring-cloud-function-compiler/src/main/java/org/springframework/cloud/function/compiler/java/MavenSettings_createMirrorSelector.java
method_name = createMirrorSelector
method_body = private MirrorSelector createMirrorSelector(Settings settings) { DefaultMirrorSelector selector = new DefaultMirrorSelector(); for (Mirror mirror : settings.getMirrors()) { selector.add(mirror.getId(), mirror.getUrl(), mirror.getLayout(), false, mirror.getMirrorOf(), mirror.getMirrorOfLayouts()); } return selector; }
predict, score, loss = createMirrorSelector, 0.36975077, 2.8051858

Trace of simplified code(s):
{"time": "2021-01-20 05:17:08.834212", "n_pass": [1, 1, 1], "score": "0.3698", "loss": "2.8052", "code": "private MirrorSelector createMirrorSelector(Settings settings) { DefaultMirrorSelector selector = new DefaultMirrorSelector(); for (Mirror mirror : settings.getMirrors()) { selector.add(mirror.getId(), mirror.getUrl(), mirror.getLayout(), false, mirror.getMirrorOf(), mirror.getMirrorOfLayouts()); } return selector; }"}
{"time": "2021-01-20 05:17:10.584973", "n_pass": [92, 2, 2], "score": "0.3698", "loss": "2.8052", "code": "MirrorSelector createMirrorSelector(Settings settings) { DefaultMirrorSelector selector = new DefaultMirrorSelector(); for (Mirror mirror : settings.getMirrors()) { selector.add(mirror.getId(), mirror.getUrl(), mirror.getLayout(), false, mirror.getMirrorOf(), mirror.getMirrorOfLayouts()); } return selector; }"}
{"time": "2021-01-20 05:17:11.937318", "n_pass": [96, 3, 3], "score": "0.3896", "loss": "3.104", "code": "MirrorSelector createMirrorSelector(Settings settings) { DefaultMirrorSelector= new DefaultMirrorSelector(); for (Mirror mirror : settings.getMirrors()) { selector.add(mirror.getId(), mirror.getUrl(), mirror.getLayout(), false, mirror.getMirrorOf(), mirror.getMirrorOfLayouts()); } return selector; }"}
{"time": "2021-01-20 05:17:13.292529", "n_pass": [109, 4, 4], "score": "0.4186", "loss": "2.9793", "code": "MirrorSelector createMirrorSelector(Settings settings) { DefaultMirrorSelector= new DefaultMirrorSelector(); for (Mirror mirror : settings.getMirrors()) { selector.add(mirror.getId().getUrl(), mirror.getLayout(), false, mirror.getMirrorOf(), mirror.getMirrorOfLayouts()); } return selector; }"}
{"time": "2021-01-20 05:17:14.636219", "n_pass": [114, 5, 5], "score": "0.4227", "loss": "2.898", "code": "MirrorSelector createMirrorSelector(Settings settings) { DefaultMirrorSelector= new DefaultMirrorSelector(); for (Mirror mirror : settings.getMirrors()) { selector.add(mirror.getId().getUrl(), mirror.getLayout(), mirror.getMirrorOf(), mirror.getMirrorOfLayouts()); } return selector; }"}
{"time": "2021-01-20 05:17:15.976270", "n_pass": [115, 6, 6], "score": "0.4193", "loss": "2.7143", "code": "MirrorSelector createMirrorSelector(Settings settings) { DefaultMirrorSelector= new DefaultMirrorSelector(); for (Mirror mirror : settings.getMirrors()) { selector.add(mirror.getId().getUrl(), mirror.getLayout(),getMirrorOf(), mirror.getMirrorOfLayouts()); } return selector; }"}
{"time": "2021-01-20 05:17:17.319039", "n_pass": [117, 7, 7], "score": "0.4175", "loss": "2.5871", "code": "MirrorSelector createMirrorSelector(Settings settings) { DefaultMirrorSelector= new DefaultMirrorSelector(); for (Mirror mirror : settings.getMirrors()) { selector.add(mirror.getId().getUrl(), mirror.getLayout(),getMirrorOf().getMirrorOfLayouts()); } return selector; }"}
{"time": "2021-01-20 05:17:20.083700", "n_pass": [142, 9, 8], "score": "0.4312", "loss": "2.6473", "code": "MirrorSelector createMirrorSelector(Settings settings) { DefaultMirrorSelector= new DefaultMirrorSelector(); for (Mirror mirror : settings.getMirrors()) { selector.add(mirror.getId().getUrl(), mirror.getLayoutgetMirrorOf().getMirrorOfLayouts()); } return selector; }"}
{"time": "2021-01-20 05:17:24.132339", "n_pass": [167, 12, 9], "score": "0.4088", "loss": "2.5627", "code": "MirrorSelector createMirrorSelector(Settings settings) { DefaultMirrorSelector= new DefaultMirrorSelector(); for (Mirror mirror : settings.getMirrors()) { selector.add(mirror.getId().getUrl(), getMirrorOf().getMirrorOfLayouts()); } return selector; }"}
{"time": "2021-01-20 05:17:34.067387", "n_pass": [260, 16, 10], "score": "0.4088", "loss": "2.5627", "code": "MirrorSelector createMirrorSelector(Settings settings){ DefaultMirrorSelector= new DefaultMirrorSelector(); for (Mirror mirror : settings.getMirrors()) { selector.add(mirror.getId().getUrl(), getMirrorOf().getMirrorOfLayouts()); } return selector; }"}
{"time": "2021-01-20 05:17:35.411706", "n_pass": [262, 17, 11], "score": "0.4088", "loss": "2.5627", "code": "MirrorSelector createMirrorSelector(Settings settings){DefaultMirrorSelector= new DefaultMirrorSelector(); for (Mirror mirror : settings.getMirrors()) { selector.add(mirror.getId().getUrl(), getMirrorOf().getMirrorOfLayouts()); } return selector; }"}
{"time": "2021-01-20 05:17:36.749145", "n_pass": [265, 18, 12], "score": "0.4088", "loss": "2.5627", "code": "MirrorSelector createMirrorSelector(Settings settings){DefaultMirrorSelector=new DefaultMirrorSelector(); for (Mirror mirror : settings.getMirrors()) { selector.add(mirror.getId().getUrl(), getMirrorOf().getMirrorOfLayouts()); } return selector; }"}
{"time": "2021-01-20 05:17:40.865151", "n_pass": [272, 21, 13], "score": "0.4088", "loss": "2.5627", "code": "MirrorSelector createMirrorSelector(Settings settings){DefaultMirrorSelector=new DefaultMirrorSelector();for (Mirror mirror : settings.getMirrors()) { selector.add(mirror.getId().getUrl(), getMirrorOf().getMirrorOfLayouts()); } return selector; }"}
{"time": "2021-01-20 05:17:42.209913", "n_pass": [274, 22, 14], "score": "0.4088", "loss": "2.5627", "code": "MirrorSelector createMirrorSelector(Settings settings){DefaultMirrorSelector=new DefaultMirrorSelector();for(Mirror mirror : settings.getMirrors()) { selector.add(mirror.getId().getUrl(), getMirrorOf().getMirrorOfLayouts()); } return selector; }"}
{"time": "2021-01-20 05:17:47.593838", "n_pass": [287, 26, 15], "score": "0.396", "loss": "2.5991", "code": "MirrorSelector createMirrorSelector(Settings settings){DefaultMirrorSelector=new DefaultMirrorSelector();for(Mirror mirror : settings.getMirrors()) { selector.add(mirror.getId.getUrl(), getMirrorOf().getMirrorOfLayouts()); } return selector; }"}
{"time": "2021-01-20 05:17:48.930063", "n_pass": [288, 27, 16], "score": "0.4683", "loss": "2.4474", "code": "MirrorSelector createMirrorSelector(Settings settings){DefaultMirrorSelector=new DefaultMirrorSelector();for(Mirror mirror : settings.getMirrors()) { selector.add(mirror.getId(), getMirrorOf().getMirrorOfLayouts()); } return selector; }"}
{"time": "2021-01-20 05:17:56.787989", "n_pass": [322, 32, 17], "score": "0.462", "loss": "2.5338", "code": "MirrorSelector createMirrorSelector(Settings settings){DefaultMirrorSelector=new DefaultMirrorSelector();for(Mirror mirror : getMirrors()) { selector.add(mirror.getId(), getMirrorOf().getMirrorOfLayouts()); } return selector; }"}
{"time": "2021-01-20 05:17:59.494659", "n_pass": [329, 34, 18], "score": "0.5006", "loss": "2.3708", "code": "MirrorSelector createMirrorSelector(Settings settings){DefaultMirrorSelector=new DefaultMirrorSelector();for(Mirror mirror : getMirrors()) { selector.add(mirror(), getMirrorOf().getMirrorOfLayouts()); } return selector; }"}
{"time": "2021-01-20 05:18:00.828776", "n_pass": [330, 35, 19], "score": "0.4816", "loss": "2.381", "code": "MirrorSelector createMirrorSelector(Settings settings){DefaultMirrorSelector=new DefaultMirrorSelector();for(Mirror mirror : getMirrors()) { selector.add(mirror, getMirrorOf().getMirrorOfLayouts()); } return selector; }"}
{"time": "2021-01-20 05:18:02.162327", "n_pass": [331, 36, 20], "score": "0.4619", "loss": "2.3479", "code": "MirrorSelector createMirrorSelector(Settings settings){DefaultMirrorSelector=new DefaultMirrorSelector();for(Mirror mirror : getMirrors()) { selector.add(mirrorgetMirrorOf().getMirrorOfLayouts()); } return selector; }"}
{"time": "2021-01-20 05:18:13.847480", "n_pass": [410, 41, 21], "score": "0.4619", "loss": "2.3479", "code": "MirrorSelector createMirrorSelector(Settings settings){DefaultMirrorSelector=new DefaultMirrorSelector();for(Mirror mirror : getMirrors()) { selector.add(mirrorgetMirrorOf().getMirrorOfLayouts());} return selector; }"}
{"time": "2021-01-20 05:18:15.212150", "n_pass": [412, 42, 22], "score": "0.4619", "loss": "2.3479", "code": "MirrorSelector createMirrorSelector(Settings settings){DefaultMirrorSelector=new DefaultMirrorSelector();for(Mirror mirror : getMirrors()) { selector.add(mirrorgetMirrorOf().getMirrorOfLayouts());}return selector; }"}
{"time": "2021-01-20 05:18:17.938371", "n_pass": [414, 44, 23], "score": "0.4892", "loss": "2.8356", "code": "MirrorSelector createMirrorSelector(Settings settings){DefaultMirrorSelector=new DefaultMirrorSelector();for(Mirror mirror : getMirrors()) { selector.add(mirrorgetMirrorOf().getMirrorOfLayouts());}returnselector; }"}
{"time": "2021-01-20 05:18:20.605339", "n_pass": [417, 46, 24], "score": "0.4892", "loss": "2.8356", "code": "MirrorSelector createMirrorSelector(Settings settings){DefaultMirrorSelector=new DefaultMirrorSelector();for(Mirror mirror : getMirrors()) { selector.add(mirrorgetMirrorOf().getMirrorOfLayouts());}returnselector;}"}
{"time": "2021-01-20 05:18:25.776547", "n_pass": [441, 49, 25], "score": "0.4892", "loss": "2.8356", "code": "MirrorSelector createMirrorSelector(Settings settings){DefaultMirrorSelector=new DefaultMirrorSelector();for(Mirror mirror: getMirrors()) { selector.add(mirrorgetMirrorOf().getMirrorOfLayouts());}returnselector;}"}
{"time": "2021-01-20 05:18:27.152758", "n_pass": [443, 50, 26], "score": "0.4892", "loss": "2.8356", "code": "MirrorSelector createMirrorSelector(Settings settings){DefaultMirrorSelector=new DefaultMirrorSelector();for(Mirror mirror:getMirrors()) { selector.add(mirrorgetMirrorOf().getMirrorOfLayouts());}returnselector;}"}
{"time": "2021-01-20 05:18:28.499541", "n_pass": [448, 51, 27], "score": "0.4892", "loss": "2.8356", "code": "MirrorSelector createMirrorSelector(Settings settings){DefaultMirrorSelector=new DefaultMirrorSelector();for(Mirror mirror:getMirrors()){ selector.add(mirrorgetMirrorOf().getMirrorOfLayouts());}returnselector;}"}
{"time": "2021-01-20 05:18:29.846470", "n_pass": [450, 52, 28], "score": "0.4892", "loss": "2.8356", "code": "MirrorSelector createMirrorSelector(Settings settings){DefaultMirrorSelector=new DefaultMirrorSelector();for(Mirror mirror:getMirrors()){selector.add(mirrorgetMirrorOf().getMirrorOfLayouts());}returnselector;}"}

Minimal simplified code:
MirrorSelector createMirrorSelector(Settings settings){DefaultMirrorSelector=new DefaultMirrorSelector();for(Mirror mirror:getMirrors()){selector.add(mirrorgetMirrorOf().getMirrorOfLayouts());}returnselector;}

