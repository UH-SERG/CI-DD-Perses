
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/droidefense__engine/mods/memapktool/src/main/java/org/jf/dexlib2/util/Preconditions_checkVerificationError.java
method_name = checkVerificationError
method_body = public static int checkVerificationError(int verificationError) { if (!VerificationError.isValidVerificationError(verificationError)) { throw new IllegalArgumentException(String.format("Invalid verification error value: %d. Must be between 1 and 9, inclusive", verificationError)); } return verificationError; }
predict, score, loss = checkVerificationError, 0.34127343, 1.8974525

Trace of simplified code(s):
{"time": "2021-01-20 05:59:46.234366", "n_pass": [1, 1, 1], "score": "0.3413", "loss": "1.8975", "code": "public static int checkVerificationError(int verificationError) { if (!VerificationError.isValidVerificationError(verificationError)) { throw new IllegalArgumentException(String.format(\"Invalid verification error value: %d. Must be between 1 and 9, inclusive\", verificationError)); } return verificationError; }"}
{"time": "2021-01-20 05:59:47.563360", "n_pass": [10, 2, 2], "score": "0.3781", "loss": "2.1689", "code": "public static int checkVerificationError(int verificationError) { if (!VerificationError.isValidVerificationError(verificationError)) { throw new IllegalArgumentException(String.format(\"Invalid 9, inclusive\", verificationError)); } return verificationError; }"}
{"time": "2021-01-20 05:59:48.927353", "n_pass": [37, 3, 3], "score": "0.396", "loss": "1.7125", "code": "public static int checkVerificationError(int verificationError) { if (!VerificationError.isValidVerificationError(verificationError)) { throw new IllegalArgumentException(String.format(\"inclusive\", verificationError)); } return verificationError; }"}
{"time": "2021-01-20 05:59:52.006497", "n_pass": [72, 5, 4], "score": "0.4074", "loss": "1.6687", "code": "public static int checkVerificationError(int verificationError) { if (!VerificationError.isValidVerificationError(verificationError)) { throw new IllegalArgumentException(String.format(\"inclusive\")); } return verificationError; }"}
{"time": "2021-01-20 05:59:53.343167", "n_pass": [75, 6, 5], "score": "0.562", "loss": "1.1486", "code": "public static int checkVerificationError(int verificationError) { if (!VerificationError.isValidVerificationError(verificationError)) { throw new IllegalArgumentException(String.format(\"inclusive\")); } ; }"}
{"time": "2021-01-20 05:59:54.675169", "n_pass": [77, 7, 6], "score": "0.562", "loss": "1.1486", "code": "static int checkVerificationError(int verificationError) { if (!VerificationError.isValidVerificationError(verificationError)) { throw new IllegalArgumentException(String.format(\"inclusive\")); } ; }"}
{"time": "2021-01-20 05:59:56.016274", "n_pass": [78, 8, 7], "score": "0.562", "loss": "1.1486", "code": "int checkVerificationError(int verificationError) { if (!VerificationError.isValidVerificationError(verificationError)) { throw new IllegalArgumentException(String.format(\"inclusive\")); } ; }"}
{"time": "2021-01-20 05:59:57.723446", "n_pass": [86, 9, 8], "score": "0.5712", "loss": "2.1303", "code": "int checkVerificationError(int verificationError) { if (isValidVerificationError(verificationError)) { throw new IllegalArgumentException(String.format(\"inclusive\")); } ; }"}
{"time": "2021-01-20 06:00:00.361745", "n_pass": [93, 11, 9], "score": "0.5473", "loss": "1.9469", "code": "int checkVerificationError(int verificationError) { if (isValidVerificationError(verificationError)) { throw new IllegalArgumentException(String.format()); } ; }"}
{"time": "2021-01-20 06:00:06.101521", "n_pass": [142, 13, 10], "score": "0.5135", "loss": "2.2178", "code": "int checkVerificationError(int verificationError) { if (isValidVerificationError(verificationError)) { throw new IllegalArgumentException(String()); } ; }"}
{"time": "2021-01-20 06:00:07.430268", "n_pass": [143, 14, 11], "score": "0.5897", "loss": "1.8486", "code": "int checkVerificationError(int verificationError) { if (isValidVerificationError(verificationError)) { throw new IllegalArgumentException(String); } ; }"}
{"time": "2021-01-20 06:00:08.773607", "n_pass": [146, 15, 12], "score": "0.5897", "loss": "1.8486", "code": "int checkVerificationError(int verificationError) { if (isValidVerificationError(verificationError)) { throw new IllegalArgumentException(String); } }"}
{"time": "2021-01-20 06:00:10.833491", "n_pass": [156, 16, 13], "score": "0.5897", "loss": "1.8486", "code": "int checkVerificationError(int verificationError){ if (isValidVerificationError(verificationError)) { throw new IllegalArgumentException(String); } }"}
{"time": "2021-01-20 06:00:12.148026", "n_pass": [158, 17, 14], "score": "0.5897", "loss": "1.8486", "code": "int checkVerificationError(int verificationError){if (isValidVerificationError(verificationError)) { throw new IllegalArgumentException(String); } }"}
{"time": "2021-01-20 06:00:13.469140", "n_pass": [160, 18, 15], "score": "0.5897", "loss": "1.8486", "code": "int checkVerificationError(int verificationError){if(isValidVerificationError(verificationError)) { throw new IllegalArgumentException(String); } }"}
{"time": "2021-01-20 06:00:17.428923", "n_pass": [167, 21, 16], "score": "0.5897", "loss": "1.8486", "code": "int checkVerificationError(int verificationError){if(isValidVerificationError(verificationError)){ throw new IllegalArgumentException(String); } }"}
{"time": "2021-01-20 06:00:18.780788", "n_pass": [169, 22, 17], "score": "0.5897", "loss": "1.8486", "code": "int checkVerificationError(int verificationError){if(isValidVerificationError(verificationError)){throw new IllegalArgumentException(String); } }"}
{"time": "2021-01-20 06:00:21.456176", "n_pass": [171, 24, 18], "score": "0.49", "loss": "2.0899", "code": "int checkVerificationError(int verificationError){if(isValidVerificationError(verificationError)){throw IllegalArgumentException(String); } }"}
{"time": "2021-01-20 06:00:22.762298", "n_pass": [172, 25, 19], "score": "0.3916", "loss": "2.8037", "code": "int checkVerificationError(int verificationError){if(isValidVerificationError(verificationError)){throw(String); } }"}
{"time": "2021-01-20 06:00:29.784236", "n_pass": [204, 29, 20], "score": "0.3916", "loss": "2.8037", "code": "int checkVerificationError(int verificationError){if(isValidVerificationError(verificationError)){throw(String);} }"}
{"time": "2021-01-20 06:00:31.097474", "n_pass": [205, 30, 21], "score": "0.3916", "loss": "2.8037", "code": "int checkVerificationError(int verificationError){if(isValidVerificationError(verificationError)){throw(String);}}"}

Minimal simplified code:
int checkVerificationError(int verificationError){if(isValidVerificationError(verificationError)){throw(String);}}

