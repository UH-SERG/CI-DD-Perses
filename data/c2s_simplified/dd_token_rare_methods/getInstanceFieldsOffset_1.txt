
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/droidefense__engine/mods/memapktool/src/main/java/org/jf/dexlib2/dexbacked/DexBackedClassDef_getInstanceFieldsOffset.java
method_name = getInstanceFieldsOffset
method_body = private int getInstanceFieldsOffset() { if (instanceFieldsOffset > 0) { return instanceFieldsOffset; } DexReader reader = new DexReader(dexFile, staticFieldsOffset); DexBackedField.skipFields(reader, staticFieldCount); instanceFieldsOffset = reader.getOffset(); return instanceFieldsOffset; }
predict, score, loss = getInstanceFieldsOffset, 0.4904343, 1.6183482

Trace of simplified code(s):
{"time": "2021-01-20 06:00:38.465774", "n_pass": [1, 1, 1], "score": "0.4904", "loss": "1.6183", "code": "private int getInstanceFieldsOffset() { if (instanceFieldsOffset > 0) { return instanceFieldsOffset; } DexReader reader = new DexReader(dexFile, staticFieldsOffset); DexBackedField.skipFields(reader, staticFieldCount); instanceFieldsOffset = reader.getOffset(); return instanceFieldsOffset; }"}
{"time": "2021-01-20 06:00:39.848761", "n_pass": [24, 2, 2], "score": "0.6839", "loss": "1.1656", "code": "private int getInstanceFieldsOffset() { if (instanceFieldsOffset > 0) { return instanceFieldsOffset; } DexReader reader = new DexBackedField.skipFields(reader, staticFieldCount); instanceFieldsOffset = reader.getOffset(); return instanceFieldsOffset; }"}
{"time": "2021-01-20 06:00:41.214990", "n_pass": [49, 3, 3], "score": "0.6327", "loss": "0.9739", "code": "private int getInstanceFieldsOffset() { if (instanceFieldsOffset > 0) { return instanceFieldsOffset; } DexReader reader = new DexBackedField.skipFields(reader, staticFieldCount); instanceFieldsOffset (); return instanceFieldsOffset; }"}
{"time": "2021-01-20 06:00:42.536604", "n_pass": [50, 4, 4], "score": "0.7199", "loss": "1.1328", "code": "private int getInstanceFieldsOffset() { if (instanceFieldsOffset > 0) { return instanceFieldsOffset; } DexReader reader = new DexBackedField.skipFields(reader, staticFieldCount); instanceFieldsOffset  instanceFieldsOffset; }"}
{"time": "2021-01-20 06:00:44.249502", "n_pass": [87, 5, 5], "score": "0.7737", "loss": "0.8204", "code": "private int getInstanceFieldsOffset() { if (instanceFieldsOffset > 0) { return instanceFieldsOffset; } DexReader reader = new DexBackedField.skipFields(reader, staticFieldCount); instanceFieldsOffset; }"}
{"time": "2021-01-20 06:00:45.572181", "n_pass": [89, 6, 6], "score": "0.7737", "loss": "0.8204", "code": "int getInstanceFieldsOffset() { if (instanceFieldsOffset > 0) { return instanceFieldsOffset; } DexReader reader = new DexBackedField.skipFields(reader, staticFieldCount); instanceFieldsOffset; }"}
{"time": "2021-01-20 06:00:47.272239", "n_pass": [100, 7, 7], "score": "0.6474", "loss": "1.5322", "code": "int getInstanceFieldsOffset() { if (instanceFieldsOffset > 0) { instanceFieldsOffset; } DexReader reader = new DexBackedField.skipFields(reader, staticFieldCount); instanceFieldsOffset; }"}
{"time": "2021-01-20 06:00:48.623151", "n_pass": [101, 8, 8], "score": "0.5323", "loss": "1.9875", "code": "int getInstanceFieldsOffset() { if (instanceFieldsOffset > 0) {  } DexReader reader = new DexBackedField.skipFields(reader, staticFieldCount); instanceFieldsOffset; }"}
{"time": "2021-01-20 06:00:49.929099", "n_pass": [103, 9, 9], "score": "0.3853", "loss": "3.5545", "code": "int getInstanceFieldsOffset() { if (instanceFieldsOffset > 0) {  } reader = new DexBackedField.skipFields(reader, staticFieldCount); instanceFieldsOffset; }"}
{"time": "2021-01-20 06:00:59.136514", "n_pass": [161, 12, 10], "score": "0.3853", "loss": "3.5545", "code": "int getInstanceFieldsOffset() { if (instanceFieldsOffset > 0) {  }reader = new DexBackedField.skipFields(reader, staticFieldCount); instanceFieldsOffset; }"}
{"time": "2021-01-20 06:01:00.479114", "n_pass": [162, 13, 11], "score": "0.3853", "loss": "3.5545", "code": "int getInstanceFieldsOffset() { if (instanceFieldsOffset > 0) {  }reader= new DexBackedField.skipFields(reader, staticFieldCount); instanceFieldsOffset; }"}
{"time": "2021-01-20 06:01:01.834107", "n_pass": [164, 14, 12], "score": "0.3853", "loss": "3.5545", "code": "int getInstanceFieldsOffset() { if (instanceFieldsOffset > 0) {  }reader=new DexBackedField.skipFields(reader, staticFieldCount); instanceFieldsOffset; }"}
{"time": "2021-01-20 06:01:10.526711", "n_pass": [181, 20, 13], "score": "0.3853", "loss": "3.5545", "code": "int getInstanceFieldsOffset(){ if (instanceFieldsOffset > 0) {  }reader=new DexBackedField.skipFields(reader, staticFieldCount); instanceFieldsOffset; }"}
{"time": "2021-01-20 06:01:11.840811", "n_pass": [183, 21, 14], "score": "0.3853", "loss": "3.5545", "code": "int getInstanceFieldsOffset(){if (instanceFieldsOffset > 0) {  }reader=new DexBackedField.skipFields(reader, staticFieldCount); instanceFieldsOffset; }"}
{"time": "2021-01-20 06:01:13.154236", "n_pass": [185, 22, 15], "score": "0.3853", "loss": "3.5545", "code": "int getInstanceFieldsOffset(){if(instanceFieldsOffset > 0) {  }reader=new DexBackedField.skipFields(reader, staticFieldCount); instanceFieldsOffset; }"}
{"time": "2021-01-20 06:01:14.468147", "n_pass": [188, 23, 16], "score": "0.3853", "loss": "3.5545", "code": "int getInstanceFieldsOffset(){if(instanceFieldsOffset> 0) {  }reader=new DexBackedField.skipFields(reader, staticFieldCount); instanceFieldsOffset; }"}
{"time": "2021-01-20 06:01:15.784139", "n_pass": [190, 24, 17], "score": "0.3853", "loss": "3.5545", "code": "int getInstanceFieldsOffset(){if(instanceFieldsOffset>0) {  }reader=new DexBackedField.skipFields(reader, staticFieldCount); instanceFieldsOffset; }"}
{"time": "2021-01-20 06:01:17.112820", "n_pass": [193, 25, 18], "score": "0.3853", "loss": "3.5545", "code": "int getInstanceFieldsOffset(){if(instanceFieldsOffset>0){  }reader=new DexBackedField.skipFields(reader, staticFieldCount); instanceFieldsOffset; }"}
{"time": "2021-01-20 06:01:18.425849", "n_pass": [195, 26, 19], "score": "0.3853", "loss": "3.5545", "code": "int getInstanceFieldsOffset(){if(instanceFieldsOffset>0){ }reader=new DexBackedField.skipFields(reader, staticFieldCount); instanceFieldsOffset; }"}
{"time": "2021-01-20 06:01:19.762999", "n_pass": [196, 27, 20], "score": "0.3853", "loss": "3.5545", "code": "int getInstanceFieldsOffset(){if(instanceFieldsOffset>0){}reader=new DexBackedField.skipFields(reader, staticFieldCount); instanceFieldsOffset; }"}
{"time": "2021-01-20 06:01:28.410342", "n_pass": [220, 33, 21], "score": "0.4575", "loss": "3.8027", "code": "int getInstanceFieldsOffset(){if(instanceFieldsOffset0){}reader=new DexBackedField.skipFields(reader, staticFieldCount); instanceFieldsOffset; }"}
{"time": "2021-01-20 06:01:29.723556", "n_pass": [221, 34, 22], "score": "0.4575", "loss": "3.8027", "code": "int getInstanceFieldsOffset(){if(instanceFieldsOffset){}reader=new DexBackedField.skipFields(reader, staticFieldCount); instanceFieldsOffset; }"}
{"time": "2021-01-20 06:01:40.113051", "n_pass": [262, 40, 23], "score": "0.4575", "loss": "3.8027", "code": "int getInstanceFieldsOffset(){if(instanceFieldsOffset){}reader=new DexBackedField.skipFields(reader,staticFieldCount); instanceFieldsOffset; }"}
{"time": "2021-01-20 06:01:41.430739", "n_pass": [266, 41, 24], "score": "0.4575", "loss": "3.8027", "code": "int getInstanceFieldsOffset(){if(instanceFieldsOffset){}reader=new DexBackedField.skipFields(reader,staticFieldCount);instanceFieldsOffset; }"}
{"time": "2021-01-20 06:01:44.074193", "n_pass": [269, 43, 25], "score": "0.4575", "loss": "3.8027", "code": "int getInstanceFieldsOffset(){if(instanceFieldsOffset){}reader=new DexBackedField.skipFields(reader,staticFieldCount);instanceFieldsOffset;}"}

Minimal simplified code:
int getInstanceFieldsOffset(){if(instanceFieldsOffset){}reader=new DexBackedField.skipFields(reader,staticFieldCount);instanceFieldsOffset;}

