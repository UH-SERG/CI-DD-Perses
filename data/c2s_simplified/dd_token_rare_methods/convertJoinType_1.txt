
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/katharsis-project__katharsis-framework/katharsis-jpa/src/main/java/io/katharsis/jpa/internal/query/backend/querydsl/QuerydslUtils_convertJoinType.java
method_name = convertJoinType
method_body = public static com.querydsl.core.JoinType convertJoinType(JoinType joinType) { switch(joinType) { case INNER: return com.querydsl.core.JoinType.JOIN; case LEFT: return com.querydsl.core.JoinType.LEFTJOIN; case RIGHT: return com.querydsl.core.JoinType.RIGHTJOIN; default: throw new IllegalStateException(joinType.toString() + " unknown"); } }
predict, score, loss = convertJoinType, 0.44235796, 1.5976112

Trace of simplified code(s):
{"time": "2021-01-20 06:04:21.896511", "n_pass": [1, 1, 1], "score": "0.4424", "loss": "1.5976", "code": "public static com.querydsl.core.JoinType convertJoinType(JoinType joinType) { switch(joinType) { case INNER: return com.querydsl.core.JoinType.JOIN; case LEFT: return com.querydsl.core.JoinType.LEFTJOIN; case RIGHT: return com.querydsl.core.JoinType.RIGHTJOIN; default: throw new IllegalStateException(joinType.toString() + \" unknown\"); } }"}
{"time": "2021-01-20 06:04:23.264118", "n_pass": [23, 2, 2], "score": "0.3395", "loss": "1.778", "code": "public static com.querydsl.core.JoinType convertJoinType(JoinType joinType) { switch(joinType) { case INNER: return com.querydsl.com.querydsl.core.JoinType.LEFTJOIN; case RIGHT: return com.querydsl.core.JoinType.RIGHTJOIN; default: throw new IllegalStateException(joinType.toString() + \" unknown\"); } }"}
{"time": "2021-01-20 06:04:24.630645", "n_pass": [49, 3, 3], "score": "0.3948", "loss": "1.6759", "code": "public static com.querydsl.core.JoinType convertJoinType(JoinType joinType) { switch(joinType) { case INNER: return com.querydsl.com.querydsl.core.JoinType.LEFTJOIN; case RIGHT: return com.querydsl.core.JoinType.RIGHTJOIN; IllegalStateException(joinType.toString() + \" unknown\"); } }"}
{"time": "2021-01-20 06:04:25.971878", "n_pass": [52, 4, 4], "score": "0.4139", "loss": "1.6578", "code": "querydsl.core.JoinType convertJoinType(JoinType joinType) { switch(joinType) { case INNER: return com.querydsl.com.querydsl.core.JoinType.LEFTJOIN; case RIGHT: return com.querydsl.core.JoinType.RIGHTJOIN; IllegalStateException(joinType.toString() + \" unknown\"); } }"}
{"time": "2021-01-20 06:04:27.695027", "n_pass": [57, 5, 5], "score": "0.4061", "loss": "2.0424", "code": "querydsl.core.JoinType convertJoinType(JoinType joinType) { switch(joinType) { case INNER:com.querydsl.core.JoinType.LEFTJOIN; case RIGHT: return com.querydsl.core.JoinType.RIGHTJOIN; IllegalStateException(joinType.toString() + \" unknown\"); } }"}
{"time": "2021-01-20 06:04:29.418875", "n_pass": [92, 6, 6], "score": "0.3928", "loss": "2.4893", "code": "querydsl.core.JoinType convertJoinType(JoinType joinType) { switch(joinType) { case INNER:comcore.JoinType.LEFTJOIN; case RIGHT: return com.querydsl.core.JoinType.RIGHTJOIN; IllegalStateException(joinType.toString() + \" unknown\"); } }"}
{"time": "2021-01-20 06:04:30.785102", "n_pass": [93, 7, 7], "score": "0.3817", "loss": "2.4364", "code": "querydsl.core.JoinType convertJoinType(JoinType joinType) { switch(joinType) { case INNER:com.LEFTJOIN; case RIGHT: return com.querydsl.core.JoinType.RIGHTJOIN; IllegalStateException(joinType.toString() + \" unknown\"); } }"}
{"time": "2021-01-20 06:04:41.630031", "n_pass": [161, 14, 8], "score": "0.3515", "loss": "2.54", "code": "querydsl.core.JoinType convertJoinType(JoinType joinType) { switch(joinType) { case INNER:com.LEFTJOIN; case RIGHT: return com.core.JoinType.RIGHTJOIN; IllegalStateException(joinType.toString() + \" unknown\"); } }"}
{"time": "2021-01-20 06:04:45.644984", "n_pass": [164, 17, 9], "score": "0.3117", "loss": "2.5085", "code": "querydsl.core.JoinType convertJoinType(JoinType joinType) { switch(joinType) { case INNER:com.LEFTJOIN; case RIGHT: return com.core.JoinType; IllegalStateException(joinType.toString() + \" unknown\"); } }"}
{"time": "2021-01-20 06:04:48.351054", "n_pass": [167, 19, 10], "score": "0.3203", "loss": "2.3561", "code": "querydsl.core.JoinType convertJoinType(JoinType joinType) { switch(joinType) { case INNER:com.LEFTJOIN; case RIGHT: return com.core.JoinType; IllegalStateException(toString() + \" unknown\"); } }"}
{"time": "2021-01-20 06:04:49.696430", "n_pass": [177, 20, 11], "score": "0.307", "loss": "2.4782", "code": "querydslcore.JoinType convertJoinType(JoinType joinType) { switch(joinType) { case INNER:com.LEFTJOIN; case RIGHT: return com.core.JoinType; IllegalStateException(toString() + \" unknown\"); } }"}
{"time": "2021-01-20 06:04:51.030289", "n_pass": [178, 21, 12], "score": "0.307", "loss": "2.4782", "code": "querydsl.JoinType convertJoinType(JoinType joinType) { switch(joinType) { case INNER:com.LEFTJOIN; case RIGHT: return com.core.JoinType; IllegalStateException(toString() + \" unknown\"); } }"}
{"time": "2021-01-20 06:04:52.353644", "n_pass": [179, 22, 13], "score": "0.3314", "loss": "2.4058", "code": "querydslJoinType convertJoinType(JoinType joinType) { switch(joinType) { case INNER:com.LEFTJOIN; case RIGHT: return com.core.JoinType; IllegalStateException(toString() + \" unknown\"); } }"}
{"time": "2021-01-20 06:04:53.684916", "n_pass": [180, 23, 14], "score": "0.3081", "loss": "2.4823", "code": "querydsl convertJoinType(JoinType joinType) { switch(joinType) { case INNER:com.LEFTJOIN; case RIGHT: return com.core.JoinType; IllegalStateException(toString() + \" unknown\"); } }"}
{"time": "2021-01-20 06:05:01.072853", "n_pass": [202, 28, 15], "score": "0.318", "loss": "2.7704", "code": "querydsl convertJoinType(JoinType joinType) { switch(joinType) { case INNER:com.LEFTJOIN; case RIGHT: return com.core; IllegalStateException(toString() + \" unknown\"); } }"}
{"time": "2021-01-20 06:05:06.165102", "n_pass": [230, 31, 16], "score": "0.2529", "loss": "2.8931", "code": "querydsl convertJoinType(JoinType joinType) { switch(joinType) { case INNER:com.LEFTJOIN; RIGHT: return com.core; IllegalStateException(toString() + \" unknown\"); } }"}
{"time": "2021-01-20 06:05:07.524843", "n_pass": [231, 32, 17], "score": "0.344", "loss": "2.4459", "code": "querydsl convertJoinType(JoinType joinType) { switch(joinType) { case INNER:com.LEFTJOIN;  return com.core; IllegalStateException(toString() + \" unknown\"); } }"}
{"time": "2021-01-20 06:05:22.356690", "n_pass": [312, 38, 18], "score": "0.344", "loss": "2.4459", "code": "querydsl convertJoinType(JoinType joinType) { switch(joinType) { case INNER:com.LEFTJOIN;  return com.core;IllegalStateException(toString() + \" unknown\"); } }"}
{"time": "2021-01-20 06:05:24.996097", "n_pass": [318, 40, 19], "score": "0.344", "loss": "2.4459", "code": "querydsl convertJoinType(JoinType joinType) { switch(joinType) { case INNER:com.LEFTJOIN;  return com.core;IllegalStateException(toString()+ \" unknown\"); } }"}
{"time": "2021-01-20 06:05:26.352847", "n_pass": [320, 41, 20], "score": "0.344", "loss": "2.4459", "code": "querydsl convertJoinType(JoinType joinType) { switch(joinType) { case INNER:com.LEFTJOIN;  return com.core;IllegalStateException(toString()+\" unknown\"); } }"}
{"time": "2021-01-20 06:05:27.689573", "n_pass": [322, 42, 21], "score": "0.344", "loss": "2.4459", "code": "querydsl convertJoinType(JoinType joinType) { switch(joinType) { case INNER:com.LEFTJOIN;  return com.core;IllegalStateException(toString()+\"unknown\"); } }"}
{"time": "2021-01-20 06:05:29.026809", "n_pass": [323, 43, 22], "score": "0.3067", "loss": "2.7036", "code": "querydsl convertJoinType(JoinType joinType) { switch(joinType) { case INNER:com.LEFTJOIN;  return com.core;IllegalStateException(toString()+\"\"); } }"}
{"time": "2021-01-20 06:05:30.351841", "n_pass": [327, 44, 23], "score": "0.3067", "loss": "2.7036", "code": "querydsl convertJoinType(JoinType joinType) { switch(joinType) { case INNER:com.LEFTJOIN;  return com.core;IllegalStateException(toString()+\"\");} }"}
{"time": "2021-01-20 06:05:31.687587", "n_pass": [329, 45, 24], "score": "0.3067", "loss": "2.7036", "code": "querydsl convertJoinType(JoinType joinType) { switch(joinType) { case INNER:com.LEFTJOIN;  return com.core;IllegalStateException(toString()+\"\");}}"}
{"time": "2021-01-20 06:05:34.155493", "n_pass": [339, 46, 25], "score": "0.3067", "loss": "2.7036", "code": "querydsl convertJoinType(JoinType joinType){ switch(joinType) { case INNER:com.LEFTJOIN;  return com.core;IllegalStateException(toString()+\"\");}}"}
{"time": "2021-01-20 06:05:35.477572", "n_pass": [341, 47, 26], "score": "0.3067", "loss": "2.7036", "code": "querydsl convertJoinType(JoinType joinType){switch(joinType) { case INNER:com.LEFTJOIN;  return com.core;IllegalStateException(toString()+\"\");}}"}
{"time": "2021-01-20 06:05:36.818116", "n_pass": [346, 48, 27], "score": "0.3067", "loss": "2.7036", "code": "querydsl convertJoinType(JoinType joinType){switch(joinType){ case INNER:com.LEFTJOIN;  return com.core;IllegalStateException(toString()+\"\");}}"}
{"time": "2021-01-20 06:05:38.141661", "n_pass": [348, 49, 28], "score": "0.3067", "loss": "2.7036", "code": "querydsl convertJoinType(JoinType joinType){switch(joinType){case INNER:com.LEFTJOIN;  return com.core;IllegalStateException(toString()+\"\");}}"}
{"time": "2021-01-20 06:05:39.477321", "n_pass": [354, 50, 29], "score": "0.2303", "loss": "2.7685", "code": "querydsl convertJoinType(JoinType joinType){switch(joinType){case INNER:comLEFTJOIN;  return com.core;IllegalStateException(toString()+\"\");}}"}
{"time": "2021-01-20 06:05:42.139282", "n_pass": [357, 52, 30], "score": "0.2303", "loss": "2.7685", "code": "querydsl convertJoinType(JoinType joinType){switch(joinType){case INNER:comLEFTJOIN; return com.core;IllegalStateException(toString()+\"\");}}"}
{"time": "2021-01-20 06:05:43.486836", "n_pass": [358, 53, 31], "score": "0.2303", "loss": "2.7685", "code": "querydsl convertJoinType(JoinType joinType){switch(joinType){case INNER:comLEFTJOIN;return com.core;IllegalStateException(toString()+\"\");}}"}
{"time": "2021-01-20 06:05:52.587694", "n_pass": [395, 59, 32], "score": "0.23", "loss": "3.1654", "code": "querydsl convertJoinType(JoinType joinType){switch(joinType){case INNER:LEFTJOIN;return com.core;IllegalStateException(toString()+\"\");}}"}

Minimal simplified code:
querydsl convertJoinType(JoinType joinType){switch(joinType){case INNER:LEFTJOIN;return com.core;IllegalStateException(toString()+"");}}

