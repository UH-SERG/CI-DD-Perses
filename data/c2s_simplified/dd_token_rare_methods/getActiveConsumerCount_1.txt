
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/path__android-priority-jobqueue/jobqueue/test/com/path/android/jobqueue/test/jobmanager/JobManagerTestBase_getActiveConsumerCount.java
method_name = getActiveConsumerCount
method_body = protected org.fest.reflect.field.Invoker<AtomicInteger> getActiveConsumerCount(JobConsumerExecutor jobConsumerExecutor) { return Reflection.field("activeConsumerCount").ofType(AtomicInteger.class).in(jobConsumerExecutor); }
predict, score, loss = getActiveConsumerCount, 0.33674896, 2.3034594

Trace of simplified code(s):
{"time": "2021-01-20 06:17:16.000925", "n_pass": [1, 1, 1], "score": "0.3367", "loss": "2.3035", "code": "protected org.fest.reflect.field.Invoker<AtomicInteger> getActiveConsumerCount(JobConsumerExecutor jobConsumerExecutor) { return Reflection.field(\"activeConsumerCount\").ofType(AtomicInteger.class).in(jobConsumerExecutor); }"}
{"time": "2021-01-20 06:17:24.667216", "n_pass": [92, 7, 2], "score": "0.3367", "loss": "2.3035", "code": " org.fest.reflect.field.Invoker<AtomicInteger> getActiveConsumerCount(JobConsumerExecutor jobConsumerExecutor) { return Reflection.field(\"activeConsumerCount\").ofType(AtomicInteger.class).in(jobConsumerExecutor); }"}
{"time": "2021-01-20 06:17:25.991950", "n_pass": [93, 8, 3], "score": "0.3367", "loss": "2.3035", "code": "org.fest.reflect.field.Invoker<AtomicInteger> getActiveConsumerCount(JobConsumerExecutor jobConsumerExecutor) { return Reflection.field(\"activeConsumerCount\").ofType(AtomicInteger.class).in(jobConsumerExecutor); }"}
{"time": "2021-01-20 06:17:28.702378", "n_pass": [96, 10, 4], "score": "0.3378", "loss": "2.2833", "code": "org.festreflect.field.Invoker<AtomicInteger> getActiveConsumerCount(JobConsumerExecutor jobConsumerExecutor) { return Reflection.field(\"activeConsumerCount\").ofType(AtomicInteger.class).in(jobConsumerExecutor); }"}
{"time": "2021-01-20 06:17:30.025856", "n_pass": [97, 11, 5], "score": "0.3378", "loss": "2.2833", "code": "org.fest.field.Invoker<AtomicInteger> getActiveConsumerCount(JobConsumerExecutor jobConsumerExecutor) { return Reflection.field(\"activeConsumerCount\").ofType(AtomicInteger.class).in(jobConsumerExecutor); }"}
{"time": "2021-01-20 06:17:34.006186", "n_pass": [105, 14, 6], "score": "0.3378", "loss": "2.2833", "code": "org.fest.field.Invoker<AtomicInteger>getActiveConsumerCount(JobConsumerExecutor jobConsumerExecutor) { return Reflection.field(\"activeConsumerCount\").ofType(AtomicInteger.class).in(jobConsumerExecutor); }"}
{"time": "2021-01-20 06:17:44.015514", "n_pass": [167, 20, 7], "score": "0.3378", "loss": "2.2833", "code": "org.fest.field.Invoker<AtomicInteger>getActiveConsumerCount(JobConsumerExecutor jobConsumerExecutor){ return Reflection.field(\"activeConsumerCount\").ofType(AtomicInteger.class).in(jobConsumerExecutor); }"}
{"time": "2021-01-20 06:17:45.336373", "n_pass": [168, 21, 8], "score": "0.3378", "loss": "2.2833", "code": "org.fest.field.Invoker<AtomicInteger>getActiveConsumerCount(JobConsumerExecutor jobConsumerExecutor){return Reflection.field(\"activeConsumerCount\").ofType(AtomicInteger.class).in(jobConsumerExecutor); }"}
{"time": "2021-01-20 06:17:51.969194", "n_pass": [183, 26, 9], "score": "0.2651", "loss": "2.8285", "code": "org.fest.field.Invoker<AtomicInteger>getActiveConsumerCount(JobConsumerExecutor jobConsumerExecutor){return Reflection.field(\"activeConsumerCount\").ofType(AtomicIntegerclass).in(jobConsumerExecutor); }"}
{"time": "2021-01-20 06:17:54.609814", "n_pass": [189, 28, 10], "score": "0.337", "loss": "1.8455", "code": "org.fest.field.Invoker<AtomicInteger>getActiveConsumerCount(JobConsumerExecutor jobConsumerExecutor){return Reflection.field(\"activeConsumerCount\").ofType(AtomicIntegerclass).in(); }"}
{"time": "2021-01-20 06:17:55.953174", "n_pass": [192, 29, 11], "score": "0.337", "loss": "1.8455", "code": "org.fest.field.Invoker<AtomicInteger>getActiveConsumerCount(JobConsumerExecutor jobConsumerExecutor){return Reflection.field(\"activeConsumerCount\").ofType(AtomicIntegerclass).in();}"}
{"time": "2021-01-20 06:17:57.301480", "n_pass": [195, 30, 12], "score": "0.3317", "loss": "2.3049", "code": "orgfest.field.Invoker<AtomicInteger>getActiveConsumerCount(JobConsumerExecutor jobConsumerExecutor){return Reflection.field(\"activeConsumerCount\").ofType(AtomicIntegerclass).in();}"}
{"time": "2021-01-20 06:17:58.620149", "n_pass": [196, 31, 13], "score": "0.3252", "loss": "1.9289", "code": "org.field.Invoker<AtomicInteger>getActiveConsumerCount(JobConsumerExecutor jobConsumerExecutor){return Reflection.field(\"activeConsumerCount\").ofType(AtomicIntegerclass).in();}"}
{"time": "2021-01-20 06:17:59.941722", "n_pass": [197, 32, 14], "score": "0.3192", "loss": "2.4067", "code": "orgfield.Invoker<AtomicInteger>getActiveConsumerCount(JobConsumerExecutor jobConsumerExecutor){return Reflection.field(\"activeConsumerCount\").ofType(AtomicIntegerclass).in();}"}
{"time": "2021-01-20 06:18:01.259439", "n_pass": [198, 33, 15], "score": "0.2993", "loss": "2.045", "code": "org.Invoker<AtomicInteger>getActiveConsumerCount(JobConsumerExecutor jobConsumerExecutor){return Reflection.field(\"activeConsumerCount\").ofType(AtomicIntegerclass).in();}"}
{"time": "2021-01-20 06:18:02.585979", "n_pass": [199, 34, 16], "score": "0.3053", "loss": "2.1182", "code": "orgInvoker<AtomicInteger>getActiveConsumerCount(JobConsumerExecutor jobConsumerExecutor){return Reflection.field(\"activeConsumerCount\").ofType(AtomicIntegerclass).in();}"}
{"time": "2021-01-20 06:18:03.905255", "n_pass": [200, 35, 17], "score": "0.3053", "loss": "2.1182", "code": "org<AtomicInteger>getActiveConsumerCount(JobConsumerExecutor jobConsumerExecutor){return Reflection.field(\"activeConsumerCount\").ofType(AtomicIntegerclass).in();}"}
{"time": "2021-01-20 06:18:10.589339", "n_pass": [225, 40, 18], "score": "0.264", "loss": "2.0", "code": "org<AtomicInteger>getActiveConsumerCount(JobConsumerExecutor jobConsumerExecutor){return Reflection.field(\"activeConsumerCount\").ofType(AtomicInteger).in();}"}
{"time": "2021-01-20 06:18:17.628919", "n_pass": [257, 45, 19], "score": "0.4639", "loss": "1.929", "code": "org<AtomicInteger>getActiveConsumerCount(JobConsumerExecutor jobConsumerExecutor){return Reflection.field(\"activeConsumerCount\").ofType().in();}"}

Minimal simplified code:
org<AtomicInteger>getActiveConsumerCount(JobConsumerExecutor jobConsumerExecutor){return Reflection.field("activeConsumerCount").ofType().in();}

