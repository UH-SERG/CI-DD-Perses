
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/kaazing__gateway/service/http.directory/src/main/java/org/kaazing/gateway/service/http/directory/HttpDirectoryServiceHandler_addCacheControl.java
method_name = addCacheControl
method_body = private void addCacheControl(HttpAcceptSession session, File requestFile, String requestPath) { CacheControlHandler cacheControlHandler = urlCacheControlMap.computeIfAbsent(requestPath, path -> patterns.stream().filter(patternCacheControl -> PatternMatcherUtils.caseInsensitiveMatch(requestPath, patternCacheControl.getPattern())).findFirst().map(patternCacheControl -> new CacheControlHandler(requestFile, patternCacheControl)).orElse(null)); if (cacheControlHandler != null) { addCacheControlHeader(session, requestFile, cacheControlHandler); } }
predict, score, loss = addCacheControl, 0.25758943, 3.5115662

Trace of simplified code(s):
{"time": "2021-01-20 06:11:42.914337", "n_pass": [1, 1, 1], "score": "0.2095", "loss": "3.7714", "code": "private void addCacheControl(HttpAcceptSession session, File requestFile, String requestPath) { CacheControlHandler cacheControlHandler = urlCacheControlMap.computeIfAbsent(requestPath, path -> patterns.stream().filter(patternCacheControl -> PatternMatcherUtils.caseInsensitiveMatch(requestPath, patternCacheControl.getPattern())).findFirst().map(patternCacheControl -> new CacheControlHandler(requestFile, patternCacheControl)).orElse(null)); if (cacheControlHandler != null) { addCacheControlHeader(session, requestFile, cacheControlHandler); } }"}
{"time": "2021-01-20 06:11:44.328821", "n_pass": [49, 2, 2], "score": "0.3206", "loss": "3.1161", "code": "private void addCacheControl(HttpAcceptSession session, File requestFile, String requestPath) { CacheControlHandler cacheControlHandler = urlCacheControlMap.computeIfAbsent(requestPath, path .filter(patternCacheControl -> PatternMatcherUtils.caseInsensitiveMatch(requestPath, patternCacheControl.getPattern())).findFirst().map(patternCacheControl -> new CacheControlHandler(requestFile, patternCacheControl)).orElse(null)); if (cacheControlHandler != null) { addCacheControlHeader(session, requestFile, cacheControlHandler); } }"}
{"time": "2021-01-20 06:11:45.726761", "n_pass": [95, 3, 3], "score": "0.4413", "loss": "2.7219", "code": "private void addCacheControl(HttpAcceptSession session, File requestFile, String requestPath) { CacheControlHandler cacheControlHandler = urlCacheControlMap.computeIfAbsent(requestPath, path .filter(patternCacheControlPatternMatcherUtils.caseInsensitiveMatch(requestPath, patternCacheControl.getPattern())).findFirst().map(patternCacheControl -> new CacheControlHandler(requestFile, patternCacheControl)).orElse(null)); if (cacheControlHandler != null) { addCacheControlHeader(session, requestFile, cacheControlHandler); } }"}
{"time": "2021-01-20 06:11:47.112664", "n_pass": [98, 4, 4], "score": "0.4718", "loss": "2.5822", "code": "private void addCacheControl(HttpAcceptSession session, File requestFile, String requestPath) { CacheControlHandler cacheControlHandler = urlCacheControlMap.computeIfAbsent(requestPath, path .filter(patternCacheControlPatternMatcherUtils.caseInsensitiveMatch(requestPath, patternCacheControl)).findFirst().map(patternCacheControl -> new CacheControlHandler(requestFile, patternCacheControl)).orElse(null)); if (cacheControlHandler != null) { addCacheControlHeader(session, requestFile, cacheControlHandler); } }"}
{"time": "2021-01-20 06:11:48.475473", "n_pass": [100, 5, 5], "score": "0.404", "loss": "2.6517", "code": "private void addCacheControl(HttpAcceptSession session, File requestFile, String requestPath) { CacheControlHandler cacheControlHandler = urlCacheControlMap.computeIfAbsent(requestPath, path .filter(patternCacheControlPatternMatcherUtils.caseInsensitiveMatch(requestPath, patternCacheControl)).findFirst(patternCacheControl -> new CacheControlHandler(requestFile, patternCacheControl)).orElse(null)); if (cacheControlHandler != null) { addCacheControlHeader(session, requestFile, cacheControlHandler); } }"}
{"time": "2021-01-20 06:11:49.844463", "n_pass": [102, 6, 6], "score": "0.5137", "loss": "2.4339", "code": "private void addCacheControl(HttpAcceptSession session, File requestFile, String requestPath) { CacheControlHandler cacheControlHandler = urlCacheControlMap.computeIfAbsent(requestPath, path .filter(patternCacheControlPatternMatcherUtils.caseInsensitiveMatch(requestPath, patternCacheControl)).findFirst(patternCacheControl -CacheControlHandler(requestFile, patternCacheControl)).orElse(null)); if (cacheControlHandler != null) { addCacheControlHeader(session, requestFile, cacheControlHandler); } }"}
{"time": "2021-01-20 06:11:51.235060", "n_pass": [108, 7, 7], "score": "0.3869", "loss": "2.8486", "code": "private void addCacheControl(HttpAcceptSession session, File requestFile, String requestPath) { CacheControlHandler cacheControlHandler = urlCacheControlMap.computeIfAbsent(requestPath, path .filter(patternCacheControlPatternMatcherUtils.caseInsensitiveMatch(requestPath, patternCacheControl)).findFirst(patternCacheControl -CacheControlHandler(requestFile, patternCacheControl)).orElse(null)); if (cacheControlHandlernull) { addCacheControlHeader(session, requestFile, cacheControlHandler); } }"}
{"time": "2021-01-20 06:11:52.970202", "n_pass": [116, 8, 8], "score": "0.38", "loss": "2.7657", "code": "private void addCacheControl( File requestFile, String requestPath) { CacheControlHandler cacheControlHandler = urlCacheControlMap.computeIfAbsent(requestPath, path .filter(patternCacheControlPatternMatcherUtils.caseInsensitiveMatch(requestPath, patternCacheControl)).findFirst(patternCacheControl -CacheControlHandler(requestFile, patternCacheControl)).orElse(null)); if (cacheControlHandlernull) { addCacheControlHeader(session, requestFile, cacheControlHandler); } }"}
{"time": "2021-01-20 06:11:54.321596", "n_pass": [118, 9, 9], "score": "0.2961", "loss": "3.1153", "code": "private void addCacheControl( File requestFilerequestPath) { CacheControlHandler cacheControlHandler = urlCacheControlMap.computeIfAbsent(requestPath, path .filter(patternCacheControlPatternMatcherUtils.caseInsensitiveMatch(requestPath, patternCacheControl)).findFirst(patternCacheControl -CacheControlHandler(requestFile, patternCacheControl)).orElse(null)); if (cacheControlHandlernull) { addCacheControlHeader(session, requestFile, cacheControlHandler); } }"}
{"time": "2021-01-20 06:11:55.678152", "n_pass": [123, 10, 10], "score": "0.2513", "loss": "3.3944", "code": "private void addCacheControl( File requestFilerequestPath) { CacheControlHandler cacheControlHandler = urlCacheControlMap.computeIfAbsent(requestPath.filter(patternCacheControlPatternMatcherUtils.caseInsensitiveMatch(requestPath, patternCacheControl)).findFirst(patternCacheControl -CacheControlHandler(requestFile, patternCacheControl)).orElse(null)); if (cacheControlHandlernull) { addCacheControlHeader(session, requestFile, cacheControlHandler); } }"}
{"time": "2021-01-20 06:11:57.025518", "n_pass": [126, 11, 11], "score": "0.2955", "loss": "3.3336", "code": "private void addCacheControl( File requestFilerequestPath) { CacheControlHandler cacheControlHandler = urlCacheControlMap.computeIfAbsent(requestPath.filter(patternCacheControlPatternMatcherUtils.caseInsensitiveMatch()).findFirst(patternCacheControl -CacheControlHandler(requestFile, patternCacheControl)).orElse(null)); if (cacheControlHandlernull) { addCacheControlHeader(session, requestFile, cacheControlHandler); } }"}
{"time": "2021-01-20 06:12:00.829634", "n_pass": [195, 13, 12], "score": "0.3345", "loss": "3.2739", "code": "private void addCacheControl( File requestFilerequestPath) { CacheControlHandler cacheControlHandler = urlCacheControlMap.computeIfAbsent(requestPath.filter(patternCacheControlPatternMatcherUtils.caseInsensitiveMatch()).findFirst(patternCacheControl -CacheControlHandler( patternCacheControl)).orElse(null)); if (cacheControlHandlernull) { addCacheControlHeader(session, requestFile, cacheControlHandler); } }"}
{"time": "2021-01-20 06:12:06.284795", "n_pass": [214, 17, 13], "score": "0.3345", "loss": "3.2739", "code": " void addCacheControl( File requestFilerequestPath) { CacheControlHandler cacheControlHandler = urlCacheControlMap.computeIfAbsent(requestPath.filter(patternCacheControlPatternMatcherUtils.caseInsensitiveMatch()).findFirst(patternCacheControl -CacheControlHandler( patternCacheControl)).orElse(null)); if (cacheControlHandlernull) { addCacheControlHeader(session, requestFile, cacheControlHandler); } }"}
{"time": "2021-01-20 06:12:07.639940", "n_pass": [215, 18, 14], "score": "0.3345", "loss": "3.2739", "code": "void addCacheControl( File requestFilerequestPath) { CacheControlHandler cacheControlHandler = urlCacheControlMap.computeIfAbsent(requestPath.filter(patternCacheControlPatternMatcherUtils.caseInsensitiveMatch()).findFirst(patternCacheControl -CacheControlHandler( patternCacheControl)).orElse(null)); if (cacheControlHandlernull) { addCacheControlHeader(session, requestFile, cacheControlHandler); } }"}
{"time": "2021-01-20 06:12:13.422618", "n_pass": [228, 22, 15], "score": "0.3098", "loss": "3.3247", "code": "void addCacheControl( File requestFilerequestPath) { CacheControlHandler cacheControlHandler = urlCacheControlMap.computeIfAbsent(requestPath(patternCacheControlPatternMatcherUtils.caseInsensitiveMatch()).findFirst(patternCacheControl -CacheControlHandler( patternCacheControl)).orElse(null)); if (cacheControlHandlernull) { addCacheControlHeader(session, requestFile, cacheControlHandler); } }"}
{"time": "2021-01-20 06:12:32.798811", "n_pass": [344, 31, 16], "score": "0.3167", "loss": "3.2682", "code": "void addCacheControl( File requestFilerequestPath) { CacheControlHandler cacheControlHandler = urlCacheControlMap.computeIfAbsent(requestPath(PatternMatcherUtils.caseInsensitiveMatch()).findFirst(patternCacheControl -CacheControlHandler( patternCacheControl)).orElse(null)); if (cacheControlHandlernull) { addCacheControlHeader(session, requestFile, cacheControlHandler); } }"}
{"time": "2021-01-20 06:12:34.151749", "n_pass": [346, 32, 17], "score": "0.3231", "loss": "3.2095", "code": "void addCacheControl( File requestFilerequestPath) { CacheControlHandler cacheControlHandler = urlCacheControlMap.computeIfAbsent(requestPath(PatternMatcherUtilscaseInsensitiveMatch()).findFirst(patternCacheControl -CacheControlHandler( patternCacheControl)).orElse(null)); if (cacheControlHandlernull) { addCacheControlHeader(session, requestFile, cacheControlHandler); } }"}
{"time": "2021-01-20 06:12:35.506537", "n_pass": [347, 33, 18], "score": "0.3329", "loss": "3.2261", "code": "void addCacheControl( File requestFilerequestPath) { CacheControlHandler cacheControlHandler = urlCacheControlMap.computeIfAbsent(requestPath(PatternMatcherUtils()).findFirst(patternCacheControl -CacheControlHandler( patternCacheControl)).orElse(null)); if (cacheControlHandlernull) { addCacheControlHeader(session, requestFile, cacheControlHandler); } }"}
{"time": "2021-01-20 06:12:36.866013", "n_pass": [354, 34, 19], "score": "0.3772", "loss": "2.9682", "code": "void addCacheControl( File requestFilerequestPath) { CacheControlHandler cacheControlHandler = urlCacheControlMap.computeIfAbsent(requestPath(PatternMatcherUtils()).findFirst( -CacheControlHandler( patternCacheControl)).orElse(null)); if (cacheControlHandlernull) { addCacheControlHeader(session, requestFile, cacheControlHandler); } }"}
{"time": "2021-01-20 06:12:38.218686", "n_pass": [355, 35, 20], "score": "0.3772", "loss": "2.9682", "code": "void addCacheControl( File requestFilerequestPath) { CacheControlHandler cacheControlHandler = urlCacheControlMap.computeIfAbsent(requestPath(PatternMatcherUtils()).findFirst(-CacheControlHandler( patternCacheControl)).orElse(null)); if (cacheControlHandlernull) { addCacheControlHeader(session, requestFile, cacheControlHandler); } }"}
{"time": "2021-01-20 06:12:39.571347", "n_pass": [356, 36, 21], "score": "0.3908", "loss": "2.8897", "code": "void addCacheControl( File requestFilerequestPath) { CacheControlHandler cacheControlHandler = urlCacheControlMap.computeIfAbsent(requestPath(PatternMatcherUtils()).findFirst(CacheControlHandler( patternCacheControl)).orElse(null)); if (cacheControlHandlernull) { addCacheControlHeader(session, requestFile, cacheControlHandler); } }"}
{"time": "2021-01-20 06:12:40.941079", "n_pass": [357, 37, 22], "score": "0.3981", "loss": "2.8932", "code": "void addCacheControl( File requestFilerequestPath) { CacheControlHandler cacheControlHandler = urlCacheControlMap.computeIfAbsent(requestPath(PatternMatcherUtils()).findFirst(( patternCacheControl)).orElse(null)); if (cacheControlHandlernull) { addCacheControlHeader(session, requestFile, cacheControlHandler); } }"}
{"time": "2021-01-20 06:12:42.305551", "n_pass": [359, 38, 23], "score": "0.3981", "loss": "2.8932", "code": "void addCacheControl( File requestFilerequestPath) { CacheControlHandler cacheControlHandler = urlCacheControlMap.computeIfAbsent(requestPath(PatternMatcherUtils()).findFirst((patternCacheControl)).orElse(null)); if (cacheControlHandlernull) { addCacheControlHeader(session, requestFile, cacheControlHandler); } }"}
{"time": "2021-01-20 06:12:43.781601", "n_pass": [366, 39, 24], "score": "0.4194", "loss": "2.7869", "code": "void addCacheControl( File requestFilerequestPath) { CacheControlHandler cacheControlHandler = urlCacheControlMap.computeIfAbsent(requestPath(PatternMatcherUtils()).findFirst((patternCacheControl)).orElse()); if (cacheControlHandlernull) { addCacheControlHeader(session, requestFile, cacheControlHandler); } }"}
{"time": "2021-01-20 06:12:45.142222", "n_pass": [370, 40, 25], "score": "0.4194", "loss": "2.7869", "code": "void addCacheControl( File requestFilerequestPath) { CacheControlHandler cacheControlHandler = urlCacheControlMap.computeIfAbsent(requestPath(PatternMatcherUtils()).findFirst((patternCacheControl)).orElse());if (cacheControlHandlernull) { addCacheControlHeader(session, requestFile, cacheControlHandler); } }"}
{"time": "2021-01-20 06:12:46.492836", "n_pass": [372, 41, 26], "score": "0.4194", "loss": "2.7869", "code": "void addCacheControl( File requestFilerequestPath) { CacheControlHandler cacheControlHandler = urlCacheControlMap.computeIfAbsent(requestPath(PatternMatcherUtils()).findFirst((patternCacheControl)).orElse());if(cacheControlHandlernull) { addCacheControlHeader(session, requestFile, cacheControlHandler); } }"}
{"time": "2021-01-20 06:12:47.865460", "n_pass": [374, 42, 27], "score": "0.4842", "loss": "2.6924", "code": "void addCacheControl( File requestFilerequestPath) { CacheControlHandler cacheControlHandler = urlCacheControlMap.computeIfAbsent(requestPath(PatternMatcherUtils()).findFirst((patternCacheControl)).orElse());if(null) { addCacheControlHeader(session, requestFile, cacheControlHandler); } }"}
{"time": "2021-01-20 06:12:49.214637", "n_pass": [377, 43, 28], "score": "0.4842", "loss": "2.6924", "code": "void addCacheControl( File requestFilerequestPath) { CacheControlHandler cacheControlHandler = urlCacheControlMap.computeIfAbsent(requestPath(PatternMatcherUtils()).findFirst((patternCacheControl)).orElse());if(null){ addCacheControlHeader(session, requestFile, cacheControlHandler); } }"}
{"time": "2021-01-20 06:12:50.592095", "n_pass": [379, 44, 29], "score": "0.4842", "loss": "2.6924", "code": "void addCacheControl( File requestFilerequestPath) { CacheControlHandler cacheControlHandler = urlCacheControlMap.computeIfAbsent(requestPath(PatternMatcherUtils()).findFirst((patternCacheControl)).orElse());if(null){addCacheControlHeader(session, requestFile, cacheControlHandler); } }"}
{"time": "2021-01-20 06:12:51.952422", "n_pass": [384, 45, 30], "score": "0.4842", "loss": "2.6924", "code": "void addCacheControl( File requestFilerequestPath) { CacheControlHandler cacheControlHandler = urlCacheControlMap.computeIfAbsent(requestPath(PatternMatcherUtils()).findFirst((patternCacheControl)).orElse());if(null){addCacheControlHeader(session,requestFile, cacheControlHandler); } }"}
{"time": "2021-01-20 06:12:53.354365", "n_pass": [387, 46, 31], "score": "0.4842", "loss": "2.6924", "code": "void addCacheControl( File requestFilerequestPath) { CacheControlHandler cacheControlHandler = urlCacheControlMap.computeIfAbsent(requestPath(PatternMatcherUtils()).findFirst((patternCacheControl)).orElse());if(null){addCacheControlHeader(session,requestFile,cacheControlHandler); } }"}
{"time": "2021-01-20 06:12:54.724574", "n_pass": [391, 47, 32], "score": "0.4842", "loss": "2.6924", "code": "void addCacheControl( File requestFilerequestPath) { CacheControlHandler cacheControlHandler = urlCacheControlMap.computeIfAbsent(requestPath(PatternMatcherUtils()).findFirst((patternCacheControl)).orElse());if(null){addCacheControlHeader(session,requestFile,cacheControlHandler);} }"}
{"time": "2021-01-20 06:12:56.101384", "n_pass": [393, 48, 33], "score": "0.4842", "loss": "2.6924", "code": "void addCacheControl( File requestFilerequestPath) { CacheControlHandler cacheControlHandler = urlCacheControlMap.computeIfAbsent(requestPath(PatternMatcherUtils()).findFirst((patternCacheControl)).orElse());if(null){addCacheControlHeader(session,requestFile,cacheControlHandler);}}"}
{"time": "2021-01-20 06:12:58.191847", "n_pass": [399, 49, 34], "score": "0.4842", "loss": "2.6924", "code": "void addCacheControl(File requestFilerequestPath) { CacheControlHandler cacheControlHandler = urlCacheControlMap.computeIfAbsent(requestPath(PatternMatcherUtils()).findFirst((patternCacheControl)).orElse());if(null){addCacheControlHeader(session,requestFile,cacheControlHandler);}}"}
{"time": "2021-01-20 06:12:59.563006", "n_pass": [402, 50, 35], "score": "0.4768", "loss": "2.6219", "code": "void addCacheControl(File requestPath) { CacheControlHandler cacheControlHandler = urlCacheControlMap.computeIfAbsent(requestPath(PatternMatcherUtils()).findFirst((patternCacheControl)).orElse());if(null){addCacheControlHeader(session,requestFile,cacheControlHandler);}}"}
{"time": "2021-01-20 06:13:00.950309", "n_pass": [405, 51, 36], "score": "0.4768", "loss": "2.6219", "code": "void addCacheControl(File requestPath){ CacheControlHandler cacheControlHandler = urlCacheControlMap.computeIfAbsent(requestPath(PatternMatcherUtils()).findFirst((patternCacheControl)).orElse());if(null){addCacheControlHeader(session,requestFile,cacheControlHandler);}}"}
{"time": "2021-01-20 06:13:02.300647", "n_pass": [407, 52, 37], "score": "0.4768", "loss": "2.6219", "code": "void addCacheControl(File requestPath){CacheControlHandler cacheControlHandler = urlCacheControlMap.computeIfAbsent(requestPath(PatternMatcherUtils()).findFirst((patternCacheControl)).orElse());if(null){addCacheControlHeader(session,requestFile,cacheControlHandler);}}"}
{"time": "2021-01-20 06:13:07.690407", "n_pass": [411, 56, 38], "score": "0.4768", "loss": "2.6219", "code": "void addCacheControl(File requestPath){CacheControlHandler cacheControlHandler= urlCacheControlMap.computeIfAbsent(requestPath(PatternMatcherUtils()).findFirst((patternCacheControl)).orElse());if(null){addCacheControlHeader(session,requestFile,cacheControlHandler);}}"}
{"time": "2021-01-20 06:13:09.036500", "n_pass": [413, 57, 39], "score": "0.4768", "loss": "2.6219", "code": "void addCacheControl(File requestPath){CacheControlHandler cacheControlHandler=urlCacheControlMap.computeIfAbsent(requestPath(PatternMatcherUtils()).findFirst((patternCacheControl)).orElse());if(null){addCacheControlHeader(session,requestFile,cacheControlHandler);}}"}
{"time": "2021-01-20 06:13:10.383148", "n_pass": [415, 58, 40], "score": "0.3323", "loss": "3.3399", "code": "void addCacheControl(File requestPath){CacheControlHandler cacheControlHandler=urlCacheControlMapcomputeIfAbsent(requestPath(PatternMatcherUtils()).findFirst((patternCacheControl)).orElse());if(null){addCacheControlHeader(session,requestFile,cacheControlHandler);}}"}
{"time": "2021-01-20 06:13:11.729038", "n_pass": [416, 59, 41], "score": "0.415", "loss": "2.5451", "code": "void addCacheControl(File requestPath){CacheControlHandler cacheControlHandler=urlCacheControlMap(requestPath(PatternMatcherUtils()).findFirst((patternCacheControl)).orElse());if(null){addCacheControlHeader(session,requestFile,cacheControlHandler);}}"}
{"time": "2021-01-20 06:13:13.090001", "n_pass": [418, 60, 42], "score": "0.4387", "loss": "2.4902", "code": "void addCacheControl(File requestPath){CacheControlHandler cacheControlHandler=urlCacheControlMap((PatternMatcherUtils()).findFirst((patternCacheControl)).orElse());if(null){addCacheControlHeader(session,requestFile,cacheControlHandler);}}"}
{"time": "2021-01-20 06:13:14.474490", "n_pass": [445, 61, 43], "score": "0.4864", "loss": "2.499", "code": "void addCacheControl(File requestPath){CacheControlHandler cacheControlHandler=urlCacheControlMap((PatternMatcherUtils()).findFirst((patternCacheControl)).orElse());if(null){addCacheControlHeader(sessionrequestFile,cacheControlHandler);}}"}
{"time": "2021-01-20 06:13:15.818279", "n_pass": [446, 62, 44], "score": "0.4817", "loss": "2.3929", "code": "void addCacheControl(File requestPath){CacheControlHandler cacheControlHandler=urlCacheControlMap((PatternMatcherUtils()).findFirst((patternCacheControl)).orElse());if(null){addCacheControlHeader(session,cacheControlHandler);}}"}

Minimal simplified code:
void addCacheControl(File requestPath){CacheControlHandler cacheControlHandler=urlCacheControlMap((PatternMatcherUtils()).findFirst((patternCacheControl)).orElse());if(null){addCacheControlHeader(session,cacheControlHandler);}}

