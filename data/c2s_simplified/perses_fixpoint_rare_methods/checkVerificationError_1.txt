
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/droidefense__engine/mods/memapktool/src/main/java/org/jf/dexlib2/util/Preconditions_checkVerificationError.java
method_name = checkVerificationError
method_body = public static int checkVerificationError(int verificationError) { if (!VerificationError.isValidVerificationError(verificationError)) { throw new IllegalArgumentException(String.format("Invalid verification error value: %d. Must be between 1 and 9, inclusive", verificationError)); } return verificationError; }

Trace of simplified code(s):

{"time": "2021-01-24 07:06:13.106851", "score": "0.3413", "loss": "1.8975", "code": "class T { public static int checkVerificationError(int verificationError) { if (!VerificationError.isValidVerificationError(verificationError)) { throw new IllegalArgumentException(String.format(\"Invalid verification error value: %d. Must be between 1 and 9, inclusive\", verificationError)); } return verificationError; } }"}
{"time": "2021-01-24 07:07:11.995295", "score": "0.5539", "loss": "1.0694", "code": "class T { public static int checkVerificationError(int verificationError) { if (!VerificationError.isValidVerificationError(verificationError)) { throw new IllegalArgumentException(String.format(\"Invalid verification error value: %d. Must be between 1 and 9, inclusive\", verificationError)); } } }"}
{"time": "2021-01-24 07:07:43.782940", "score": "0.5722", "loss": "1.2589", "code": "class T { public static int checkVerificationError(int verificationError) { if (!VerificationError.isValidVerificationError(verificationError)) throw new IllegalArgumentException(String.format(\"Invalid verification error value: %d. Must be between 1 and 9, inclusive\", verificationError)); } }"}
{"time": "2021-01-24 07:08:08.565067", "score": "0.551", "loss": "1.3732", "code": "class T { public static int checkVerificationError(int verificationError) { if (!VerificationError.isValidVerificationError(verificationError)) throw new IllegalArgumentException( ); } }"}
{"time": "2021-01-24 07:08:19.300812", "score": "0.5777", "loss": "1.7944", "code": "class T { public static int checkVerificationError(int verificationError) { if ( VerificationError.isValidVerificationError(verificationError)) throw new IllegalArgumentException( ); } }"}
{"time": "2021-01-24 07:08:52.033807", "score": "0.5777", "loss": "1.7944", "code": "class T { int checkVerificationError(int verificationError) { if ( VerificationError.isValidVerificationError(verificationError)) throw new IllegalArgumentException( ); } }"}
{"time": "2021-01-24 07:09:02.740198", "score": "0.5429", "loss": "2.8017", "code": "class T { int checkVerificationError(int verificationError) { if ( VerificationError.isValidVerificationError( )) throw new IllegalArgumentException( ); } }"}
{"time": "2021-01-24 07:10:14.917966", "score": "0.479", "loss": "2.7273", "code": "class T { int checkVerificationError(int verificationError) { if ( VerificationError.isValidVerificationError( )) throw IllegalArgumentException ; } }"}

Minimal simplified code:
class T {
              int checkVerificationError(int verificationError) { if ( VerificationError.isValidVerificationError(                 ))   throw     IllegalArgumentException                                                                                                              ;                             }
}


